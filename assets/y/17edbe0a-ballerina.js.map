{"version":3,"file":"17edbe0a-ballerina.js","sources":["../../../node_modules/shiki/dist/langs/ballerina.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Ballerina\", \"fileTypes\": [\"bal\"], \"name\": \"ballerina\", \"patterns\": [{ \"include\": \"#statements\" }], \"repository\": { \"access-modifier\": { \"patterns\": [{ \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private)(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.ballerina keyword.other.ballerina\" }] }, \"annotationAttachment\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.decorator.ballerina\" }, \"2\": { \"name\": \"support.type.ballerina\" }, \"3\": { \"name\": \"punctuation.decorator.ballerina\" }, \"4\": { \"name\": \"support.type.ballerina\" } }, \"match\": \"(@)((?:[_$A-Za-z][_$0-9A-Za-z]*))\\\\s*(:?)\\\\s*((?:[_$A-Za-z][_$0-9A-Za-z]*)?)\" }] }, \"annotationDefinition\": { \"patterns\": [{ \"begin\": \"\\\\bannotation\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \";\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"array-literal\": { \"begin\": \"\\\\s*(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.square.ballerina\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"name\": \"meta.array.literal.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }] }, \"booleans\": { \"patterns\": [{ \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.ballerina\" }] }, \"butClause\": { \"patterns\": [{ \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" } }, \"end\": \",|(?=\\\\})\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"butExp\": { \"patterns\": [{ \"begin\": \"\\\\bbut\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#butExpBody\" }, { \"include\": \"#comment\" }] }] }, \"butExpBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#parameter\" }, { \"include\": \"#butClause\" }, { \"include\": \"#comment\" }] }] }, \"call\": { \"patterns\": [{ \"match\": \"(?:\\\\')?([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=\\\\()\", \"name\": \"entity.name.function.ballerina\" }] }, \"callableUnitBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#workerDef\" }, { \"include\": \"#service-decl\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#forkStatement\" }, { \"include\": \"#code\" }] }] }, \"class-body\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.class.body.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#access-modifier\" }, { \"include\": \"#keywords\" }, { \"begin\": \"(?<=:)\\\\s*\", \"end\": \"(?=\\\\s|[;),}\\\\]:\\\\-\\\\+]|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }] }, \"class-defn\": { \"begin\": \"(\\\\s+)(class\\\\b)|^class\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.class.ballerina keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.ballerina\", \"patterns\": [{ \"include\": \"#keywords\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.class.ballerina\" } }, \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\" }, { \"include\": \"#class-body\" }] }, \"code\": { \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#matchStatement\" }, { \"include\": \"#butExp\" }, { \"include\": \"#xml\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#keywords\" }, { \"include\": \"#strings\" }, { \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#numbers\" }, { \"include\": \"#maps\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#paranthesisedBracket\" }, { \"include\": \"#regex\" }] }, \"comment\": { \"patterns\": [{ \"match\": \"\\\\/\\\\/.*\", \"name\": \"comment.ballerina\" }] }, \"constrainType\": { \"patterns\": [{ \"begin\": \"<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#constrainType\" }, { \"match\": \"\\\\b([_$A-Za-z][_$0-9A-Za-z]*)\\\\b\", \"name\": \"storage.type.ballerina\" }] }] }, \"control-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(return)(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.flow.ballerina\" } }, \"end\": \"(?=[;}]|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"include\": \"#for-loop\" }, { \"include\": \"#if-statement\" }, { \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(else|if)(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.conditional.ballerina\" }] }, \"decl-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\} external;)|(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.block.ballerina\", \"patterns\": [{ \"include\": \"#statements\" }, { \"include\": \"#mdDocumentation\" }] }, \"declaration\": { \"patterns\": [{ \"include\": \"#import-declaration\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#typeDefinition\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#service-decl\" }, { \"include\": \"#class-defn\" }, { \"include\": \"#enum-decl\" }, { \"include\": \"#source\" }, { \"include\": \"#keywords\" }] }, \"defaultValue\": { \"patterns\": [{ \"begin\": \"[=:]\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=[,)])\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"defaultWithParentheses\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } } }] }, \"documentationBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.ballerina.documentation\" }, \"2\": { \"name\": \"keyword.other.ballerina.documentation\" }, \"3\": { \"name\": \"variable.parameter.ballerina.documentation\" }, \"4\": { \"name\": \"keyword.other.ballerina.documentation\" } }, \"match\": \"(P|R|T|F|V)({{)(.*)(}})\" }, { \"begin\": \"\\\\```\", \"end\": \"\\\\```\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"begin\": \"\\\\``\", \"end\": \"\\\\``\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"begin\": \"\\\\`\", \"end\": \"\\\\`\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"match\": \".\", \"name\": \"comment.block.ballerina.documentation\" }] }] }, \"documentationDef\": { \"patterns\": [{ \"begin\": \"\\\\b(?:documentation|deprecated)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"delimiter.curly\" } }, \"patterns\": [{ \"include\": \"#documentationBody\" }, { \"include\": \"#comment\" }] }] }, \"enum-decl\": { \"begin\": \"(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ballerina\" }, \"2\": { \"name\": \"keyword.other.ballerina\" }, \"3\": { \"name\": \"entity.name.type.enum.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.enum.declaration.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"begin\": \"([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.enummember.ballerina\" } }, \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"begin\": \"(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))\", \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"errorDestructure\": { \"patterns\": [{ \"begin\": \"error\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?==>)\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#keywords\" }, { \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#regex\" }] }, \"expression-operators\": { \"patterns\": [{ \"match\": \"\\\\*=|(?<!\\\\()/=|%=|\\\\+=|\\\\-=\", \"name\": \"keyword.operator.assignment.compound.ballerina\" }, { \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\", \"name\": \"keyword.operator.assignment.compound.bitwise.ballerina\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.ballerina\" }, { \"match\": \"===|!==|==|!=\", \"name\": \"keyword.operator.comparison.ballerina\" }, { \"match\": \"<=|>=|<>|<|>\", \"name\": \"keyword.operator.relational.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.ballerina\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.ballerina\" }, \"3\": { \"name\": \"keyword.operator.arithmetic.ballerina\" } }, \"match\": \"(?<=[_$0-9A-Za-z])(\\\\!)\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }, { \"match\": \"\\\\!|&&|\\\\|\\\\||\\\\?\\\\?\", \"name\": \"keyword.operator.logical.ballerina\" }, { \"match\": \"\\\\&|~|\\\\^|\\\\|\", \"name\": \"keyword.operator.bitwise.ballerina\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.ballerina\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.ballerina\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.ballerina\" }, { \"match\": \"%|\\\\*|/|-|\\\\+\", \"name\": \"keyword.operator.arithmetic.ballerina\" }] }, \"expressionWithoutIdentifiers\": { \"patterns\": [{ \"include\": \"#xml\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#comment\" }, { \"include\": \"#object-literal\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#literal\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#regex\" }] }, \"flags-on-off\": { \"name\": \"meta.flags.regexp.ballerina\", \"patterns\": [{ \"begin\": \"(\\\\??)([imsx]*)(-?)([imsx]*)(:)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.other.non-capturing-group-begin.regexp.ballerina\" }, \"2\": { \"name\": \"keyword.other.non-capturing-group.flags-on.regexp.ballerina\" }, \"3\": { \"name\": \"punctuation.other.non-capturing-group.off.regexp.ballerina\" }, \"4\": { \"name\": \"keyword.other.non-capturing-group.flags-off.regexp.ballerina\" }, \"5\": { \"name\": \"punctuation.other.non-capturing-group-end.regexp.ballerina\" } }, \"end\": \"()\", \"name\": \"constant.other.flag.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regexp\" }, { \"include\": \"#template-substitution-element\" }] }] }, \"for-loop\": { \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))foreach\\\\s*\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.ballerina\" }, \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"match\": \"\\\\bin\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#comment\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#expression\" }] }, \"forkBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#workerDef\" }] }] }, \"forkStatement\": { \"patterns\": [{ \"begin\": \"\\\\bfork\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#forkBody\" }] }] }, \"function-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#functionParameters\" }, { \"include\": \"#decl-block\" }, { \"begin\": \"\\\\=>\", \"beginCaptures\": { \"0\": { \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" } }, \"end\": \"(?=\\\\;)|(?=\\\\,)|(?=)(?=\\\\);)\", \"name\": \"meta.block.ballerina\", \"patterns\": [{ \"include\": \"#statements\" }, { \"include\": \"#punctuation-comma\" }] }, { \"match\": \"\\\\*\", \"name\": \"keyword.generator.asterisk.ballerina\" }] }, \"function-defn\": { \"begin\": \"(?:(public|private)\\\\s+)?(function\\\\b)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\;)|(?<=\\\\})|(?<=\\\\,)|(?=)(?=\\\\);)\", \"name\": \"meta.function.ballerina\", \"patterns\": [{ \"match\": \"\\\\bexternal\\\\b\", \"name\": \"keyword.ballerina\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#functionReturns\" }, { \"include\": \"#functionName\" }, { \"include\": \"#functionParameters\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#function-body\" }, { \"include\": \"#regex\" }] }, \"function-parameters-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numbers\" }, { \"include\": \"#string\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#keywords\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#regex\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.parameter.ballerina\" }] }, \"functionName\": { \"patterns\": [{ \"match\": \"\\\\bfunction\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#string\" }, { \"captures\": { \"2\": { \"name\": \"variable.language.this.ballerina\" }, \"3\": { \"name\": \"keyword.other.ballerina\" }, \"4\": { \"name\": \"support.type.primitive.ballerina\" }, \"5\": { \"name\": \"storage.type.ballerina\" }, \"6\": { \"name\": \"meta.definition.function.ballerina entity.name.function.ballerina\" } }, \"match\": \"\\\\s+(\\\\b(self)|\\\\b(is|new|isolated|null|function|in)\\\\b|(string|int|boolean|float|byte|decimal|json|xml|anydata)\\\\b|\\\\b(readonly|error|map)\\\\b|([_$A-Za-z][_$0-9A-Za-z]*))\" }] }, \"functionParameters\": { \"begin\": \"\\\\(|\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \"\\\\)|\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"name\": \"meta.parameters.ballerina\", \"patterns\": [{ \"include\": \"#function-parameters-body\" }] }, \"functionReturns\": { \"begin\": \"\\\\s*(returns)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?==>)|(\\\\=)|(?=\\\\{)|(\\\\))|(?=\\\\;)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ballerina\" } }, \"name\": \"meta.type.function.return.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-primitive\" }, { \"captures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"match\": \"\\\\s*\\\\b(var)(?=\\\\s+|\\\\[|\\\\?)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.ballerina\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.ballerina\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#keywords\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"variable.other.readwrite.ballerina\" }] }, \"functionType\": { \"patterns\": [{ \"begin\": \"\\\\bfunction\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#functionTypeParamList\" }, { \"include\": \"#functionTypeReturns\" }] }] }, \"functionTypeParamList\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"delimiter.parenthesis\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"delimiter.parenthesis\" } }, \"patterns\": [{ \"match\": \"public\", \"name\": \"keyword\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#parameterTuple\" }, { \"include\": \"#functionTypeType\" }, { \"include\": \"#comment\" }] }] }, \"functionTypeReturns\": { \"patterns\": [{ \"begin\": \"\\\\breturns\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?=\\\\])|(?=\\\\))\", \"patterns\": [{ \"include\": \"#functionTypeReturnsParameter\" }, { \"include\": \"#comment\" }] }] }, \"functionTypeReturnsParameter\": { \"patterns\": [{ \"begin\": \"((?=record|object|function)|(?:[_$A-Za-z][_$0-9A-Za-z]*))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?:\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#defaultValue\" }, { \"include\": \"#comment\" }, { \"include\": \"#parameterTuple\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"functionTypeType\": { \"patterns\": [{ \"begin\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?=\\\\])|(?=\\\\))\" }] }, \"identifiers\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[\\\\d])))\\\\s*)?([_$A-Za-z][_$0-9A-Za-z]*)(?=\\\\s*=\\\\s*((((function\\\\s*[(<*])|(function\\\\s+)|([_$A-Za-z][_$0-9A-Za-z]*\\\\s*=>)))|((((<\\\\s*$)|((<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))|((<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([)]\\\\s*:)|((\\\\.\\\\.\\\\.\\\\s*)?[_$A-Za-z][_$0-9A-Za-z]*\\\\s*:)))|((<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$A-Za-z]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)(\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?\\\\s*=>)))))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[\\\\d])))\\\\s*(\\\\#?[_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=\\\\()\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"variable.other.property.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[\\\\d])))\\\\s*(\\\\#?[_$A-Za-z][_$0-9A-Za-z]*)\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#self-literal\" }, { \"match\": \"\\\\b(check|foreach|if|checkpanic)\\\\b\", \"name\": \"keyword.control.ballerina\" }, { \"include\": \"#call\" }, { \"match\": \"\\\\b(var)\\\\b\", \"name\": \"support.type.primitive.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"3\": { \"name\": \"punctuation.accessor.ballerina\" }, \"4\": { \"name\": \"entity.name.function.ballerina\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" }, \"6\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"match\": \"([_$A-Za-z][_$0-9A-Za-z]*)((\\\\.)([_$A-Za-z][_$0-9A-Za-z]*)(\\\\()(\\\\)))?\" }, { \"match\": \"(\\\\')([_$A-Za-z][_$0-9A-Za-z]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#type-annotation\" }] }, \"if-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bif\\\\b\\\\s*(?!\\\\{))\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(if)\\\\s*(\\\\()?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.ballerina\" }, \"2\": { \"name\": \"meta.brace.round.ballerina\" } }, \"end\": \"(\\\\))|(?=\\\\{)\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.round.ballerina\" } }, \"patterns\": [{ \"include\": \"#decl-block\" }, { \"include\": \"#keywords\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#xml\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#comment\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#literal\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#regex\" }] }, { \"begin\": \"(?<=\\\\))(?=\\\\s|\\\\=)\", \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#keywords\" }] }, { \"include\": \"#decl-block\" }] }] }, \"import-clause\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.default.ballerina\" }, \"3\": { \"name\": \"variable.other.readwrite.ballerina meta.import.module.ballerina\" }, \"5\": { \"name\": \"keyword.control.default.ballerina\" }, \"6\": { \"name\": \"variable.other.readwrite.alias.ballerina\" } }, \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$A-Za-z][_$0-9A-Za-z]*))\" }, { \"match\": \"([_$A-Za-z][_$0-9A-Za-z]*)\", \"name\": \"variable.other.readwrite.alias.ballerina\" }] }, \"import-declaration\": { \"begin\": \"\\\\bimport\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.import.ballerina\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"name\": \"meta.import.ballerina\", \"patterns\": [{ \"match\": \"(\\\\')([_$A-Za-z][_$0-9A-Za-z]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#keywords\" }, { \"include\": \"#comment\" }, { \"include\": \"#import-clause\" }, { \"include\": \"#punctuation-accessor\" }] }, \"keywords\": { \"patterns\": [{ \"match\": \"\\\\b(fork|join|while|returns|transaction|transactional|retry|commit|rollback|typeof|enum|wait|match)\\\\b\", \"name\": \"keyword.control.ballerina\" }, { \"match\": \"\\\\b(return|break|continue|check|checkpanic|panic|trap|from|where)\\\\b\", \"name\": \"keyword.control.flow.ballerina\" }, { \"match\": \"\\\\b(public|private|external|return|record|object|remote|abstract|client|true|false|fail|import|version)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(as|on|function|resource|listener|const|final|is|null|lock|annotation|source|worker|parameter|field|isolated|in)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(xmlns|table|key|let|new|select|start|flush|default|do|base16|base64|conflict)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(limit|outer|equals|order|by|ascending|descending|class|configurable|variable|module|service|group|collect)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"(=>)\", \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" }, { \"match\": \"(!|%|\\\\+|\\\\-|~=|===|==|=|!=|!==|<|>|&|\\\\||\\\\?:|\\\\.\\\\.\\\\.|<=|>=|&&|\\\\|\\\\||~|>>|>>>)\", \"name\": \"keyword.operator.ballerina\" }, { \"include\": \"#types\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#type-primitive\" }] }, \"literal\": { \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#numbers\" }, { \"include\": \"#strings\" }, { \"include\": \"#maps\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#array-literal\" }] }, \"maps\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"matchBindingPattern\": { \"patterns\": [{ \"begin\": \"var\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?==>)|,\", \"patterns\": [{ \"include\": \"#errorDestructure\" }, { \"include\": \"#code\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"variable.parameter.ballerina\" }] }] }, \"matchStatement\": { \"patterns\": [{ \"begin\": \"\\\\bmatch\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.ballerina\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#matchStatementBody\" }, { \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"matchStatementBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#matchBindingPattern\" }, { \"include\": \"#matchStatementPatternClause\" }, { \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"matchStatementPatternClause\": { \"patterns\": [{ \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"((\\\\})|;|,)\", \"patterns\": [{ \"include\": \"#callableUnitBody\" }, { \"include\": \"#code\" }] }] }, \"mdDocumentation\": { \"begin\": \"\\\\#\", \"end\": \"[\\\\r\\\\n]+\", \"name\": \"comment.mddocs.ballerina\", \"patterns\": [{ \"include\": \"#mdDocumentationReturnParamDescription\" }, { \"include\": \"#mdDocumentationParamDescription\" }] }, \"mdDocumentationParamDescription\": { \"patterns\": [{ \"begin\": \"(\\\\+\\\\s+)(\\\\'?[_$A-Za-z][_$0-9A-Za-z]*)(\\\\s*\\\\-\\\\s+)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ballerina\" }, \"2\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"3\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=[^#\\\\r\\\\n]|(?:# *?\\\\+))\", \"patterns\": [{ \"match\": \"#.*\", \"name\": \"comment.mddocs.paramdesc.ballerina\" }] }] }, \"mdDocumentationReturnParamDescription\": { \"patterns\": [{ \"begin\": \"(#)(?: *?)(\\\\+)(?: *)(return)(?: *)(-)?(.*)\", \"beginCaptures\": { \"1\": { \"name\": \"comment.mddocs.ballerina\" }, \"2\": { \"name\": \"keyword.ballerina\" }, \"3\": { \"name\": \"keyword.ballerina\" }, \"4\": { \"name\": \"keyword.ballerina\" }, \"5\": { \"name\": \"comment.mddocs.returnparamdesc.ballerina\" } }, \"end\": \"(?=[^#\\\\r\\\\n]|(?:# *?\\\\+))\", \"patterns\": [{ \"match\": \"#.*\", \"name\": \"comment.mddocs.returnparamdesc.ballerina\" }] }] }, \"multiType\": { \"patterns\": [{ \"match\": \"(?<=\\\\|)([_$A-Za-z][_$0-9A-Za-z]*)|([_$A-Za-z][_$0-9A-Za-z]*)(?=\\\\|)\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.ballerina\" }] }, \"numbers\": { \"patterns\": [{ \"match\": \"\\\\b0[xX][\\\\da-fA-F]+\\\\b|\\\\b\\\\d+(?:\\\\.(?:\\\\d+|$))?\", \"name\": \"constant.numeric.decimal.ballerina\" }] }, \"object-literal\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.objectliteral.ballerina\", \"patterns\": [{ \"include\": \"#object-member\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-member\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#literal\" }, { \"include\": \"#keywords\" }, { \"include\": \"#expression\" }, { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=:)|((?<=[\\\\]])(?=\\\\s*[\\\\(\\\\<]))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }] }, { \"begin\": \"(?=[\\\\'\\\\\\\"\\\\`])\", \"end\": \"(?=:)|((?<=[\\\\'\\\\\\\"\\\\`])(?=((\\\\s*[\\\\(\\\\<,}])|(\\\\n*})|(\\\\s+(as)\\\\s+))))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?=(\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:(?:\\\\b\\\\d[0-9_]*(\\\\.)\\\\d[0-9_]*[eE][+-]?\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*(\\\\.)[eE][+-]?\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\B(\\\\.)\\\\d[0-9_]*[eE][+-]?\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*[eE][+-]?\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*(\\\\.)\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*(\\\\.)(n)?\\\\B)|(?:\\\\B(\\\\.)\\\\d[0-9_]*(n)?\\\\b)|(?:\\\\b\\\\d[0-9_]*(n)?\\\\b(?!\\\\.)))(?!\\\\$)))\", \"end\": \"(?=:)|(?=\\\\s*([\\\\(\\\\<,}])|(\\\\s+as\\\\s+))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numbers\" }] }, { \"begin\": \"(?<=[\\\\]\\\\'\\\\\\\"\\\\`])(?=\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.ballerina\", \"patterns\": [{ \"include\": \"#function-body\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" }, \"1\": { \"name\": \"constant.numeric.decimal.ballerina\" } }, \"match\": \"(?![_$A-Za-z])([\\\\d]+)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" }, \"1\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?:([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)*\\\\s*((((function\\\\s*[(<*])|(function\\\\s+)|([_$A-Za-z][_$0-9A-Za-z]*\\\\s*=>)))|((((<\\\\s*$)|((<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*))))))|((<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([)]\\\\s*:)|((\\\\.\\\\.\\\\.\\\\s*)?[_$A-Za-z][_$0-9A-Za-z]*\\\\s*:)))|((<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$A-Za-z]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$A-Za-z]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)(\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?\\\\s*=>))))))\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" } }, \"match\": \"(?:[_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.ballerina\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.ballerina\" } }, \"match\": \"([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.ballerina\" }, \"2\": { \"name\": \"storage.modifier.ballerina\" } }, \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*([,}]|$))\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.ballerina\" } }, \"end\": \"(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|^|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+))\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"(?=[_$A-Za-z][_$0-9A-Za-z]*\\\\s*=)\", \"end\": \"(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"objectDec\": { \"patterns\": [{ \"begin\": \"\\\\bobject\\\\b(?!:)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#decl-block\" }] }] }, \"objectInitBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"objectInitParameters\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }, { \"match\": \"\\\\b([_$A-Za-z][_$0-9A-Za-z]*)\\\\b\", \"name\": \"variable.parameter.ballerina\" }] }] }, \"objectMemberFunctionDec\": { \"patterns\": [{ \"begin\": \"\\\\bfunction\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#functionParameters\" }, { \"match\": \"\\\\breturns\\\\b\", \"name\": \"keyword.ballerina\" }, { \"include\": \"#code\" }] }] }, \"parameter\": { \"patterns\": [{ \"begin\": \"((?=record|object|function)|([_$A-Za-z][_$0-9A-Za-z]*)(?=\\\\|)|(?:[_$A-Za-z][_$0-9A-Za-z]*))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:\\\\,)|(?:\\\\|)|(?:\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#parameterWithDescriptor\" }, { \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#defaultValue\" }, { \"include\": \"#comment\" }, { \"include\": \"#parameterTuple\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"parameter-name\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"match\": \"\\\\s*\\\\b(var)\\\\s+\" }, { \"captures\": { \"2\": { \"name\": \"keyword.operator.rest.ballerina\" }, \"3\": { \"name\": \"support.type.primitive.ballerina\" }, \"4\": { \"name\": \"keyword.other.ballerina\" }, \"5\": { \"name\": \"constant.language.boolean.ballerina\" }, \"6\": { \"name\": \"keyword.control.flow.ballerina\" }, \"7\": { \"name\": \"storage.type.ballerina\" }, \"8\": { \"name\": \"variable.parameter.ballerina\" }, \"9\": { \"name\": \"variable.parameter.ballerina\" }, \"10\": { \"name\": \"keyword.operator.optional.ballerina\" } }, \"match\": \"(?:(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|(string|int|boolean|float|byte|decimal|json|xml|anydata)|\\\\b(is|new|isolated|null|function|in)\\\\b|\\\\b(true|false)\\\\b|\\\\b(check|foreach|if|checkpanic)\\\\b|\\\\b(readonly|error|map)\\\\b|([_$A-Za-z][_$0-9A-Za-z]*))(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)\" }] }, \"parameterTuple\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#parameterTupleType\" }, { \"include\": \"#parameterTupleEnd\" }, { \"include\": \"#comment\" }] }] }, \"parameterTupleEnd\": { \"patterns\": [{ \"begin\": \"\\\\]\", \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#defaultWithParentheses\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"parameterTupleType\": { \"patterns\": [{ \"begin\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:\\\\,)|(?:\\\\|)|(?=\\\\])\" }] }, \"parameterWithDescriptor\": { \"patterns\": [{ \"begin\": \"\\\\&\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#parameter\" }] }] }, \"parameters\": { \"patterns\": [{ \"match\": \"\\\\s*(return|break|continue|check|checkpanic|panic|trap|from|where)\\\\b\", \"name\": \"keyword.control.flow.ballerina\" }, { \"match\": \"\\\\s*(let|select)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.parameter.ballerina\" }] }, \"paranthesised\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ballerina\" } }, \"name\": \"meta.brace.round.block.ballerina\", \"patterns\": [{ \"include\": \"#self-literal\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#parameters\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#expression\" }, { \"include\": \"#regex\" }] }, \"paranthesisedBracket\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"punctuation-accessor\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[\\\\d])))\" }] }, \"punctuation-comma\": { \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.comma.ballerina\" }] }, \"punctuation-semicolon\": { \"patterns\": [{ \"match\": \";\", \"name\": \"punctuation.terminator.statement.ballerina\" }] }, \"record\": { \"begin\": \"\\\\brecord\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.record.ballerina\", \"patterns\": [{ \"include\": \"#recordBody\" }] }, \"recordBody\": { \"patterns\": [{ \"include\": \"#decl-block\" }] }, \"recordLiteral\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }] }] }, \"regex\": { \"patterns\": [{ \"begin\": \"(\\\\bre)(\\\\s*)(`)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"punctuation.definition.regexp.template.begin.ballerina\" } }, \"end\": \"`\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.regexp.template.end.ballerina\" } }, \"name\": \"regexp.template.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#regexp\" }] }] }, \"regex-character-class\": { \"patterns\": [{ \"match\": \"\\\\\\\\[wWsSdDtrn]|\\\\.\", \"name\": \"keyword.other.character-class.regexp.ballerina\" }, { \"match\": \"\\\\\\\\[^pPu]\", \"name\": \"constant.character.escape.backslash.regexp\" }] }, \"regex-unicode-properties-general-category\": { \"patterns\": [{ \"match\": \"(Lu|Ll|Lt|Lm|Lo|L|Mn|Mc|Me|M|Nd|Nl|No|N|Pc|Pd|Ps|Pe|Pi|Pf|Po|P|Sm|Sc|Sk|So|S|Zs|Zl|Zp|Z|Cf|Cc|Cn|Co|C)\", \"name\": \"constant.other.unicode-property-general-category.regexp.ballerina\" }] }, \"regex-unicode-property-key\": { \"patterns\": [{ \"begin\": \"(sc=|gc=)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-property-key.regexp.ballerina\" } }, \"end\": \"()\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-property.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-property-key.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regex-unicode-properties-general-category\" }] }] }, \"regexp\": { \"patterns\": [{ \"match\": \"\\\\^|\\\\$\", \"name\": \"keyword.control.assertion.regexp.ballerina\" }, { \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\", \"name\": \"keyword.operator.quantifier.regexp.ballerina\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.or.regexp.ballerina\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp.ballerina\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp.ballerina\" } }, \"name\": \"meta.group.assertion.regexp.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#regexp\" }, { \"include\": \"#flags-on-off\" }, { \"include\": \"#unicode-property-escape\" }] }, { \"begin\": \"(\\\\[)(\\\\^)?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.start.regexp.ballerina\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp.ballerina\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.end.regexp.ballerina\" } }, \"name\": \"constant.other.character-class.set.regexp.ballerina\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.numeric.regexp\" }, \"2\": { \"name\": \"constant.character.escape.backslash.regexp\" }, \"3\": { \"name\": \"constant.character.numeric.regexp\" }, \"4\": { \"name\": \"constant.character.escape.backslash.regexp\" } }, \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\[^pPu]))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\[^pPu]))\", \"name\": \"constant.other.character-class.range.regexp.ballerina\" }, { \"include\": \"#regex-character-class\" }, { \"include\": \"#unicode-values\" }, { \"include\": \"#unicode-property-escape\" }] }, { \"include\": \"#template-substitution-element\" }, { \"include\": \"#regex-character-class\" }, { \"include\": \"#unicode-values\" }, { \"include\": \"#unicode-property-escape\" }] }, \"self-literal\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.language.this.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(\\\\bself\\\\b)\\\\s*(.)\\\\s*([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(?=\\\\()\" }, { \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))self\\\\b(?!\\\\$)\", \"name\": \"variable.language.this.ballerina\" }] }, \"service-decl\": { \"begin\": \"\\\\bservice\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|(?<=\\\\})|(?<=\\\\,)\", \"name\": \"meta.service.declaration.ballerina\", \"patterns\": [{ \"include\": \"#class-defn\" }, { \"include\": \"#serviceName\" }, { \"include\": \"#serviceOn\" }, { \"include\": \"#serviceBody\" }, { \"include\": \"#objectDec\" }] }, \"serviceBody\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#documentationDef\" }, { \"include\": \"#decl-block\" }] }, \"serviceName\": { \"patterns\": [{ \"include\": \"#string\" }, { \"match\": '(\\\\/([_$A-Za-z][_$0-9A-Za-z]*)|\\\\\"[_$A-Za-z][_$0-9A-Za-z]*\\\\\")', \"name\": \"entity.service.path.ballerina\" }] }, \"serviceOn\": { \"patterns\": [{ \"begin\": \"on\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?={)\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"source\": { \"patterns\": [{ \"begin\": \"(\\\\bsource\\\\b)\\\\s+([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"variable.other.readwrite.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\;)\" }] }, \"statements\": { \"patterns\": [{ \"include\": \"#stringTemplate\" }, { \"include\": \"#declaration\" }, { \"include\": \"#control-statement\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#regex\" }] }, \"string\": { \"patterns\": [{ \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ballerina\" } }, \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ballerina\" }, \"2\": { \"name\": \"invalid.illegal.newline.ballerina\" } }, \"name\": \"string.quoted.double.ballerina\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }] }, \"string-character-escape\": { \"patterns\": [{ \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\\\{[0-9A-Fa-f]+\\\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\", \"name\": \"constant.character.escape.ballerina\" }] }, \"stringTemplate\": { \"patterns\": [{ \"begin\": \"((string)|([_$A-Za-z][_$0-9A-Za-z]*))?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.ballerina\" }, \"2\": { \"name\": \"support.type.primitive.ballerina\" }, \"4\": { \"name\": \"punctuation.definition.string.template.begin.ballerina\" } }, \"end\": \"\\\\\\\\?`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.template.end.ballerina\" } }, \"name\": \"string.template.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"strings\": { \"patterns\": [{ \"begin\": '\\\\\"', \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": '\\\\\"', \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"template-substitution-element\": { \"patterns\": [{ \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.ballerina\" } }, \"contentName\": \"meta.embedded.line.ballerina\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.ballerina\" } }, \"name\": \"meta.template.expression.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"templateVariable\": { \"patterns\": [{ \"begin\": \"\\\\${\", \"beginCaptures\": { \"0\": { \"name\": \"constant.character.escape.ballerina\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"constant.character.escape.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }] }] }, \"ternary-expression\": { \"begin\": \"(?!\\\\?\\\\.\\\\s*[^\\\\d])(\\\\?)(?!\\\\?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ballerina\" } }, \"end\": \"\\\\s*\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ballerina\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"tupleType\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"(?=\\\\]|;)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#paranthesisedBracket\" }, { \"match\": \"\\\\b([_$A-Za-z][_$0-9A-Za-z]*)\\\\b\", \"name\": \"storage.type.ballerina\" }] }] }, \"type\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#type-tuple\" }] }, \"type-annotation\": { \"patterns\": [{ \"begin\": \"(\\\\:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ballerina\" } }, \"end\": \"(?<![:|&])((?=$|^|[,);\\\\}\\\\]\\\\?\\\\>\\\\=>]|//)|(?==[^>])|((?<=[\\\\}>\\\\]\\\\)]|[_$A-Za-z])\\\\s*(?=\\\\{)))(\\\\?)?\", \"name\": \"meta.type.annotation.ballerina\", \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#regex\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#xml\" }, { \"include\": \"#call\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"constant.language.boolean.ballerina\" }, \"3\": { \"name\": \"keyword.control.ballerina\" }, \"4\": { \"name\": \"storage.type.ballerina\" }, \"5\": { \"name\": \"support.type.primitive.ballerina\" }, \"6\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"8\": { \"name\": \"punctuation.accessor.ballerina\" }, \"9\": { \"name\": \"entity.name.function.ballerina\" }, \"10\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" }, \"11\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"match\": \"\\\\b(is|new|isolated|null|function|in)\\\\b|\\\\b(true|false)\\\\b|\\\\b(check|foreach|if|checkpanic)\\\\b|\\\\b(readonly|error|map)\\\\b|\\\\b(var)\\\\b|([_$A-Za-z][_$0-9A-Za-z]*)((\\\\.)([_$A-Za-z][_$0-9A-Za-z]*)(\\\\()(\\\\)))?\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.ballerina\" }, { \"include\": \"#multiType\" }, { \"include\": \"#type\" }, { \"include\": \"#paranthesised\" }] }] }, \"type-primitive\": { \"patterns\": [{ \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(string|int|boolean|float|byte|decimal|json|xml|anydata)(?![_$0-9A-Za-z])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.primitive.ballerina\" }] }, \"type-tuple\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"name\": \"meta.type.tuple.ballerina\", \"patterns\": [{ \"include\": \"#self-literal\" }, { \"include\": \"#booleans\" }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.rest.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.ballerina\" }, \"2\": { \"name\": \"keyword.operator.optional.ballerina\" }, \"3\": { \"name\": \"punctuation.separator.label.ballerina\" } }, \"match\": \"(?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([_$A-Za-z][_$0-9A-Za-z]*)\\\\s*(\\\\?)?\\\\s*(:)\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"typeDefinition\": { \"patterns\": [{ \"begin\": \"(\\\\btype\\\\b)\\\\s+([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"entity.name.type.ballerina\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"patterns\": [{ \"include\": \"#functionParameters\" }, { \"include\": \"#functionReturns\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#record\" }, { \"include\": \"#string\" }, { \"include\": \"#keywords\" }, { \"include\": \"#multiType\" }, { \"include\": \"#type-primitive\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"variable.other.readwrite.ballerina\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#typeDescription\" }, { \"include\": \"#decl-block\" }] }] }, \"typeDescription\": { \"patterns\": [{ \"begin\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"end\": \"(?=;)\", \"patterns\": [{ \"include\": \"#numbers\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#type-primitive\" }, { \"match\": \"[_$A-Za-z][_$0-9A-Za-z]*\", \"name\": \"storage.type.ballerina\" }] }] }, \"types\": { \"patterns\": [{ \"match\": \"\\\\b(handle|any|future|typedesc)\\\\b\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\b(boolean|int|string|float|decimal|byte|json|xml|anydata)\\\\b\", \"name\": \"support.type.primitive.ballerina\" }, { \"match\": \"\\\\b(map|error|never|readonly|distinct)\\\\b\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\b(stream)\\\\b\", \"name\": \"storage.type.ballerina\" }] }, \"unicode-property-escape\": { \"patterns\": [{ \"begin\": \"(\\\\\\\\p|\\\\\\\\P)(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-property.regexp.ballerina\" }, \"2\": { \"name\": \"punctuation.other.unicode-property.begin.regexp.ballerina\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-property.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-property.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regex-unicode-properties-general-category\" }, { \"include\": \"#regex-unicode-property-key\" }] }] }, \"unicode-values\": { \"patterns\": [{ \"begin\": \"(\\\\\\\\u)(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-value.regexp.ballerina\" }, \"2\": { \"name\": \"punctuation.other.unicode-value.begin.regexp.ballerina\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-value.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-value.ballerina\", \"patterns\": [{ \"match\": \"([0-9A-Fa-f]{1,6})\", \"name\": \"constant.other.unicode-value.regexp.ballerina\" }] }] }, \"var-expr\": { \"patterns\": [{ \"begin\": \"(?=\\\\b(var))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.modifier.ballerina support.type.primitive.ballerina\" } }, \"end\": \"(?!\\\\b(var))((?=;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=(if)\\\\s+))|((?<!^string|[^\\\\._$0-9A-Za-z]string|^int|[^\\\\._$0-9A-Za-z]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"begin\": \"\\\\b(var)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.type.annotation.ballerina\" }, { \"match\": \"\\\\bin\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#numbers\" }, { \"include\": \"#multiType\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#regex\" }] }, { \"include\": \"#punctuation-comma\" }, { \"begin\": \"(?=\\\\b(const(?!\\\\s+enum\\\\b)))\", \"end\": \"(?!\\\\b(const(?!\\\\s+enum\\\\b)))((?=\\\\bannotation\\\\b|;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<!^string|[^\\\\._$0-9A-Za-z]string|^int|[^\\\\._$0-9A-Za-z]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"begin\": \"\\\\b(const(?!\\\\s+enum\\\\b))\\\\s+\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }] }, { \"include\": \"#punctuation-comma\" }, { \"begin\": \"(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?!\\\\b(var))((?=;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<!^string|[^\\\\._$0-9A-Za-z]string|^int|[^\\\\._$0-9A-Za-z]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"include\": \"#xml\" }, { \"begin\": \"(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.type.annotation.ballerina\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#numbers\" }, { \"include\": \"#multiType\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#regex\" }] }, { \"include\": \"#punctuation-comma\" }] }, \"var-single-const\": { \"patterns\": [{ \"name\": \"meta.var-single-variable.expr.ballerina\" }, { \"begin\": \"\\\\b(var)\\\\s*\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#types\" }, { \"begin\": \"([_$A-Za-z][_$0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ballerina variable.other.constant.ballerina\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))\" }] }, \"var-single-variable\": { \"patterns\": [{ \"begin\": \"((string|int|boolean|float|byte|decimal|json|xml|anydata)|\\\\b(readonly|error|map)\\\\b|([_$A-Za-z][_$0-9A-Za-z]*))(?=\\\\s+|\\\\;|\\\\>|\\\\|)\", \"beginCaptures\": { \"2\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"storage.type.ballerina\" }, \"4\": { \"name\": \"meta.definition.variable.ballerina variable.other.readwrite.ballerina\" } }, \"end\": \"(?=$|^|[;,=}])\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"name\": \"meta.var-single-variable.expr.ballerina\", \"patterns\": [{ \"include\": \"#call\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#if-statement\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#keywords\" }] }, { \"begin\": \"([_$A-Za-z][_$0-9A-Za-z]*)\\\\s+(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ballerina variable.other.readwrite.ballerina\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.ballerina\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))\", \"name\": \"meta.var-single-variable.expr.ballerina\" }] }, \"variable-initializer\": { \"patterns\": [{ \"begin\": \"(?<!=|!)(=)(?!=|>)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ballerina\" } }, \"end\": \"(?=$|[,);}\\\\]])\", \"patterns\": [{ \"match\": \"(\\\\')([_$A-Za-z][_$0-9A-Za-z]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#xml\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-accessor\" }, { \"include\": \"#regex\" }] }, { \"begin\": \"(?<!=|!)(=)(?!=|>)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ballerina\" } }, \"end\": \"(?=[,);}\\\\]]|((?<![_$0-9A-Za-z])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))|(?=^\\\\s*$)|(?<=\\\\S)(?<!=)(?=\\\\s*$)\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"variableDef\": { \"patterns\": [{ \"begin\": \"(?:(?!\\\\+)[_$A-Za-z][_$0-9A-Za-z]*)(?: |\\\\t)|(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:[_$A-Za-z][_$0-9A-Za-z]*)|(?=\\\\,)|(?=;)|\\\\.\\\\.\\\\.\", \"patterns\": [{ \"include\": \"#tupleType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#comment\" }] }] }, \"variableDefInline\": { \"patterns\": [{ \"begin\": \"(?=record)|(?=object)\", \"end\": \"(?=;)\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }] }] }, \"workerBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"workerDef\": { \"patterns\": [{ \"begin\": \"\\\\bworker\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#functionReturns\" }, { \"include\": \"#workerBody\" }] }] }, \"xml\": { \"patterns\": [{ \"begin\": \"(\\\\bxml)(\\\\s*)(`)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"punctuation.definition.string.template.begin.ballerina\" } }, \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.template.end.ballerina\" } }, \"name\": \"string.template.ballerina\", \"patterns\": [{ \"include\": \"#xmlTag\" }, { \"include\": \"#xmlComment\" }, { \"include\": \"#templateVariable\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlComment\": { \"patterns\": [{ \"begin\": \"<!--\", \"beginCaptures\": { \"0\": { \"name\": \"comment.block.xml.ballerina\" } }, \"end\": \"-->\", \"endCaptures\": { \"0\": { \"name\": \"comment.block.xml.ballerina\" } }, \"name\": \"comment.block.xml.ballerina\" }] }, \"xmlDoubleQuotedString\": { \"patterns\": [{ \"begin\": '\\\\\"', \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": '\\\\\"', \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlSingleQuotedString\": { \"patterns\": [{ \"begin\": \"\\\\'\", \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": \"\\\\'\", \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlTag\": { \"patterns\": [{ \"begin\": \"(<\\\\/?\\\\??)\\\\s*([-_a-zA-Z0-9]+)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.xml.ballerina\" }, \"2\": { \"name\": \"entity.name.tag.xml.ballerina\" } }, \"end\": \"\\\\??\\\\/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.xml.ballerina\" } }, \"patterns\": [{ \"include\": \"#xmlSingleQuotedString\" }, { \"include\": \"#xmlDoubleQuotedString\" }, { \"match\": \"xmlns\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"([a-zA-Z0-9-]+)\", \"name\": \"entity.other.attribute-name.xml.ballerina\" }] }] } }, \"scopeName\": \"source.ballerina\" });\nvar ballerina = [\n  lang\n];\n\nexport { ballerina as default };\n"],"names":["lang","ballerina"],"mappings":";AAAA,MAAMA,EAAO,OAAO,OAAO,CAAE,YAAe,YAAa,UAAa,CAAC,KAAK,EAAG,KAAQ,YAAa,SAAY,CAAC,CAAE,QAAW,cAAe,EAAG,WAAc,CAAE,kBAAmB,CAAE,SAAY,CAAC,CAAE,MAAS,0GAA2G,KAAQ,oDAAoD,CAAE,CAAC,EAAI,qBAAwB,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,iCAAmC,EAAE,EAAK,CAAE,KAAQ,wBAA0B,EAAE,EAAK,CAAE,KAAQ,iCAAmC,EAAE,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,MAAS,8EAA8E,CAAE,CAAC,EAAI,qBAAwB,CAAE,SAAY,CAAC,CAAE,MAAS,mBAAoB,cAAiB,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,OAAO,CAAE,CAAC,CAAE,CAAC,EAAI,gBAAiB,CAAE,MAAS,YAAa,cAAiB,CAAE,EAAK,CAAE,KAAQ,6BAA6B,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,6BAA+B,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,oBAAoB,CAAE,CAAG,EAAE,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,qBAAsB,KAAQ,qCAAuC,CAAA,CAAG,EAAE,UAAa,CAAE,SAAY,CAAC,CAAE,MAAS,KAAM,cAAiB,CAAE,EAAK,CAAE,KAAQ,4DAA4D,CAAI,EAAE,IAAO,YAAa,SAAY,CAAC,CAAE,QAAW,OAAS,CAAA,CAAG,CAAA,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,YAAa,cAAiB,CAAE,EAAK,CAAE,KAAQ,mBAAmB,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,sDAAsD,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,UAAY,CAAA,CAAG,CAAA,GAAK,WAAc,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,sDAAwD,CAAA,EAAI,IAAO,UAAW,YAAe,CAAE,EAAK,CAAE,KAAQ,sDAAwD,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,YAAY,EAAI,CAAE,QAAW,UAAU,CAAE,CAAC,CAAE,CAAC,EAAI,KAAQ,CAAE,SAAY,CAAC,CAAE,MAAS,gDAAiD,KAAQ,gCAAkC,CAAA,CAAG,EAAE,iBAAoB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,IAAO,UAAW,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,YAAY,EAAI,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,gBAAkB,EAAE,CAAE,QAAW,OAAS,CAAA,CAAG,CAAA,CAAG,EAAE,aAAc,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,KAAQ,4BAA6B,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,oBAAsB,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,kBAAkB,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,MAAS,aAAc,IAAO,yKAA2K,EAAE,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,wBAA0B,CAAA,GAAK,aAAc,CAAE,MAAS,2CAA4C,cAAiB,CAAE,EAAK,CAAE,KAAQ,sDAAsD,CAAI,EAAE,IAAO,WAAY,KAAQ,uBAAwB,SAAY,CAAC,CAAE,QAAW,WAAa,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,kCAAoC,CAAA,EAAI,MAAS,0BAA0B,EAAI,CAAE,QAAW,aAAa,CAAE,CAAC,EAAI,KAAQ,CAAE,SAAY,CAAC,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,MAAQ,EAAE,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,kBAAoB,EAAE,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,YAAc,CAAE,QAAW,OAAO,EAAI,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,QAAQ,CAAE,CAAC,EAAI,QAAW,CAAE,SAAY,CAAC,CAAE,MAAS,WAAY,KAAQ,mBAAqB,CAAA,CAAG,EAAE,cAAiB,CAAE,SAAY,CAAC,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,mDAAmD,GAAM,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,iDAAmD,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,gBAAkB,EAAE,CAAE,MAAS,mCAAoC,KAAQ,wBAAwB,CAAE,CAAC,CAAE,CAAC,EAAI,oBAAqB,CAAE,SAAY,CAAC,CAAE,MAAS,kGAAmG,cAAiB,CAAE,EAAK,CAAE,KAAQ,iCAAoC,EAAE,IAAO,4JAA6J,SAAY,CAAC,CAAE,QAAW,aAAa,CAAE,CAAC,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,eAAe,EAAI,CAAE,MAAS,mGAAoG,KAAQ,uCAAyC,CAAA,CAAG,EAAE,aAAc,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,IAAO,0BAA2B,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,uBAAwB,SAAY,CAAC,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,kBAAoB,CAAA,CAAG,EAAE,YAAe,CAAE,SAAY,CAAC,CAAE,QAAW,qBAAqB,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,gBAAkB,EAAE,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,YAAY,EAAI,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,WAAW,CAAE,CAAC,EAAI,aAAgB,CAAE,SAAY,CAAC,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,IAAO,WAAY,SAAY,CAAC,CAAE,QAAW,OAAO,CAAE,CAAC,CAAE,CAAC,EAAI,uBAA0B,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,CAAA,CAAE,CAAC,EAAI,kBAAqB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,sDAAsD,CAAI,EAAE,IAAO,UAAW,YAAe,CAAE,EAAK,CAAE,KAAQ,sDAAwD,CAAA,EAAI,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,uCAAyC,EAAE,EAAK,CAAE,KAAQ,uCAAuC,EAAI,EAAK,CAAE,KAAQ,4CAA4C,EAAI,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,MAAS,yBAA2B,EAAE,CAAE,MAAS,QAAS,IAAO,QAAS,KAAQ,4CAA4C,EAAI,CAAE,MAAS,OAAQ,IAAO,OAAQ,KAAQ,4CAA4C,EAAI,CAAE,MAAS,MAAO,IAAO,MAAO,KAAQ,4CAA4C,EAAI,CAAE,MAAS,IAAK,KAAQ,uCAAyC,CAAA,CAAG,CAAA,CAAG,EAAE,iBAAoB,CAAE,SAAY,CAAC,CAAE,MAAS,qCAAsC,cAAiB,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,iBAAmB,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,WAAY,CAAC,CAAE,CAAC,EAAI,YAAa,CAAE,MAAS,6DAA8D,cAAiB,CAAE,EAAK,CAAE,KAAQ,4BAA8B,EAAE,EAAK,CAAE,KAAQ,yBAA2B,EAAE,EAAK,CAAE,KAAQ,iCAAiC,CAAI,EAAE,IAAO,WAAY,KAAQ,kCAAmC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,kBAAkB,EAAI,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,kBAAoB,EAAE,CAAE,MAAS,6BAA8B,cAAiB,CAAE,EAAK,CAAE,KAAQ,qCAAuC,CAAA,EAAI,IAAO,cAAe,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,uBAAuB,CAAE,CAAC,EAAI,CAAE,MAAS,qIAAsI,IAAO,cAAe,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,uBAAuB,CAAE,CAAC,EAAI,CAAE,QAAW,oBAAoB,CAAE,CAAC,CAAE,CAAC,EAAI,iBAAoB,CAAE,SAAY,CAAC,CAAE,MAAS,QAAS,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAA4B,EAAE,IAAO,SAAU,SAAY,CAAC,CAAE,QAAW,OAAO,CAAE,CAAC,CAAE,CAAG,EAAE,WAAc,CAAE,SAAY,CAAC,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,+BAAiC,EAAE,CAAE,QAAW,cAAgB,EAAE,CAAE,QAAW,QAAU,CAAA,GAAK,uBAAwB,CAAE,SAAY,CAAC,CAAE,MAAS,+BAAgC,KAAQ,gDAAgD,EAAI,CAAE,MAAS,8BAA+B,KAAQ,wDAA0D,EAAE,CAAE,MAAS,YAAa,KAAQ,0CAA0C,EAAI,CAAE,MAAS,gBAAiB,KAAQ,uCAAuC,EAAI,CAAE,MAAS,eAAgB,KAAQ,uCAAuC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,oCAAsC,EAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAE,EAAK,CAAE,KAAQ,wCAA2C,EAAE,MAAS,qDAAqD,EAAI,CAAE,MAAS,uBAAwB,KAAQ,oCAAoC,EAAI,CAAE,MAAS,gBAAiB,KAAQ,oCAAsC,EAAE,CAAE,MAAS,MAAO,KAAQ,uCAAyC,EAAE,CAAE,MAAS,KAAM,KAAQ,sCAAwC,EAAE,CAAE,MAAS,SAAU,KAAQ,sCAAsC,EAAI,CAAE,MAAS,gBAAiB,KAAQ,uCAAuC,CAAE,CAAG,EAAE,6BAAgC,CAAE,SAAY,CAAC,CAAE,QAAW,MAAQ,EAAE,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,qBAAqB,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,gBAAkB,EAAE,CAAE,QAAW,SAAU,CAAC,EAAI,eAAgB,CAAE,KAAQ,8BAA+B,SAAY,CAAC,CAAE,MAAS,kCAAmC,cAAiB,CAAE,EAAK,CAAE,KAAQ,8DAAgE,EAAE,EAAK,CAAE,KAAQ,6DAA+D,EAAE,EAAK,CAAE,KAAQ,4DAA8D,EAAE,EAAK,CAAE,KAAQ,8DAA8D,EAAI,EAAK,CAAE,KAAQ,4DAA4D,CAAI,EAAE,IAAO,KAAM,KAAQ,uCAAwC,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,iCAAkC,CAAC,CAAE,CAAC,EAAI,WAAY,CAAE,MAAS,2DAA4D,cAAiB,CAAE,EAAK,CAAE,KAAQ,gCAAgC,EAAI,EAAK,CAAE,KAAQ,kCAAkC,CAAI,EAAE,IAAO,UAAW,SAAY,CAAC,CAAE,MAAS,WAAY,KAAQ,yBAA2B,EAAE,CAAE,QAAW,cAAc,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,aAAe,CAAA,CAAG,EAAE,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,CAAE,CAAC,EAAI,cAAiB,CAAE,SAAY,CAAC,CAAE,MAAS,aAAc,cAAiB,CAAE,EAAK,CAAE,KAAQ,2BAA2B,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,WAAW,CAAE,CAAC,CAAE,CAAC,EAAI,gBAAiB,CAAE,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,uBAAyB,CAAE,QAAW,aAAa,EAAI,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,4DAA8D,CAAA,EAAI,IAAO,+BAAgC,KAAQ,uBAAwB,SAAY,CAAC,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,oBAAsB,CAAA,CAAG,EAAE,CAAE,MAAS,MAAO,KAAQ,sCAAsC,CAAE,CAAC,EAAI,gBAAiB,CAAE,MAAS,yCAA0C,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAA2B,EAAE,EAAK,CAAE,KAAQ,yBAAyB,CAAI,EAAE,IAAO,0CAA2C,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,iBAAkB,KAAQ,mBAAmB,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,kBAAoB,EAAE,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,qBAAuB,EAAE,CAAE,QAAW,wBAA0B,EAAE,CAAE,QAAW,kBAAoB,CAAE,QAAW,QAAQ,CAAE,CAAC,EAAI,2BAA4B,CAAE,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,gBAAkB,EAAE,CAAE,QAAW,aAAe,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,cAAgB,EAAE,CAAE,QAAW,QAAU,EAAE,CAAE,MAAS,MAAO,KAAQ,2CAA6C,CAAA,CAAG,EAAE,aAAgB,CAAE,SAAY,CAAC,CAAE,MAAS,iBAAkB,KAAQ,yBAAyB,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,SAAW,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,kCAAkC,EAAI,EAAK,CAAE,KAAQ,yBAAyB,EAAI,EAAK,CAAE,KAAQ,kCAAkC,EAAI,EAAK,CAAE,KAAQ,wBAAwB,EAAI,EAAK,CAAE,KAAQ,mEAAqE,CAAA,EAAI,MAAS,4KAA8K,CAAA,CAAG,EAAE,mBAAsB,CAAE,MAAS,UAAW,cAAiB,CAAE,EAAK,CAAE,KAAQ,mDAAmD,CAAI,EAAE,IAAO,UAAW,YAAe,CAAE,EAAK,CAAE,KAAQ,iDAAmD,CAAA,EAAI,KAAQ,4BAA6B,SAAY,CAAC,CAAE,QAAW,2BAA6B,CAAA,CAAG,EAAE,gBAAmB,CAAE,MAAS,oBAAqB,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAAyB,CAAI,EAAE,IAAO,qCAAsC,YAAe,CAAE,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,KAAQ,sCAAuC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,kCAAoC,CAAA,EAAI,MAAS,gCAAkC,CAAE,MAAS,MAAO,KAAQ,4BAA4B,EAAI,CAAE,MAAS,MAAO,KAAQ,qCAAuC,EAAE,CAAE,QAAW,kBAAoB,EAAE,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,WAAa,EAAE,CAAE,MAAS,2BAA4B,KAAQ,oCAAsC,CAAA,GAAK,aAAgB,CAAE,SAAY,CAAC,CAAE,MAAS,iBAAkB,cAAiB,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,iDAAkD,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,wBAAwB,EAAI,CAAE,QAAW,sBAAsB,CAAE,CAAC,CAAE,CAAC,EAAI,sBAAyB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,uBAAyB,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,uBAAuB,CAAI,EAAE,SAAY,CAAC,CAAE,MAAS,SAAU,KAAQ,SAAW,EAAE,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,gBAAkB,EAAE,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,iBAAmB,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,mBAAmB,EAAI,CAAE,QAAW,UAAU,CAAE,CAAC,CAAE,CAAC,EAAI,oBAAuB,CAAE,SAAY,CAAC,CAAE,MAAS,gBAAiB,cAAiB,CAAE,EAAK,CAAE,KAAQ,SAAW,CAAA,EAAI,IAAO,kCAAmC,SAAY,CAAC,CAAE,QAAW,+BAAiC,EAAE,CAAE,QAAW,UAAU,CAAE,CAAC,CAAE,CAAC,EAAI,6BAAgC,CAAE,SAAY,CAAC,CAAE,MAAS,4DAA6D,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,IAAO,iDAAkD,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,YAAY,EAAI,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,iBAAmB,EAAE,CAAE,MAAS,2BAA4B,KAAQ,sCAAsC,CAAE,CAAC,CAAE,CAAC,EAAI,iBAAoB,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,IAAO,iCAAmC,CAAA,CAAG,EAAE,YAAe,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAgC,EAAI,EAAK,CAAE,KAAQ,yCAAyC,EAAI,EAAK,CAAE,KAAQ,gCAAkC,CAAA,EAAI,MAAS,6jGAA+jG,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAgC,EAAI,EAAK,CAAE,KAAQ,yCAAyC,EAAI,EAAK,CAAE,KAAQ,gCAAgC,CAAI,EAAE,MAAS,8EAA8E,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAkC,EAAE,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,mCAAmC,CAAI,EAAE,MAAS,mEAAmE,EAAI,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,eAAiB,EAAE,CAAE,MAAS,sCAAuC,KAAQ,2BAA6B,EAAE,CAAE,QAAW,OAAS,EAAE,CAAE,MAAS,cAAe,KAAQ,kCAAkC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,oCAAoC,EAAI,EAAK,CAAE,KAAQ,gCAAkC,EAAE,EAAK,CAAE,KAAQ,gCAAkC,EAAE,EAAK,CAAE,KAAQ,mDAAmD,EAAI,EAAK,CAAE,KAAQ,iDAAiD,CAAI,EAAE,MAAS,wEAAwE,EAAI,CAAE,MAAS,kCAAmC,KAAQ,mCAAmC,EAAI,CAAE,QAAW,kBAAoB,CAAA,CAAG,EAAE,eAAgB,CAAE,SAAY,CAAC,CAAE,MAAS,uEAAwE,IAAO,WAAY,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,MAAS,8DAA+D,cAAiB,CAAE,EAAK,CAAE,KAAQ,uCAAyC,EAAE,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,IAAO,gBAAiB,YAAe,CAAE,EAAK,CAAE,KAAQ,6BAAgC,EAAE,SAAY,CAAC,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,cAAgB,EAAE,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,QAAU,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,qBAAqB,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,gBAAkB,EAAE,CAAE,QAAW,QAAU,CAAA,CAAG,EAAE,CAAE,MAAS,sBAAuB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,WAAW,CAAE,CAAC,EAAI,CAAE,QAAW,aAAa,CAAE,CAAC,CAAE,CAAC,EAAI,gBAAiB,CAAE,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAqC,EAAE,EAAK,CAAE,KAAQ,iEAAiE,EAAI,EAAK,CAAE,KAAQ,mCAAmC,EAAI,EAAK,CAAE,KAAQ,0CAA4C,CAAA,EAAI,MAAS,mGAAqG,EAAE,CAAE,MAAS,6BAA8B,KAAQ,0CAA4C,CAAA,CAAG,EAAE,qBAAsB,CAAE,MAAS,eAAgB,cAAiB,CAAE,EAAK,CAAE,KAAQ,kCAAkC,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,4CAA8C,CAAA,EAAI,KAAQ,wBAAyB,SAAY,CAAC,CAAE,MAAS,kCAAmC,KAAQ,mCAAmC,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,uBAAuB,CAAE,CAAC,EAAI,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,yGAA0G,KAAQ,2BAA6B,EAAE,CAAE,MAAS,uEAAwE,KAAQ,gCAAgC,EAAI,CAAE,MAAS,6GAA8G,KAAQ,yBAAyB,EAAI,CAAE,MAAS,yHAA0H,KAAQ,yBAA2B,EAAE,CAAE,MAAS,uFAAwF,KAAQ,yBAA2B,EAAE,CAAE,MAAS,oHAAqH,KAAQ,yBAA2B,EAAE,CAAE,MAAS,OAAQ,KAAQ,4DAA4D,EAAI,CAAE,MAAS,qFAAsF,KAAQ,4BAA4B,EAAI,CAAE,QAAW,QAAU,EAAE,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,kBAAmB,CAAC,EAAI,QAAW,CAAE,SAAY,CAAC,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,OAAO,EAAI,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,gBAAkB,CAAA,CAAG,EAAE,KAAQ,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,OAAS,CAAA,CAAG,CAAA,CAAG,EAAE,oBAAuB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,IAAO,WAAY,SAAY,CAAC,CAAE,QAAW,mBAAmB,EAAI,CAAE,QAAW,OAAO,EAAI,CAAE,MAAS,2BAA4B,KAAQ,8BAAgC,CAAA,CAAG,CAAA,CAAG,EAAE,eAAkB,CAAE,SAAY,CAAC,CAAE,MAAS,cAAe,cAAiB,CAAE,EAAK,CAAE,KAAQ,2BAA2B,CAAI,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,qBAAqB,EAAI,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,OAAS,CAAA,CAAG,CAAA,CAAG,EAAE,mBAAsB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,sDAAwD,CAAA,EAAI,IAAO,UAAW,YAAe,CAAE,EAAK,CAAE,KAAQ,sDAAwD,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,sBAAsB,EAAI,CAAE,QAAW,8BAA8B,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,OAAS,CAAA,CAAG,CAAA,CAAG,EAAE,4BAA+B,CAAE,SAAY,CAAC,CAAE,MAAS,KAAM,cAAiB,CAAE,EAAK,CAAE,KAAQ,mBAAmB,CAAI,EAAE,IAAO,cAAe,SAAY,CAAC,CAAE,QAAW,mBAAmB,EAAI,CAAE,QAAW,OAAO,CAAE,CAAG,CAAA,CAAG,EAAE,gBAAmB,CAAE,MAAS,MAAO,IAAO,YAAa,KAAQ,2BAA4B,SAAY,CAAC,CAAE,QAAW,wCAAwC,EAAI,CAAE,QAAW,kCAAkC,CAAE,CAAG,EAAE,gCAAmC,CAAE,SAAY,CAAC,CAAE,MAAS,uDAAwD,cAAiB,CAAE,EAAK,CAAE,KAAQ,4BAA8B,EAAE,EAAK,CAAE,KAAQ,oCAAsC,EAAE,EAAK,CAAE,KAAQ,4BAA4B,CAAI,EAAE,IAAO,6BAA8B,SAAY,CAAC,CAAE,MAAS,MAAO,KAAQ,oCAAsC,CAAA,CAAG,CAAA,CAAG,EAAE,sCAAyC,CAAE,SAAY,CAAC,CAAE,MAAS,8CAA+C,cAAiB,CAAE,EAAK,CAAE,KAAQ,0BAA0B,EAAI,EAAK,CAAE,KAAQ,mBAAmB,EAAI,EAAK,CAAE,KAAQ,mBAAmB,EAAI,EAAK,CAAE,KAAQ,mBAAqB,EAAE,EAAK,CAAE,KAAQ,0CAA4C,CAAA,EAAI,IAAO,6BAA8B,SAAY,CAAC,CAAE,MAAS,MAAO,KAAQ,0CAA0C,CAAE,CAAG,CAAA,CAAG,EAAE,UAAa,CAAE,SAAY,CAAC,CAAE,MAAS,uEAAwE,KAAQ,wBAA0B,EAAE,CAAE,MAAS,MAAO,KAAQ,4BAA8B,CAAA,CAAG,EAAE,QAAW,CAAE,SAAY,CAAC,CAAE,MAAS,oDAAqD,KAAQ,oCAAoC,CAAE,CAAC,EAAI,iBAAkB,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAA4C,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,oBAAsB,CAAA,CAAG,EAAE,gBAAiB,CAAE,SAAY,CAAC,CAAE,QAAW,YAAc,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,aAAe,EAAE,CAAE,MAAS,UAAW,IAAO,qCAAsC,KAAQ,iEAAkE,SAAY,CAAC,CAAE,QAAW,UAAY,CAAA,CAAG,EAAE,CAAE,MAAS,mBAAoB,IAAO,yEAA0E,KAAQ,iEAAkE,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,SAAW,CAAA,CAAG,EAAE,CAAE,MAAS,mgBAAogB,IAAO,0CAA2C,KAAQ,iEAAkE,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,UAAU,CAAE,CAAC,EAAI,CAAE,MAAS,uCAAwC,IAAO,uBAAwB,KAAQ,oCAAqC,SAAY,CAAC,CAAE,QAAW,gBAAkB,CAAA,CAAG,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAmC,EAAI,EAAK,CAAE,KAAQ,oCAAsC,CAAA,EAAI,MAAS,0EAA2E,KAAQ,8BAAgC,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAqC,EAAE,EAAK,CAAE,KAAQ,gCAAkC,CAAA,EAAI,MAAS,0mGAA2mG,KAAQ,8BAA8B,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAmC,CAAI,EAAE,MAAS,gFAAiF,KAAQ,8BAA8B,EAAI,CAAE,MAAS,YAAa,cAAiB,CAAE,EAAK,CAAE,KAAQ,mCAAqC,CAAA,EAAI,IAAO,YAAa,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,aAAe,CAAA,GAAK,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,oCAAoC,CAAI,EAAE,MAAS,0DAA2D,KAAQ,8BAAgC,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAkC,EAAK,CAAE,KAAQ,4BAA4B,CAAI,EAAE,MAAS,+EAAgF,KAAQ,8BAA8B,EAAI,CAAE,MAAS,wDAAyD,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAAgC,CAAA,EAAI,IAAO,+GAAgH,KAAQ,8BAAgC,EAAE,CAAE,MAAS,oCAAqC,IAAO,4BAA6B,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,aAAa,CAAE,CAAG,CAAA,CAAG,EAAE,UAAa,CAAE,SAAY,CAAC,CAAE,MAAS,oBAAqB,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAA2B,CAAA,EAAI,IAAO,WAAY,SAAY,CAAC,CAAE,QAAW,aAAa,CAAE,CAAC,CAAE,CAAC,EAAI,eAAkB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,IAAO,UAAW,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,OAAO,CAAE,CAAC,CAAE,CAAG,EAAE,qBAAwB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,mDAAmD,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,iDAAmD,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,OAAS,EAAE,CAAE,MAAS,mCAAoC,KAAQ,8BAAgC,CAAA,CAAG,CAAA,CAAG,EAAE,wBAA2B,CAAE,SAAY,CAAC,CAAE,MAAS,iBAAkB,cAAiB,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,yCAA4C,EAAE,SAAY,CAAC,CAAE,QAAW,qBAAqB,EAAI,CAAE,MAAS,gBAAiB,KAAQ,mBAAmB,EAAI,CAAE,QAAW,OAAO,CAAE,CAAC,CAAE,CAAC,EAAI,UAAa,CAAE,SAAY,CAAC,CAAE,MAAS,8FAA+F,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAAwB,CAAI,EAAE,IAAO,iDAAkD,SAAY,CAAC,CAAE,QAAW,0BAA0B,EAAI,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,gBAAkB,EAAE,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,MAAS,2BAA4B,KAAQ,sCAAwC,CAAA,CAAG,CAAA,CAAG,EAAE,iBAAkB,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,kCAAkC,CAAI,EAAE,MAAS,kBAAkB,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,iCAAiC,EAAI,EAAK,CAAE,KAAQ,kCAAkC,EAAI,EAAK,CAAE,KAAQ,yBAA2B,EAAE,EAAK,CAAE,KAAQ,qCAAuC,EAAE,EAAK,CAAE,KAAQ,gCAAkC,EAAE,EAAK,CAAE,KAAQ,wBAA0B,EAAE,EAAK,CAAE,KAAQ,8BAA8B,EAAI,EAAK,CAAE,KAAQ,8BAA8B,EAAI,GAAM,CAAE,KAAQ,qCAAqC,CAAI,EAAE,MAAS,8YAA8Y,CAAE,CAAC,EAAI,eAAkB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,IAAO,yCAA0C,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,YAAY,EAAI,CAAE,QAAW,qBAAqB,EAAI,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,UAAY,CAAA,CAAG,CAAA,CAAG,EAAE,kBAAqB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,IAAO,yCAA0C,SAAY,CAAC,CAAE,QAAW,yBAAyB,EAAI,CAAE,MAAS,2BAA4B,KAAQ,sCAAsC,CAAE,CAAG,CAAA,CAAG,EAAE,mBAAsB,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAAwB,CAAI,EAAE,IAAO,yBAAyB,CAAE,CAAC,EAAI,wBAA2B,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,IAAO,0BAA2B,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,CAAE,CAAC,EAAI,WAAc,CAAE,SAAY,CAAC,CAAE,MAAS,wEAAyE,KAAQ,gCAAkC,EAAE,CAAE,MAAS,sBAAuB,KAAQ,yBAA2B,EAAE,CAAE,MAAS,MAAO,KAAQ,2CAA6C,CAAA,CAAG,EAAE,cAAiB,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,4BAA4B,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,KAAQ,mCAAoC,SAAY,CAAC,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,kBAAoB,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,QAAU,CAAA,CAAG,EAAE,qBAAwB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,OAAO,CAAE,CAAC,CAAE,CAAC,EAAI,uBAAwB,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,kCAAoC,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,MAAS,iCAAiC,CAAE,CAAC,EAAI,oBAAqB,CAAE,SAAY,CAAC,CAAE,MAAS,IAAK,KAAQ,uCAAuC,CAAE,CAAG,EAAE,wBAAyB,CAAE,SAAY,CAAC,CAAE,MAAS,IAAK,KAAQ,6CAA8C,CAAC,EAAI,OAAU,CAAE,MAAS,eAAgB,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAA2B,CAAA,EAAI,IAAO,WAAY,KAAQ,wBAAyB,SAAY,CAAC,CAAE,QAAW,aAAe,CAAA,CAAG,EAAE,WAAc,CAAE,SAAY,CAAC,CAAE,QAAW,aAAa,CAAE,CAAC,EAAI,cAAiB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,OAAS,CAAA,CAAG,CAAA,CAAG,EAAE,MAAS,CAAE,SAAY,CAAC,CAAE,MAAS,mBAAoB,cAAiB,CAAE,EAAK,CAAE,KAAQ,kCAAkC,EAAI,EAAK,CAAE,KAAQ,wDAA0D,CAAA,EAAI,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,sDAAsD,CAAI,EAAE,KAAQ,4BAA6B,SAAY,CAAC,CAAE,QAAW,gCAAgC,EAAI,CAAE,QAAW,SAAS,CAAE,CAAC,CAAE,CAAC,EAAI,wBAAyB,CAAE,SAAY,CAAC,CAAE,MAAS,sBAAuB,KAAQ,gDAAkD,EAAE,CAAE,MAAS,aAAc,KAAQ,4CAA4C,CAAE,CAAC,EAAI,4CAA6C,CAAE,SAAY,CAAC,CAAE,MAAS,yGAA0G,KAAQ,mEAAqE,CAAA,CAAG,EAAE,6BAA8B,CAAE,SAAY,CAAC,CAAE,MAAS,YAAa,cAAiB,CAAE,EAAK,CAAE,KAAQ,qDAAuD,CAAA,EAAI,IAAO,KAAM,YAAe,CAAE,EAAK,CAAE,KAAQ,yDAAyD,CAAI,EAAE,KAAQ,sDAAuD,SAAY,CAAC,CAAE,QAAW,4CAA8C,CAAA,CAAG,CAAA,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,UAAW,KAAQ,4CAA4C,EAAI,CAAE,MAAS,+CAAgD,KAAQ,8CAA8C,EAAI,CAAE,MAAS,MAAO,KAAQ,sCAAsC,EAAI,CAAE,MAAS,QAAS,cAAiB,CAAE,EAAK,CAAE,KAAQ,+CAAiD,CAAA,EAAI,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,+CAA+C,CAAI,EAAE,KAAQ,wCAAyC,SAAY,CAAC,CAAE,QAAW,gCAAkC,EAAE,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,0BAA4B,CAAA,CAAG,EAAE,CAAE,MAAS,cAAe,cAAiB,CAAE,EAAK,CAAE,KAAQ,+DAA+D,EAAI,EAAK,CAAE,KAAQ,4CAA8C,CAAA,EAAI,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,6DAA6D,CAAI,EAAE,KAAQ,sDAAuD,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAmC,EAAI,EAAK,CAAE,KAAQ,4CAA4C,EAAI,EAAK,CAAE,KAAQ,mCAAqC,EAAE,EAAK,CAAE,KAAQ,4CAA8C,CAAA,EAAI,MAAS,yJAA0J,KAAQ,uDAAuD,EAAI,CAAE,QAAW,wBAAwB,EAAI,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,0BAA4B,CAAA,CAAG,EAAE,CAAE,QAAW,gCAAkC,EAAE,CAAE,QAAW,wBAA0B,EAAE,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,2BAA4B,CAAC,EAAI,eAAgB,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,kCAAoC,EAAE,EAAK,CAAE,KAAQ,gCAAkC,EAAE,EAAK,CAAE,KAAQ,gCAAgC,CAAI,EAAE,MAAS,8DAA8D,EAAI,CAAE,MAAS,8DAA+D,KAAQ,kCAAkC,CAAE,CAAC,EAAI,eAAgB,CAAE,MAAS,gBAAiB,cAAiB,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,uKAAwK,KAAQ,qCAAsC,SAAY,CAAC,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,cAAc,EAAI,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,cAAgB,EAAE,CAAE,QAAW,YAAc,CAAA,CAAG,EAAE,YAAe,CAAE,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,oBAAsB,CAAE,QAAW,mBAAmB,EAAI,CAAE,QAAW,aAAa,CAAE,CAAC,EAAI,YAAe,CAAE,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,MAAS,iEAAkE,KAAQ,+BAA+B,CAAE,CAAC,EAAI,UAAa,CAAE,SAAY,CAAC,CAAE,MAAS,KAAM,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAAyB,CAAI,EAAE,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,OAAS,CAAA,CAAG,CAAA,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,+CAAgD,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAAyB,EAAI,EAAK,CAAE,KAAQ,oCAAsC,CAAA,EAAI,IAAO,iBAAmB,CAAA,CAAG,EAAE,WAAc,CAAE,SAAY,CAAC,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,gBAAkB,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,wBAA0B,EAAE,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,kBAAkB,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,QAAQ,CAAE,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,gDAAmD,EAAE,IAAO,wBAAyB,YAAe,CAAE,EAAK,CAAE,KAAQ,6CAA6C,EAAI,EAAK,CAAE,KAAQ,mCAAqC,CAAA,EAAI,KAAQ,iCAAkC,SAAY,CAAC,CAAE,QAAW,0BAA4B,CAAA,CAAG,CAAA,CAAG,EAAE,0BAA2B,CAAE,SAAY,CAAC,CAAE,MAAS,kHAAmH,KAAQ,qCAAqC,CAAE,CAAC,EAAI,eAAkB,CAAE,SAAY,CAAC,CAAE,MAAS,4CAA6C,cAAiB,CAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAE,EAAK,CAAE,KAAQ,kCAAkC,EAAI,EAAK,CAAE,KAAQ,wDAAwD,CAAI,EAAE,IAAO,SAAU,YAAe,CAAE,EAAK,CAAE,KAAQ,sDAAsD,CAAI,EAAE,KAAQ,4BAA6B,SAAY,CAAC,CAAE,QAAW,gCAAkC,EAAE,CAAE,QAAW,2BAA4B,CAAC,CAAE,CAAC,EAAI,QAAW,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,SAAY,CAAC,CAAE,MAAS,QAAS,KAAQ,qCAAqC,EAAI,CAAE,MAAS,IAAK,KAAQ,QAAQ,CAAE,CAAG,CAAA,CAAG,EAAE,gCAAiC,CAAE,SAAY,CAAC,CAAE,MAAS,SAAU,cAAiB,CAAE,EAAK,CAAE,KAAQ,4DAA4D,CAAI,EAAE,YAAe,+BAAgC,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,0DAA0D,CAAI,EAAE,KAAQ,qCAAsC,SAAY,CAAC,CAAE,QAAW,aAAe,CAAA,CAAG,CAAA,CAAG,EAAE,iBAAoB,CAAE,SAAY,CAAC,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,qCAAqC,CAAI,EAAE,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,qCAAqC,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,OAAO,CAAE,CAAC,CAAE,CAAC,EAAI,qBAAsB,CAAE,MAAS,mCAAoC,cAAiB,CAAE,EAAK,CAAE,KAAQ,qCAAwC,EAAE,IAAO,OAAQ,YAAe,CAAE,EAAK,CAAE,KAAQ,oCAAoC,GAAM,SAAY,CAAC,CAAE,QAAW,aAAe,CAAA,CAAG,EAAE,UAAa,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,IAAO,YAAa,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,MAAS,mCAAoC,KAAQ,wBAA0B,CAAA,CAAG,CAAA,CAAG,EAAE,KAAQ,CAAE,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,aAAa,CAAE,CAAC,EAAI,kBAAmB,CAAE,SAAY,CAAC,CAAE,MAAS,QAAS,cAAiB,CAAE,EAAK,CAAE,KAAQ,4CAA4C,CAAI,EAAE,IAAO,yGAA0G,KAAQ,iCAAkC,SAAY,CAAC,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,QAAU,EAAE,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,MAAQ,EAAE,CAAE,QAAW,OAAO,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,yBAAyB,EAAI,EAAK,CAAE,KAAQ,qCAAuC,EAAE,EAAK,CAAE,KAAQ,2BAA6B,EAAE,EAAK,CAAE,KAAQ,wBAAwB,EAAI,EAAK,CAAE,KAAQ,kCAAkC,EAAI,EAAK,CAAE,KAAQ,oCAAoC,EAAI,EAAK,CAAE,KAAQ,gCAAgC,EAAI,EAAK,CAAE,KAAQ,gCAAkC,EAAE,GAAM,CAAE,KAAQ,mDAAqD,EAAE,GAAM,CAAE,KAAQ,iDAAiD,CAAI,EAAE,MAAS,+MAA+M,EAAI,CAAE,MAAS,MAAO,KAAQ,qCAAuC,EAAE,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,OAAS,EAAE,CAAE,QAAW,gBAAkB,CAAA,CAAG,CAAA,CAAG,EAAE,iBAAkB,CAAE,SAAY,CAAC,CAAE,MAAS,kJAAmJ,KAAQ,kCAAkC,CAAE,CAAC,EAAI,aAAc,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,6BAA+B,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,6BAA6B,CAAI,EAAE,KAAQ,4BAA6B,SAAY,CAAC,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,MAAS,YAAa,KAAQ,iCAAmC,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,+BAAiC,EAAK,CAAE,KAAQ,qCAAqC,EAAI,EAAK,CAAE,KAAQ,uCAAuC,GAAM,MAAS,0FAA4F,EAAE,CAAE,QAAW,cAAgB,EAAE,CAAE,QAAW,OAAS,EAAE,CAAE,QAAW,oBAAsB,CAAA,CAAG,EAAE,eAAkB,CAAE,SAAY,CAAC,CAAE,MAAS,6CAA8C,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAAyB,EAAI,EAAK,CAAE,KAAQ,4BAA4B,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,4CAA8C,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,qBAAuB,EAAE,CAAE,QAAW,kBAAoB,EAAE,CAAE,QAAW,kBAAoB,EAAE,CAAE,QAAW,WAAa,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,iBAAmB,EAAE,CAAE,MAAS,2BAA4B,KAAQ,sCAAwC,CAAE,QAAW,kBAAkB,EAAI,CAAE,QAAW,kBAAkB,EAAI,CAAE,QAAW,aAAa,CAAE,CAAC,CAAE,CAAC,EAAI,gBAAmB,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,MAAS,2BAA4B,KAAQ,wBAA0B,CAAA,CAAG,CAAA,CAAG,EAAE,MAAS,CAAE,SAAY,CAAC,CAAE,MAAS,qCAAsC,KAAQ,wBAA0B,EAAE,CAAE,MAAS,iEAAkE,KAAQ,kCAAoC,EAAE,CAAE,MAAS,4CAA6C,KAAQ,wBAAwB,EAAI,CAAE,MAAS,iBAAkB,KAAQ,wBAA0B,CAAA,CAAG,EAAE,0BAA2B,CAAE,SAAY,CAAC,CAAE,MAAS,qBAAsB,cAAiB,CAAE,EAAK,CAAE,KAAQ,iDAAiD,EAAI,EAAK,CAAE,KAAQ,2DAA2D,CAAI,EAAE,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,yDAAyD,GAAM,KAAQ,kDAAmD,SAAY,CAAC,CAAE,QAAW,4CAA8C,EAAE,CAAE,QAAW,6BAA6B,CAAE,CAAC,CAAE,CAAC,EAAI,iBAAkB,CAAE,SAAY,CAAC,CAAE,MAAS,eAAgB,cAAiB,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAE,EAAK,CAAE,KAAQ,wDAA0D,CAAA,EAAI,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,sDAAsD,CAAI,EAAE,KAAQ,wCAAyC,SAAY,CAAC,CAAE,MAAS,qBAAsB,KAAQ,+CAAiD,CAAA,CAAG,CAAA,CAAG,EAAE,WAAY,CAAE,SAAY,CAAC,CAAE,MAAS,eAAgB,cAAiB,CAAE,EAAK,CAAE,KAAQ,6DAA6D,CAAI,EAAE,IAAO,6SAA8S,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,mCAAoC,cAAiB,CAAE,EAAK,CAAE,KAAQ,kCAAoC,CAAA,EAAI,IAAO,SAAW,EAAE,CAAE,MAAS,MAAO,KAAQ,4CAA4C,EAAI,CAAE,MAAS,WAAY,KAAQ,yBAAyB,EAAI,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,sBAAsB,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,kBAAoB,EAAE,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,QAAQ,CAAE,CAAC,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,MAAS,gCAAiC,IAAO,mRAAoR,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,gCAAiC,cAAiB,CAAE,EAAK,CAAE,KAAQ,yBAA2B,CAAA,EAAI,IAAO,SAAW,EAAE,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,mBAAmB,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,kBAAkB,CAAE,CAAG,EAAE,CAAE,QAAW,oBAAsB,EAAE,CAAE,MAAS,mFAAoF,cAAiB,CAAE,EAAK,CAAE,KAAQ,kCAAkC,CAAI,EAAE,IAAO,iPAAkP,KAAQ,0BAA2B,SAAY,CAAC,CAAE,QAAW,MAAQ,EAAE,CAAE,MAAS,mFAAoF,cAAiB,CAAE,EAAK,CAAE,KAAQ,kCAAoC,CAAA,EAAI,IAAO,SAAW,EAAE,CAAE,MAAS,MAAO,KAAQ,4CAA4C,EAAI,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,sBAAsB,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,kBAAkB,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,QAAU,CAAA,CAAG,EAAE,CAAE,QAAW,oBAAsB,CAAA,CAAG,EAAE,mBAAoB,CAAE,SAAY,CAAC,CAAE,KAAQ,yCAAyC,EAAI,CAAE,MAAS,eAAgB,cAAiB,CAAE,EAAK,CAAE,KAAQ,kCAAoC,CAAA,EAAI,IAAO,SAAW,EAAE,CAAE,QAAW,QAAU,EAAE,CAAE,MAAS,6BAA8B,cAAiB,CAAE,EAAK,CAAE,KAAQ,sEAAsE,CAAI,EAAE,IAAO,oEAAoE,CAAE,CAAC,EAAI,sBAAuB,CAAE,SAAY,CAAC,CAAE,MAAS,uIAAwI,cAAiB,CAAE,EAAK,CAAE,KAAQ,oCAAsC,EAAK,CAAE,KAAQ,wBAAwB,EAAI,EAAK,CAAE,KAAQ,uEAAuE,CAAI,EAAE,IAAO,iBAAkB,YAAe,CAAE,EAAK,CAAE,KAAQ,4CAA4C,GAAM,KAAQ,0CAA2C,SAAY,CAAC,CAAE,QAAW,OAAS,EAAE,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,WAAa,CAAA,CAAG,EAAE,CAAE,MAAS,uCAAwC,cAAiB,CAAE,EAAK,CAAE,KAAQ,uEAAyE,EAAE,EAAK,CAAE,KAAQ,+CAA+C,CAAI,EAAE,IAAO,qEAAsE,KAAQ,yCAAyC,CAAE,CAAC,EAAI,uBAAwB,CAAE,SAAY,CAAC,CAAE,MAAS,gCAAiC,cAAiB,CAAE,EAAK,CAAE,KAAQ,uCAAuC,CAAI,EAAE,IAAO,kBAAmB,SAAY,CAAC,CAAE,MAAS,kCAAmC,KAAQ,mCAAmC,EAAI,CAAE,QAAW,MAAM,EAAI,CAAE,QAAW,gBAAgB,EAAI,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,SAAU,CAAC,EAAI,CAAE,MAAS,qBAAsB,cAAiB,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,IAAO,uGAAwG,SAAY,CAAC,CAAE,QAAW,aAAe,CAAA,CAAG,CAAA,CAAG,EAAE,YAAe,CAAE,SAAY,CAAC,CAAE,MAAS,uDAAwD,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAAwB,CAAI,EAAE,IAAO,uDAAwD,SAAY,CAAC,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,gBAAkB,EAAE,CAAE,QAAW,WAAY,CAAC,CAAE,CAAC,EAAI,kBAAqB,CAAE,SAAY,CAAC,CAAE,MAAS,wBAAyB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,YAAc,CAAA,CAAG,CAAA,CAAG,EAAE,WAAc,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,OAAO,CAAE,CAAC,CAAE,CAAC,EAAI,UAAa,CAAE,SAAY,CAAC,CAAE,MAAS,eAAgB,cAAiB,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,kBAAkB,EAAI,CAAE,QAAW,aAAa,CAAE,CAAC,CAAE,CAAC,EAAI,IAAO,CAAE,SAAY,CAAC,CAAE,MAAS,oBAAqB,cAAiB,CAAE,EAAK,CAAE,KAAQ,oCAAsC,EAAK,CAAE,KAAQ,wDAAwD,CAAI,EAAE,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,sDAAsD,CAAI,EAAE,KAAQ,4BAA6B,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,qBAAuB,CAAE,MAAS,IAAK,KAAQ,QAAQ,CAAE,CAAC,CAAE,CAAC,EAAI,WAAc,CAAE,SAAY,CAAC,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,6BAA+B,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,6BAA6B,CAAI,EAAE,KAAQ,6BAA6B,CAAE,CAAC,EAAI,sBAAyB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,sBAAsB,CAAI,EAAE,SAAY,CAAC,CAAE,MAAS,QAAS,KAAQ,qCAAqC,EAAI,CAAE,MAAS,IAAK,KAAQ,QAAU,CAAA,CAAG,CAAA,CAAG,EAAE,sBAAyB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAAwB,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,SAAY,CAAC,CAAE,MAAS,QAAS,KAAQ,qCAAuC,EAAE,CAAE,MAAS,IAAK,KAAQ,QAAQ,CAAE,CAAC,CAAE,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,kCAAmC,cAAiB,CAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAE,EAAK,CAAE,KAAQ,+BAA+B,CAAI,EAAE,IAAO,YAAa,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAA8C,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,wBAAwB,EAAI,CAAE,QAAW,wBAA0B,EAAE,CAAE,MAAS,QAAS,KAAQ,yBAA2B,EAAE,CAAE,MAAS,kBAAmB,KAAQ,2CAA2C,CAAE,CAAC,CAAE,CAAC,CAAI,EAAE,UAAa,kBAAkB,CAAE,EACtm6D,IAACC,EAAY,CACdD,CACF","x_google_ignoreList":[0]}