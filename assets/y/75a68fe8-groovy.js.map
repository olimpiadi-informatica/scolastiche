{"version":3,"file":"75a68fe8-groovy.js","sources":["../../../node_modules/shiki/dist/langs/groovy.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Groovy\", \"name\": \"groovy\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.groovy\" } }, \"match\": \"^(#!).+$\\\\n\", \"name\": \"comment.line.hashbang.groovy\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.package.groovy\" }, \"2\": { \"name\": \"storage.modifier.package.groovy\" }, \"3\": { \"name\": \"punctuation.terminator.groovy\" } }, \"match\": \"^\\\\s*(package)\\\\b(?:\\\\s*([^ ;$]+)\\\\s*(;)?)?\", \"name\": \"meta.package.groovy\" }, { \"begin\": \"(import static)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.import.static.groovy\" } }, \"captures\": { \"1\": { \"name\": \"keyword.other.import.groovy\" }, \"2\": { \"name\": \"storage.modifier.import.groovy\" }, \"3\": { \"name\": \"punctuation.terminator.groovy\" } }, \"contentName\": \"storage.modifier.import.groovy\", \"end\": \"\\\\s*(?:$|(?=%>)(;))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.groovy\" } }, \"name\": \"meta.import.groovy\", \"patterns\": [{ \"match\": \"\\\\.\", \"name\": \"punctuation.separator.groovy\" }, { \"match\": \"\\\\s\", \"name\": \"invalid.illegal.character_not_allowed_here.groovy\" }] }, { \"begin\": \"(import)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.import.groovy\" } }, \"captures\": { \"1\": { \"name\": \"keyword.other.import.groovy\" }, \"2\": { \"name\": \"storage.modifier.import.groovy\" }, \"3\": { \"name\": \"punctuation.terminator.groovy\" } }, \"contentName\": \"storage.modifier.import.groovy\", \"end\": \"\\\\s*(?:$|(?=%>)|(;))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.groovy\" } }, \"name\": \"meta.import.groovy\", \"patterns\": [{ \"match\": \"\\\\.\", \"name\": \"punctuation.separator.groovy\" }, { \"match\": \"\\\\s\", \"name\": \"invalid.illegal.character_not_allowed_here.groovy\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.other.import.groovy\" }, \"2\": { \"name\": \"keyword.other.import.static.groovy\" }, \"3\": { \"name\": \"storage.modifier.import.groovy\" }, \"4\": { \"name\": \"punctuation.terminator.groovy\" } }, \"match\": \"^\\\\s*(import)(?:\\\\s+(static)\\\\s+)\\\\b(?:\\\\s*([^ ;$]+)\\\\s*(;)?)?\", \"name\": \"meta.import.groovy\" }, { \"include\": \"#groovy\" }], \"repository\": { \"annotations\": { \"patterns\": [{ \"begin\": \"(?<!\\\\.)(@[^ (]+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.annotation.groovy\" }, \"2\": { \"name\": \"punctuation.definition.annotation-arguments.begin.groovy\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.annotation-arguments.end.groovy\" } }, \"name\": \"meta.declaration.annotation.groovy\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.other.key.groovy\" }, \"2\": { \"name\": \"keyword.operator.assignment.groovy\" } }, \"match\": \"(\\\\w*)\\\\s*(=)\" }, { \"include\": \"#values\" }, { \"match\": \",\", \"name\": \"punctuation.definition.seperator.groovy\" }] }, { \"match\": \"(?<!\\\\.)@\\\\S+\", \"name\": \"storage.type.annotation.groovy\" }] }, \"anonymous-classes-and-new\": { \"begin\": \"\\\\bnew\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.new.groovy\" } }, \"end\": \"(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=[;])|$\", \"patterns\": [{ \"begin\": \"(\\\\w+)\\\\s*(?=\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.groovy\" } }, \"end\": \"}|(?=\\\\s*(?:,|;|\\\\)))|$\", \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#groovy\" }] }, { \"begin\": \"{\", \"end\": \"(?=})\", \"patterns\": [{ \"include\": \"#groovy\" }] }] }, { \"begin\": \"(?=\\\\w.*\\\\(?)\", \"end\": \"(?<=\\\\))|$\", \"patterns\": [{ \"include\": \"#object-types\" }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.groovy\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#groovy\" }] }] }, { \"begin\": \"{\", \"end\": \"}\", \"name\": \"meta.inner-class.groovy\", \"patterns\": [{ \"include\": \"#class-body\" }] }] }, \"braces\": { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#groovy-code\" }] }, \"class\": { \"begin\": \"(?=\\\\w?[\\\\w\\\\s]*(?:class|(?:@)?interface|enum)\\\\s+\\\\w+)\", \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.class.end.groovy\" } }, \"name\": \"meta.definition.class.groovy\", \"patterns\": [{ \"include\": \"#storage-modifiers\" }, { \"include\": \"#comments\" }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.groovy\" }, \"2\": { \"name\": \"entity.name.type.class.groovy\" } }, \"match\": \"(class|(?:@)?interface|enum)\\\\s+(\\\\w+)\", \"name\": \"meta.class.identifier.groovy\" }, { \"begin\": \"extends\", \"beginCaptures\": { \"0\": { \"name\": \"storage.modifier.extends.groovy\" } }, \"end\": \"(?={|implements)\", \"name\": \"meta.definition.class.inherited.classes.groovy\", \"patterns\": [{ \"include\": \"#object-types-inherited\" }, { \"include\": \"#comments\" }] }, { \"begin\": \"(implements)\\\\s\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.implements.groovy\" } }, \"end\": \"(?=\\\\s*extends|\\\\{)\", \"name\": \"meta.definition.class.implemented.interfaces.groovy\", \"patterns\": [{ \"include\": \"#object-types-inherited\" }, { \"include\": \"#comments\" }] }, { \"begin\": \"{\", \"end\": \"(?=})\", \"name\": \"meta.class.body.groovy\", \"patterns\": [{ \"include\": \"#class-body\" }] }] }, \"class-body\": { \"patterns\": [{ \"include\": \"#enum-values\" }, { \"include\": \"#constructors\" }, { \"include\": \"#groovy\" }] }, \"closures\": { \"begin\": \"\\\\{(?=.*?->)\", \"end\": \"\\\\}\", \"patterns\": [{ \"begin\": \"(?<=\\\\{)(?=[^\\\\}]*?->)\", \"end\": \"->\", \"endCaptures\": { \"0\": { \"name\": \"keyword.operator.groovy\" } }, \"patterns\": [{ \"begin\": \"(?!->)\", \"end\": \"(?=->)\", \"name\": \"meta.closure.parameters.groovy\", \"patterns\": [{ \"begin\": \"(?!,|->)\", \"end\": \"(?=,|->)\", \"name\": \"meta.closure.parameter.groovy\", \"patterns\": [{ \"begin\": \"=\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.assignment.groovy\" } }, \"end\": \"(?=,|->)\", \"name\": \"meta.parameter.default.groovy\", \"patterns\": [{ \"include\": \"#groovy-code\" }] }, { \"include\": \"#parameters\" }] }] }] }, { \"begin\": \"(?=[^}])\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#groovy-code\" }] }] }, \"comment-block\": { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.groovy\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.groovy\" }, \"comments\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.groovy\" } }, \"match\": \"/\\\\*\\\\*/\", \"name\": \"comment.block.empty.groovy\" }, { \"include\": \"text.html.javadoc\" }, { \"include\": \"#comment-block\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.groovy\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line.double-slash.groovy\" }] }, \"constants\": { \"patterns\": [{ \"match\": \"\\\\b([A-Z][A-Z0-9_]+)\\\\b\", \"name\": \"constant.other.groovy\" }, { \"match\": \"\\\\b(true|false|null)\\\\b\", \"name\": \"constant.language.groovy\" }] }, \"constructors\": { \"applyEndPatternLast\": 1, \"begin\": \"(?<=;|^)(?=\\\\s*(?:(?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final)\\\\s+)*[A-Z]\\\\w*\\\\()\", \"end\": \"}\", \"patterns\": [{ \"include\": \"#method-content\" }] }, \"enum-values\": { \"patterns\": [{ \"begin\": \"(?<=;|^)\\\\s*\\\\b([A-Z0-9_]+)(?=\\\\s*(?:,|;|}|\\\\(|$))\", \"beginCaptures\": { \"1\": { \"name\": \"constant.enum.name.groovy\" } }, \"end\": \",|;|(?=})|^(?!\\\\s*\\\\w+\\\\s*(?:,|$))\", \"patterns\": [{ \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"name\": \"meta.enum.value.groovy\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.definition.seperator.parameter.groovy\" }, { \"include\": \"#groovy-code\" }] }] }] }, \"groovy\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#class\" }, { \"include\": \"#variables\" }, { \"include\": \"#methods\" }, { \"include\": \"#annotations\" }, { \"include\": \"#groovy-code\" }] }, \"groovy-code\": { \"patterns\": [{ \"include\": \"#groovy-code-minus-map-keys\" }, { \"include\": \"#map-keys\" }] }, \"groovy-code-minus-map-keys\": { \"comment\": \"In some situations, maps can't be declared without enclosing []'s, \\n\t\t\t\ttherefore we create a collection of everything but that\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#annotations\" }, { \"include\": \"#support-functions\" }, { \"include\": \"#keyword-language\" }, { \"include\": \"#values\" }, { \"include\": \"#anonymous-classes-and-new\" }, { \"include\": \"#keyword-operator\" }, { \"include\": \"#types\" }, { \"include\": \"#storage-modifiers\" }, { \"include\": \"#parens\" }, { \"include\": \"#closures\" }, { \"include\": \"#braces\" }] }, \"keyword\": { \"patterns\": [{ \"include\": \"#keyword-operator\" }, { \"include\": \"#keyword-language\" }] }, \"keyword-language\": { \"patterns\": [{ \"match\": \"\\\\b(try|catch|finally|throw)\\\\b\", \"name\": \"keyword.control.exception.groovy\" }, { \"match\": \"\\\\b((?<!\\\\.)(?:return|break|continue|default|do|while|for|switch|if|else))\\\\b\", \"name\": \"keyword.control.groovy\" }, { \"begin\": \"\\\\bcase\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.groovy\" } }, \"end\": \":\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.case-terminator.groovy\" } }, \"name\": \"meta.case.groovy\", \"patterns\": [{ \"include\": \"#groovy-code-minus-map-keys\" }] }, { \"begin\": \"\\\\b(assert)\\\\s\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.assert.groovy\" } }, \"end\": \"$|;|}\", \"name\": \"meta.declaration.assertion.groovy\", \"patterns\": [{ \"match\": \":\", \"name\": \"keyword.operator.assert.expression-seperator.groovy\" }, { \"include\": \"#groovy-code-minus-map-keys\" }] }, { \"match\": \"\\\\b(throws)\\\\b\", \"name\": \"keyword.other.throws.groovy\" }] }, \"keyword-operator\": { \"patterns\": [{ \"match\": \"\\\\b(as)\\\\b\", \"name\": \"keyword.operator.as.groovy\" }, { \"match\": \"\\\\b(in)\\\\b\", \"name\": \"keyword.operator.in.groovy\" }, { \"match\": \"\\\\?\\\\:\", \"name\": \"keyword.operator.elvis.groovy\" }, { \"match\": \"\\\\*\\\\:\", \"name\": \"keyword.operator.spreadmap.groovy\" }, { \"match\": \"\\\\.\\\\.\", \"name\": \"keyword.operator.range.groovy\" }, { \"match\": \"\\\\->\", \"name\": \"keyword.operator.arrow.groovy\" }, { \"match\": \"<<\", \"name\": \"keyword.operator.leftshift.groovy\" }, { \"match\": \"(?<=\\\\S)\\\\.(?=\\\\S)\", \"name\": \"keyword.operator.navigation.groovy\" }, { \"match\": \"(?<=\\\\S)\\\\?\\\\.(?=\\\\S)\", \"name\": \"keyword.operator.safe-navigation.groovy\" }, { \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ternary.groovy\" } }, \"end\": \"(?=$|\\\\)|}|])\", \"name\": \"meta.evaluation.ternary.groovy\", \"patterns\": [{ \"match\": \":\", \"name\": \"keyword.operator.ternary.expression-seperator.groovy\" }, { \"include\": \"#groovy-code-minus-map-keys\" }] }, { \"match\": \"==~\", \"name\": \"keyword.operator.match.groovy\" }, { \"match\": \"=~\", \"name\": \"keyword.operator.find.groovy\" }, { \"match\": \"\\\\b(instanceof)\\\\b\", \"name\": \"keyword.operator.instanceof.groovy\" }, { \"match\": \"(===|==|!=|<=|>=|<=>|<>|<|>|<<)\", \"name\": \"keyword.operator.comparison.groovy\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.groovy\" }, { \"match\": \"(\\\\-\\\\-|\\\\+\\\\+)\", \"name\": \"keyword.operator.increment-decrement.groovy\" }, { \"match\": \"(\\\\-|\\\\+|\\\\*|\\\\/|%)\", \"name\": \"keyword.operator.arithmetic.groovy\" }, { \"match\": \"(!|&&|\\\\|\\\\|)\", \"name\": \"keyword.operator.logical.groovy\" }] }, \"language-variables\": { \"patterns\": [{ \"match\": \"\\\\b(this|super)\\\\b\", \"name\": \"variable.language.groovy\" }] }, \"map-keys\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.other.key.groovy\" }, \"2\": { \"name\": \"punctuation.definition.seperator.key-value.groovy\" } }, \"match\": \"(\\\\w+)\\\\s*(:)\" }] }, \"method-call\": { \"begin\": \"([\\\\w$]+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"meta.method.groovy\" }, \"2\": { \"name\": \"punctuation.definition.method-parameters.begin.groovy\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.method-parameters.end.groovy\" } }, \"name\": \"meta.method-call.groovy\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.definition.seperator.parameter.groovy\" }, { \"include\": \"#groovy-code\" }] }, \"method-content\": { \"patterns\": [{ \"match\": \"\\\\s\" }, { \"include\": \"#annotations\" }, { \"begin\": \"(?=(?:\\\\w|<)[^\\\\(]*\\\\s+(?:[\\\\w$]|<)+\\\\s*\\\\()\", \"end\": \"(?=[\\\\w$]+\\\\s*\\\\()\", \"name\": \"meta.method.return-type.java\", \"patterns\": [{ \"include\": \"#storage-modifiers\" }, { \"include\": \"#types\" }] }, { \"begin\": \"([\\\\w$]+)\\\\s*\\\\(\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.java\" } }, \"end\": \"\\\\)\", \"name\": \"meta.definition.method.signature.java\", \"patterns\": [{ \"begin\": \"(?=[^)])\", \"end\": \"(?=\\\\))\", \"name\": \"meta.method.parameters.groovy\", \"patterns\": [{ \"begin\": \"(?=[^,)])\", \"end\": \"(?=,|\\\\))\", \"name\": \"meta.method.parameter.groovy\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.definition.separator.groovy\" }, { \"begin\": \"=\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.assignment.groovy\" } }, \"end\": \"(?=,|\\\\))\", \"name\": \"meta.parameter.default.groovy\", \"patterns\": [{ \"include\": \"#groovy-code\" }] }, { \"include\": \"#parameters\" }] }] }] }, { \"begin\": \"(?=<)\", \"end\": \"(?=\\\\s)\", \"name\": \"meta.method.paramerised-type.groovy\", \"patterns\": [{ \"begin\": \"<\", \"end\": \">\", \"name\": \"storage.type.parameters.groovy\", \"patterns\": [{ \"include\": \"#types\" }, { \"match\": \",\", \"name\": \"punctuation.definition.seperator.groovy\" }] }] }, { \"begin\": \"throws\", \"beginCaptures\": { \"0\": { \"name\": \"storage.modifier.groovy\" } }, \"end\": \"(?={|;)|^(?=\\\\s*(?:[^{\\\\s]|$))\", \"name\": \"meta.throwables.groovy\", \"patterns\": [{ \"include\": \"#object-types\" }] }, { \"begin\": \"{\", \"end\": \"(?=})\", \"name\": \"meta.method.body.java\", \"patterns\": [{ \"include\": \"#groovy-code\" }] }] }, \"methods\": { \"applyEndPatternLast\": 1, \"begin\": \"(?:(?<=;|^|{)(?=\\\\s*(?:(?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final)|(?:def)|(?:(?:(?:void|boolean|byte|char|short|int|float|long|double)|(?:@?(?:[a-zA-Z]\\\\w*\\\\.)*[A-Z]+\\\\w*))[\\\\[\\\\]]*(?:<.*>)?))\\\\s+([^=]+\\\\s+)?\\\\w+\\\\s*\\\\())\", \"end\": \"}|(?=[^{])\", \"name\": \"meta.definition.method.groovy\", \"patterns\": [{ \"include\": \"#method-content\" }] }, \"nest_curly\": { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.scope.groovy\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#nest_curly\" }] }, \"numbers\": { \"patterns\": [{ \"match\": \"((0(x|X)[0-9a-fA-F]*)|(\\\\+|-)?\\\\b((\\\\d+\\\\.?\\\\d*)|(\\\\.\\\\d+))((e|E)(\\\\+|-)?\\\\d+)?)([LlFfUuDdg]|UL|ul)?\\\\b\", \"name\": \"constant.numeric.groovy\" }] }, \"object-types\": { \"patterns\": [{ \"begin\": \"\\\\b((?:[a-z]\\\\w*\\\\.)*(?:[A-Z]+\\\\w*[a-z]+\\\\w*|UR[LI]))<\", \"end\": \">|[^\\\\w\\\\s,\\\\?<\\\\[\\\\]]\", \"name\": \"storage.type.generic.groovy\", \"patterns\": [{ \"include\": \"#object-types\" }, { \"begin\": \"<\", \"comment\": \"This is just to support <>'s with no actual type prefix\", \"end\": \">|[^\\\\w\\\\s,\\\\[\\\\]<]\", \"name\": \"storage.type.generic.groovy\" }] }, { \"begin\": \"\\\\b((?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*[a-z]+\\\\w*)(?=\\\\[)\", \"end\": \"(?=[^\\\\]\\\\s])\", \"name\": \"storage.type.object.array.groovy\", \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#groovy\" }] }] }, { \"match\": \"\\\\b(?:[a-zA-Z]\\\\w*\\\\.)*(?:[A-Z]+\\\\w*[a-z]+\\\\w*|UR[LI])\\\\b\", \"name\": \"storage.type.groovy\" }] }, \"object-types-inherited\": { \"patterns\": [{ \"begin\": \"\\\\b((?:[a-zA-Z]\\\\w*\\\\.)*[A-Z]+\\\\w*[a-z]+\\\\w*)<\", \"end\": \">|[^\\\\w\\\\s,\\\\?<\\\\[\\\\]]\", \"name\": \"entity.other.inherited-class.groovy\", \"patterns\": [{ \"include\": \"#object-types-inherited\" }, { \"begin\": \"<\", \"comment\": \"This is just to support <>'s with no actual type prefix\", \"end\": \">|[^\\\\w\\\\s,\\\\[\\\\]<]\", \"name\": \"storage.type.generic.groovy\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.dereference.groovy\" } }, \"match\": \"\\\\b(?:[a-zA-Z]\\\\w*(\\\\.))*[A-Z]+\\\\w*[a-z]+\\\\w*\\\\b\", \"name\": \"entity.other.inherited-class.groovy\" }] }, \"parameters\": { \"patterns\": [{ \"include\": \"#annotations\" }, { \"include\": \"#storage-modifiers\" }, { \"include\": \"#types\" }, { \"match\": \"\\\\w+\", \"name\": \"variable.parameter.method.groovy\" }] }, \"parens\": { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#groovy-code\" }] }, \"primitive-arrays\": { \"patterns\": [{ \"match\": \"\\\\b(?:void|boolean|byte|char|short|int|float|long|double)(\\\\[\\\\])*\\\\b\", \"name\": \"storage.type.primitive.array.groovy\" }] }, \"primitive-types\": { \"patterns\": [{ \"match\": \"\\\\b(?:void|boolean|byte|char|short|int|float|long|double)\\\\b\", \"name\": \"storage.type.primitive.groovy\" }] }, \"regexp\": { \"patterns\": [{ \"begin\": \"/(?=[^/]+/([^>]|$))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.regexp.begin.groovy\" } }, \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.regexp.end.groovy\" } }, \"name\": \"string.regexp.groovy\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.groovy\" }] }, { \"begin\": '~\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.regexp.begin.groovy\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.regexp.end.groovy\" } }, \"name\": \"string.regexp.compiled.groovy\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.groovy\" }] }] }, \"storage-modifiers\": { \"patterns\": [{ \"match\": \"\\\\b(private|protected|public)\\\\b\", \"name\": \"storage.modifier.access-control.groovy\" }, { \"match\": \"\\\\b(static)\\\\b\", \"name\": \"storage.modifier.static.groovy\" }, { \"match\": \"\\\\b(final)\\\\b\", \"name\": \"storage.modifier.final.groovy\" }, { \"match\": \"\\\\b(native|synchronized|abstract|threadsafe|transient)\\\\b\", \"name\": \"storage.modifier.other.groovy\" }] }, \"string-quoted-double\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.groovy\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.groovy\" } }, \"name\": \"string.quoted.double.groovy\", \"patterns\": [{ \"include\": \"#string-quoted-double-contents\" }] }, \"string-quoted-double-contents\": { \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.groovy\" }, { \"applyEndPatternLast\": 1, \"begin\": \"\\\\$\\\\w\", \"end\": \"(?=\\\\W)\", \"name\": \"variable.other.interpolated.groovy\", \"patterns\": [{ \"match\": \"\\\\w\", \"name\": \"variable.other.interpolated.groovy\" }, { \"match\": \"\\\\.\", \"name\": \"keyword.other.dereference.groovy\" }] }, { \"begin\": \"\\\\$\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.embedded.groovy\" } }, \"end\": \"\\\\}\", \"name\": \"source.groovy.embedded.source\", \"patterns\": [{ \"include\": \"#nest_curly\" }] }] }, \"string-quoted-double-multiline\": { \"begin\": '\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.groovy\" } }, \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.groovy\" } }, \"name\": \"string.quoted.double.multiline.groovy\", \"patterns\": [{ \"include\": \"#string-quoted-double-contents\" }] }, \"string-quoted-single\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.groovy\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.groovy\" } }, \"name\": \"string.quoted.single.groovy\", \"patterns\": [{ \"include\": \"#string-quoted-single-contents\" }] }, \"string-quoted-single-contents\": { \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.groovy\" }] }, \"string-quoted-single-multiline\": { \"begin\": \"'''\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.groovy\" } }, \"end\": \"'''\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.groovy\" } }, \"name\": \"string.quoted.single.multiline.groovy\", \"patterns\": [{ \"include\": \"#string-quoted-single-contents\" }] }, \"strings\": { \"patterns\": [{ \"include\": \"#string-quoted-double-multiline\" }, { \"include\": \"#string-quoted-single-multiline\" }, { \"include\": \"#string-quoted-double\" }, { \"include\": \"#string-quoted-single\" }, { \"include\": \"#regexp\" }] }, \"structures\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.structure.begin.groovy\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.structure.end.groovy\" } }, \"name\": \"meta.structure.groovy\", \"patterns\": [{ \"include\": \"#groovy-code\" }, { \"match\": \",\", \"name\": \"punctuation.definition.separator.groovy\" }] }, \"support-functions\": { \"patterns\": [{ \"match\": \"\\\\b(?:sprintf|print(?:f|ln)?)\\\\b\", \"name\": \"support.function.print.groovy\" }, { \"match\": \"\\\\b(?:shouldFail|fail(?:NotEquals)?|ass(?:ume|ert(?:S(?:cript|ame)|N(?:ot(?:Same|Null)|ull)|Contains|T(?:hat|oString|rue)|Inspect|Equals|False|Length|ArrayEquals)))\\\\b\", \"name\": \"support.function.testing.groovy\" }] }, \"types\": { \"patterns\": [{ \"match\": \"\\\\b(def)\\\\b\", \"name\": \"storage.type.def.groovy\" }, { \"include\": \"#primitive-types\" }, { \"include\": \"#primitive-arrays\" }, { \"include\": \"#object-types\" }] }, \"values\": { \"patterns\": [{ \"include\": \"#language-variables\" }, { \"include\": \"#strings\" }, { \"include\": \"#numbers\" }, { \"include\": \"#constants\" }, { \"include\": \"#types\" }, { \"include\": \"#structures\" }, { \"include\": \"#method-call\" }] }, \"variables\": { \"applyEndPatternLast\": 1, \"patterns\": [{ \"begin\": \"(?:(?=(?:(?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final)|(?:def)|(?:void|boolean|byte|char|short|int|float|long|double)|(?:(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*))\\\\s+[\\\\w\\\\d_<>\\\\[\\\\],\\\\s]+(?:=|$)))\", \"end\": \";|$\", \"name\": \"meta.definition.variable.groovy\", \"patterns\": [{ \"match\": \"\\\\s\" }, { \"captures\": { \"1\": { \"name\": \"constant.variable.groovy\" } }, \"match\": \"([A-Z_0-9]+)\\\\s+(?=\\\\=)\" }, { \"captures\": { \"1\": { \"name\": \"meta.definition.variable.name.groovy\" } }, \"match\": \"(\\\\w[^\\\\s,]*)\\\\s+(?=\\\\=)\" }, { \"begin\": \"=\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.assignment.groovy\" } }, \"end\": \"$\", \"patterns\": [{ \"include\": \"#groovy-code\" }] }, { \"captures\": { \"1\": { \"name\": \"meta.definition.variable.name.groovy\" } }, \"match\": \"(\\\\w[^\\\\s=]*)(?=\\\\s*($|;))\" }, { \"include\": \"#groovy-code\" }] }] } }, \"scopeName\": \"source.groovy\" });\nvar groovy = [\n  lang\n];\n\nexport { groovy as default };\n"],"names":["lang","groovy"],"mappings":"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","x_google_ignoreList":[0]}