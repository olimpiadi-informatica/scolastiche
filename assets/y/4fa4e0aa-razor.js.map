{"version":3,"file":"4fa4e0aa-razor.js","sources":["../../../node_modules/shiki/dist/langs/razor.mjs"],"sourcesContent":["import html from './html.mjs';\nimport csharp from './csharp.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"ASP.NET Razor\", \"fileTypes\": [\"razor\", \"cshtml\"], \"injections\": { \"string.quoted.double.html\": { \"patterns\": [{ \"include\": \"#explicit-razor-expression\" }, { \"include\": \"#implicit-expression\" }] }, \"string.quoted.single.html\": { \"patterns\": [{ \"include\": \"#explicit-razor-expression\" }, { \"include\": \"#implicit-expression\" }] } }, \"name\": \"razor\", \"patterns\": [{ \"include\": \"#razor-control-structures\" }, { \"include\": \"text.html.basic\" }], \"repository\": { \"addTagHelper-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.addTagHelper\" }, \"3\": { \"patterns\": [{ \"include\": \"#tagHelper-directive-argument\" }] } }, \"match\": \"(@)(addTagHelper)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"attribute-directive\": { \"begin\": \"(@)(attribute)\\\\b\\\\s+\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.attribute\" } }, \"end\": \"(?<=\\\\])|$\", \"name\": \"meta.directive\", \"patterns\": [{ \"include\": \"source.cs#attribute-section\" }] }, \"await-prefix\": { \"match\": \"(await)\\\\s+\", \"name\": \"keyword.other.await.cs\" }, \"balanced-brackets-csharp\": { \"begin\": \"(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.squarebracket.open.cs\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.squarebracket.close.cs\" } }, \"name\": \"razor.test.balanced.brackets\", \"patterns\": [{ \"include\": \"source.cs\" }] }, \"balanced-parenthesis-csharp\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.open.cs\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.close.cs\" } }, \"name\": \"razor.test.balanced.parenthesis\", \"patterns\": [{ \"include\": \"source.cs\" }] }, \"catch-clause\": { \"begin\": \"(?:^|(?<=}))\\\\s*(catch)\\\\b\\\\s*?(?=[\\\\n({])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.try.catch.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.catch.razor\", \"patterns\": [{ \"include\": \"#catch-condition\" }, { \"include\": \"source.cs#when-clause\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"catch-condition\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.parenthesis.open.cs\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.parenthesis.close.cs\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] }, \"6\": { \"name\": \"entity.name.variable.local.cs\" } }, \"match\": \"(?<type-name>(?:(?:(?:(?<identifier>@?[_A-Za-z][_0-9A-Za-z]*)\\\\s*::\\\\s*)?(?<name-and-type-args>\\\\g<identifier>\\\\s*(?<type-args>\\\\s*<(?:[^<>]|\\\\g<type-args>)+>\\\\s*)?)(?:\\\\s*\\\\.\\\\s*\\\\g<name-and-type-args>)*|(?<tuple>\\\\s*\\\\((?:[^()]|\\\\g<tuple>)+\\\\)))(?:\\\\s*\\\\?\\\\s*)?(?:\\\\s*\\\\[(?:\\\\s*,\\\\s*)*\\\\]\\\\s*)*))\\\\s*(?:(\\\\g<identifier>)\\\\b)?\" }] }, \"code-directive\": { \"begin\": \"(@)(code)((?=\\\\{)|\\\\s+)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.code\" } }, \"end\": \"(?<=})|\\\\s\", \"patterns\": [{ \"include\": \"#directive-codeblock\" }] }, \"csharp-code-block\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.curlybrace.open.cs\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.curlybrace.close.cs\" } }, \"name\": \"meta.structure.razor.csharp.codeblock\", \"patterns\": [{ \"include\": \"#razor-codeblock-body\" }] }, \"csharp-condition\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.open.cs\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.close.cs\" } }, \"patterns\": [{ \"include\": \"source.cs#local-variable-declaration\" }, { \"include\": \"source.cs#expression\" }, { \"include\": \"source.cs#punctuation-comma\" }, { \"include\": \"source.cs#punctuation-semicolon\" }] }, \"directive-codeblock\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.open\" } }, \"contentName\": \"source.cs\", \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.close\" } }, \"name\": \"meta.structure.razor.directive.codeblock\", \"patterns\": [{ \"include\": \"source.cs#class-or-struct-members\" }] }, \"directive-markupblock\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.open\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.close\" } }, \"name\": \"meta.structure.razor.directive.markblock\", \"patterns\": [{ \"include\": \"$self\" }] }, \"directives\": { \"patterns\": [{ \"include\": \"#code-directive\" }, { \"include\": \"#functions-directive\" }, { \"include\": \"#page-directive\" }, { \"include\": \"#addTagHelper-directive\" }, { \"include\": \"#removeTagHelper-directive\" }, { \"include\": \"#tagHelperPrefix-directive\" }, { \"include\": \"#model-directive\" }, { \"include\": \"#inherits-directive\" }, { \"include\": \"#implements-directive\" }, { \"include\": \"#namespace-directive\" }, { \"include\": \"#inject-directive\" }, { \"include\": \"#attribute-directive\" }, { \"include\": \"#section-directive\" }, { \"include\": \"#layout-directive\" }, { \"include\": \"#using-directive\" }, { \"include\": \"#rendermode-directive\" }, { \"include\": \"#preservewhitespace-directive\" }, { \"include\": \"#typeparam-directive\" }] }, \"do-statement\": { \"begin\": \"(?:(@))(do)\\\\b\\\\s\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.do.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.do.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"do-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(do)\\\\b\\\\s\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.do.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.do.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"else-part\": { \"begin\": \"(?:^|(?<=}))\\\\s*(else)\\\\b\\\\s*?(?: (if))?\\\\s*?(?=[\\\\n({])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.else.cs\" }, \"2\": { \"name\": \"keyword.control.conditional.if.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.else.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"escaped-transition\": { \"match\": \"@@\", \"name\": \"constant.character.escape.razor.transition\" }, \"explicit-razor-expression\": { \"begin\": \"(@)\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.cshtml\" }, \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.cshtml\" } }, \"name\": \"meta.expression.explicit.cshtml\", \"patterns\": [{ \"include\": \"source.cs#expression\" }] }, \"finally-clause\": { \"begin\": \"(?:^|(?<=}))\\\\s*(finally)\\\\b\\\\s*?(?=[\\\\n{])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.try.finally.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.finally.razor\", \"patterns\": [{ \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"for-statement\": { \"begin\": \"(?:(@))(for)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.for.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.for.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"for-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(for)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.for.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.for.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"foreach-condition\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.parenthesis.open.cs\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.parenthesis.close.cs\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.var.cs\" }, \"2\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] }, \"7\": { \"name\": \"entity.name.variable.local.cs\" }, \"8\": { \"name\": \"keyword.control.loop.in.cs\" } }, \"match\": \"(?:(\\\\bvar\\\\b)|(?<type-name>(?:(?:(?:(?<identifier>@?[_A-Za-z][_0-9A-Za-z]*)\\\\s*::\\\\s*)?(?<name-and-type-args>\\\\g<identifier>\\\\s*(?<type-args>\\\\s*<(?:[^<>]|\\\\g<type-args>)+>\\\\s*)?)(?:\\\\s*\\\\.\\\\s*\\\\g<name-and-type-args>)*|(?<tuple>\\\\s*\\\\((?:[^()]|\\\\g<tuple>)+\\\\)))(?:\\\\s*\\\\?\\\\s*)?(?:\\\\s*\\\\[(?:\\\\s*,\\\\s*)*\\\\]\\\\s*)*)))\\\\s+(\\\\g<identifier>)\\\\s+\\\\b(in)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.var.cs\" }, \"2\": { \"patterns\": [{ \"include\": \"source.cs#tuple-declaration-deconstruction-element-list\" }] }, \"3\": { \"name\": \"keyword.control.loop.in.cs\" } }, \"match\": \"(?:\\\\b(var)\\\\b\\\\s*)?(?<tuple>\\\\((?:[^()]|\\\\g<tuple>)+\\\\))\\\\s+\\\\b(in)\\\\b\" }, { \"include\": \"source.cs#expression\" }] }, \"foreach-statement\": { \"begin\": \"(?:(@)(await\\\\s+)?)(foreach)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#await-prefix\" }] }, \"3\": { \"name\": \"keyword.control.loop.foreach.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.foreach.razor\", \"patterns\": [{ \"include\": \"#foreach-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"foreach-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@)(await\\\\s+)?)(foreach)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"patterns\": [{ \"include\": \"#await-prefix\" }] }, \"3\": { \"name\": \"keyword.control.loop.foreach.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.foreach.razor\", \"patterns\": [{ \"include\": \"#foreach-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"functions-directive\": { \"begin\": \"(@)(functions)((?=\\\\{)|\\\\s+)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.functions\" } }, \"end\": \"(?<=})|\\\\s\", \"patterns\": [{ \"include\": \"#directive-codeblock\" }] }, \"if-statement\": { \"begin\": \"(?:(@))(if)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.conditional.if.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.if.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"if-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(if)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.conditional.if.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.if.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"implements-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.implements\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(implements)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"implicit-expression\": { \"begin\": \"(?<![A-Za-z0-9A-Za-z])(@)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] } }, \"contentName\": \"source.cs\", \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"name\": \"meta.expression.implicit.cshtml\", \"patterns\": [{ \"include\": \"#await-prefix\" }, { \"include\": \"#implicit-expression-body\" }] }, \"implicit-expression-accessor\": { \"match\": \"(?<=\\\\.)[_A-Za-z][_0-9A-Za-z]*\", \"name\": \"variable.other.object.property.cs\" }, \"implicit-expression-accessor-start\": { \"begin\": \"([_A-Za-z][_0-9A-Za-z]*)\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.object.cs\" } }, \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"patterns\": [{ \"include\": \"#implicit-expression-continuation\" }] }, \"implicit-expression-body\": { \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"patterns\": [{ \"include\": \"#implicit-expression-invocation-start\" }, { \"include\": \"#implicit-expression-accessor-start\" }] }, \"implicit-expression-continuation\": { \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"patterns\": [{ \"include\": \"#balanced-parenthesis-csharp\" }, { \"include\": \"#balanced-brackets-csharp\" }, { \"include\": \"#implicit-expression-invocation\" }, { \"include\": \"#implicit-expression-accessor\" }, { \"include\": \"#implicit-expression-extension\" }] }, \"implicit-expression-dot-operator\": { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.cs\" } }, \"match\": \"(\\\\.)(?=[_A-Za-z][_0-9A-Za-z]*)\" }, \"implicit-expression-invocation\": { \"match\": \"(?<=\\\\.)[_A-Za-z][_0-9A-Za-z]*(?=\\\\()\", \"name\": \"entity.name.function.cs\" }, \"implicit-expression-invocation-start\": { \"begin\": \"([_A-Za-z][_0-9A-Za-z]*)(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.cs\" } }, \"end\": `(?=[\\\\s<>{})\\\\]'\"])`, \"patterns\": [{ \"include\": \"#implicit-expression-continuation\" }] }, \"implicit-expression-null-conditional-operator\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.null-conditional.cs\" } }, \"match\": \"(\\\\?)(?=[.\\\\[])\" }, \"implicit-expression-null-forgiveness-operator\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.cs\" } }, \"match\": \"(!)(?=(?:\\\\.[_A-Za-z][_0-9A-Za-z]*)|\\\\?|[\\\\[(])\" }, \"implicit-expression-operator\": { \"patterns\": [{ \"include\": \"#implicit-expression-dot-operator\" }, { \"include\": \"#implicit-expression-null-conditional-operator\" }, { \"include\": \"#implicit-expression-null-forgiveness-operator\" }] }, \"inherits-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.inherits\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(inherits)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"inject-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.inject\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] }, \"4\": { \"name\": \"entity.name.variable.property.cs\" } }, \"match\": \"(@)(inject)\\\\s*([\\\\S\\\\s]+?)?\\\\s*([_A-Za-z][_0-9A-Za-z]*)?\\\\s*(?=$)\", \"name\": \"meta.directive\" }, \"layout-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.layout\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(layout)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"lock-statement\": { \"begin\": \"(?:(@))(lock)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.lock.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.lock.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"lock-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(lock)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.lock.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.lock.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"model-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.model\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(model)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"namespace-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.namespace\" }, \"3\": { \"patterns\": [{ \"include\": \"#namespace-directive-argument\" }] } }, \"match\": \"(@)(namespace)\\\\s+([^\\\\s]+)?\", \"name\": \"meta.directive\" }, \"namespace-directive-argument\": { \"captures\": { \"1\": { \"name\": \"entity.name.type.namespace.cs\" }, \"2\": { \"name\": \"punctuation.accessor.cs\" } }, \"match\": \"([_A-Za-z][_0-9A-Za-z]*)(\\\\.)?\" }, \"non-void-tag\": { \"begin\": \"(?=<(!)?([^/\\\\s>]+)(\\\\s|/?>))\", \"end\": \"(</)(\\\\2)\\\\s*(>)|(/>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"entity.name.tag.html\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.html\" }, \"4\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"patterns\": [{ \"begin\": \"(<)(!)?([^/\\\\s>]+)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"constant.character.escape.razor.tagHelperOptOut\" }, \"3\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"(?=/?>)\", \"patterns\": [{ \"include\": \"#razor-control-structures\" }, { \"include\": \"text.html.basic#attribute\" }] }, { \"begin\": \">\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"end\": \"(?=</)\", \"patterns\": [{ \"include\": \"#wellformed-html\" }, { \"include\": \"$self\" }] }] }, \"optionally-transitioned-csharp-control-structures\": { \"patterns\": [{ \"include\": \"#using-statement-with-optional-transition\" }, { \"include\": \"#if-statement-with-optional-transition\" }, { \"include\": \"#else-part\" }, { \"include\": \"#foreach-statement-with-optional-transition\" }, { \"include\": \"#for-statement-with-optional-transition\" }, { \"include\": \"#while-statement\" }, { \"include\": \"#switch-statement-with-optional-transition\" }, { \"include\": \"#lock-statement-with-optional-transition\" }, { \"include\": \"#do-statement-with-optional-transition\" }, { \"include\": \"#try-statement-with-optional-transition\" }] }, \"optionally-transitioned-razor-control-structures\": { \"patterns\": [{ \"include\": \"#razor-comment\" }, { \"include\": \"#razor-codeblock\" }, { \"include\": \"#explicit-razor-expression\" }, { \"include\": \"#escaped-transition\" }, { \"include\": \"#directives\" }, { \"include\": \"#optionally-transitioned-csharp-control-structures\" }, { \"include\": \"#implicit-expression\" }] }, \"page-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.page\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#string-literal\" }] } }, \"match\": \"(@)(page)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"preservewhitespace-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.preservewhitespace\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#boolean-literal\" }] } }, \"match\": \"(@)(preservewhitespace)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"razor-codeblock\": { \"begin\": \"(@)(\\\\{)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.codeblock.open\" } }, \"contentName\": \"source.cs\", \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.razor.directive.codeblock.close\" } }, \"name\": \"meta.structure.razor.codeblock\", \"patterns\": [{ \"include\": \"#razor-codeblock-body\" }] }, \"razor-codeblock-body\": { \"patterns\": [{ \"include\": \"#text-tag\" }, { \"include\": \"#wellformed-html\" }, { \"include\": \"#razor-single-line-markup\" }, { \"include\": \"#optionally-transitioned-razor-control-structures\" }, { \"include\": \"source.cs\" }] }, \"razor-comment\": { \"begin\": \"(@)(\\\\*)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.comment.star\" } }, \"contentName\": \"comment.block.razor\", \"end\": \"(\\\\*)(@)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.razor.comment.star\" }, \"2\": { \"patterns\": [{ \"include\": \"#transition\" }] } }, \"name\": \"meta.comment.razor\" }, \"razor-control-structures\": { \"patterns\": [{ \"include\": \"#razor-comment\" }, { \"include\": \"#razor-codeblock\" }, { \"include\": \"#explicit-razor-expression\" }, { \"include\": \"#escaped-transition\" }, { \"include\": \"#directives\" }, { \"include\": \"#transitioned-csharp-control-structures\" }, { \"include\": \"#implicit-expression\" }] }, \"razor-single-line-markup\": { \"captures\": { \"1\": { \"name\": \"keyword.control.razor.singleLineMarkup\" }, \"2\": { \"patterns\": [{ \"include\": \"#razor-control-structures\" }, { \"include\": \"text.html.basic\" }] } }, \"match\": \"(\\\\@:)([^$]*)$\" }, \"removeTagHelper-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.removeTagHelper\" }, \"3\": { \"patterns\": [{ \"include\": \"#tagHelper-directive-argument\" }] } }, \"match\": \"(@)(removeTagHelper)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"rendermode-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.rendermode\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(rendermode)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"section-directive\": { \"begin\": \"(@)(section)\\\\b\\\\s+([_A-Za-z][_0-9A-Za-z]*)?\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.section\" }, \"3\": { \"name\": \"variable.other.razor.directive.sectionName\" } }, \"end\": \"(?<=})\", \"name\": \"meta.directive.block\", \"patterns\": [{ \"include\": \"#directive-markupblock\" }] }, \"switch-code-block\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.curlybrace.open.cs\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.curlybrace.close.cs\" } }, \"name\": \"meta.structure.razor.csharp.codeblock.switch\", \"patterns\": [{ \"include\": \"source.cs#switch-label\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"switch-statement\": { \"begin\": \"(?:(@))(switch)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.switch.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.switch.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#switch-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"switch-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(switch)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.switch.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.switch.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#switch-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"tagHelper-directive-argument\": { \"patterns\": [{ \"include\": \"source.cs#string-literal\" }, { \"include\": \"#unquoted-string-argument\" }] }, \"tagHelperPrefix-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.tagHelperPrefix\" }, \"3\": { \"patterns\": [{ \"include\": \"#tagHelper-directive-argument\" }] } }, \"match\": \"(@)(tagHelperPrefix)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"text-tag\": { \"begin\": \"(<text\\\\s*>)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.cshtml.transition.textTag.open\" } }, \"end\": \"(</text>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.cshtml.transition.textTag.close\" } }, \"patterns\": [{ \"include\": \"#wellformed-html\" }, { \"include\": \"$self\" }] }, \"transition\": { \"match\": \"@\", \"name\": \"keyword.control.cshtml.transition\" }, \"transitioned-csharp-control-structures\": { \"patterns\": [{ \"include\": \"#using-statement\" }, { \"include\": \"#if-statement\" }, { \"include\": \"#else-part\" }, { \"include\": \"#foreach-statement\" }, { \"include\": \"#for-statement\" }, { \"include\": \"#while-statement\" }, { \"include\": \"#switch-statement\" }, { \"include\": \"#lock-statement\" }, { \"include\": \"#do-statement\" }, { \"include\": \"#try-statement\" }] }, \"try-block\": { \"begin\": \"(?:(@))(try)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.try.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.try.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"try-block-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(try)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.try.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.try.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"try-statement\": { \"patterns\": [{ \"include\": \"#try-block\" }, { \"include\": \"#catch-clause\" }, { \"include\": \"#finally-clause\" }] }, \"try-statement-with-optional-transition\": { \"patterns\": [{ \"include\": \"#try-block-with-optional-transition\" }, { \"include\": \"#catch-clause\" }, { \"include\": \"#finally-clause\" }] }, \"typeparam-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.razor.directive.typeparam\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(@)(typeparam)\\\\s+([^$]+)?\", \"name\": \"meta.directive\" }, \"unquoted-string-argument\": { \"match\": \"[^$]+\", \"name\": \"string.quoted.double.cs\" }, \"using-alias-directive\": { \"captures\": { \"1\": { \"name\": \"entity.name.type.alias.cs\" }, \"2\": { \"name\": \"keyword.operator.assignment.cs\" }, \"3\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"([_A-Za-z][_0-9A-Za-z]*)\\\\b\\\\s*(=)\\\\s*(.+)\\\\s*\" }, \"using-directive\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.using.cs\" }, \"3\": { \"patterns\": [{ \"include\": \"#using-static-directive\" }, { \"include\": \"#using-alias-directive\" }, { \"include\": \"#using-standard-directive\" }] }, \"4\": { \"name\": \"keyword.control.razor.optionalSemicolon\" } }, \"match\": \"(@)(using)\\\\b\\\\s+(?!\\\\(|\\\\s)(.+?)?(;)?$\", \"name\": \"meta.directive\" }, \"using-standard-directive\": { \"captures\": { \"1\": { \"name\": \"entity.name.type.namespace.cs\" } }, \"match\": \"([_A-Za-z][_0-9A-Za-z]*)\\\\s*\" }, \"using-statement\": { \"begin\": \"(?:(@))(using)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.using.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.using.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"using-statement-with-optional-transition\": { \"begin\": \"(?:^\\\\s*|(@))(using)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.other.using.cs\" } }, \"end\": \"(?<=})\", \"name\": \"meta.statement.using.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] }, \"using-static-directive\": { \"captures\": { \"1\": { \"name\": \"keyword.other.static.cs\" }, \"2\": { \"patterns\": [{ \"include\": \"source.cs#type\" }] } }, \"match\": \"(static)\\\\b\\\\s+(.+)\" }, \"void-tag\": { \"begin\": \"(?i)(<)(!)?(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)(?=\\\\s|/?>)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.html\" }, \"2\": { \"name\": \"constant.character.escape.razor.tagHelperOptOut\" }, \"3\": { \"name\": \"entity.name.tag.html\" } }, \"end\": \"/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.html\" } }, \"name\": \"meta.tag.structure.$3.void.html\", \"patterns\": [{ \"include\": \"text.html.basic#attribute\" }] }, \"wellformed-html\": { \"patterns\": [{ \"include\": \"#void-tag\" }, { \"include\": \"#non-void-tag\" }] }, \"while-statement\": { \"begin\": \"(?:(@)|^\\\\s*|(?<=})\\\\s*)(while)\\\\b\\\\s*(?=\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#transition\" }] }, \"2\": { \"name\": \"keyword.control.loop.while.cs\" } }, \"end\": \"(?<=})|(;)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.statement.cs\" } }, \"name\": \"meta.statement.while.razor\", \"patterns\": [{ \"include\": \"#csharp-condition\" }, { \"include\": \"#csharp-code-block\" }, { \"include\": \"#razor-codeblock-body\" }] } }, \"scopeName\": \"text.aspnetcorerazor\", \"embeddedLangs\": [\"html\", \"csharp\"] });\nvar razor = [\n  ...html,\n  ...csharp,\n  lang\n];\n\nexport { razor as default };\n"],"names":["lang","razor","html","csharp"],"mappings":"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","x_google_ignoreList":[0]}