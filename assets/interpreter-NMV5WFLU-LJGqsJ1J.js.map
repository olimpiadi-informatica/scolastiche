{"version":3,"file":"interpreter-NMV5WFLU-LJGqsJ1J.js","sources":["../../node_modules/vm-browserify/index.js","../../node_modules/js-interpreter/lib/js-interpreter.js","../../node_modules/@olinfo/quizms/dist/interpreter-NMV5WFLU.js"],"sourcesContent":["var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JSInterpreter\"] = factory();\n\telse\n\t\troot[\"JSInterpreter\"] = factory();\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./original-repo/interpreter.js\":\n/*!**************************************!*\\\n  !*** ./original-repo/interpreter.js ***!\n  \\**************************************/\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @license\n * Copyright 2013 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Interpreting JavaScript in JavaScript.\n * @author fraser@google.com (Neil Fraser)\n */\n\n\n/**\n * Create a new interpreter.\n * @param {string|!Object} code Raw JavaScript text or AST.\n * @param {Function=} opt_initFunc Optional initialization function.  Used to\n *     define APIs.  When called it is passed the interpreter object and the\n *     global scope object.\n * @constructor\n */\nvar Interpreter = function(code, opt_initFunc) {\n  if (typeof code === 'string') {\n    code = this.parse_(code, 'code');\n  }\n  // Get a handle on Acorn's node_t object.\n  var nodeConstructor = code.constructor;\n  this.newNode = function() {\n    return new nodeConstructor({'options': {}});\n  };\n  // Clone the root 'Program' node so that the AST may be modified.\n  var ast = this.newNode();\n  for (var prop in code) {\n    ast[prop] = (prop === 'body') ? code[prop].slice() : code[prop];\n  }\n  this.ast = ast;\n  /**\n   * Sorted array of setTimeout/setInterval tasks waiting to execute.\n   */\n  this.tasks = [];\n  this.initFunc_ = opt_initFunc;\n  /**\n   * True if the interpreter is paused while waiting for an async function.\n   */\n  this.paused_ = false;\n  this.polyfills_ = [];\n  // Unique identifier for native functions.  Used in serialization.\n  this.functionCounter_ = 0;\n  // Map node types to our step function names; a property lookup is faster\n  // than string concatenation with \"step\" prefix.\n  this.stepFunctions_ = Object.create(null);\n  var stepMatch = /^step([A-Z]\\w*)$/;\n  var m;\n  for (var methodName in this) {\n    if ((typeof this[methodName] === 'function') &&\n        (m = methodName.match(stepMatch))) {\n      this.stepFunctions_[m[1]] = this[methodName].bind(this);\n    }\n  }\n  // Create and initialize the global scope.\n  this.globalScope = this.createScope(this.ast, null);\n  this.globalObject = this.globalScope.object;\n  // Run the polyfills.\n  this.ast = this.parse_(this.polyfills_.join('\\n'), 'polyfills');\n  this.polyfills_ = undefined;  // Allow polyfill strings to garbage collect.\n  Interpreter.stripLocations_(this.ast, undefined, undefined);\n  var state = new Interpreter.State(this.ast, this.globalScope);\n  state.done = false;\n  this.stateStack = [state];\n  this.run();\n  this.value = undefined;\n  // Point at the main program.\n  this.ast = ast;\n  state = new Interpreter.State(this.ast, this.globalScope);\n  state.done = false;\n  this.stateStack.length = 0;\n  this.stateStack[0] = state;\n};\n\n/**\n * Completion Value Types.\n * @enum {number}\n */\nInterpreter.Completion = {\n  NORMAL: 0,\n  BREAK: 1,\n  CONTINUE: 2,\n  RETURN: 3,\n  THROW: 4,\n};\n\n/**\n * Interpreter status values.\n * @enum {number}\n */\nInterpreter.Status = {\n  'DONE': 0,\n  'STEP': 1,\n  'TASK': 2,\n  'ASYNC': 3,\n};\n\n/**\n * @const {!Object} Configuration used for all Acorn parsing.\n */\nInterpreter.PARSE_OPTIONS = {\n  locations: true,\n  ecmaVersion: 5,  // Needed in the event a version > 0.5.0 of Acorn is used.\n};\n\n/**\n * Property descriptor of readonly properties.\n */\nInterpreter.READONLY_DESCRIPTOR = {\n  'configurable': true,\n  'enumerable': true,\n  'writable': false,\n};\n\n/**\n * Property descriptor of non-enumerable properties.\n */\nInterpreter.NONENUMERABLE_DESCRIPTOR = {\n  'configurable': true,\n  'enumerable': false,\n  'writable': true,\n};\n\n/**\n * Property descriptor of readonly, non-enumerable properties.\n */\nInterpreter.READONLY_NONENUMERABLE_DESCRIPTOR = {\n  'configurable': true,\n  'enumerable': false,\n  'writable': false,\n};\n\n/**\n * Property descriptor of non-configurable, readonly, non-enumerable properties.\n * E.g. NaN, Infinity.\n */\nInterpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR = {\n  'configurable': false,\n  'enumerable': false,\n  'writable': false,\n};\n\n/**\n * Property descriptor of variables.\n */\nInterpreter.VARIABLE_DESCRIPTOR = {\n  'configurable': false,\n  'enumerable': true,\n  'writable': true,\n};\n\n/**\n * Unique symbol for indicating that a step has encountered an error, has\n * added it to the stack, and will be thrown within the user's program.\n * When STEP_ERROR is thrown in the JS-Interpreter, the error can be ignored.\n */\nInterpreter.STEP_ERROR = {'STEP_ERROR': true};\n\n/**\n * Unique symbol for indicating that a reference is a variable on the scope,\n * not an object property.\n */\nInterpreter.SCOPE_REFERENCE = {'SCOPE_REFERENCE': true};\n\n/**\n * Unique symbol for indicating, when used as the value of the value\n * parameter in calls to setProperty and friends, that the value\n * should be taken from the property descriptor instead.\n */\nInterpreter.VALUE_IN_DESCRIPTOR = /** @type {!Interpreter.Value} */({\n  'VALUE_IN_DESCRIPTOR': true\n});\n\n/**\n * Unique symbol for indicating that a RegExp timeout has occurred in a VM.\n */\nInterpreter.REGEXP_TIMEOUT = {'REGEXP_TIMEOUT': true};\n\n/**\n * For cycle detection in array to string and error conversion;\n * see spec bug github.com/tc39/ecma262/issues/289\n * Since this is for atomic actions only, it can be a class property.\n */\nInterpreter.toStringCycles_ = [];\n\n/**\n * Node's vm module, if loaded and required.\n * @type {Object}\n */\nInterpreter.vm = null;\n\n/**\n * Currently executing interpreter.  Needed so Interpreter.Object instances\n * can know their environment.\n * @type {Interpreter}\n */\nInterpreter.currentInterpreter_ = null;\n\n/**\n * The global object (`window` in a browser, `global` in node.js) is usually\n * `globalThis`, but older systems use `this`.\n */\nInterpreter.nativeGlobal =\n    (typeof globalThis === 'undefined') ? this : globalThis;\n\n/**\n * Code for executing regular expressions in a thread.\n */\nInterpreter.WORKER_CODE = [\n  \"onmessage = function(e) {\",\n    \"var result;\",\n    \"var data = e.data;\",\n    \"switch (data[0]) {\",\n      \"case 'split':\",\n        // ['split', string, separator, limit]\n        \"result = data[1].split(data[2], data[3]);\",\n        \"break;\",\n      \"case 'match':\",\n        // ['match', string, regexp]\n        \"result = data[1].match(data[2]);\",\n        \"break;\",\n      \"case 'search':\",\n        // ['search', string, regexp]\n        \"result = data[1].search(data[2]);\",\n        \"break;\",\n      \"case 'replace':\",\n        // ['replace', string, regexp, newSubstr]\n        \"result = data[1].replace(data[2], data[3]);\",\n        \"break;\",\n      \"case 'exec':\",\n        // ['exec', regexp, lastIndex, string]\n        \"var regexp = data[1];\",\n        \"regexp.lastIndex = data[2];\",\n        \"result = [regexp.exec(data[3]), data[1].lastIndex];\",\n        \"break;\",\n      \"default:\",\n        \"throw Error('Unknown RegExp operation: ' + data[0]);\",\n    \"}\",\n    \"postMessage(result);\",\n    \"close();\",\n  \"};\"];\n\n/**\n * Is a value a legal integer for an array length?\n * @param {Interpreter.Value} x Value to check.\n * @returns {number} Zero, or a positive integer if the value can be\n *     converted to such.  NaN otherwise.\n */\nInterpreter.legalArrayLength = function(x) {\n  var n = x >>> 0;\n  // Array length must be between 0 and 2^32-1 (inclusive).\n  return (n === Number(x)) ? n : NaN;\n};\n\n/**\n * Is a value a legal integer for an array index?\n * @param {Interpreter.Value} x Value to check.\n * @returns {number} Zero, or a positive integer if the value can be\n *     converted to such.  NaN otherwise.\n */\nInterpreter.legalArrayIndex = function(x) {\n  var n = x >>> 0;\n  // Array index cannot be 2^32-1, otherwise length would be 2^32.\n  // 0xffffffff is 2^32-1.\n  return (String(n) === String(x) && n !== 0xffffffff) ? n : NaN;\n};\n\n/**\n * Remove start and end values from AST, or set start and end values to a\n * constant value.  Used to remove highlighting from polyfills and to set\n * highlighting in an eval to cover the entire eval expression.\n * @param {!Object} node AST node.\n * @param {number=} start Starting character of all nodes, or undefined.\n * @param {number=} end Ending character of all nodes, or undefined.\n * @private\n */\nInterpreter.stripLocations_ = function(node, start, end) {\n  if (start) {\n    node.start = start;\n  } else {\n    delete node.start;\n  }\n  if (end) {\n    node.end = end;\n  } else {\n    delete node.end;\n  }\n  for (var name in node) {\n    if (name !== 'loc' && node.hasOwnProperty(name)) {\n      var prop = node[name];\n      if (prop && typeof prop === 'object') {\n        Interpreter.stripLocations_(/** @type {!Object} */(prop), start, end);\n      }\n    }\n  }\n};\n\n/**\n * Some pathological regular expressions can take geometric time.\n * Regular expressions are handled in one of three ways:\n * 0 - throw as invalid.\n * 1 - execute natively (risk of unresponsive program).\n * 2 - execute in separate thread (not supported by IE 9).\n */\nInterpreter.prototype['REGEXP_MODE'] = 2;\n\n/**\n * If REGEXP_MODE = 2, the length of time (in ms) to allow a RegExp\n * thread to execute before terminating it.\n */\nInterpreter.prototype['REGEXP_THREAD_TIMEOUT'] = 1000;\n\n/**\n * Length of time (in ms) to allow a polyfill to run before ending step.\n * If set to 0, polyfills will execute step by step.\n * If set to 1000, polyfills will run for up to a second per step\n * (execution will resume in the polyfill in the next step).\n * If set to Infinity, polyfills will run to completion in a single step.\n */\nInterpreter.prototype['POLYFILL_TIMEOUT'] = 1000;\n\n/**\n * Flag indicating that a getter function needs to be called immediately.\n * @private\n */\nInterpreter.prototype.getterStep_ = false;\n\n/**\n * Flag indicating that a setter function needs to be called immediately.\n * @private\n */\nInterpreter.prototype.setterStep_ = false;\n\n/**\n * Number of code chunks appended to the interpreter.\n * @private\n */\nInterpreter.prototype.appendCodeNumber_ = 0;\n\n/**\n * Number of parsed tasks.\n * @private\n */\nInterpreter.prototype.taskCodeNumber_ = 0;\n\n/**\n * Parse JavaScript code into an AST using Acorn.\n * @param {string} code Raw JavaScript text.\n * @param {string} sourceFile Name of filename (for stack trace).\n * @returns {!Object} AST.\n * @private\n */\nInterpreter.prototype.parse_ = function(code, sourceFile) {\n   // Create a new options object, since Acorn will modify this object.\n   // Inheritance can't be used since Acorn uses hasOwnProperty.\n   // Object.assign can't be used since that's ES6.\n   var options = {};\n   for (var name in Interpreter.PARSE_OPTIONS) {\n     options[name] = Interpreter.PARSE_OPTIONS[name];\n   }\n   options.sourceFile = sourceFile;\n   return Interpreter.nativeGlobal.acorn.parse(code, options);\n};\n\n/**\n * Add more code to the interpreter.\n * @param {string|!Object} code Raw JavaScript text or AST.\n */\nInterpreter.prototype.appendCode = function(code) {\n  var state = this.stateStack[0];\n  if (!state || state.node.type !== 'Program') {\n    throw Error('Expecting original AST to start with a Program node');\n  }\n  if (typeof code === 'string') {\n    code = this.parse_(code, 'appendCode' + (this.appendCodeNumber_++));\n  }\n  if (!code || code.type !== 'Program') {\n    throw Error('Expecting new AST to start with a Program node');\n  }\n  this.populateScope_(code, state.scope);\n  // Append the new program to the old one.\n  Array.prototype.push.apply(state.node.body, code.body);\n  state.node.body.variableCache_ = null;\n  state.done = false;\n};\n\n/**\n * Execute one step of the interpreter.\n * @returns {boolean} True if a step was executed, false if no more instructions.\n */\nInterpreter.prototype.step = function() {\n  var stack = this.stateStack;\n  var endTime;\n  do {\n    var state = stack[stack.length - 1];\n    if (this.paused_) {\n      // Blocked by an asynchronous function.\n      return true;\n    } else if (!state || (state.node.type === 'Program' && state.done)) {\n      if (!this.tasks.length) {\n        // Main program complete and no queued tasks.  We're done!\n        return false;\n      }\n      state = this.nextTask_();\n      if (!state) {\n        // Main program complete, queued tasks, but nothing to run right now.\n        return true;\n      }\n      // Found a queued task, execute it.\n    }\n    var node = state.node;\n    // Record the interpreter in a global property so calls to toString/valueOf\n    // can execute in the proper context.\n    var oldInterpreterValue = Interpreter.currentInterpreter_;\n    Interpreter.currentInterpreter_ = this;\n    try {\n      var nextState = this.stepFunctions_[node.type](stack, state, node);\n    } catch (e) {\n      // Eat any step errors.  They have been thrown on the stack.\n      if (e !== Interpreter.STEP_ERROR) {\n        // This is a real error, either in the JS-Interpreter, or an uncaught\n        // error in the interpreted code.  Rethrow.\n        if (this.value !== e) {\n          // Uh oh.  Internal error in the JS-Interpreter.\n          this.value = undefined;\n        }\n        throw e;\n      }\n    } finally {\n      // Restore to previous value (probably null, maybe nested toString calls).\n      Interpreter.currentInterpreter_ = oldInterpreterValue;\n    }\n    if (nextState) {\n      stack.push(nextState);\n    }\n    if (this.getterStep_) {\n      // Getter from this step was not handled.\n      this.value = undefined;\n      throw Error('Getter not supported in this context');\n    }\n    if (this.setterStep_) {\n      // Setter from this step was not handled.\n      this.value = undefined;\n      throw Error('Setter not supported in this context');\n    }\n    // This may be polyfill code.  Keep executing until we arrive at user code.\n    if (!endTime && !node.end) {\n      // Ideally this would be defined at the top of the function, but that\n      // wastes time if the step isn't a polyfill.\n      endTime = Date.now() + this['POLYFILL_TIMEOUT'];\n    }\n  } while (!node.end && endTime > Date.now());\n  return true;\n};\n\n/**\n * Execute the interpreter to program completion.  Vulnerable to infinite loops.\n * @returns {boolean} True if a execution is asynchronously blocked,\n *     false if no more instructions.\n */\nInterpreter.prototype.run = function() {\n  while (!this.paused_ && this.step()) {}\n  return this.paused_;\n};\n\n/**\n * Current status of the interpreter.\n * @returns {Interpreter.Status} One of DONE, STEP, TASK, or ASYNC.\n */\nInterpreter.prototype.getStatus = function() {\n  if (this.paused_) {\n    return Interpreter.Status['ASYNC'];\n  }\n  var stack = this.stateStack;\n  var state = stack[stack.length - 1];\n  if (state && (state.node.type !== 'Program' || !state.done)) {\n    // There's a step ready to execute.\n    return Interpreter.Status['STEP'];\n  }\n  var task = this.tasks[0];\n  if (task) {\n    if (task.time > Date.now()) {\n      // There's a pending task, but it's not ready.\n      return Interpreter.Status['TASK'];\n    }\n    // There's a task ready to execute.\n    return Interpreter.Status['STEP'];\n  }\n  return Interpreter.Status['DONE'];\n};\n\n/**\n * Initialize the global object with built-in properties and functions.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initGlobal = function(globalObject) {\n  // Initialize uneditable global properties.\n  this.setProperty(globalObject, 'NaN', NaN,\n      Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'Infinity', Infinity,\n      Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'undefined', undefined,\n      Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'window', globalObject,\n      Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(globalObject, 'this', globalObject,\n      Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'self', globalObject);  // Editable.\n\n  // Create the objects which will become Object.prototype and\n  // Function.prototype, which are needed to bootstrap everything else.\n  this.OBJECT_PROTO = new Interpreter.Object(null);\n  this.FUNCTION_PROTO = new Interpreter.Object(this.OBJECT_PROTO);\n  // Initialize global objects.\n  this.initFunction(globalObject);\n  this.initObject(globalObject);\n  // Unable to set globalObject's parent prior (OBJECT did not exist).\n  // Note that in a browser this would be `Window`, whereas in Node.js it would\n  // be `Object`.  This interpreter is closer to Node in that it has no DOM.\n  globalObject.proto = this.OBJECT_PROTO;\n  this.setProperty(globalObject, 'constructor', this.OBJECT,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.initArray(globalObject);\n  this.initString(globalObject);\n  this.initBoolean(globalObject);\n  this.initNumber(globalObject);\n  this.initDate(globalObject);\n  this.initRegExp(globalObject);\n  this.initError(globalObject);\n  this.initMath(globalObject);\n  this.initJSON(globalObject);\n\n  // Initialize global functions.\n  var thisInterpreter = this;\n  var wrapper;\n  var func = this.createNativeFunction(\n      function(_x) {throw EvalError(\"Can't happen\");}, false);\n  func.eval = true;\n  this.setProperty(globalObject, 'eval', func,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(globalObject, 'parseInt',\n      this.createNativeFunction(parseInt, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'parseFloat',\n      this.createNativeFunction(parseFloat, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(globalObject, 'isNaN',\n      this.createNativeFunction(isNaN, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(globalObject, 'isFinite',\n      this.createNativeFunction(isFinite, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var strFunctions = [\n    [escape, 'escape'], [unescape, 'unescape'],\n    [decodeURI, 'decodeURI'], [decodeURIComponent, 'decodeURIComponent'],\n    [encodeURI, 'encodeURI'], [encodeURIComponent, 'encodeURIComponent']\n  ];\n  for (var i = 0; i < strFunctions.length; i++) {\n    wrapper = (function(nativeFunc) {\n      return function(str) {\n        try {\n          return nativeFunc(str);\n        } catch (e) {\n          // decodeURI('%xy') will throw an error.  Catch and rethrow.\n          thisInterpreter.throwException(thisInterpreter.URI_ERROR, e.message);\n        }\n      };\n    })(strFunctions[i][0]);\n    this.setProperty(globalObject, strFunctions[i][1],\n        this.createNativeFunction(wrapper, false),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n\n  wrapper = function setTimeout(var_args) {\n    return thisInterpreter.createTask_(false, arguments);\n  };\n  this.setProperty(globalObject, 'setTimeout',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function setInterval(var_args) {\n    return thisInterpreter.createTask_(true, arguments);\n  };\n  this.setProperty(globalObject, 'setInterval',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function clearTimeout(pid) {\n    thisInterpreter.deleteTask_(pid);\n  };\n  this.setProperty(globalObject, 'clearTimeout',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function clearInterval(pid) {\n    thisInterpreter.deleteTask_(pid);\n  };\n  this.setProperty(globalObject, 'clearInterval',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Preserve public properties from being pruned/renamed by JS compilers.\n  // Add others as needed.\n  this['OBJECT'] = this.OBJECT;     this['OBJECT_PROTO'] = this.OBJECT_PROTO;\n  this['FUNCTION'] = this.FUNCTION; this['FUNCTION_PROTO'] = this.FUNCTION_PROTO;\n  this['ARRAY'] = this.ARRAY;       this['ARRAY_PROTO'] = this.ARRAY_PROTO;\n  this['REGEXP'] = this.REGEXP;     this['REGEXP_PROTO'] = this.REGEXP_PROTO;\n  this['DATE'] = this.DATE;         this['DATE_PROTO'] = this.DATE_PROTO;\n\n  // Run any user-provided initialization.\n  if (this.initFunc_) {\n    this.initFunc_(this, globalObject);\n  }\n};\n\n/**\n * Number of functions created by the interpreter.\n * @private\n */\nInterpreter.prototype.functionCodeNumber_ = 0;\n\n/**\n * Initialize the Function class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initFunction = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  var identifierRegexp = /^[A-Za-z_$][\\w$]*$/;\n  // Function constructor.\n  wrapper = function Function(var_args) {\n    if (arguments.length) {\n      var code = String(arguments[arguments.length - 1]);\n    } else {\n      var code = '';\n    }\n    var argsStr = Array.prototype.slice.call(arguments, 0, -1).join(',').trim();\n    if (argsStr) {\n      var args = argsStr.split(/\\s*,\\s*/);\n      for (var i = 0; i < args.length; i++) {\n        var name = args[i];\n        if (!identifierRegexp.test(name)) {\n          thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n              'Invalid function argument: ' + name);\n        }\n      }\n      argsStr = args.join(', ');\n    }\n    // Acorn needs to parse code in the context of a function or else `return`\n    // statements will be syntax errors.\n    try {\n      var ast = thisInterpreter.parse_('(function(' + argsStr + ') {' + code + '})',\n          'function' + (thisInterpreter.functionCodeNumber_++));\n    } catch (e) {\n      // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n          'Invalid code: ' + e.message);\n    }\n    if (ast.body.length !== 1) {\n      // Function('a', 'return a + 6;}; {alert(1);');\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n          'Invalid code in function body');\n    }\n    var node = ast.body[0].expression;\n    // Note that if this constructor is called as `new Function()` the function\n    // object created by stepCallExpression and assigned to `this` is discarded.\n    // Interestingly, the scope for constructed functions is the global scope,\n    // even if they were constructed in some other scope.\n    return thisInterpreter.createFunction(node, thisInterpreter.globalScope,\n       'anonymous');\n  };\n  this.FUNCTION = this.createNativeFunction(wrapper, true);\n\n  this.setProperty(globalObject, 'Function', this.FUNCTION,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  // Throw away the created prototype and use the root prototype.\n  this.setProperty(this.FUNCTION, 'prototype', this.FUNCTION_PROTO,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Configure Function.prototype.\n  this.setProperty(this.FUNCTION_PROTO, 'constructor', this.FUNCTION,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.FUNCTION_PROTO.nativeFunc = function() {};\n  this.FUNCTION_PROTO.nativeFunc.id = this.functionCounter_++;\n  this.FUNCTION_PROTO.illegalConstructor = true;\n  this.setProperty(this.FUNCTION_PROTO, 'length', 0,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.FUNCTION_PROTO.class = 'Function';\n\n  wrapper = function apply(thisArg, args) {\n    var state =\n        thisInterpreter.stateStack[thisInterpreter.stateStack.length - 1];\n    // Rewrite the current CallExpression state to apply a different function.\n    state.func_ = this;\n    // Assign the `this` object.\n    state.funcThis_ = thisArg;\n    // Bind any provided arguments.\n    state.arguments_ = [];\n    if (args !== null && args !== undefined) {\n      if (args instanceof Interpreter.Object) {\n        state.arguments_ = thisInterpreter.arrayPseudoToNative(args);\n      } else {\n        thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n            'CreateListFromArrayLike called on non-object');\n      }\n    }\n    state.doneExec_ = false;\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'apply', wrapper);\n\n  wrapper = function call(thisArg /*, var_args */) {\n    var state =\n        thisInterpreter.stateStack[thisInterpreter.stateStack.length - 1];\n    // Rewrite the current CallExpression state to call a different function.\n    state.func_ = this;\n    // Assign the `this` object.\n    state.funcThis_ = thisArg;\n    // Bind any provided arguments.\n    state.arguments_ = [];\n    for (var i = 1; i < arguments.length; i++) {\n      state.arguments_.push(arguments[i]);\n    }\n    state.doneExec_ = false;\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'call', wrapper);\n\n  this.polyfills_.push(\n// Polyfill copied from:\n// developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n\"Object.defineProperty(Function.prototype, 'bind',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function bind(oThis) {\",\n    \"if (typeof this !== 'function') {\",\n      \"throw TypeError('What is trying to be bound is not callable');\",\n    \"}\",\n    \"var aArgs   = Array.prototype.slice.call(arguments, 1),\",\n        \"fToBind = this,\",\n        \"fNOP    = function() {},\",\n        \"fBound  = function() {\",\n          \"return fToBind.apply(this instanceof fNOP\",\n                 \"? this\",\n                 \": oThis,\",\n                 \"aArgs.concat(Array.prototype.slice.call(arguments)));\",\n        \"};\",\n    \"if (this.prototype) {\",\n      \"fNOP.prototype = this.prototype;\",\n    \"}\",\n    \"fBound.prototype = new fNOP();\",\n    \"return fBound;\",\n  \"}\",\n\"});\",\n\"\");\n\n  // Function has no parent to inherit from, so it needs its own mandatory\n  // toString and valueOf functions.\n  wrapper = function toString() {\n    return String(this);\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'toString', wrapper);\n  this.setProperty(this.FUNCTION, 'toString',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  wrapper = function valueOf() {\n    return this.valueOf();\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, 'valueOf', wrapper);\n  this.setProperty(this.FUNCTION, 'valueOf',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Initialize the Object class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initObject = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Object constructor.\n  wrapper = function Object(value) {\n    if (value === undefined || value === null) {\n      // Create a new object.\n      if (thisInterpreter.calledWithNew()) {\n        // Called as `new Object()`.\n        return this;\n      } else {\n        // Called as `Object()`.\n        return thisInterpreter.createObjectProto(thisInterpreter.OBJECT_PROTO);\n      }\n    }\n    if (!(value instanceof Interpreter.Object)) {\n      // Wrap the value as an object.\n      var box = thisInterpreter.createObjectProto(\n          thisInterpreter.getPrototype(value));\n      box.data = value;\n      return box;\n    }\n    // Return the provided object.\n    return value;\n  };\n  this.OBJECT = this.createNativeFunction(wrapper, true);\n  // Throw away the created prototype and use the root prototype.\n  this.setProperty(this.OBJECT, 'prototype', this.OBJECT_PROTO,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.OBJECT_PROTO, 'constructor', this.OBJECT,\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(globalObject, 'Object', this.OBJECT,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  /**\n   * Checks if the provided value is null or undefined.\n   * If so, then throw an error in the call stack.\n   * @param {Interpreter.Value} value Value to check.\n   */\n  var throwIfNullUndefined = function(value) {\n    if (value === undefined || value === null) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          \"Cannot convert '\" + value + \"' to object\");\n    }\n  };\n\n  // Static methods on Object.\n  wrapper = function getOwnPropertyNames(obj) {\n    throwIfNullUndefined(obj);\n    var props = (obj instanceof Interpreter.Object) ? obj.properties : obj;\n    return thisInterpreter.arrayNativeToPseudo(\n        Object.getOwnPropertyNames(props));\n  };\n  this.setProperty(this.OBJECT, 'getOwnPropertyNames',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function keys(obj) {\n    throwIfNullUndefined(obj);\n    if (obj instanceof Interpreter.Object) {\n      obj = obj.properties;\n    }\n    return thisInterpreter.arrayNativeToPseudo(Object.keys(obj));\n  };\n  this.setProperty(this.OBJECT, 'keys',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function create_(proto) {\n    // Support for the second argument is the responsibility of a polyfill.\n    if (proto === null) {\n      return thisInterpreter.createObjectProto(null);\n    }\n    if (!(proto instanceof Interpreter.Object)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object prototype may only be an Object or null, not ' + proto);\n    }\n    return thisInterpreter.createObjectProto(proto);\n  };\n  this.setProperty(this.OBJECT, 'create',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Add a polyfill to handle create's second argument.\n  this.polyfills_.push(\n\"(function() {\",\n  \"var create_ = Object.create;\",\n  \"Object.create = function create(proto, props) {\",\n    \"var obj = create_(proto);\",\n    \"props && Object.defineProperties(obj, props);\",\n    \"return obj;\",\n  \"};\",\n\"})();\",\n\"\");\n\n  wrapper = function defineProperty(obj, prop, descriptor) {\n    prop = String(prop);\n    if (!(obj instanceof Interpreter.Object)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object.defineProperty called on non-object: ' + obj);\n    }\n    if (!(descriptor instanceof Interpreter.Object)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Property description must be an object');\n    }\n    if (obj.preventExtensions && !(prop in obj.properties)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          \"Can't define property '\" + prop + \"', object is not extensible\");\n    }\n    // The polyfill guarantees no inheritance and no getter functions.\n    // Therefore the descriptor properties map is the native object needed.\n    thisInterpreter.setProperty(obj, prop, Interpreter.VALUE_IN_DESCRIPTOR,\n                                descriptor.properties);\n    return obj;\n  };\n  this.setProperty(this.OBJECT, 'defineProperty',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.polyfills_.push(\n// Flatten the descriptor to remove any inheritance or getter functions.\n\"(function() {\",\n  \"var defineProperty_ = Object.defineProperty;\",\n  \"Object.defineProperty = function defineProperty(obj, prop, d1) {\",\n    \"var d2 = {};\",\n    \"if ('configurable' in d1) d2.configurable = d1.configurable;\",\n    \"if ('enumerable' in d1) d2.enumerable = d1.enumerable;\",\n    \"if ('writable' in d1) d2.writable = d1.writable;\",\n    \"if ('value' in d1) d2.value = d1.value;\",\n    \"if ('get' in d1) d2.get = d1.get;\",\n    \"if ('set' in d1) d2.set = d1.set;\",\n    \"return defineProperty_(obj, prop, d2);\",\n  \"};\",\n\"})();\",\n\n\"Object.defineProperty(Object, 'defineProperties',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function defineProperties(obj, props) {\",\n    \"var keys = Object.keys(props);\",\n    \"for (var i = 0; i < keys.length; i++) {\",\n      \"Object.defineProperty(obj, keys[i], props[keys[i]]);\",\n    \"}\",\n    \"return obj;\",\n  \"}\",\n\"});\",\n\"\");\n\n  wrapper = function getOwnPropertyDescriptor(obj, prop) {\n    if (!(obj instanceof Interpreter.Object)) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Object.getOwnPropertyDescriptor called on non-object: ' + obj);\n    }\n    prop = String(prop);\n    if (!(prop in obj.properties)) {\n      return undefined;\n    }\n    var descriptor = Object.getOwnPropertyDescriptor(obj.properties, prop);\n    var getter = obj.getter[prop];\n    var setter = obj.setter[prop];\n\n    var pseudoDescriptor =\n        thisInterpreter.createObjectProto(thisInterpreter.OBJECT_PROTO);\n    if (getter || setter) {\n      thisInterpreter.setProperty(pseudoDescriptor, 'get', getter);\n      thisInterpreter.setProperty(pseudoDescriptor, 'set', setter);\n    } else {\n      thisInterpreter.setProperty(pseudoDescriptor, 'value',\n          /** @type {!Interpreter.Value} */(descriptor['value']));\n      thisInterpreter.setProperty(pseudoDescriptor, 'writable',\n          descriptor['writable']);\n    }\n    thisInterpreter.setProperty(pseudoDescriptor, 'configurable',\n        descriptor['configurable']);\n    thisInterpreter.setProperty(pseudoDescriptor, 'enumerable',\n        descriptor['enumerable']);\n    return pseudoDescriptor;\n  };\n  this.setProperty(this.OBJECT, 'getOwnPropertyDescriptor',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function getPrototypeOf(obj) {\n    throwIfNullUndefined(obj);\n    return thisInterpreter.getPrototype(obj);\n  };\n  this.setProperty(this.OBJECT, 'getPrototypeOf',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function isExtensible(obj) {\n    return Boolean(obj) && !obj.preventExtensions;\n  };\n  this.setProperty(this.OBJECT, 'isExtensible',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function preventExtensions(obj) {\n    if (obj instanceof Interpreter.Object) {\n      obj.preventExtensions = true;\n    }\n    return obj;\n  };\n  this.setProperty(this.OBJECT, 'preventExtensions',\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Object.\n  this.setNativeFunctionPrototype(this.OBJECT, 'toString',\n      Interpreter.Object.prototype.toString);\n  this.setNativeFunctionPrototype(this.OBJECT, 'toLocaleString',\n      Interpreter.Object.prototype.toString);\n  this.setNativeFunctionPrototype(this.OBJECT, 'valueOf',\n      Interpreter.Object.prototype.valueOf);\n\n  wrapper = function hasOwnProperty(prop) {\n    throwIfNullUndefined(this);\n    if (this instanceof Interpreter.Object) {\n      return String(prop) in this.properties;\n    }\n    // Primitive.\n    return this.hasOwnProperty(prop);\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'hasOwnProperty', wrapper);\n\n  wrapper = function propertyIsEnumerable(prop) {\n    throwIfNullUndefined(this);\n    if (this instanceof Interpreter.Object) {\n      return Object.prototype.propertyIsEnumerable.call(this.properties, prop);\n    }\n    // Primitive.\n    return this.propertyIsEnumerable(prop);\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'propertyIsEnumerable', wrapper);\n\n  wrapper = function isPrototypeOf(obj) {\n    while (true) {\n      // Note, circular loops shouldn't be possible.\n      obj = thisInterpreter.getPrototype(obj);\n      if (!obj) {\n        // No parent; reached the top.\n        return false;\n      }\n      if (obj === this) {\n        return true;\n      }\n    }\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, 'isPrototypeOf',  wrapper);\n};\n\n/**\n * Initialize the Array class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initArray = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Array constructor.\n  wrapper = function Array(var_args) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new Array()`.\n      var newArray = this;\n    } else {\n      // Called as `Array()`.\n      var newArray = thisInterpreter.createArray();\n    }\n    var first = arguments[0];\n    if (arguments.length === 1 && typeof first === 'number') {\n      if (isNaN(Interpreter.legalArrayLength(first))) {\n        thisInterpreter.throwException(thisInterpreter.RANGE_ERROR,\n                                       'Invalid array length: ' + first);\n      }\n      newArray.properties.length = first;\n    } else {\n      for (var i = 0; i < arguments.length; i++) {\n        newArray.properties[i] = arguments[i];\n      }\n      newArray.properties.length = i;\n    }\n    return newArray;\n  };\n  this.ARRAY = this.createNativeFunction(wrapper, true);\n  this.ARRAY_PROTO = this.ARRAY.properties['prototype'];\n  this.setProperty(globalObject, 'Array', this.ARRAY,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Static methods on Array.\n  wrapper = function isArray(obj) {\n    return obj && obj.class === 'Array';\n  };\n  this.setProperty(this.ARRAY, 'isArray',\n                   this.createNativeFunction(wrapper, false),\n                   Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Array.\n  this.setProperty(this.ARRAY_PROTO, 'length', 0,\n      {'configurable': false, 'enumerable': false, 'writable': true});\n  this.ARRAY_PROTO.class = 'Array';\n\n  this.polyfills_.push(\n\"(function() {\",\n  \"function createArrayMethod_(f) {\",\n    \"Object.defineProperty(Array.prototype, f.name,\",\n        \"{configurable: true, writable: true, value: f});\",\n  \"}\",\n\n  \"createArrayMethod_(\",\n    \"function pop() {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"if (!len || len < 0) {\",\n        \"o.length = 0;\",\n        \"return undefined;\",\n      \"}\",\n      \"len--;\",\n      \"var x = o[len];\",\n      \"delete o[len];\",  // Needed for non-arrays.\n      \"o.length = len;\",\n      \"return x;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function push(var_args) {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"for (var i = 0; i < arguments.length; i++) {\",\n        \"o[len] = arguments[i];\",\n        \"len++;\",\n      \"}\",\n      \"o.length = len;\",\n      \"return len;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function shift() {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"if (!len || len < 0) {\",\n        \"o.length = 0;\",\n        \"return undefined;\",\n      \"}\",\n      \"var value = o[0];\",\n      \"for (var i = 0; i < len - 1; i++) {\",\n        \"if ((i + 1) in o) {\",\n          \"o[i] = o[i + 1];\",\n        \"} else {\",\n          \"delete o[i];\",\n        \"}\",\n      \"}\",\n      \"delete o[i];\",  // Needed for non-arrays.\n      \"o.length = len - 1;\",\n      \"return value;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function unshift(var_args) {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"if (!len || len < 0) {\",\n        \"len = 0;\",\n      \"}\",\n      \"for (var i = len - 1; i >= 0; i--) {\",\n        \"if (i in o) {\",\n          \"o[i + arguments.length] = o[i];\",\n        \"} else {\",\n          \"delete o[i + arguments.length];\",\n        \"}\",\n      \"}\",\n      \"for (var i = 0; i < arguments.length; i++) {\",\n        \"o[i] = arguments[i];\",\n      \"}\",\n      \"return (o.length = len + arguments.length);\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function reverse() {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"if (!len || len < 2) {\",\n        \"return o;\",  // Not an array, or too short to reverse.\n      \"}\",\n      \"for (var i = 0; i < len / 2 - 0.5; i++) {\",\n        \"var x = o[i];\",\n        \"var hasX = i in o;\",\n        \"if ((len - i - 1) in o) {\",\n          \"o[i] = o[len - i - 1];\",\n        \"} else {\",\n          \"delete o[i];\",\n        \"}\",\n        \"if (hasX) {\",\n          \"o[len - i - 1] = x;\",\n        \"} else {\",\n          \"delete o[len - i - 1];\",\n        \"}\",\n      \"}\",\n      \"return o;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function indexOf(searchElement, fromIndex) {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"var n = fromIndex | 0;\",\n      \"if (!len || n >= len) {\",\n        \"return -1;\",\n      \"}\",\n      \"var i = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\",\n      \"while (i < len) {\",\n        \"if (i in o && o[i] === searchElement) {\",\n          \"return i;\",\n        \"}\",\n        \"i++;\",\n      \"}\",\n      \"return -1;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function lastIndexOf(searchElement, fromIndex) {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"if (!len) {\",\n        \"return -1;\",\n      \"}\",\n      \"var n = len - 1;\",\n      \"if (arguments.length > 1) {\",\n        \"n = fromIndex | 0;\",\n        \"if (n) {\",\n          \"n = (n > 0 || -1) * Math.floor(Math.abs(n));\",\n        \"}\",\n      \"}\",\n      \"var i = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\",\n      \"while (i >= 0) {\",\n        \"if (i in o && o[i] === searchElement) {\",\n          \"return i;\",\n        \"}\",\n        \"i--;\",\n      \"}\",\n      \"return -1;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function slice(start, end) {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      // Handle negative value for \"start\"\n      \"start |= 0;\",\n      \"start = (start >= 0) ? start : Math.max(0, len + start);\",\n      // Handle negative value for \"end\"\n      \"if (typeof end !== 'undefined') {\",\n        \"if (end !== Infinity) {\",\n          \"end |= 0;\",\n        \"}\",\n        \"if (end < 0) {\",\n          \"end = len + end;\",\n        \"} else {\",\n          \"end = Math.min(end, len);\",\n        \"}\",\n      \"} else {\",\n        \"end = len;\",\n      \"}\",\n      \"var size = end - start;\",\n      \"var cloned = new Array(size);\",\n      \"for (var i = 0; i < size; i++) {\",\n        \"if ((start + i) in o) {\",\n          \"cloned[i] = o[start + i];\",\n        \"}\",\n      \"}\",\n      \"return cloned;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function splice(start, deleteCount, var_args) {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"start |= 0;\",\n      \"if (start < 0) {\",\n        \"start = Math.max(len + start, 0);\",\n      \"} else {\",\n        \"start = Math.min(start, len);\",\n      \"}\",\n      \"if (arguments.length < 1) {\",\n        \"deleteCount = len - start;\",\n      \"} else {\",\n        \"deleteCount |= 0;\",\n        \"deleteCount = Math.max(0, Math.min(deleteCount, len - start));\",\n      \"}\",\n      \"var removed = [];\",\n      // Remove specified elements.\n      \"for (var i = start; i < start + deleteCount; i++) {\",\n        \"if (i in o) {\",\n          \"removed.push(o[i]);\",\n        \"} else {\",\n          \"removed.length++;\",\n        \"}\",\n        \"if ((i + deleteCount) in o) {\",\n          \"o[i] = o[i + deleteCount];\",\n        \"} else {\",\n          \"delete o[i];\",\n        \"}\",\n      \"}\",\n      // Move other element to fill the gap.\n      \"for (var i = start + deleteCount; i < len - deleteCount; i++) {\",\n        \"if ((i + deleteCount) in o) {\",\n          \"o[i] = o[i + deleteCount];\",\n        \"} else {\",\n          \"delete o[i];\",\n        \"}\",\n      \"}\",\n      // Delete superfluous properties.\n      \"for (var i = len - deleteCount; i < len; i++) {\",\n        \"delete o[i];\",\n      \"}\",\n      \"len -= deleteCount;\",\n      // Insert specified items.\n      \"var arl = arguments.length - 2;\",\n      \"for (var i = len - 1; i >= start; i--) {\",\n        \"if (i in o) {\",\n          \"o[i + arl] = o[i];\",\n        \"} else {\",\n          \"delete o[i + arl];\",\n        \"}\",\n      \"}\",\n      \"len += arl;\",\n      \"for (var i = 2; i < arguments.length; i++) {\",\n        \"o[start + i - 2] = arguments[i];\",\n      \"}\",\n      \"o.length = len;\",\n      \"return removed;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function concat(var_args) {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this);\",\n      \"var cloned = [];\",\n      \"for (var i = -1; i < arguments.length; i++) {\",\n        \"var value = (i === -1) ? o : arguments[i];\",\n        \"if (Array.isArray(value)) {\",\n          \"for (var j = 0, l = value.length; j < l; j++) {\",\n            \"if (j in value) {\",\n              \"cloned.push(value[j]);\",\n            \"} else {\",\n              \"cloned.length++;\",\n            \"}\",\n          \"}\",\n        \"} else {\",\n          \"cloned.push(value);\",\n        \"}\",\n      \"}\",\n      \"return cloned;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function join(opt_separator) {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"var sep = typeof opt_separator === 'undefined' ?\",\n          \"',' : ('' + opt_separator);\",\n      \"var str = '';\",\n      \"for (var i = 0; i < len; i++) {\",\n        \"if (i && sep) str += sep;\",\n        \"str += (o[i] === null || o[i] === undefined) ? '' : o[i];\",\n      \"}\",\n      \"return str;\",\n    \"}\",\n  \");\",\n\n  // Polyfill copied from:\n  // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/every\n  \"createArrayMethod_(\",\n    \"function every(callbackfn, thisArg) {\",\n      \"if (!this || typeof callbackfn !== 'function') throw TypeError();\",\n      \"var t, k = 0;\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"if (arguments.length > 1) t = thisArg;\",\n      \"while (k < len) {\",\n        \"if (k in o && !callbackfn.call(t, o[k], k, o)) return false;\",\n        \"k++;\",\n      \"}\",\n      \"return true;\",\n    \"}\",\n  \");\",\n\n  // Polyfill copied from:\n  // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n  \"createArrayMethod_(\",\n    \"function filter(fun, var_args) {\",\n      \"if (this === void 0 || this === null || typeof fun !== 'function') throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"var res = [];\",\n      \"var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\",\n      \"for (var i = 0; i < len; i++) {\",\n        \"if (i in o) {\",\n          \"var val = o[i];\",\n          \"if (fun.call(thisArg, val, i, o)) res.push(val);\",\n        \"}\",\n      \"}\",\n      \"return res;\",\n    \"}\",\n  \");\",\n\n  // Polyfill copied from:\n  // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n  \"createArrayMethod_(\",\n    \"function forEach(callback, thisArg) {\",\n      \"if (!this || typeof callback !== 'function') throw TypeError();\",\n      \"var t, k = 0;\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"if (arguments.length > 1) t = thisArg;\",\n      \"while (k < len) {\",\n        \"if (k in o) callback.call(t, o[k], k, o);\",\n        \"k++;\",\n      \"}\",\n    \"}\",\n  \");\",\n\n  // Polyfill copied from:\n  // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n  \"createArrayMethod_(\",\n    \"function map(callback, thisArg) {\",\n      \"if (!this || typeof callback !== 'function') throw TypeError();\",\n      \"var t, k = 0;\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"if (arguments.length > 1) t = thisArg;\",\n      \"var a = new Array(len);\",\n      \"while (k < len) {\",\n        \"if (k in o) a[k] = callback.call(t, o[k], k, o);\",\n        \"k++;\",\n      \"}\",\n      \"return a;\",\n    \"}\",\n  \");\",\n\n  // Polyfill copied from:\n  // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n  \"createArrayMethod_(\",\n    \"function reduce(callback /*, initialValue*/) {\",\n      \"if (!this || typeof callback !== 'function') throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"var k = 0, value;\",\n      \"if (arguments.length === 2) {\",\n        \"value = arguments[1];\",\n      \"} else {\",\n        \"while (k < len && !(k in o)) k++;\",\n        \"if (k >= len) {\",\n          \"throw TypeError('Reduce of empty array with no initial value');\",\n        \"}\",\n        \"value = o[k++];\",\n      \"}\",\n      \"for (; k < len; k++) {\",\n        \"if (k in o) value = callback(value, o[k], k, o);\",\n      \"}\",\n      \"return value;\",\n    \"}\",\n  \");\",\n\n  // Polyfill copied from:\n  // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight\n  \"createArrayMethod_(\",\n    \"function reduceRight(callback /*, initialValue*/) {\",\n      \"if (null === this || 'undefined' === typeof this || 'function' !== typeof callback) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"var k = len - 1, value;\",\n      \"if (arguments.length >= 2) {\",\n        \"value = arguments[1];\",\n      \"} else {\",\n        \"while (k >= 0 && !(k in o)) k--;\",\n        \"if (k < 0) {\",\n          \"throw TypeError('Reduce of empty array with no initial value');\",\n        \"}\",\n        \"value = o[k--];\",\n      \"}\",\n      \"for (; k >= 0; k--) {\",\n        \"if (k in o) value = callback(value, o[k], k, o);\",\n      \"}\",\n      \"return value;\",\n    \"}\",\n  \");\",\n\n  // Polyfill copied from:\n  // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n  \"createArrayMethod_(\",\n    \"function some(fun/*, thisArg*/) {\",\n      \"if (!this || typeof fun !== 'function') throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\",\n      \"for (var i = 0; i < len; i++) {\",\n        \"if (i in o && fun.call(thisArg, o[i], i, o)) return true;\",\n      \"}\",\n      \"return false;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function sort(opt_comp) {\",  // Bubble sort!\n      \"if (!this) throw TypeError();\",\n      \"if (typeof opt_comp !== 'function') {\",\n        \"opt_comp = undefined;\",\n      \"}\",\n      \"for (var i = 0; i < this.length; i++) {\",\n        \"var changes = 0;\",\n        \"for (var j = 0; j < this.length - i - 1; j++) {\",\n          \"if (opt_comp ? (opt_comp(this[j], this[j + 1]) > 0) :\",\n              \"(String(this[j]) > String(this[j + 1]))) {\",\n            \"var swap = this[j];\",\n            \"var hasSwap = j in this;\",\n            \"if ((j + 1) in this) {\",\n              \"this[j] = this[j + 1];\",\n            \"} else {\",\n              \"delete this[j];\",\n            \"}\",\n            \"if (hasSwap) {\",\n              \"this[j + 1] = swap;\",\n            \"} else {\",\n              \"delete this[j + 1];\",\n            \"}\",\n            \"changes++;\",\n          \"}\",\n        \"}\",\n        \"if (!changes) break;\",\n      \"}\",\n      \"return this;\",\n    \"}\",\n  \");\",\n\n  \"createArrayMethod_(\",\n    \"function toLocaleString() {\",\n      \"if (!this) throw TypeError();\",\n      \"var o = Object(this), len = o.length >>> 0;\",\n      \"var out = [];\",\n      \"for (var i = 0; i < len; i++) {\",\n        \"out[i] = (o[i] === null || o[i] === undefined) ? '' : o[i].toLocaleString();\",\n      \"}\",\n      \"return out.join(',');\",\n    \"}\",\n  \");\",\n\"})();\",\n\"\");\n};\n\n/**\n * Initialize the String class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initString = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // String constructor.\n  wrapper = function String(value) {\n    value = arguments.length ? Interpreter.nativeGlobal.String(value) : '';\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new String()`.\n      this.data = value;\n      return this;\n    } else {\n      // Called as `String()`.\n      return value;\n    }\n  };\n  this.STRING = this.createNativeFunction(wrapper, true);\n  this.setProperty(globalObject, 'String', this.STRING,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Static methods on String.\n  this.setProperty(this.STRING, 'fromCharCode',\n      this.createNativeFunction(String.fromCharCode, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on String.\n  // Methods with exclusively primitive arguments.\n  var functions = ['charAt', 'charCodeAt', 'concat', 'indexOf', 'lastIndexOf',\n      'slice', 'substr', 'substring', 'toLocaleLowerCase', 'toLocaleUpperCase',\n      'toLowerCase', 'toUpperCase', 'trim'];\n  for (var i = 0; i < functions.length; i++) {\n    this.setNativeFunctionPrototype(this.STRING, functions[i],\n                                    String.prototype[functions[i]]);\n  }\n\n  wrapper = function localeCompare(compareString, locales, options) {\n    locales = thisInterpreter.pseudoToNative(locales);\n    options = thisInterpreter.pseudoToNative(options);\n    try {\n      return String(this).localeCompare(compareString,\n          /** @type {?} */(locales), /** @type {?} */(options));\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.ERROR,\n          'localeCompare: ' + e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.STRING, 'localeCompare', wrapper);\n\n  wrapper = function split(separator, limit, callback) {\n    var string = String(this);\n    limit = limit ? Number(limit) : undefined;\n    // Example of catastrophic split RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.split(/^(a+)+b/)\n    if (thisInterpreter.isa(separator, thisInterpreter.REGEXP)) {\n      separator = separator.data;\n      thisInterpreter.maybeThrowRegExp(separator, callback);\n      if (thisInterpreter['REGEXP_MODE'] === 2) {\n        if (Interpreter.vm) {\n          // Run split in vm.\n          var sandbox = {\n            'string': string,\n            'separator': separator,\n            'limit': limit,\n          };\n          var code = 'string.split(separator, limit)';\n          var jsList =\n              thisInterpreter.vmCall(code, sandbox, separator, callback);\n          if (jsList !== Interpreter.REGEXP_TIMEOUT) {\n            callback(thisInterpreter.arrayNativeToPseudo(jsList));\n          }\n        } else {\n          // Run split in separate thread.\n          var splitWorker = thisInterpreter.createWorker();\n          var pid = thisInterpreter.regExpTimeout(separator, splitWorker,\n              callback);\n          splitWorker.onmessage = function(e) {\n            clearTimeout(pid);\n            callback(thisInterpreter.arrayNativeToPseudo(e.data));\n          };\n          splitWorker.postMessage(['split', string, separator, limit]);\n        }\n        return;\n      }\n    }\n    // Run split natively.\n    var jsList = string.split(separator, limit);\n    callback(thisInterpreter.arrayNativeToPseudo(jsList));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'split', wrapper);\n\n  wrapper = function match(regexp, callback) {\n    var string = String(this);\n    regexp = thisInterpreter.isa(regexp, thisInterpreter.REGEXP) ?\n        regexp.data : new RegExp(regexp);\n    // Example of catastrophic match RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.match(/^(a+)+b/)\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter['REGEXP_MODE'] === 2) {\n      if (Interpreter.vm) {\n        // Run match in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp,\n        };\n        var code = 'string.match(regexp)';\n        var m = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (m !== Interpreter.REGEXP_TIMEOUT) {\n          callback(m && thisInterpreter.arrayNativeToPseudo(m));\n        }\n      } else {\n        // Run match in separate thread.\n        var matchWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, matchWorker, callback);\n        matchWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          callback(e.data && thisInterpreter.arrayNativeToPseudo(e.data));\n        };\n        matchWorker.postMessage(['match', string, regexp]);\n      }\n      return;\n    }\n    // Run match natively.\n    var m = string.match(regexp);\n    callback(m && thisInterpreter.arrayNativeToPseudo(m));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'match', wrapper);\n\n  wrapper = function search(regexp, callback) {\n    var string = String(this);\n    if (thisInterpreter.isa(regexp, thisInterpreter.REGEXP)) {\n      regexp = regexp.data;\n    } else {\n      regexp = new RegExp(regexp);\n    }\n    // Example of catastrophic search RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.search(/^(a+)+b/)\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter['REGEXP_MODE'] === 2) {\n      if (Interpreter.vm) {\n        // Run search in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp\n        };\n        var code = 'string.search(regexp)';\n        var n = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (n !== Interpreter.REGEXP_TIMEOUT) {\n          callback(n);\n        }\n      } else {\n        // Run search in separate thread.\n        var searchWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, searchWorker, callback);\n        searchWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          callback(e.data);\n        };\n        searchWorker.postMessage(['search', string, regexp]);\n      }\n      return;\n    }\n    // Run search natively.\n    callback(string.search(regexp));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'search', wrapper);\n\n  wrapper = function replace_(substr, newSubstr, callback) {\n    // Support for function replacements is the responsibility of a polyfill.\n    var string = String(this);\n    newSubstr = String(newSubstr);\n    // Example of catastrophic replace RegExp:\n    // 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac'.replace(/^(a+)+b/, '')\n    if (thisInterpreter.isa(substr, thisInterpreter.REGEXP)) {\n      substr = substr.data;\n      thisInterpreter.maybeThrowRegExp(substr, callback);\n      if (thisInterpreter['REGEXP_MODE'] === 2) {\n        if (Interpreter.vm) {\n          // Run replace in vm.\n          var sandbox = {\n            'string': string,\n            'substr': substr,\n            'newSubstr': newSubstr,\n          };\n          var code = 'string.replace(substr, newSubstr)';\n          var str = thisInterpreter.vmCall(code, sandbox, substr, callback);\n          if (str !== Interpreter.REGEXP_TIMEOUT) {\n            callback(str);\n          }\n        } else {\n          // Run replace in separate thread.\n          var replaceWorker = thisInterpreter.createWorker();\n          var pid = thisInterpreter.regExpTimeout(substr, replaceWorker,\n              callback);\n          replaceWorker.onmessage = function(e) {\n            clearTimeout(pid);\n            callback(e.data);\n          };\n          replaceWorker.postMessage(['replace', string, substr, newSubstr]);\n        }\n        return;\n      }\n    }\n    // Run replace natively.\n    callback(string.replace(substr, newSubstr));\n  };\n  this.setAsyncFunctionPrototype(this.STRING, 'replace', wrapper);\n  // Add a polyfill to handle replace's second argument being a function.\n  this.polyfills_.push(\n\"(function() {\",\n  \"var replace_ = String.prototype.replace;\",\n  \"String.prototype.replace = function replace(substr, newSubstr) {\",\n    \"if (typeof newSubstr !== 'function') {\",\n      // string.replace(string|regexp, string)\n      \"return replace_.call(this, substr, newSubstr);\",\n    \"}\",\n    \"var str = this;\",\n    \"if (substr instanceof RegExp) {\",  // string.replace(regexp, function)\n      \"var subs = [];\",\n      \"var m = substr.exec(str);\",\n      \"while (m) {\",\n        \"m.push(m.index, str);\",\n        \"var inject = newSubstr.apply(null, m);\",\n        \"subs.push([m.index, m[0].length, inject]);\",\n        \"m = substr.global ? substr.exec(str) : null;\",\n      \"}\",\n      \"for (var i = subs.length - 1; i >= 0; i--) {\",\n        \"str = str.substring(0, subs[i][0]) + subs[i][2] + \" +\n            \"str.substring(subs[i][0] + subs[i][1]);\",\n      \"}\",\n    \"} else {\",                         // string.replace(string, function)\n      \"var i = str.indexOf(substr);\",\n      \"if (i !== -1) {\",\n        \"var inject = newSubstr(str.substr(i, substr.length), i, str);\",\n        \"str = str.substring(0, i) + inject + \" +\n            \"str.substring(i + substr.length);\",\n      \"}\",\n    \"}\",\n    \"return str;\",\n  \"};\",\n\"})();\",\n\"\");\n};\n\n/**\n * Initialize the Boolean class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initBoolean = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Boolean constructor.\n  wrapper = function Boolean(value) {\n    value = Interpreter.nativeGlobal.Boolean(value);\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new Boolean()`.\n      this.data = value;\n      return this;\n    } else {\n      // Called as `Boolean()`.\n      return value;\n    }\n  };\n  this.BOOLEAN = this.createNativeFunction(wrapper, true);\n  this.setProperty(globalObject, 'Boolean', this.BOOLEAN,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Initialize the Number class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initNumber = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Number constructor.\n  wrapper = function Number(value) {\n    value = arguments.length ? Interpreter.nativeGlobal.Number(value) : 0;\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new Number()`.\n      this.data = value;\n      return this;\n    } else {\n      // Called as `Number()`.\n      return value;\n    }\n  };\n  this.NUMBER = this.createNativeFunction(wrapper, true);\n  this.setProperty(globalObject, 'Number', this.NUMBER,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var numConsts = ['MAX_VALUE', 'MIN_VALUE', 'NaN', 'NEGATIVE_INFINITY',\n                   'POSITIVE_INFINITY'];\n  for (var i = 0; i < numConsts.length; i++) {\n    this.setProperty(this.NUMBER, numConsts[i], Number[numConsts[i]],\n        Interpreter.NONCONFIGURABLE_READONLY_NONENUMERABLE_DESCRIPTOR);\n  }\n\n  // Instance methods on Number.\n  wrapper = function toExponential(fractionDigits) {\n    try {\n      return Number(this).toExponential(fractionDigits);\n    } catch (e) {\n      // Throws if fractionDigits isn't within 0-20.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toExponential', wrapper);\n\n  wrapper = function toFixed(digits) {\n    try {\n      return Number(this).toFixed(digits);\n    } catch (e) {\n      // Throws if digits isn't within 0-20.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toFixed', wrapper);\n\n  wrapper = function toPrecision(precision) {\n    try {\n      return Number(this).toPrecision(precision);\n    } catch (e) {\n      // Throws if precision isn't within range (depends on implementation).\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toPrecision', wrapper);\n\n  wrapper = function toString(radix) {\n    try {\n      return Number(this).toString(radix);\n    } catch (e) {\n      // Throws if radix isn't within 2-36.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toString', wrapper);\n\n  wrapper = function toLocaleString(locales, options) {\n    locales = locales ? thisInterpreter.pseudoToNative(locales) : undefined;\n    options = options ? thisInterpreter.pseudoToNative(options) : undefined;\n    try {\n      return Number(this).toLocaleString(\n          /** @type {?} */(locales), /** @type {?} */(options));\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.ERROR,\n          'toLocaleString: ' + e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, 'toLocaleString', wrapper);\n};\n\n/**\n * Initialize the Date class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initDate = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Date constructor.\n  wrapper = function Date(_value, var_args) {\n    if (!thisInterpreter.calledWithNew()) {\n      // Called as `Date()`.\n      // Calling Date() as a function returns a string, no arguments are heeded.\n      return Interpreter.nativeGlobal.Date();\n    }\n    // Called as `new Date(...)`.\n    var args = [null].concat(Array.from(arguments));\n    this.data = new (Function.prototype.bind.apply(\n        Interpreter.nativeGlobal.Date, args));\n    return this;\n  };\n  this.DATE = this.createNativeFunction(wrapper, true);\n  this.DATE_PROTO = this.DATE.properties['prototype'];\n  this.setProperty(globalObject, 'Date', this.DATE,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Static methods on Date.\n  this.setProperty(this.DATE, 'now', this.createNativeFunction(Date.now, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(this.DATE, 'parse',\n      this.createNativeFunction(Date.parse, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(this.DATE, 'UTC', this.createNativeFunction(Date.UTC, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Date.\n  var functions = ['getDate', 'getDay', 'getFullYear', 'getHours',\n      'getMilliseconds', 'getMinutes', 'getMonth', 'getSeconds', 'getTime',\n      'getTimezoneOffset', 'getUTCDate', 'getUTCDay', 'getUTCFullYear',\n      'getUTCHours', 'getUTCMilliseconds', 'getUTCMinutes', 'getUTCMonth',\n      'getUTCSeconds', 'getYear',\n      'setDate', 'setFullYear', 'setHours', 'setMilliseconds',\n      'setMinutes', 'setMonth', 'setSeconds', 'setTime', 'setUTCDate',\n      'setUTCFullYear', 'setUTCHours', 'setUTCMilliseconds', 'setUTCMinutes',\n      'setUTCMonth', 'setUTCSeconds', 'setYear',\n      'toDateString', 'toISOString', 'toJSON', 'toGMTString',\n      'toLocaleDateString', 'toLocaleString', 'toLocaleTimeString',\n      'toTimeString', 'toUTCString'];\n  for (var i = 0; i < functions.length; i++) {\n    wrapper = (function(nativeFunc) {\n      return function(var_args) {\n        var date = this.data;\n        if (!(date instanceof Date)) {\n          thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n              nativeFunc + ' not called on a Date');\n        }\n        var args = [];\n        for (var i = 0; i < arguments.length; i++) {\n          args[i] = thisInterpreter.pseudoToNative(arguments[i]);\n        }\n        return date[nativeFunc].apply(date, args);\n      };\n    })(functions[i]);\n    this.setNativeFunctionPrototype(this.DATE, functions[i], wrapper);\n  }\n};\n\n/**\n * Initialize Regular Expression object.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initRegExp = function(globalObject) {\n  var thisInterpreter = this;\n  var wrapper;\n  // RegExp constructor.\n  wrapper = function RegExp(pattern, flags) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new RegExp()`.\n      var rgx = this;\n    } else {\n      // Called as `RegExp()`.\n      if (flags === undefined &&\n          thisInterpreter.isa(pattern, thisInterpreter.REGEXP)) {\n        // Regexp(/foo/) returns the same obj.\n        return pattern;\n      }\n      var rgx = thisInterpreter.createObjectProto(thisInterpreter.REGEXP_PROTO);\n    }\n    pattern = pattern === undefined ? '' : String(pattern);\n    flags = flags ? String(flags) : '';\n    if (!/^[gmi]*$/.test(flags)) {\n      // Don't allow ES6 flags 'y' and 's' to pass through.\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR,\n          'Invalid regexp flag: ' + flags);\n    }\n    try {\n      var nativeRegExp = new Interpreter.nativeGlobal.RegExp(pattern, flags)\n    } catch (e) {\n      // Throws if flags are repeated.\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, e.message);\n    }\n    thisInterpreter.populateRegExp(rgx, nativeRegExp);\n    return rgx;\n  };\n  this.REGEXP = this.createNativeFunction(wrapper, true);\n  this.REGEXP_PROTO = this.REGEXP.properties['prototype'];\n  this.setProperty(globalObject, 'RegExp', this.REGEXP,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(this.REGEXP.properties['prototype'], 'global', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'ignoreCase', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'multiline', undefined,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.REGEXP.properties['prototype'], 'source', '(?:)',\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n\n  // Use polyfill to avoid complexity of regexp threads.\n  this.polyfills_.push(\n\"Object.defineProperty(RegExp.prototype, 'test',\",\n    \"{configurable: true, writable: true, value:\",\n  \"function test(str) {\",\n    \"return !!this.exec(str);\",\n  \"}\",\n\"});\");\n\n  wrapper = function exec(string, callback) {\n    var regexp = this.data;\n    string = String(string);\n    // Get lastIndex from wrapped regexp, since this is settable.\n    regexp.lastIndex = Number(thisInterpreter.getProperty(this, 'lastIndex'));\n    // Example of catastrophic exec RegExp:\n    // /^(a+)+b/.exec('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaac')\n    thisInterpreter.maybeThrowRegExp(regexp, callback);\n    if (thisInterpreter['REGEXP_MODE'] === 2) {\n      if (Interpreter.vm) {\n        // Run exec in vm.\n        var sandbox = {\n          'string': string,\n          'regexp': regexp,\n        };\n        var code = 'regexp.exec(string)';\n        var match = thisInterpreter.vmCall(code, sandbox, regexp, callback);\n        if (match !== Interpreter.REGEXP_TIMEOUT) {\n          thisInterpreter.setProperty(this, 'lastIndex', regexp.lastIndex);\n          callback(matchToPseudo(match));\n        }\n      } else {\n        // Run exec in separate thread.\n        // Note that lastIndex is not preserved when a RegExp is passed to a\n        // Web Worker.  Thus it needs to be passed back and forth separately.\n        var execWorker = thisInterpreter.createWorker();\n        var pid = thisInterpreter.regExpTimeout(regexp, execWorker, callback);\n        var thisPseudoRegExp = this;\n        execWorker.onmessage = function(e) {\n          clearTimeout(pid);\n          // Return tuple: [result, lastIndex]\n          thisInterpreter.setProperty(thisPseudoRegExp, 'lastIndex', e.data[1]);\n          callback(matchToPseudo(e.data[0]));\n        };\n        execWorker.postMessage(['exec', regexp, regexp.lastIndex, string]);\n      }\n      return;\n    }\n    // Run exec natively.\n    var match = regexp.exec(string);\n    thisInterpreter.setProperty(this, 'lastIndex', regexp.lastIndex);\n    callback(matchToPseudo(match));\n\n    function matchToPseudo(match) {\n      if (match) {\n        var result = thisInterpreter.arrayNativeToPseudo(match);\n        // match has additional properties.\n        thisInterpreter.setProperty(result, 'index', match.index);\n        thisInterpreter.setProperty(result, 'input', match.input);\n        return result;\n      }\n      return null;\n    }\n  };\n  this.setAsyncFunctionPrototype(this.REGEXP, 'exec', wrapper);\n};\n\n/**\n * Initialize the Error class.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initError = function(globalObject) {\n  var thisInterpreter = this;\n  // Error constructor.\n  this.ERROR = this.createNativeFunction(function Error(opt_message) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as `new Error()`.\n      var newError = this;\n    } else {\n      // Called as `Error()`.\n      var newError = thisInterpreter.createObject(thisInterpreter.ERROR);\n    }\n    thisInterpreter.populateError(newError, opt_message);\n    return newError;\n  }, true);\n  this.setProperty(globalObject, 'Error', this.ERROR,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.ERROR.properties['prototype'], 'message', '',\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.ERROR.properties['prototype'], 'name', 'Error',\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var createErrorSubclass = function(name) {\n    var constructor = thisInterpreter.createNativeFunction(\n        function(opt_message) {\n          if (thisInterpreter.calledWithNew()) {\n            // Called as `new XyzError()`.\n            var newError = this;\n          } else {\n            // Called as `XyzError()`.\n            var newError = thisInterpreter.createObject(constructor);\n          }\n          thisInterpreter.populateError(newError, opt_message);\n          return newError;\n        }, true);\n    thisInterpreter.setProperty(constructor, 'prototype',\n        thisInterpreter.createObject(thisInterpreter.ERROR),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n    thisInterpreter.setProperty(constructor.properties['prototype'], 'name',\n        name, Interpreter.NONENUMERABLE_DESCRIPTOR);\n    thisInterpreter.setProperty(globalObject, name, constructor,\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n    return constructor;\n  };\n\n  this.EVAL_ERROR = createErrorSubclass('EvalError');\n  this.RANGE_ERROR = createErrorSubclass('RangeError');\n  this.REFERENCE_ERROR = createErrorSubclass('ReferenceError');\n  this.SYNTAX_ERROR = createErrorSubclass('SyntaxError');\n  this.TYPE_ERROR = createErrorSubclass('TypeError');\n  this.URI_ERROR = createErrorSubclass('URIError');\n};\n\n/**\n * Initialize Math object.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initMath = function(globalObject) {\n  var myMath = this.createObjectProto(this.OBJECT_PROTO);\n  this.setProperty(globalObject, 'Math', myMath,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  var mathConsts = ['E', 'LN2', 'LN10', 'LOG2E', 'LOG10E', 'PI',\n                    'SQRT1_2', 'SQRT2'];\n  for (var i = 0; i < mathConsts.length; i++) {\n    this.setProperty(myMath, mathConsts[i], Math[mathConsts[i]],\n        Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  }\n  var numFunctions = ['abs', 'acos', 'asin', 'atan', 'atan2', 'ceil', 'cos',\n                      'exp', 'floor', 'log', 'max', 'min', 'pow', 'random',\n                      'round', 'sin', 'sqrt', 'tan'];\n  for (var i = 0; i < numFunctions.length; i++) {\n    this.setProperty(myMath, numFunctions[i],\n        this.createNativeFunction(Math[numFunctions[i]], false),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n};\n\n/**\n * Initialize JSON object.\n * @param {!Interpreter.Object} globalObject Global object.\n */\nInterpreter.prototype.initJSON = function(globalObject) {\n  var wrapper;\n  var thisInterpreter = this;\n  var myJSON = thisInterpreter.createObjectProto(this.OBJECT_PROTO);\n  this.setProperty(globalObject, 'JSON', myJSON,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  wrapper = function parse(text) {\n    try {\n      var nativeObj = JSON.parse(String(text));\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, e.message);\n    }\n    return thisInterpreter.nativeToPseudo(nativeObj);\n  };\n  this.setProperty(myJSON, 'parse', this.createNativeFunction(wrapper, false));\n\n  wrapper = function stringify(value, replacer, space) {\n    if (replacer && replacer.class === 'Function') {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR,\n          'Function replacer on JSON.stringify not supported');\n    } else if (replacer && replacer.class === 'Array') {\n      replacer = thisInterpreter.arrayPseudoToNative(replacer);\n      replacer = replacer.filter(function(word) {\n        // Spec says we should also support boxed primitives here.\n        return typeof word === 'string' || typeof word === 'number';\n      });\n    } else {\n      replacer = null;\n    }\n    // Spec says we should also support boxed primitives here.\n    if (typeof space !== 'string' && typeof space !== 'number') {\n      space = undefined;\n    }\n\n    var nativeObj = thisInterpreter.pseudoToNative(value);\n    try {\n      var str = JSON.stringify(nativeObj, replacer, space);\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, e.message);\n    }\n    return str;\n  };\n  this.setProperty(myJSON, 'stringify',\n      this.createNativeFunction(wrapper, false));\n};\n\n/**\n * Is an object of a certain class?\n * @param {Interpreter.Value} child Object to check.\n * @param {Interpreter.Object} constructor Constructor of object.\n * @returns {boolean} True if object is the class or inherits from it.\n *     False otherwise.\n */\nInterpreter.prototype.isa = function(child, constructor) {\n  if (child === null || child === undefined || !constructor) {\n    return false;\n  }\n  var proto = constructor.properties['prototype'];\n  if (child === proto) {\n    return true;\n  }\n  // The first step up the prototype chain is harder since the child might be\n  // a primitive value.  Subsequent steps can just follow the .proto property.\n  child = this.getPrototype(child);\n  while (child) {\n    if (child === proto) {\n      return true;\n    }\n    child = child.proto;\n  }\n  return false;\n};\n\n/**\n * Initialize a pseudo regular expression object based on a native regular\n * expression object.\n * @param {!Interpreter.Object} pseudoRegexp The existing object to set.\n * @param {!RegExp} nativeRegexp The native regular expression.\n */\nInterpreter.prototype.populateRegExp = function(pseudoRegexp, nativeRegexp) {\n  pseudoRegexp.data = new RegExp(nativeRegexp.source, nativeRegexp.flags);\n  // lastIndex is settable, all others are read-only attributes\n  this.setProperty(pseudoRegexp, 'lastIndex', nativeRegexp.lastIndex,\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'source', nativeRegexp.source,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'global', nativeRegexp.global,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'ignoreCase', nativeRegexp.ignoreCase,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, 'multiline', nativeRegexp.multiline,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Initialize a pseudo error object.\n * @param {!Interpreter.Object} pseudoError The existing object to set.\n * @param {string=} opt_message Error's message.\n */\nInterpreter.prototype.populateError = function(pseudoError, opt_message) {\n  if (opt_message) {\n    this.setProperty(pseudoError, 'message', String(opt_message),\n        Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n  var tracebackData = [];\n  for (var i = this.stateStack.length - 1; i >= 0; i--) {\n    var state = this.stateStack[i];\n    var node = state.node;\n    if (node.type === 'CallExpression') {\n      var func = state.func_;\n      if (func && tracebackData.length) {\n        tracebackData[tracebackData.length - 1].datumName =\n            this.getProperty(func, 'name');\n      }\n    }\n    if (node.loc &&\n        (!tracebackData.length || node.type === 'CallExpression')) {\n      tracebackData.push({datumLoc: node.loc});\n    }\n  }\n  var errorName = String(this.getProperty(pseudoError, 'name'));\n  var errorMessage = String(this.getProperty(pseudoError, 'message'));\n  var stackString = errorName + ': ' + errorMessage + '\\n';\n  for (var i = 0; i < tracebackData.length; i++) {\n    var loc = tracebackData[i].datumLoc;\n    var name = tracebackData[i].datumName;\n    var locString = loc.source + ':' +\n        loc.start.line + ':' + loc.start.column;\n    if (name) {\n      stackString += '  at ' + name + ' (' + locString + ')\\n';\n    } else {\n      stackString += '  at ' + locString + '\\n';\n    }\n  }\n  this.setProperty(pseudoError, 'stack', stackString.trim(),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Create a Web Worker to execute regular expressions.\n * Using a separate file fails in Chrome when run locally on a file:// URI.\n * Using a data encoded URI fails in IE and Edge.\n * Using a blob works in IE11 and all other browsers.\n * @returns {!Worker} Web Worker with regexp execution code loaded.\n */\nInterpreter.prototype.createWorker = function() {\n  var blob = this.createWorker.blob_;\n  if (!blob) {\n    blob = new Blob([Interpreter.WORKER_CODE.join('\\n')],\n        {type: 'application/javascript'});\n    // Cache the blob, so it doesn't need to be created next time.\n    this.createWorker.blob_ = blob;\n  }\n  return new Worker(URL.createObjectURL(blob));\n};\n\n/**\n * Execute regular expressions in a node vm.\n * @param {string} code Code to execute.\n * @param {!Object} sandbox Global variables for new vm.\n * @param {!RegExp} nativeRegExp Regular expression.\n * @param {!Function} callback Asynchronous callback function.\n */\nInterpreter.prototype.vmCall = function(code, sandbox, nativeRegExp, callback) {\n  var options = {'timeout': this['REGEXP_THREAD_TIMEOUT']};\n  try {\n    return Interpreter.vm['runInNewContext'](code, sandbox, options);\n  } catch (_e) {\n    callback(null);\n    this.throwException(this.ERROR, 'RegExp Timeout: ' + nativeRegExp);\n  }\n  return Interpreter.REGEXP_TIMEOUT;\n};\n\n/**\n * If REGEXP_MODE is 0, then throw an error.\n * Also throw if REGEXP_MODE is 2 and JS doesn't support Web Workers or vm.\n * @param {!RegExp} nativeRegExp Regular expression.\n * @param {!Function} callback Asynchronous callback function.\n */\nInterpreter.prototype.maybeThrowRegExp = function(nativeRegExp, callback) {\n  var ok;\n  if (this['REGEXP_MODE'] === 0) {\n    // Fail: No RegExp support.\n    ok = false;\n  } else if (this['REGEXP_MODE'] === 1) {\n    // Ok: Native RegExp support.\n    ok = true;\n  } else {\n    // Sandboxed RegExp handling.\n    if (Interpreter.vm) {\n      // Ok: Node's vm module already loaded.\n      ok = true;\n    } else if (typeof Worker === 'function' && typeof URL === 'function') {\n      // Ok: Web Workers available.\n      ok = true;\n    } else if (true) {\n      // Try to load Node's vm module.\n      try {\n        Interpreter.vm = __webpack_require__(/*! vm */ \"vm\");\n      } catch (_e) {}\n      ok = !!Interpreter.vm;\n    } else {}\n  }\n  if (!ok) {\n    callback(null);\n    this.throwException(this.ERROR, 'Regular expressions not supported: ' +\n        nativeRegExp);\n  }\n};\n\n/**\n * Set a timeout for regular expression threads.  Unless cancelled, this will\n * terminate the thread and throw an error.\n * @param {!RegExp} nativeRegExp Regular expression (used for error message).\n * @param {!Worker} worker Thread to terminate.\n * @param {!Function} callback Async callback function to continue execution.\n * @returns {number} PID of timeout.  Used to cancel if thread completes.\n */\nInterpreter.prototype.regExpTimeout = function(nativeRegExp, worker, callback) {\n  var thisInterpreter = this;\n  return setTimeout(function() {\n      worker.terminate();\n      callback(null);\n      try {\n        thisInterpreter.throwException(thisInterpreter.ERROR,\n            'RegExp Timeout: ' + nativeRegExp);\n      } catch (_e) {\n        // Eat the expected Interpreter.STEP_ERROR.\n      }\n  }, this['REGEXP_THREAD_TIMEOUT']);\n};\n\n/**\n * Create a new data object based on a constructor's prototype.\n * @param {Interpreter.Object} constructor Parent constructor function,\n *     or null if scope object.\n * @returns {!Interpreter.Object} New data object.\n */\nInterpreter.prototype.createObject = function(constructor) {\n  return this.createObjectProto(constructor &&\n                                constructor.properties['prototype']);\n};\n\n/**\n * Create a new data object based on a prototype.\n * @param {Interpreter.Object} proto Prototype object.\n * @returns {!Interpreter.Object} New data object.\n */\nInterpreter.prototype.createObjectProto = function(proto) {\n  if (typeof proto !== 'object') {\n    throw Error('Non object prototype');\n  }\n  var obj = new Interpreter.Object(proto);\n  if (this.isa(obj, this.ERROR)) {\n    // Record this object as being an error so that its toString function can\n    // process it correctly (toString has no access to the interpreter and could\n    // not otherwise determine that the object is an error).\n    obj.class = 'Error';\n  }\n  return obj;\n};\n\n/**\n * Create a new array.\n * @returns {!Interpreter.Object} New array.\n */\nInterpreter.prototype.createArray = function() {\n  var array = this.createObjectProto(this.ARRAY_PROTO);\n  // Arrays have length.\n  this.setProperty(array, 'length', 0,\n      {'configurable': false, 'enumerable': false, 'writable': true});\n  array.class = 'Array';\n  return array;\n};\n\n/**\n * Create a new function object (could become interpreted or native or async).\n * @param {number} argumentLength Number of arguments.\n * @param {boolean} isConstructor True if function can be used with 'new'.\n * @returns {!Interpreter.Object} New function.\n * @private\n */\nInterpreter.prototype.createFunctionBase_ = function(argumentLength,\n                                                     isConstructor) {\n  var func = this.createObjectProto(this.FUNCTION_PROTO);\n  if (isConstructor) {\n    var proto = this.createObjectProto(this.OBJECT_PROTO);\n    this.setProperty(func, 'prototype', proto,\n                     Interpreter.NONENUMERABLE_DESCRIPTOR);\n    this.setProperty(proto, 'constructor', func,\n                     Interpreter.NONENUMERABLE_DESCRIPTOR);\n  } else {\n    func.illegalConstructor = true;\n  }\n  this.setProperty(func, 'length', argumentLength,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  func.class = 'Function';\n  // When making changes to this function, check to see if those changes also\n  // need to be made to the creation of FUNCTION_PROTO in initFunction.\n  return func;\n};\n\n/**\n * Create a new interpreted function.\n * @param {!Object} node AST node defining the function.\n * @param {!Interpreter.Scope} scope Parent scope.\n * @param {string=} opt_name Optional name for function.\n * @returns {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createFunction = function(node, scope, opt_name) {\n  var func = this.createFunctionBase_(node.params.length, true);\n  func.parentScope = scope;\n  func.node = node;\n  // Choose a name for this function.\n  // function foo() {}             -> 'foo'\n  // var bar = function() {};      -> 'bar'\n  // var bar = function foo() {};  -> 'foo'\n  // foo.bar = function() {};      -> ''\n  // var bar = new Function('');   -> 'anonymous'\n  var name = node.id ? String(node.id.name) : (opt_name || '');\n  this.setProperty(func, 'name', name,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Create a new native function.\n * @param {!Function} nativeFunc JavaScript function.\n * @param {boolean} isConstructor True if function can be used with 'new'.\n * @returns {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createNativeFunction = function(nativeFunc,\n                                                      isConstructor) {\n  var func = this.createFunctionBase_(nativeFunc.length, isConstructor);\n  func.nativeFunc = nativeFunc;\n  nativeFunc.id = this.functionCounter_++;\n  this.setProperty(func, 'name', nativeFunc.name,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Create a new native asynchronous function.\n * @param {!Function} asyncFunc JavaScript function.\n * @returns {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createAsyncFunction = function(asyncFunc) {\n  var func = this.createFunctionBase_(asyncFunc.length, true);\n  func.asyncFunc = asyncFunc;\n  asyncFunc.id = this.functionCounter_++;\n  this.setProperty(func, 'name', asyncFunc.name,\n      Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Converts from a native JavaScript object or value to a JS-Interpreter object.\n * Can handle JSON-style values, regular expressions, dates and functions.\n * Does NOT handle cycles.\n * @param {*} nativeObj The native JavaScript object to be converted.\n * @returns {Interpreter.Value} The equivalent JS-Interpreter object.\n */\nInterpreter.prototype.nativeToPseudo = function(nativeObj) {\n  if (nativeObj instanceof Interpreter.Object) {\n    throw Error('Object is already pseudo');\n  }\n  if (nativeObj === null || nativeObj === undefined ||\n      nativeObj === true || nativeObj === false ||\n      typeof nativeObj === 'string' || typeof nativeObj === 'number') {\n    return nativeObj;\n  }\n\n  if (nativeObj instanceof RegExp) {\n    var pseudoRegexp = this.createObjectProto(this.REGEXP_PROTO);\n    this.populateRegExp(pseudoRegexp, nativeObj);\n    return pseudoRegexp;\n  }\n\n  if (nativeObj instanceof Date) {\n    var pseudoDate = this.createObjectProto(this.DATE_PROTO);\n    pseudoDate.data = new Date(nativeObj.valueOf());\n    return pseudoDate;\n  }\n\n  if (typeof nativeObj === 'function') {\n    var thisInterpreter = this;\n    var wrapper = function() {\n      var args = Array.prototype.slice.call(arguments).map(function(i) {\n          return thisInterpreter.pseudoToNative(i);\n      });\n      var value = nativeObj.apply(thisInterpreter, args);\n      return thisInterpreter.nativeToPseudo(value);\n    };\n    var prototype = Object.getOwnPropertyDescriptor(nativeObj, 'prototype');\n    return this.createNativeFunction(wrapper, !!prototype);\n  }\n\n  if (Array.isArray(nativeObj)) {  // Array.\n    var pseudoArray = this.createArray();\n    for (var i = 0; i < nativeObj.length; i++) {\n      if (i in nativeObj) {\n        this.setProperty(pseudoArray, i, this.nativeToPseudo(nativeObj[i]));\n      }\n    }\n    return pseudoArray;\n  }\n\n  // Object.\n  var pseudoObj = this.createObjectProto(this.OBJECT_PROTO);\n  for (var key in nativeObj) {\n    this.setProperty(pseudoObj, key, this.nativeToPseudo(nativeObj[key]));\n  }\n  return pseudoObj;\n};\n\n/**\n * Converts from a JS-Interpreter object to native JavaScript object.\n * Can handle JSON-style values, regular expressions, and dates.\n * Does handle cycles.\n * @param {Interpreter.Value} pseudoObj The JS-Interpreter object to be\n * converted.\n * @param {Object=} opt_cycles Cycle detection object (used by recursive calls).\n * @returns {*} The equivalent native JavaScript object or value.\n */\nInterpreter.prototype.pseudoToNative = function(pseudoObj, opt_cycles) {\n  if ((typeof pseudoObj !== 'object' && typeof pseudoObj !== 'function') ||\n      pseudoObj === null) {\n    return pseudoObj;\n  }\n  if (!(pseudoObj instanceof Interpreter.Object)) {\n    throw Error('Object is not pseudo');\n  }\n\n  if (this.isa(pseudoObj, this.REGEXP)) {  // Regular expression.\n    var nativeRegExp = new RegExp(pseudoObj.data.source, pseudoObj.data.flags);\n    nativeRegExp.lastIndex = pseudoObj.data.lastIndex;\n    return nativeRegExp;\n  }\n\n  if (this.isa(pseudoObj, this.DATE)) {  // Date.\n    return new Date(pseudoObj.data.valueOf());\n  }\n\n  var cycles = opt_cycles || {\n    pseudo: [],\n    native: [],\n  };\n  var index = cycles.pseudo.indexOf(pseudoObj);\n  if (index !== -1) {\n    return cycles.native[index];\n  }\n  cycles.pseudo.push(pseudoObj);\n  var nativeObj;\n  if (this.isa(pseudoObj, this.ARRAY)) {  // Array.\n    nativeObj = [];\n    cycles.native.push(nativeObj);\n    var len = this.getProperty(pseudoObj, 'length');\n    for (var i = 0; i < len; i++) {\n      if (this.hasProperty(pseudoObj, i)) {\n        nativeObj[i] =\n            this.pseudoToNative(this.getProperty(pseudoObj, i), cycles);\n      }\n    }\n  } else {  // Object.\n    nativeObj = {};\n    cycles.native.push(nativeObj);\n    var val;\n    for (var key in pseudoObj.properties) {\n      val = this.pseudoToNative(pseudoObj.properties[key], cycles);\n      // Use defineProperty to avoid side effects if setting '__proto__'.\n      Object.defineProperty(nativeObj, key,\n          {'value': val, 'writable': true, 'enumerable': true,\n           'configurable': true});\n    }\n  }\n  cycles.pseudo.pop();\n  cycles.native.pop();\n  return nativeObj;\n};\n\n/**\n * Converts from a native JavaScript array to a JS-Interpreter array.\n * Does handle non-numeric properties (like str.match's index prop).\n * Does NOT recurse into the array's contents.\n * @param {!Array} nativeArray The JavaScript array to be converted.\n * @returns {!Interpreter.Object} The equivalent JS-Interpreter array.\n */\nInterpreter.prototype.arrayNativeToPseudo = function(nativeArray) {\n  var pseudoArray = this.createArray();\n  var props = /** @type {!Array<?>} */(Object.getOwnPropertyNames(nativeArray));\n  for (var i = 0; i < props.length; i++) {\n    this.setProperty(pseudoArray, props[i], nativeArray[props[i]]);\n  }\n  return pseudoArray;\n};\n\n/**\n * Converts from a JS-Interpreter array to native JavaScript array.\n * Does handle non-numeric properties (like str.match's index prop).\n * Does NOT recurse into the array's contents.\n * @param {!Interpreter.Object} pseudoArray The JS-Interpreter array,\n *     or JS-Interpreter object pretending to be an array.\n * @returns {!Array} The equivalent native JavaScript array.\n */\nInterpreter.prototype.arrayPseudoToNative = function(pseudoArray) {\n  var nativeArray = [];\n  for (var key in pseudoArray.properties) {\n    nativeArray[/** @type {?} */(key)] = this.getProperty(pseudoArray, key);\n  }\n  // pseudoArray might be an object pretending to be an array.  In this case\n  // it's possible that length is non-existent, invalid, or smaller than the\n  // largest defined numeric property.  Set length explicitly here.\n  nativeArray.length = Interpreter.legalArrayLength(\n      this.getProperty(pseudoArray, 'length')) || 0;\n  return nativeArray;\n};\n\n/**\n * Look up the prototype for this value.\n * @param {Interpreter.Value} value Data object.\n * @returns {Interpreter.Object} Prototype object, null if none.\n */\nInterpreter.prototype.getPrototype = function(value) {\n  switch (typeof value) {\n    case 'number':\n      return this.NUMBER.properties['prototype'];\n    case 'boolean':\n      return this.BOOLEAN.properties['prototype'];\n    case 'string':\n      return this.STRING.properties['prototype'];\n  }\n  if (value) {\n    return value.proto;\n  }\n  return null;\n};\n\n/**\n * Fetch a property value from a data object.\n * @param {Interpreter.Value} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @returns {Interpreter.Value} Property value (may be undefined).\n */\nInterpreter.prototype.getProperty = function(obj, name) {\n  if (this.getterStep_) {\n    throw Error('Getter not supported in that context');\n  }\n  name = String(name);\n  if (obj === undefined || obj === null) {\n    this.throwException(this.TYPE_ERROR,\n                        \"Cannot read property '\" + name + \"' of \" + obj);\n  }\n  if (typeof obj === 'object' && !(obj instanceof Interpreter.Object)) {\n    throw TypeError('Expecting native value or pseudo object');\n  }\n  if (name === 'length') {\n    // Special cases for magic length property.\n    if (this.isa(obj, this.STRING)) {\n      return String(obj).length;\n    }\n  } else if (name.charCodeAt(0) < 0x40) {\n    // Might have numbers in there?\n    // Special cases for string array indexing\n    if (this.isa(obj, this.STRING)) {\n      var n = Interpreter.legalArrayIndex(name);\n      if (!isNaN(n) && n < String(obj).length) {\n        return String(obj)[n];\n      }\n    }\n  }\n  do {\n    if (obj.properties && name in obj.properties) {\n      var getter = obj.getter[name];\n      if (getter) {\n        // Flag this function as being a getter and thus needing immediate\n        // execution (rather than being the value of the property).\n        this.getterStep_ = true;\n        return getter;\n      }\n      return obj.properties[name];\n    }\n  } while ((obj = this.getPrototype(obj)));\n  return undefined;\n};\n\n/**\n * Does the named property exist on a data object.\n * @param {Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @returns {boolean} True if property exists.\n */\nInterpreter.prototype.hasProperty = function(obj, name) {\n  if (!(obj instanceof Interpreter.Object)) {\n    throw TypeError('Primitive data type has no properties');\n  }\n  name = String(name);\n  if (name === 'length' && this.isa(obj, this.STRING)) {\n    return true;\n  }\n  if (this.isa(obj, this.STRING)) {\n    var n = Interpreter.legalArrayIndex(name);\n    if (!isNaN(n) && n < String(obj).length) {\n      return true;\n    }\n  }\n  do {\n    if (obj.properties && name in obj.properties) {\n      return true;\n    }\n  } while ((obj = this.getPrototype(obj)));\n  return false;\n};\n\n/**\n * Set a property value on a data object.\n * @param {Interpreter.Value} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {Interpreter.Value} value New property value.\n *     Use Interpreter.VALUE_IN_DESCRIPTOR if value is handled by\n *     descriptor instead.\n * @param {Object=} opt_descriptor Optional descriptor object.\n * @returns {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setProperty = function(obj, name, value, opt_descriptor) {\n  if (this.setterStep_) {\n    // Getter from previous call to setProperty was not handled.\n    throw Error('Setter not supported in that context');\n  }\n  name = String(name);\n  if (obj === undefined || obj === null) {\n    this.throwException(this.TYPE_ERROR,\n                        \"Cannot set property '\" + name + \"' of \" + obj);\n  }\n  if (typeof obj === 'object' && !(obj instanceof Interpreter.Object)) {\n    throw TypeError('Expecting native value or pseudo object');\n  }\n  if (opt_descriptor && ('get' in opt_descriptor || 'set' in opt_descriptor) &&\n      ('value' in opt_descriptor || 'writable' in opt_descriptor)) {\n    this.throwException(this.TYPE_ERROR, 'Invalid property descriptor. ' +\n        'Cannot both specify accessors and a value or writable attribute');\n  }\n  var strict = !this.stateStack || this.getScope().strict;\n  if (!(obj instanceof Interpreter.Object)) {\n    if (strict) {\n      this.throwException(this.TYPE_ERROR, \"Can't create property '\" + name +\n                          \"' on '\" + obj + \"'\");\n    }\n    return;\n  }\n  if (this.isa(obj, this.STRING)) {\n    var n = Interpreter.legalArrayIndex(name);\n    if (name === 'length' || (!isNaN(n) && n < String(obj).length)) {\n      // Can't set length or letters on String objects.\n      if (strict) {\n        this.throwException(this.TYPE_ERROR, \"Cannot assign to read only \" +\n            \"property '\" + name + \"' of String '\" + obj.data + \"'\");\n      }\n      return;\n    }\n  }\n  if (obj.class === 'Array') {\n    // Arrays have a magic length variable that is bound to the elements.\n    var len = obj.properties.length;\n    var i;\n    if (name === 'length') {\n      // Delete elements if length is smaller.\n      if (opt_descriptor) {\n        if (!('value' in opt_descriptor)) {\n          return;\n        }\n        value = opt_descriptor['value'];\n      }\n      value = Interpreter.legalArrayLength(value);\n      if (isNaN(value)) {\n        this.throwException(this.RANGE_ERROR, 'Invalid array length');\n      }\n      if (value < len) {\n        for (i in obj.properties) {\n          i = Interpreter.legalArrayIndex(i);\n          if (!isNaN(i) && value <= i) {\n            delete obj.properties[i];\n          }\n        }\n      }\n    } else if (!isNaN(i = Interpreter.legalArrayIndex(name))) {\n      // Increase length if this index is larger.\n      obj.properties.length = Math.max(len, i + 1);\n    }\n  }\n  if (obj.preventExtensions && !(name in obj.properties)) {\n    if (strict) {\n      this.throwException(this.TYPE_ERROR, \"Can't add property '\" + name +\n                          \"', object is not extensible\");\n    }\n    return;\n  }\n  if (opt_descriptor) {\n    // Define the property.\n    var descriptor = {};\n    if ('get' in opt_descriptor && opt_descriptor['get']) {\n      obj.getter[name] = opt_descriptor['get'];\n      descriptor['get'] = this.setProperty.placeholderGet_;\n    }\n    if ('set' in opt_descriptor && opt_descriptor['set']) {\n      obj.setter[name] = opt_descriptor['set'];\n      descriptor['set'] = this.setProperty.placeholderSet_;\n    }\n    if ('configurable' in opt_descriptor) {\n      descriptor['configurable'] = opt_descriptor['configurable'];\n    }\n    if ('enumerable' in opt_descriptor) {\n      descriptor['enumerable'] = opt_descriptor['enumerable'];\n    }\n    if ('writable' in opt_descriptor) {\n      descriptor['writable'] = opt_descriptor['writable'];\n      delete obj.getter[name];\n      delete obj.setter[name];\n    }\n    if ('value' in opt_descriptor) {\n      descriptor['value'] = opt_descriptor['value'];\n      delete obj.getter[name];\n      delete obj.setter[name];\n    } else if (value !== Interpreter.VALUE_IN_DESCRIPTOR) {\n      descriptor['value'] = value;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    }\n    try {\n      Object.defineProperty(obj.properties, name, descriptor);\n    } catch (e) {\n      this.throwException(this.TYPE_ERROR, 'Cannot redefine property: ' + name);\n    }\n    // Now that the definition has suceeded, clean up any obsolete get/set funcs.\n    if ('get' in opt_descriptor && !opt_descriptor['get']) {\n      delete obj.getter[name];\n    }\n    if ('set' in opt_descriptor && !opt_descriptor['set']) {\n      delete obj.setter[name];\n    }\n  } else {\n    // Set the property.\n    if (value === Interpreter.VALUE_IN_DESCRIPTOR) {\n      throw ReferenceError('Value not specified');\n    }\n    // Determine the parent (possibly self) where the property is defined.\n    var defObj = obj;\n    while (!(name in defObj.properties)) {\n      defObj = this.getPrototype(defObj);\n      if (!defObj) {\n        // This is a new property.\n        defObj = obj;\n        break;\n      }\n    }\n    if (defObj.setter && defObj.setter[name]) {\n      this.setterStep_ = true;\n      return defObj.setter[name];\n    }\n    if (defObj.getter && defObj.getter[name]) {\n      if (strict) {\n        this.throwException(this.TYPE_ERROR, \"Cannot set property '\" + name +\n            \"' of object '\" + obj + \"' which only has a getter\");\n      }\n    } else {\n      // No setter, simple assignment.\n      try {\n        obj.properties[name] = value;\n      } catch (_e) {\n        if (strict) {\n          this.throwException(this.TYPE_ERROR, \"Cannot assign to read only \" +\n              \"property '\" + name + \"' of object '\" + obj + \"'\");\n        }\n      }\n    }\n  }\n};\n\nInterpreter.prototype.setProperty.placeholderGet_ =\n    function() {throw Error('Placeholder getter');};\nInterpreter.prototype.setProperty.placeholderSet_ =\n    function() {throw Error('Placeholder setter');};\n\n/**\n * Convenience method for adding a native function as a non-enumerable property\n * onto an object's prototype.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {!Function} wrapper Function object.\n */\nInterpreter.prototype.setNativeFunctionPrototype =\n    function(obj, name, wrapper) {\n  this.setProperty(obj.properties['prototype'], name,\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Convenience method for adding an async function as a non-enumerable property\n * onto an object's prototype.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {!Function} wrapper Function object.\n */\nInterpreter.prototype.setAsyncFunctionPrototype =\n    function(obj, name, wrapper) {\n  this.setProperty(obj.properties['prototype'], name,\n      this.createAsyncFunction(wrapper),\n      Interpreter.NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Returns the current scope from the stateStack.\n * @returns {!Interpreter.Scope} Current scope.\n */\nInterpreter.prototype.getScope = function() {\n  var scope = this.stateStack[this.stateStack.length - 1].scope;\n  if (!scope) {\n    throw Error('No scope found');\n  }\n  return scope;\n};\n\n/**\n * Create a new scope dictionary.\n * @param {!Object} node AST node defining the scope container\n *     (e.g. a function).\n * @param {Interpreter.Scope} parentScope Scope to link to.\n * @returns {!Interpreter.Scope} New scope.\n */\nInterpreter.prototype.createScope = function(node, parentScope) {\n  // Determine if this scope starts with `use strict`.\n  var strict = false;\n  if (parentScope && parentScope.strict) {\n    strict = true;\n  } else {\n    var firstNode = node.body && node.body[0];\n    if (firstNode && firstNode.expression &&\n        firstNode.expression.type === 'Literal' &&\n        firstNode.expression.value === 'use strict') {\n      strict = true;\n    }\n  }\n  var object = this.createObjectProto(null);\n  var scope = new Interpreter.Scope(parentScope, strict, object);\n  if (!parentScope) {\n    this.initGlobal(scope.object);\n  }\n  this.populateScope_(node, scope);\n  return scope;\n};\n\n/**\n * Create a new special scope dictionary. Similar to createScope(), but\n * doesn't assume that the scope is for a function body.\n * This is used for 'catch' clauses, 'with' statements,\n * and named function expressions.\n * @param {!Interpreter.Scope} parentScope Scope to link to.\n * @param {Interpreter.Object=} opt_object Optional object to transform into\n *     scope.\n * @returns {!Interpreter.Scope} New scope.\n */\nInterpreter.prototype.createSpecialScope = function(parentScope, opt_object) {\n  if (!parentScope) {\n    throw Error('parentScope required');\n  }\n  var object = opt_object || this.createObjectProto(null);\n  return new Interpreter.Scope(parentScope, parentScope.strict, object);\n};\n\n/**\n * Retrieves a value from the scope chain.\n * @param {string} name Name of variable.\n * @returns {Interpreter.Value} Any value.\n *   May be flagged as being a getter and thus needing immediate execution\n *   (rather than being the value of the property).\n */\nInterpreter.prototype.getValueFromScope = function(name) {\n  var scope = this.getScope();\n  while (scope && scope !== this.globalScope) {\n    if (name in scope.object.properties) {\n      return scope.object.properties[name];\n    }\n    scope = scope.parentScope;\n  }\n  // The root scope is also an object which has inherited properties and\n  // could also have getters.\n  if (scope === this.globalScope && this.hasProperty(scope.object, name)) {\n    return this.getProperty(scope.object, name);\n  }\n  // Typeof operator is unique: it can safely look at non-defined variables.\n  var prevNode = this.stateStack[this.stateStack.length - 1].node;\n  if (prevNode.type === 'UnaryExpression' &&\n      prevNode.operator === 'typeof') {\n    return undefined;\n  }\n  this.throwException(this.REFERENCE_ERROR, name + ' is not defined');\n};\n\n/**\n * Sets a value to the current scope.\n * @param {string} name Name of variable.\n * @param {Interpreter.Value} value Value.\n * @returns {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setValueToScope = function(name, value) {\n  var scope = this.getScope();\n  var strict = scope.strict;\n  while (scope && scope !== this.globalScope) {\n    if (name in scope.object.properties) {\n      try {\n        scope.object.properties[name] = value;\n      } catch (_e) {\n        if (strict) {\n          this.throwException(this.TYPE_ERROR,\n              \"Cannot assign to read only variable '\" + name + \"'\");\n        }\n      }\n      return undefined;\n    }\n    scope = scope.parentScope;\n  }\n  // The root scope is also an object which has readonly properties and\n  // could also have setters.\n  if (scope === this.globalScope &&\n      (!strict || this.hasProperty(scope.object, name))) {\n    return this.setProperty(scope.object, name, value);\n  }\n  this.throwException(this.REFERENCE_ERROR, name + ' is not defined');\n};\n\n/**\n * Create a new scope for the given node and populate it with all variables\n * and named functions.\n * @param {!Object} node AST node (usually a program or function when initally\n *   calling this function, though it recurses to scan many child nodes).\n * @param {!Interpreter.Scope} scope Scope dictionary to populate.\n * @returns {!Object} Map of all variable and function names.\n * @private\n */\nInterpreter.prototype.populateScope_ = function(node, scope) {\n  var variableCache;\n  if (!node.variableCache_) {\n    variableCache = Object.create(null);\n    switch (node.type) {\n      case 'VariableDeclaration':\n        for (var i = 0; i < node.declarations.length; i++) {\n          variableCache[node.declarations[i].id.name] = true;\n        }\n        break;\n      case 'FunctionDeclaration':\n        variableCache[node.id.name] = node;\n        break;\n      case 'BlockStatement':\n      case 'CatchClause':\n      case 'DoWhileStatement':\n      case 'ForInStatement':\n      case 'ForStatement':\n      case 'IfStatement':\n      case 'LabeledStatement':\n      case 'Program':\n      case 'SwitchCase':\n      case 'SwitchStatement':\n      case 'TryStatement':\n      case 'WithStatement':\n      case 'WhileStatement':\n        // All the structures within which a variable or function could hide.\n        var nodeClass = node.constructor;\n        for (var name in node) {\n          if (name === 'loc') continue;\n          var prop = node[name];\n          if (prop && typeof prop === 'object') {\n            var childCache;\n            if (Array.isArray(prop)) {\n              for (var i = 0; i < prop.length; i++) {\n                if (prop[i] && prop[i].constructor === nodeClass) {\n                  childCache = this.populateScope_(prop[i], scope);\n                  for (var name in childCache) {\n                    variableCache[name] = childCache[name];\n                  }\n                }\n              }\n            } else {\n              if (prop.constructor === nodeClass) {\n                childCache = this.populateScope_(prop, scope);\n                for (var name in childCache) {\n                  variableCache[name] = childCache[name];\n                }\n              }\n            }\n          }\n        }\n    }\n    node.variableCache_ = variableCache;\n  } else {\n    variableCache = node.variableCache_;\n  }\n  for (var name in variableCache) {\n    if (variableCache[name] === true) {\n      this.setProperty(scope.object, name, undefined,\n          Interpreter.VARIABLE_DESCRIPTOR);\n    } else {\n      this.setProperty(scope.object, name,\n          this.createFunction(variableCache[name], scope),\n          Interpreter.VARIABLE_DESCRIPTOR);\n    }\n  }\n  return variableCache;\n};\n\n/**\n * Is the current state directly being called with as a construction with 'new'.\n * @returns {boolean} True if 'new foo()', false if 'foo()'.\n */\nInterpreter.prototype.calledWithNew = function() {\n  return this.stateStack[this.stateStack.length - 1].isConstructor;\n};\n\n/**\n * Gets a value from the scope chain or from an object property.\n * @param {!Array} ref Name of variable or object/propname tuple.\n * @returns {Interpreter.Value} Any value.\n *   May be flagged as being a getter and thus needing immediate execution\n *   (rather than being the value of the property).\n */\nInterpreter.prototype.getValue = function(ref) {\n  if (ref[0] === Interpreter.SCOPE_REFERENCE) {\n    // A null/varname variable lookup.\n    return this.getValueFromScope(ref[1]);\n  } else {\n    // An obj/prop components tuple (foo.bar).\n    return this.getProperty(ref[0], ref[1]);\n  }\n};\n\n/**\n * Sets a value to the scope chain or to an object property.\n * @param {!Array} ref Name of variable or object/propname tuple.\n * @param {Interpreter.Value} value Value.\n * @returns {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setValue = function(ref, value) {\n  if (ref[0] === Interpreter.SCOPE_REFERENCE) {\n    // A null/varname variable lookup.\n    return this.setValueToScope(ref[1], value);\n  }\n  // An obj/prop components tuple (foo.bar).\n  return this.setProperty(ref[0], ref[1], value);\n};\n\n/**\n * Throw an exception in the interpreter that can be handled by an\n * interpreter try/catch statement.  If unhandled, a real exception will\n * be thrown.  Can be called with either an error class and a message, or\n * with an actual object to be thrown.\n * @param {!Interpreter.Object|Interpreter.Value} errorClass Type of error\n *   (if message is provided) or the value to throw (if no message).\n * @param {string=} opt_message Message being thrown.\n */\nInterpreter.prototype.throwException = function(errorClass, opt_message) {\n  if (!this.globalScope) {\n    // This is an error being thrown in the initialization, throw a real error.\n    throw (opt_message === undefined) ? errorClass : opt_message;\n  }\n  if (opt_message === undefined ||\n      !(errorClass instanceof Interpreter.Object)) {\n    var error = errorClass;  // This is a value to throw, not an error class.\n  } else {\n    var error = this.createObject(errorClass);\n    this.populateError(error, opt_message);\n  }\n  this.unwind(Interpreter.Completion.THROW, error, undefined);\n  // Abort anything related to the current step.\n  throw Interpreter.STEP_ERROR;\n};\n\n/**\n * Unwind the stack to the innermost relevant enclosing TryStatement,\n * For/ForIn/WhileStatement or Call/NewExpression.  If this results in\n * the stack being completely unwound the thread will be terminated\n * and the appropriate error being thrown.\n * @param {Interpreter.Completion} type Completion type.\n * @param {Interpreter.Value} value Value computed, returned or thrown.\n * @param {string|undefined} label Target label for break or return.\n */\nInterpreter.prototype.unwind = function(type, value, label) {\n  if (type === Interpreter.Completion.NORMAL) {\n    throw TypeError('Should not unwind for NORMAL completions');\n  }\n\n  loop: for (var stack = this.stateStack; stack.length > 0; stack.pop()) {\n    var state = stack[stack.length - 1];\n    switch (state.node.type) {\n      case 'TryStatement':\n        state.cv = {type: type, value: value, label: label};\n        return;\n      case 'CallExpression':\n      case 'NewExpression':\n        if (type === Interpreter.Completion.RETURN) {\n          state.value = value;\n          return;\n        } else if (type !== Interpreter.Completion.THROW) {\n          throw Error('Unsyntactic break/continue not rejected by Acorn');\n        }\n        break;\n      case 'Program':\n        // Don't pop the stateStack.\n        // Leave the root scope on the tree in case the program is appended to.\n        state.done = true;\n        break loop;\n    }\n    if (type === Interpreter.Completion.BREAK) {\n      if (label ? (state.labels && state.labels.indexOf(label) !== -1) :\n          (state.isLoop || state.isSwitch)) {\n        stack.pop();\n        return;\n      }\n    } else if (type === Interpreter.Completion.CONTINUE) {\n      if (label ? (state.labels && state.labels.indexOf(label) !== -1) :\n          state.isLoop) {\n        return;\n      }\n    }\n  }\n\n  // Unhandled completion.  Throw a real error.\n  var realError;\n  if (this.isa(value, this.ERROR)) {\n    var errorTable = {\n      'EvalError': EvalError,\n      'RangeError': RangeError,\n      'ReferenceError': ReferenceError,\n      'SyntaxError': SyntaxError,\n      'TypeError': TypeError,\n      'URIError': URIError,\n    };\n    var name = String(this.getProperty(value, 'name'));\n    var message = this.getProperty(value, 'message').valueOf();\n    var errorConstructor = errorTable[name] || Error;\n    realError = errorConstructor(message);\n    realError.stack = String(this.getProperty(value, 'stack'));\n  } else {\n    realError = String(value);\n  }\n  // Overwrite the previous (more or less random) interpreter return value.\n  // Replace it with the error.\n  this.value = realError;\n  throw realError;\n};\n\n/**\n * AST to code.  Summarizes the expression at the given node.  Currently\n * not guaranteed to be correct or complete.  Used for error messages.\n * E.g. `escape('hello') + 42` -> 'escape(...) + 42'\n * @param {!Object} node AST node.\n * @returns {string} Code string.\n */\nInterpreter.prototype.nodeSummary = function(node) {\n  switch (node.type) {\n    case 'ArrayExpression':\n      return '[...]';\n    case 'BinaryExpression':\n    case 'LogicalExpression':\n      return this.nodeSummary(node.left) + ' ' + node.operator + ' ' +\n          this.nodeSummary(node.right);\n    case 'CallExpression':\n      return this.nodeSummary(node.callee) + '(...)';\n    case 'ConditionalExpression':\n      return this.nodeSummary(node.test) + ' ? ' +\n          this.nodeSummary(node.consequent) + ' : ' +\n          this.nodeSummary(node.alternate);\n    case 'Identifier':\n      return node.name;\n    case 'Literal':\n      return node.raw;\n    case 'MemberExpression':\n      var obj = this.nodeSummary(node.object);\n      var prop = this.nodeSummary(node.property);\n      return node.computed ? (obj + '[' + prop + ']') : (obj + '.' + prop);\n    case 'NewExpression':\n      return 'new ' + this.nodeSummary(node.callee) + '(...)';\n    case 'ObjectExpression':\n      return '{...}';\n    case 'ThisExpression':\n      return 'this';\n    case 'UnaryExpression':\n      return node.operator + ' ' + this.nodeSummary(node.argument);\n    case 'UpdateExpression':\n      var argument = this.nodeSummary(node.argument);\n      return node.prefix ? node.operator + argument : argument + node.operator;\n  }\n  return '???';\n};\n\n/**\n * Create a new queued task.\n * @param {boolean} isInterval True if setInterval, false if setTimeout.\n * @param {!Arguments} args Arguments from setInterval and setTimeout.\n *     [code, delay]\n *     [functionRef, delay, param1, param2, param3, ...]\n * @returns {number} PID of new task.\n * @private\n */\nInterpreter.prototype.createTask_ = function(isInterval, args) {\n  var parentState = this.stateStack[this.stateStack.length - 1];\n  var argsArray = Array.from(args);\n  var exec = argsArray.shift();\n  var delay = Math.max(Number(argsArray.shift() || 0), 0);\n  var node = this.newNode();\n  var scope, functionRef, ast;\n\n  if ((exec instanceof Interpreter.Object) && exec.class === 'Function') {\n    // setTimeout/setInterval with a function reference.\n    functionRef = exec;\n    node.type = 'CallExpression';\n    scope = parentState.scope;\n  } else {\n    // setTimeout/setInterval with code string.\n    try {\n      ast = this.parse_(String(exec), 'taskCode' + (this.taskCodeNumber_++));\n    } catch (e) {\n      // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n      this.throwException(this.SYNTAX_ERROR, 'Invalid code: ' + e.message);\n    }\n    node.type = 'EvalProgram_';\n    node.body = ast.body;\n    // Change highlighting to encompas the string.\n    var execNode = parentState.node.arguments[0];\n    var execStart = execNode ? execNode.start : undefined;\n    var execEnd = execNode ? execNode.end : undefined;\n    Interpreter.stripLocations_(node, execStart, execEnd);\n    scope = this.globalScope;\n    argsArray.length = 0;\n  }\n\n  var task = new Interpreter.Task(functionRef, argsArray, scope, node,\n      isInterval ? delay : -1);\n  this.scheduleTask_(task, delay);\n  return task.pid;\n};\n\n/**\n * Schedule a task to execute at some time in the future.\n * @param {!Interpreter.Task} task Task to schedule.\n * @param {number} delay Number of ms before the task should execute.\n * @private\n */\nInterpreter.prototype.scheduleTask_ = function(task, delay) {\n  task.time = Date.now() + delay;\n  // For optimum efficiency we could do a binary search and inject the task\n  // at the right spot.  But 'push' & 'sort' is just two lines of code.\n  this.tasks.push(task);\n  this.tasks.sort(function(a, b) {return a.time - b.time});\n};\n\n/**\n * Delete a queued task.\n * @param {number} pid PID of task to delete.\n * @private\n */\nInterpreter.prototype.deleteTask_ = function(pid) {\n  for (var i = 0; i < this.tasks.length; i++) {\n    if (this.tasks[i].pid == pid) {\n      this.tasks.splice(i, 1);\n      break;\n    }\n  }\n};\n\n/**\n * Find the next queued task that's due to run.\n * @returns {Interpreter.State} Starting state of next task.  Null if no task.\n * @private\n */\nInterpreter.prototype.nextTask_ = function() {\n  var task = this.tasks[0];\n  if (!task || task.time > Date.now()) {\n    return null;\n  }\n  // Found a task that's due to run.\n  this.tasks.shift();\n  if (task.interval >= 0) {\n    this.scheduleTask_(task, task.interval);\n  }\n  var state = new Interpreter.State(task.node, task.scope);\n  if (task.functionRef) {\n    // setTimeout/setInterval with a function reference.\n    state.doneCallee_ = 2;\n    state.funcThis_ = this.globalObject;\n    state.func_ = task.functionRef;\n    state.doneArgs_ = true;\n    state.arguments_ = task.argsArray;\n  }\n  return state;\n};\n\n/**\n * Create a call to a getter function.\n * @param {!Interpreter.Object} func Function to execute.\n * @param {!Interpreter.Object|!Array} left\n *     Name of variable or object/propname tuple.\n * @private\n */\nInterpreter.prototype.createGetter_ = function(func, left) {\n  if (!this.getterStep_) {\n    throw Error('Unexpected call to createGetter');\n  }\n  // Clear the getter flag.\n  this.getterStep_ = false;\n  // Normally `this` will be specified as the object component (o.x).\n  // Sometimes `this` is explicitly provided (o).\n  var funcThis = Array.isArray(left) ? left[0] : left;\n  var node = this.newNode();\n  node.type = 'CallExpression';\n  var state = new Interpreter.State(node,\n      this.stateStack[this.stateStack.length - 1].scope);\n  state.doneCallee_ = 2;\n  state.funcThis_ = funcThis;\n  state.func_ = func;\n  state.doneArgs_ = true;\n  state.arguments_ = [];\n  return state;\n};\n\n/**\n * Create a call to a setter function.\n * @param {!Interpreter.Object} func Function to execute.\n * @param {!Interpreter.Object|!Array} left\n *     Name of variable or object/propname tuple.\n * @param {Interpreter.Value} value Value to set.\n * @private\n */\nInterpreter.prototype.createSetter_ = function(func, left, value) {\n  if (!this.setterStep_) {\n    throw Error('Unexpected call to createSetter');\n  }\n  // Clear the setter flag.\n  this.setterStep_ = false;\n  // Normally `this` will be specified as the object component (o.x).\n  // Sometimes `this` is implicitly the global object (x).\n  var funcThis = Array.isArray(left) ? left[0] : this.globalObject;\n  var node = this.newNode();\n  node.type = 'CallExpression';\n  var state = new Interpreter.State(node,\n      this.stateStack[this.stateStack.length - 1].scope);\n  state.doneCallee_ = 2;\n  state.funcThis_ = funcThis;\n  state.func_ = func;\n  state.doneArgs_ = true;\n  state.arguments_ = [value];\n  return state;\n};\n\n/**\n * In non-strict mode `this` must be an object.\n * Must not be called in strict mode.\n * @param {Interpreter.Value} value Proposed value for `this`.\n * @returns {!Interpreter.Object} Final value for `this`.\n * @private\n */\nInterpreter.prototype.boxThis_ = function(value) {\n  if (value === undefined || value === null) {\n    // `Undefined` and `null` are changed to the global object.\n    return this.globalObject;\n  }\n  if (!(value instanceof Interpreter.Object)) {\n    // Primitives must be boxed.\n    var box = this.createObjectProto(this.getPrototype(value));\n    box.data = value;\n    return box;\n  }\n  return value;\n};\n\n/**\n * Return the global scope object.\n * @returns {!Interpreter.Scope} Scope object.\n */\nInterpreter.prototype.getGlobalScope = function() {\n  return this.globalScope;\n};\n\n/**\n * Return the state stack.\n * @returns {!Array<!Interpreter.State>} State stack.\n */\nInterpreter.prototype.getStateStack = function() {\n  return this.stateStack;\n};\n\n/**\n * Replace the state stack with a new one.\n * @param {!Array<!Interpreter.State>} newStack New state stack.\n */\nInterpreter.prototype.setStateStack = function(newStack) {\n  this.stateStack = newStack;\n};\n\n/**\n * Typedef for JS values.\n * @typedef {!Interpreter.Object|boolean|number|string|undefined|null}\n */\nInterpreter.Value;\n\n/**\n * Class for a state.\n * @param {!Object} node AST node for the state.\n * @param {!Interpreter.Scope} scope Scope object for the state.\n * @constructor\n */\nInterpreter.State = function(node, scope) {\n  this.node = node;\n  this.scope = scope;\n};\n\n/**\n * Class for a scope.\n * @param {Interpreter.Scope} parentScope Parent scope.\n * @param {boolean} strict True if \"use strict\".\n * @param {!Interpreter.Object} object Object containing scope's variables.\n * @struct\n * @constructor\n */\nInterpreter.Scope = function(parentScope, strict, object) {\n  this.parentScope = parentScope;\n  this.strict = strict;\n  this.object = object;\n};\n\n/**\n * Class for an object.\n * @param {Interpreter.Object} proto Prototype object or null.\n * @constructor\n */\nInterpreter.Object = function(proto) {\n  this.getter = Object.create(null);\n  this.setter = Object.create(null);\n  this.properties = Object.create(null);\n  this.proto = proto;\n};\n\n/** @type {Interpreter.Object} */\nInterpreter.Object.prototype.proto = null;\n\n/** @type {string} */\nInterpreter.Object.prototype.class = 'Object';\n\n/** @type {Date|RegExp|boolean|number|string|null} */\nInterpreter.Object.prototype.data = null;\n\n/**\n * Convert this object into a string.\n * @returns {string} String value.\n * @override\n */\nInterpreter.Object.prototype.toString = function() {\n  if (!Interpreter.currentInterpreter_) {\n    // Called from outside an interpreter.\n    return '[object Interpreter.Object]';\n  }\n  if (!(this instanceof Interpreter.Object)) {\n    // Primitive value.\n    return String(this);\n  }\n\n  if (this.class === 'Array') {\n    // Array contents must not have cycles.\n    var cycles = Interpreter.toStringCycles_;\n    cycles.push(this);\n    try {\n      var strs = [];\n      // Truncate very long strings.  This is not part of the spec,\n      // but it prevents hanging the interpreter for gigantic arrays.\n      var maxLength = this.properties.length;\n      var truncated = false;\n      if (maxLength > 1024) {\n        maxLength = 1000;\n        truncated = true;\n      }\n      for (var i = 0; i < maxLength; i++) {\n        var value = this.properties[i];\n        strs[i] = ((value instanceof Interpreter.Object) &&\n            cycles.indexOf(value) !== -1) ? '...' : value;\n      }\n      if (truncated) {\n        strs.push('...');\n      }\n    } finally {\n      cycles.pop();\n    }\n    return strs.join(',');\n  }\n\n  if (this.class === 'Error') {\n    // Error name and message properties must not have cycles.\n    var cycles = Interpreter.toStringCycles_;\n    if (cycles.indexOf(this) !== -1) {\n      return '[object Error]';\n    }\n    var name, message;\n    // Bug: Does not support getters and setters for name or message.\n    var obj = this;\n    do {\n      if ('name' in obj.properties) {\n        name = obj.properties.name;\n        break;\n      }\n    } while ((obj = obj.proto));\n    obj = this;\n    do {\n      if ('message' in obj.properties) {\n        message = obj.properties.message;\n        break;\n      }\n    } while ((obj = obj.proto));\n    cycles.push(this);\n    try {\n      name = name && String(name);\n      message = message && String(message);\n    } finally {\n      cycles.pop();\n    }\n    return message ? name + ': ' + message : String(name);\n  }\n\n  if (this.data !== null) {\n    // RegExp, Date, and boxed primitives.\n    return String(this.data);\n  }\n\n  return '[object ' + this.class + ']';\n};\n\n/**\n * Return the object's value.\n * @returns {Interpreter.Value} Value.\n * @override\n */\nInterpreter.Object.prototype.valueOf = function() {\n  if (!Interpreter.currentInterpreter_) {\n    // Called from outside an interpreter.\n    return this;\n  }\n  if (this.data === undefined || this.data === null ||\n      this.data instanceof RegExp) {\n    return this;  // An Object, RegExp, or primitive.\n  }\n  if (this.data instanceof Date) {\n    return this.data.valueOf();  // Milliseconds.\n  }\n  return /** @type {(boolean|number|string)} */ (this.data);  // Boxed primitive.\n};\n\n/**\n * Class for a task.\n * @param {!Interpreter.Object|undefined} functionRef Function to call.\n * @param {!Array<Interpreter.Value>} argsArray Array of arguments.\n * @param {!Interpreter.Scope} scope Scope for this task.\n * @param {!Object} node AST node to execute.\n * @param {number} interval Number of ms this task repeats.  -1 for no repeats.\n * @struct\n * @constructor\n */\nInterpreter.Task = function(functionRef, argsArray, scope, node, interval) {\n  this.functionRef = functionRef;\n  this.argsArray = argsArray;\n  this.scope = scope;\n  this.node = node;\n\n  this.interval = interval;\n  this.pid = ++Interpreter.Task.pid;\n  this.time = 0;\n};\n\nInterpreter.Task.pid = 0;\n\n///////////////////////////////////////////////////////////////////////////////\n// Functions to handle each node type.\n///////////////////////////////////////////////////////////////////////////////\n\nInterpreter.prototype['stepArrayExpression'] = function(stack, state, node) {\n  var elements = node.elements;\n  var n = state.n_ || 0;\n  if (!state.array_) {\n    state.array_ = this.createArray();\n    state.array_.properties.length = elements.length;\n  } else {\n    this.setProperty(state.array_, n, state.value);\n    n++;\n  }\n  while (n < elements.length) {\n    // Skip missing elements - they're not defined, not undefined.\n    if (elements[n]) {\n      state.n_ = n;\n      return new Interpreter.State(elements[n], state.scope);\n    }\n    n++;\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.array_;\n};\n\nInterpreter.prototype['stepAssignmentExpression'] =\n    function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    var nextState = new Interpreter.State(node.left, state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (!state.doneRight_) {\n    if (!state.leftReference_) {\n      state.leftReference_ = state.value;\n    }\n    if (state.doneGetter_) {\n      state.leftValue_ = state.value;\n    }\n    if (!state.doneGetter_ && node.operator !== '=') {\n      var leftValue = this.getValue(state.leftReference_);\n      state.leftValue_ = leftValue;\n      if (this.getterStep_) {\n        // Call the getter function.\n        state.doneGetter_ = true;\n        var func = /** @type {!Interpreter.Object} */ (leftValue);\n        return this.createGetter_(func, state.leftReference_);\n      }\n    }\n    state.doneRight_ = true;\n    // When assigning an unnamed function to a variable, the function's name\n    // is set to the variable name.  Record the variable name in case the\n    // right side is a functionExpression.\n    // E.g. foo = function() {};\n    if (node.operator === '=' && node.left.type === 'Identifier') {\n      state.destinationName = node.left.name;\n    }\n    return new Interpreter.State(node.right, state.scope);\n  }\n  if (state.doneSetter_) {\n    // Return if setter function.\n    // Setter method on property has completed.\n    // Ignore its return value, and use the original set value instead.\n    stack.pop();\n    stack[stack.length - 1].value = state.setterValue_;\n    return;\n  }\n  var value = state.leftValue_;\n  var rightValue = state.value;\n  switch (node.operator) {\n    case '=':    value =    rightValue; break;\n    case '+=':   value +=   rightValue; break;\n    case '-=':   value -=   rightValue; break;\n    case '*=':   value *=   rightValue; break;\n    case '/=':   value /=   rightValue; break;\n    case '%=':   value %=   rightValue; break;\n    case '<<=':  value <<=  rightValue; break;\n    case '>>=':  value >>=  rightValue; break;\n    case '>>>=': value >>>= rightValue; break;\n    case '&=':   value &=   rightValue; break;\n    case '^=':   value ^=   rightValue; break;\n    case '|=':   value |=   rightValue; break;\n    default:\n      throw SyntaxError('Unknown assignment expression: ' + node.operator);\n  }\n  var setter = this.setValue(state.leftReference_, value);\n  if (setter) {\n    state.doneSetter_ = true;\n    state.setterValue_ = value;\n    return this.createSetter_(setter, state.leftReference_, value);\n  }\n  // Return if no setter function.\n  stack.pop();\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepBinaryExpression'] = function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    return new Interpreter.State(node.left, state.scope);\n  }\n  if (!state.doneRight_) {\n    state.doneRight_ = true;\n    state.leftValue_ = state.value;\n    return new Interpreter.State(node.right, state.scope);\n  }\n  stack.pop();\n  var leftValue = state.leftValue_;\n  var rightValue = state.value;\n  var value;\n  switch (node.operator) {\n    case '==':  value = leftValue ==  rightValue; break;\n    case '!=':  value = leftValue !=  rightValue; break;\n    case '===': value = leftValue === rightValue; break;\n    case '!==': value = leftValue !== rightValue; break;\n    case '>':   value = leftValue >   rightValue; break;\n    case '>=':  value = leftValue >=  rightValue; break;\n    case '<':   value = leftValue <   rightValue; break;\n    case '<=':  value = leftValue <=  rightValue; break;\n    case '+':   value = leftValue +   rightValue; break;\n    case '-':   value = leftValue -   rightValue; break;\n    case '*':   value = leftValue *   rightValue; break;\n    case '/':   value = leftValue /   rightValue; break;\n    case '%':   value = leftValue %   rightValue; break;\n    case '&':   value = leftValue &   rightValue; break;\n    case '|':   value = leftValue |   rightValue; break;\n    case '^':   value = leftValue ^   rightValue; break;\n    case '<<':  value = leftValue <<  rightValue; break;\n    case '>>':  value = leftValue >>  rightValue; break;\n    case '>>>': value = leftValue >>> rightValue; break;\n    case 'in':\n      if (!(rightValue instanceof Interpreter.Object)) {\n        this.throwException(this.TYPE_ERROR,\n            \"'in' expects an object, not '\" + rightValue + \"'\");\n      }\n      value = this.hasProperty(rightValue, leftValue);\n      break;\n    case 'instanceof':\n      if (!this.isa(rightValue, this.FUNCTION)) {\n        this.throwException(this.TYPE_ERROR,\n            \"'instanceof' expects an object, not '\" + rightValue + \"'\");\n      }\n      value = (leftValue instanceof Interpreter.Object) ?\n          this.isa(leftValue, rightValue) : false;\n      break;\n    default:\n      throw SyntaxError('Unknown binary operator: ' + node.operator);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepBlockStatement'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node.body[n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n};\n\nInterpreter.prototype['stepBreakStatement'] = function(stack, state, node) {\n  var label = node.label && node.label.name;\n  this.unwind(Interpreter.Completion.BREAK, undefined, label);\n};\n\n/**\n * Number of evals called by the interpreter.\n * @private\n */\nInterpreter.prototype.evalCodeNumber_ = 0;\n\nInterpreter.prototype['stepCallExpression'] = function(stack, state, node) {\n  // Handles both CallExpression and NewExpression.\n  if (!state.doneCallee_) {\n    state.doneCallee_ = 1;\n    // Components needed to determine value of `this`.\n    var nextState = new Interpreter.State(node.callee, state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (state.doneCallee_ === 1) {\n    // Determine value of the function.\n    state.doneCallee_ = 2;\n    var func = state.value;\n    if (Array.isArray(func)) {\n      state.func_ = this.getValue(func);\n      if (func[0] === Interpreter.SCOPE_REFERENCE) {\n        // (Globally or locally) named function.  Is it named 'eval'?\n        state.directEval_ = (func[1] === 'eval');\n      } else {\n        // Method function, `this` is object (ignored if invoked as `new`).\n        state.funcThis_ = func[0];\n      }\n      func = state.func_;\n      if (this.getterStep_) {\n        // Call the getter function.\n        state.doneCallee_ = 1;\n        return this.createGetter_(/** @type {!Interpreter.Object} */ (func),\n            state.value);\n      }\n    } else {\n      // Already evaluated function: (function(){...})();\n      state.func_ = func;\n    }\n    state.arguments_ = [];\n    state.n_ = 0;\n  }\n  var func = state.func_;\n  if (!state.doneArgs_) {\n    if (state.n_ !== 0) {\n      state.arguments_.push(state.value);\n    }\n    if (node.arguments[state.n_]) {\n      return new Interpreter.State(node.arguments[state.n_++], state.scope);\n    }\n    // Determine value of `this` in function.\n    if (node.type === 'NewExpression') {\n      if (!(func instanceof Interpreter.Object) || func.illegalConstructor) {\n        // Illegal: new escape();\n        this.throwException(this.TYPE_ERROR,\n            this.nodeSummary(node.callee) + ' is not a constructor');\n      }\n      // Constructor, `this` is new object.\n      if (func === this.ARRAY) {\n        state.funcThis_ = this.createArray();\n      } else {\n        var proto = func.properties['prototype'];\n        if (typeof proto !== 'object' || proto === null) {\n          // Non-object prototypes default to `Object.prototype`.\n          proto = this.OBJECT_PROTO;\n        }\n        state.funcThis_ = this.createObjectProto(proto);\n      }\n      state.isConstructor = true;\n    }\n    state.doneArgs_ = true;\n  }\n  if (!state.doneExec_) {\n    state.doneExec_ = true;\n    if (!(func instanceof Interpreter.Object)) {\n      this.throwException(this.TYPE_ERROR,\n          this.nodeSummary(node.callee) + ' is not a function');\n    }\n    var funcNode = func.node;\n    if (funcNode) {\n      var scope = this.createScope(funcNode.body, func.parentScope);\n      // Build arguments variable.\n      var argsList = this.createArray();\n      for (var i = 0; i < state.arguments_.length; i++) {\n        this.setProperty(argsList, i, state.arguments_[i]);\n      }\n      this.setProperty(scope.object, 'arguments', argsList);\n      // Add all arguments (may clobber 'arguments' if a param is named such).\n      for (var i = 0; i < funcNode.params.length; i++) {\n        var paramName = funcNode.params[i].name;\n        var paramValue = state.arguments_.length > i ? state.arguments_[i] :\n            undefined;\n        this.setProperty(scope.object, paramName, paramValue);\n      }\n      if (!scope.strict) {\n        state.funcThis_ = this.boxThis_(state.funcThis_);\n      }\n      this.setProperty(scope.object, 'this', state.funcThis_,\n                       Interpreter.READONLY_DESCRIPTOR);\n      state.value = undefined;  // Default value if no explicit return.\n      return new Interpreter.State(funcNode.body, scope);\n    } else if (func.eval) {\n      var code = state.arguments_[0];\n      if (typeof code !== 'string') {\n        // JS does not parse String objects:\n        // eval(new String('1 + 1')) -> '1 + 1'\n        state.value = code;\n      } else {\n        try {\n          var ast = this.parse_(String(code),\n             'eval' + (this.evalCodeNumber_++));\n        } catch (e) {\n          // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n          this.throwException(this.SYNTAX_ERROR, 'Invalid code: ' + e.message);\n        }\n        var evalNode = this.newNode();\n        evalNode.type = 'EvalProgram_';\n        evalNode.body = ast.body;\n        Interpreter.stripLocations_(evalNode, node.start, node.end);\n        // Create new scope and update it with definitions in eval().\n        var scope = state.directEval_ ? state.scope : this.globalScope;\n        if (scope.strict) {\n          // Strict mode get its own scope in eval.\n          scope = this.createScope(ast, scope);\n        } else {\n          // Non-strict mode pollutes the current scope.\n          this.populateScope_(ast, scope);\n        }\n        this.value = undefined;  // Default value if no code.\n        return new Interpreter.State(evalNode, scope);\n      }\n    } else if (func.nativeFunc) {\n      if (!state.scope.strict) {\n        state.funcThis_ = this.boxThis_(state.funcThis_);\n      }\n      state.value = func.nativeFunc.apply(state.funcThis_, state.arguments_);\n    } else if (func.asyncFunc) {\n      var thisInterpreter = this;\n      var callback = function(value) {\n        state.value = value;\n        thisInterpreter.paused_ = false;\n      };\n      // Force the argument lengths to match, then append the callback.\n      var argLength = func.asyncFunc.length - 1;\n      var argsWithCallback = state.arguments_.concat(\n          new Array(argLength)).slice(0, argLength);\n      argsWithCallback.push(callback);\n      this.paused_ = true;\n      if (!state.scope.strict) {\n        state.funcThis_ = this.boxThis_(state.funcThis_);\n      }\n      func.asyncFunc.apply(state.funcThis_, argsWithCallback);\n      return;\n    } else {\n      /* A child of a function is a function but is not callable.  For example:\n      var F = function() {};\n      F.prototype = escape;\n      var f = new F();\n      f();\n      */\n      this.throwException(this.TYPE_ERROR,\n          this.nodeSummary(node.callee) + ' is not callable');\n    }\n  } else {\n    // Execution complete.  Put the return value on the stack.\n    stack.pop();\n    if (state.isConstructor && typeof state.value !== 'object') {\n      // Normal case for a constructor is to use the `this` value.\n      stack[stack.length - 1].value = state.funcThis_;\n    } else {\n      // Non-constructors or constructions explicitly returning objects use\n      // the return value.\n      stack[stack.length - 1].value = state.value;\n    }\n  }\n};\n\nInterpreter.prototype['stepConditionalExpression'] =\n    function(stack, state, node) {\n  // Handles both ConditionalExpression and IfStatement.\n  var mode = state.mode_ || 0;\n  if (mode === 0) {\n    state.mode_ = 1;\n    return new Interpreter.State(node.test, state.scope);\n  }\n  if (mode === 1) {\n    state.mode_ = 2;\n    var value = Boolean(state.value);\n    if (value && node.consequent) {\n      // Execute `if` block.\n      return new Interpreter.State(node.consequent, state.scope);\n    } else if (!value && node.alternate) {\n      // Execute `else` block.\n      return new Interpreter.State(node.alternate, state.scope);\n    }\n    // eval('1;if(false){2}') -> undefined\n    this.value = undefined;\n  }\n  stack.pop();\n  if (node.type === 'ConditionalExpression') {\n    stack[stack.length - 1].value = state.value;\n  }\n};\n\nInterpreter.prototype['stepContinueStatement'] = function(stack, state, node) {\n  var label = node.label && node.label.name;\n  this.unwind(Interpreter.Completion.CONTINUE, undefined, label);\n};\n\nInterpreter.prototype['stepDebuggerStatement'] = function(stack, state, node) {\n  // Do nothing.  May be overridden by developers.\n  stack.pop();\n};\n\nInterpreter.prototype['stepDoWhileStatement'] = function(stack, state, node) {\n  // Handles both DoWhileStatement and WhileStatement.\n  if (node.type === 'DoWhileStatement' && state.test_ === undefined) {\n    // First iteration of do/while executes without checking test.\n    state.value = true;\n    state.test_ = true;\n  }\n  if (!state.test_) {\n    state.test_ = true;\n    return new Interpreter.State(node.test, state.scope);\n  }\n  if (!state.value) {  // Done, exit loop.\n    stack.pop();\n  } else if (node.body) {  // Execute the body.\n    state.test_ = false;\n    state.isLoop = true;\n    return new Interpreter.State(node.body, state.scope);\n  }\n};\n\nInterpreter.prototype['stepEmptyStatement'] = function(stack, state, node) {\n  stack.pop();\n};\n\nInterpreter.prototype['stepEvalProgram_'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node.body[n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n  stack[stack.length - 1].value = this.value;\n};\n\nInterpreter.prototype['stepExpressionStatement'] = function(stack, state, node) {\n  if (!state.done_) {\n    this.value = undefined;\n    state.done_ = true;\n    return new Interpreter.State(node.expression, state.scope);\n  }\n  stack.pop();\n  // Save this value to interpreter.value for use as a return value if\n  // this code is inside an eval function.\n  this.value = state.value;\n};\n\nInterpreter.prototype['stepForInStatement'] = function(stack, state, node) {\n  // First, initialize a variable if exists.  Only do so once, ever.\n  if (!state.doneInit_) {\n    state.doneInit_ = true;\n    if (node.left.declarations &&\n        node.left.declarations[0].init) {\n      if (state.scope.strict) {\n        this.throwException(this.SYNTAX_ERROR,\n            'for-in loop variable declaration may not have an initializer');\n      }\n      // Variable initialization: for (var x = 4 in y)\n      return new Interpreter.State(node.left, state.scope);\n    }\n  }\n  // Second, look up the object.  Only do so once, ever.\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    if (!state.variable_) {\n      state.variable_ = state.value;\n    }\n    return new Interpreter.State(node.right, state.scope);\n  }\n  if (!state.isLoop) {\n    // First iteration.\n    state.isLoop = true;\n    state.object_ = state.value;\n    state.visited_ = Object.create(null);\n  }\n  // Third, find the property name for this iteration.\n  if (state.name_ === undefined) {\n    gotPropName: while (true) {\n      if (state.object_ instanceof Interpreter.Object) {\n        if (!state.props_) {\n          state.props_ = Object.getOwnPropertyNames(state.object_.properties);\n        }\n        while (true) {\n          var prop = state.props_.shift();\n          if (prop === undefined) {\n            break;  // Reached end of this object's properties.\n          }\n          if (!Object.prototype.hasOwnProperty.call(state.object_.properties,\n                prop)) {\n            continue;  // Property has been deleted in the loop.\n          }\n          if (state.visited_[prop]) {\n            continue;  // Already seen this property on a child.\n          }\n          state.visited_[prop] = true;\n          if (!Object.prototype.propertyIsEnumerable.call(\n                state.object_.properties, prop)) {\n            continue;  // Skip non-enumerable property.\n          }\n          state.name_ = prop;\n          break gotPropName;\n        }\n      } else if (state.object_ !== null && state.object_ !== undefined) {\n        // Primitive value (other than null or undefined).\n        if (!state.props_) {\n          state.props_ = Object.getOwnPropertyNames(state.object_);\n        }\n        while (true) {\n          var prop = state.props_.shift();\n          if (prop === undefined) {\n            break;  // Reached end of this value's properties.\n          }\n          state.visited_[prop] = true;\n          if (!Object.prototype.propertyIsEnumerable.call(\n                state.object_, prop)) {\n            continue;  // Skip non-enumerable property.\n          }\n          state.name_ = prop;\n          break gotPropName;\n        }\n      }\n      state.object_ = this.getPrototype(state.object_);\n      state.props_ = null;\n      if (state.object_ === null) {\n        // Done, exit loop.\n        stack.pop();\n        return;\n      }\n    }\n  }\n  // Fourth, find the variable\n  if (!state.doneVariable_) {\n    state.doneVariable_ = true;\n    var left = node.left;\n    if (left.type === 'VariableDeclaration') {\n      // Inline variable declaration: for (var x in y)\n      state.variable_ =\n          [Interpreter.SCOPE_REFERENCE, left.declarations[0].id.name];\n    } else {\n      // Arbitrary left side: for (foo().bar in y)\n      state.variable_ = null;\n      var nextState = new Interpreter.State(left, state.scope);\n      nextState.components = true;\n      return nextState;\n    }\n  }\n  if (!state.variable_) {\n    state.variable_ = state.value;\n  }\n  // Fifth, set the variable.\n  if (!state.doneSetter_) {\n    state.doneSetter_ = true;\n    var value = state.name_;\n    var setter = this.setValue(state.variable_, value);\n    if (setter) {\n      return this.createSetter_(setter, state.variable_, value);\n    }\n  }\n  // Next step will be step three.\n  state.name_ = undefined;\n  // Reevaluate the variable since it could be a setter on the global object.\n  state.doneVariable_ = false;\n  state.doneSetter_ = false;\n  // Sixth and finally, execute the body if there was one.\n  if (node.body) {\n    return new Interpreter.State(node.body, state.scope);\n  }\n};\n\nInterpreter.prototype['stepForStatement'] = function(stack, state, node) {\n  switch (state.mode_) {\n    default:\n      state.mode_ = 1;\n      if (node.init) {\n        return new Interpreter.State(node.init, state.scope);\n      }\n      break;\n    case 1:\n      state.mode_ = 2;\n      if (node.test) {\n        return new Interpreter.State(node.test, state.scope);\n      }\n      break;\n    case 2:\n      state.mode_ = 3;\n      if (node.test && !state.value) {\n        // Done, exit loop.\n        stack.pop();\n      } else {  // Execute the body.\n        state.isLoop = true;\n        return new Interpreter.State(node.body, state.scope);\n      }\n      break;\n    case 3:\n      state.mode_ = 1;\n      if (node.update) {\n        return new Interpreter.State(node.update, state.scope);\n      }\n      break;\n  }\n};\n\nInterpreter.prototype['stepFunctionDeclaration'] =\n    function(stack, state, node) {\n  // This was found and handled when the scope was populated.\n  stack.pop();\n};\n\nInterpreter.prototype['stepFunctionExpression'] = function(stack, state, node) {\n  stack.pop();\n  state = stack[stack.length - 1];\n  var parentScope = state.scope;\n  if (node.id) {\n    // Create a tiny scope to store the function name.\n    // E.g. var x = function foo(){};\n    parentScope = this.createSpecialScope(parentScope);\n  }\n  state.value = this.createFunction(node, parentScope, state.destinationName);\n  if (node.id) {\n    // Record the function name, read-only.\n    this.setProperty(parentScope.object, node.id.name, state.value,\n        Interpreter.READONLY_DESCRIPTOR);\n  }\n};\n\nInterpreter.prototype['stepIdentifier'] = function(stack, state, node) {\n  stack.pop();\n  if (state.components) {\n    stack[stack.length - 1].value = [Interpreter.SCOPE_REFERENCE, node.name];\n    return;\n  }\n  var value = this.getValueFromScope(node.name);\n  // An identifier could be a getter if it's a property on the global object.\n  if (this.getterStep_) {\n    // Call the getter function.\n    var func = /** @type {!Interpreter.Object} */ (value);\n    return this.createGetter_(func, this.globalObject);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepIfStatement'] =\n    Interpreter.prototype['stepConditionalExpression'];\n\nInterpreter.prototype['stepLabeledStatement'] = function(stack, state, node) {\n  // No need to hit this node again on the way back up the stack.\n  stack.pop();\n  // Note that a statement might have multiple labels.\n  var labels = state.labels || [];\n  labels.push(node.label.name);\n  var nextState = new Interpreter.State(node.body, state.scope);\n  nextState.labels = labels;\n  return nextState;\n};\n\nInterpreter.prototype['stepLiteral'] = function(stack, state, node) {\n  stack.pop();\n  var value = node.value;\n  if (value instanceof RegExp) {\n    var pseudoRegexp = this.createObjectProto(this.REGEXP_PROTO);\n    this.populateRegExp(pseudoRegexp, value);\n    value = pseudoRegexp;\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepLogicalExpression'] = function(stack, state, node) {\n  if (node.operator !== '&&' && node.operator !== '||') {\n    throw SyntaxError('Unknown logical operator: ' + node.operator);\n  }\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    return new Interpreter.State(node.left, state.scope);\n  }\n  if (!state.doneRight_) {\n    if ((node.operator === '&&' && !state.value) ||\n        (node.operator === '||' && state.value)) {\n      // Shortcut evaluation.\n      stack.pop();\n      stack[stack.length - 1].value = state.value;\n    } else {\n      state.doneRight_ = true;\n      return new Interpreter.State(node.right, state.scope);\n    }\n  } else {\n    stack.pop();\n    stack[stack.length - 1].value = state.value;\n  }\n};\n\nInterpreter.prototype['stepMemberExpression'] = function(stack, state, node) {\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    return new Interpreter.State(node.object, state.scope);\n  }\n  var propName;\n  if (!node.computed) {\n    state.object_ = state.value;\n    // obj.foo -- Just access `foo` directly.\n    propName = node.property.name;\n  } else if (!state.doneProperty_) {\n    state.object_ = state.value;\n    // obj[foo] -- Compute value of `foo`.\n    state.doneProperty_ = true;\n    return new Interpreter.State(node.property, state.scope);\n  } else {\n    propName = state.value;\n  }\n  stack.pop();\n  if (state.components) {\n    stack[stack.length - 1].value = [state.object_, propName];\n  } else {\n    var value = this.getProperty(state.object_, propName);\n    if (this.getterStep_) {\n      // Call the getter function.\n      var func = /** @type {!Interpreter.Object} */ (value);\n      return this.createGetter_(func, state.object_);\n    }\n    stack[stack.length - 1].value = value;\n  }\n};\n\nInterpreter.prototype['stepNewExpression'] =\n    Interpreter.prototype['stepCallExpression'];\n\nInterpreter.prototype['stepObjectExpression'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var property = node.properties[n];\n  if (!state.object_) {\n    // First execution.\n    state.object_ = this.createObjectProto(this.OBJECT_PROTO);\n    state.properties_ = Object.create(null);\n  } else {\n    // Set the property computed in the previous execution.\n    var propName = state.destinationName;\n    if (!state.properties_[propName]) {\n      // Create temp object to collect value, getter, and/or setter.\n      state.properties_[propName] = {};\n    }\n    state.properties_[propName][property.kind] = state.value;\n    state.n_ = ++n;\n    property = node.properties[n];\n  }\n  if (property) {\n    // Determine property name.\n    var key = property.key;\n    if (key.type === 'Identifier') {\n      var propName = key.name;\n    } else if (key.type === 'Literal') {\n      var propName = key.value;\n    } else {\n      throw SyntaxError('Unknown object structure: ' + key.type);\n    }\n    // When assigning an unnamed function to a property, the function's name\n    // is set to the property name.  Record the property name in case the\n    // value is a functionExpression.\n    // E.g. {foo: function() {}}\n    state.destinationName = propName;\n    return new Interpreter.State(property.value, state.scope);\n  }\n  for (var key in state.properties_) {\n    var kinds = state.properties_[key];\n    if ('get' in kinds || 'set' in kinds) {\n      // Set a property with a getter or setter.\n      var descriptor = {\n        'configurable': true,\n        'enumerable': true,\n        'get': kinds['get'],\n        'set': kinds['set'],\n      };\n      this.setProperty(state.object_, key, Interpreter.VALUE_IN_DESCRIPTOR,\n                       descriptor);\n    } else {\n      // Set a normal property with a value.\n      this.setProperty(state.object_, key, kinds['init']);\n    }\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.object_;\n};\n\nInterpreter.prototype['stepProgram'] = function(stack, state, node) {\n  var expression = node.body.shift();\n  if (expression) {\n    state.done = false;\n    return new Interpreter.State(expression, state.scope);\n  }\n  state.done = true;\n  // Don't pop the stateStack.\n  // Leave the root scope on the tree in case the program is appended to.\n};\n\nInterpreter.prototype['stepReturnStatement'] = function(stack, state, node) {\n  if (node.argument && !state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node.argument, state.scope);\n  }\n  this.unwind(Interpreter.Completion.RETURN, state.value, undefined);\n};\n\nInterpreter.prototype['stepSequenceExpression'] = function(stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node.expressions[n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.value;\n};\n\nInterpreter.prototype['stepSwitchStatement'] = function(stack, state, node) {\n  if (!state.test_) {\n    state.test_ = 1;\n    return new Interpreter.State(node.discriminant, state.scope);\n  }\n  if (state.test_ === 1) {\n    state.test_ = 2;\n    // Preserve switch value between case tests.\n    state.switchValue_ = state.value;\n    state.defaultCase_ = -1;\n  }\n\n  while (true) {\n    var index = state.index_ || 0;\n    var switchCase = node.cases[index];\n    if (!state.matched_ && switchCase && !switchCase.test) {\n      // Test on the default case is null.\n      // Bypass (but store) the default case, and get back to it later.\n      state.defaultCase_ = index;\n      state.index_ = index + 1;\n      continue;\n    }\n    if (!switchCase && !state.matched_ && state.defaultCase_ !== -1) {\n      // Ran through all cases, no match.  Jump to the default.\n      state.matched_ = true;\n      state.index_ = state.defaultCase_;\n      continue;\n    }\n    if (switchCase) {\n      if (!state.matched_ && !state.tested_ && switchCase.test) {\n        state.tested_ = true;\n        return new Interpreter.State(switchCase.test, state.scope);\n      }\n      if (state.matched_ || state.value === state.switchValue_) {\n        state.matched_ = true;\n        var n = state.n_ || 0;\n        if (switchCase.consequent[n]) {\n          state.isSwitch = true;\n          state.n_ = n + 1;\n          return new Interpreter.State(switchCase.consequent[n], state.scope);\n        }\n      }\n      // Move on to next case.\n      state.tested_ = false;\n      state.n_ = 0;\n      state.index_ = index + 1;\n    } else {\n      stack.pop();\n      return;\n    }\n  }\n};\n\nInterpreter.prototype['stepThisExpression'] = function(stack, state, node) {\n  stack.pop();\n  stack[stack.length - 1].value = this.getValueFromScope('this');\n};\n\nInterpreter.prototype['stepThrowStatement'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node.argument, state.scope);\n  } else {\n    this.throwException(state.value);\n  }\n};\n\nInterpreter.prototype['stepTryStatement'] = function(stack, state, node) {\n  // This step also handles all CatchClause nodes, since these nodes can\n  // only appear inside the `handler` property of a TryStatement node.\n  if (!state.doneBlock_) {\n    state.doneBlock_ = true;\n    return new Interpreter.State(node.block, state.scope);\n  }\n  if (state.cv && state.cv.type === Interpreter.Completion.THROW &&\n      !state.doneHandler_ && node.handler) {\n    state.doneHandler_ = true;\n    // Create an new scope and add the error variable.\n    var scope = this.createSpecialScope(state.scope);\n    this.setProperty(scope.object, node.handler.param.name, state.cv.value);\n    state.cv = undefined;  // This error has been handled, don't rethrow.\n    // Execute catch clause.\n    return new Interpreter.State(node.handler.body, scope);\n  }\n  if (!state.doneFinalizer_ && node.finalizer) {\n    state.doneFinalizer_ = true;\n    return new Interpreter.State(node.finalizer, state.scope);\n  }\n  stack.pop();\n  if (state.cv) {\n    // There was no catch handler, or the catch/finally threw an error.\n    // Throw the error up to a higher try.\n    this.unwind(state.cv.type, state.cv.value, state.cv.label);\n  }\n};\n\nInterpreter.prototype['stepUnaryExpression'] = function(stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    var nextState = new Interpreter.State(node.argument, state.scope);\n    nextState.components = node.operator === 'delete';\n    return nextState;\n  }\n  stack.pop();\n  var value = state.value;\n  switch (node.operator) {\n    case '-':\n      value = -value;\n      break;\n    case '+':\n      value = +value;\n      break;\n    case '!':\n      value = !value;\n      break;\n    case '~':\n      value = ~value;\n      break;\n    case 'delete':\n      var result = true;\n      // If value is not an array, then it is a primitive, or some other value.\n      // If so, skip the delete and return true.\n      if (Array.isArray(value)) {\n        var obj = value[0];\n        if (obj === Interpreter.SCOPE_REFERENCE) {\n          // `delete foo;` is the same as `delete window.foo;`.\n          obj = state.scope;\n        }\n        var name = String(value[1]);\n        try {\n          delete obj.properties[name];\n        } catch (_e) {\n          if (state.scope.strict) {\n            this.throwException(this.TYPE_ERROR, \"Cannot delete property '\" +\n                                name + \"' of '\" + obj + \"'\");\n          } else {\n            result = false;\n          }\n        }\n      }\n      value = result;\n      break;\n    case 'typeof':\n      value = (value && value.class === 'Function') ? 'function' : typeof value;\n      break;\n    case 'void':\n      value = undefined;\n      break;\n    default:\n      throw SyntaxError('Unknown unary operator: ' + node.operator);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype['stepUpdateExpression'] = function(stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    var nextState = new Interpreter.State(node.argument, state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (!state.leftSide_) {\n    state.leftSide_ = state.value;\n  }\n  if (state.doneGetter_) {\n    state.leftValue_ = state.value;\n  }\n  if (!state.doneGetter_) {\n    var leftValue = this.getValue(state.leftSide_);\n    state.leftValue_ = leftValue;\n    if (this.getterStep_) {\n      // Call the getter function.\n      state.doneGetter_ = true;\n      var func = /** @type {!Interpreter.Object} */ (leftValue);\n      return this.createGetter_(func, state.leftSide_);\n    }\n  }\n  if (state.doneSetter_) {\n    // Return if setter function.\n    // Setter method on property has completed.\n    // Ignore its return value, and use the original set value instead.\n    stack.pop();\n    stack[stack.length - 1].value = state.setterValue_;\n    return;\n  }\n  var leftValue = Number(state.leftValue_);\n  var changeValue;\n  if (node.operator === '++') {\n    changeValue = leftValue + 1;\n  } else if (node.operator === '--') {\n    changeValue = leftValue - 1;\n  } else {\n    throw SyntaxError('Unknown update expression: ' + node.operator);\n  }\n  var returnValue = node.prefix ? changeValue : leftValue;\n  var setter = this.setValue(state.leftSide_, changeValue);\n  if (setter) {\n    state.doneSetter_ = true;\n    state.setterValue_ = returnValue;\n    return this.createSetter_(setter, state.leftSide_, changeValue);\n  }\n  // Return if no setter function.\n  stack.pop();\n  stack[stack.length - 1].value = returnValue;\n};\n\nInterpreter.prototype['stepVariableDeclaration'] = function(stack, state, node) {\n  // This step also handles all VariableDeclarator nodes, since these nodes can\n  // only appear inside the `declarations` array of a VariableDeclaration node.\n  var declarations = node.declarations;\n  var n = state.n_ || 0;\n  var declarationNode = declarations[n];\n  if (state.init_ && declarationNode) {\n    // This setValue call never needs to deal with calling a setter function.\n    // Note that this is setting the init value, not defining the variable.\n    // Variable definition is done when scope is populated.\n    this.setValueToScope(declarationNode.id.name, state.value);\n    state.init_ = false;\n    declarationNode = declarations[++n];\n  }\n  while (declarationNode) {\n    // Skip any declarations that are not initialized.  They have already\n    // been defined as undefined in populateScope_.\n    if (declarationNode.init) {\n      state.n_ = n;\n      state.init_ = true;\n      // When assigning an unnamed function to a variable, the function's name\n      // is set to the variable name.  Record the variable name in case the\n      // right side is a functionExpression.\n      // E.g. var foo = function() {};\n      state.destinationName = declarationNode.id.name;\n      return new Interpreter.State(declarationNode.init, state.scope);\n    }\n    declarationNode = declarations[++n];\n  }\n  stack.pop();\n};\n\nInterpreter.prototype['stepWithStatement'] = function(stack, state, node) {\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    return new Interpreter.State(node.object, state.scope);\n  }\n  stack.pop();\n  var scope = this.createSpecialScope(state.scope, state.value);\n  return new Interpreter.State(node.body, scope);\n};\n\nInterpreter.prototype['stepWhileStatement'] =\n    Interpreter.prototype['stepDoWhileStatement'];\n\n// Preserve top-level API functions from being pruned/renamed by JS compilers.\n// Add others as needed.\nInterpreter.nativeGlobal['Interpreter'] = Interpreter;\nInterpreter.prototype['step'] = Interpreter.prototype.step;\nInterpreter.prototype['run'] = Interpreter.prototype.run;\nInterpreter.prototype['appendCode'] = Interpreter.prototype.appendCode;\nInterpreter.prototype['createObject'] = Interpreter.prototype.createObject;\nInterpreter.prototype['createObjectProto'] =\n    Interpreter.prototype.createObjectProto;\nInterpreter.prototype['createAsyncFunction'] =\n    Interpreter.prototype.createAsyncFunction;\nInterpreter.prototype['createNativeFunction'] =\n    Interpreter.prototype.createNativeFunction;\nInterpreter.prototype['getProperty'] = Interpreter.prototype.getProperty;\nInterpreter.prototype['setProperty'] = Interpreter.prototype.setProperty;\nInterpreter.prototype['getStatus'] = Interpreter.prototype.getStatus;\nInterpreter.prototype['nativeToPseudo'] = Interpreter.prototype.nativeToPseudo;\nInterpreter.prototype['pseudoToNative'] = Interpreter.prototype.pseudoToNative;\nInterpreter.prototype['getGlobalScope'] = Interpreter.prototype.getGlobalScope;\nInterpreter.prototype['getStateStack'] = Interpreter.prototype.getStateStack;\nInterpreter.prototype['setStateStack'] = Interpreter.prototype.setStateStack;\nInterpreter['VALUE_IN_DESCRIPTOR'] = Interpreter.VALUE_IN_DESCRIPTOR;\nInterpreter['Status'] = Interpreter.Status;\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = {\n  Interpreter\n};\n\n\n/***/ }),\n\n/***/ \"./original-repo/acorn.js\":\n/*!********************************!*\\\n  !*** ./original-repo/acorn.js ***!\n  \\********************************/\n/***/ (function(module, exports) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Copyright 2012 Marijn Haverbeke\n * SPDX-License-Identifier: MIT\n */\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke and released under an MIT\n// license. The Unicode regexps (for identifiers and whitespace) were\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/marijnh/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/marijnh/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\n(function(root, mod) {\n  if (true) return mod(exports); // CommonJS\n  if (true) return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n  mod(root.acorn || (root.acorn = {})); // Plain browser env\n})(this, function(exports) {\n  \"use strict\";\n\n  exports.version = \"0.5.0\";\n  // Plus additional edits marked with 'JS-Interpreter change' comments.\n\n  // JS-Interpreter change:\n  // Added JSDoc type definitions.\n  // -- Neil Fraser, July 2023.\n\n  // JS-Interpreter change:\n  // No longer exporting defaultOptions, getLineInfo, tokenize, tokTypes,\n  // isIdentifierStart, and isIdentifierChar.  Not used by JS-Interpreter.\n  // -- Neil Fraser, February 2023.\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api], with the caveat that the SpiderMonkey-specific syntax\n  // (`let`, `yield`, inline XML, etc) is not recognized.\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  /** @type {!Object|undefined} */\n  var options;\n\n  /** @type {string} */\n  var input = '';\n  /** @type {number|undefined} */\n  var inputLen;\n  /** @type {*} */\n  var sourceFile;\n\n  /**\n   * @param {string} inpt\n   * @param {Object=} opts\n   * @returns\n   */\n  exports.parse = function(inpt, opts) {\n    input = String(inpt);\n    inputLen = input.length;\n    setOptions(opts);\n    initTokenState();\n    return parseTopLevel(options.program);\n  };\n\n  // A second optional argument can be given to further configure\n  // the parser process. These options are recognized:\n\n  var defaultOptions = {\n    // JS-Interpreter change:\n    // `ecmaVersion` option has been removed along with all cases where\n    // it is checked.  In this version of Acorn it was limited to 3 or 5,\n    // and there's no use case for 3 with JS-Interpreter.\n    // -- Neil Fraser, December 2022.\n\n    // Turn on `strictSemicolons` to prevent the parser from doing\n    // automatic semicolon insertion.\n    strictSemicolons: false,\n    // When `allowTrailingCommas` is false, the parser will not allow\n    // trailing commas in array and object literals.\n    allowTrailingCommas: true,\n    // By default, reserved words are not enforced. Enable\n    // `forbidReserved` to enforce them. When this option has the\n    // value \"everywhere\", reserved words and keywords can also not be\n    // used as property names.\n    forbidReserved: false,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n  };\n\n  /**\n   * @param {Object|undefined} opts\n   */\n  function setOptions(opts) {\n    options = opts || {};\n    for (var opt in defaultOptions) {\n      if (!Object.prototype.hasOwnProperty.call(options, opt)) {\n        options[opt] = defaultOptions[opt];\n      }\n    }\n    sourceFile = options.sourceFile;\n  }\n\n  /**\n   * The `getLineInfo` function is mostly useful when the\n   * `locations` option is off (for performance reasons) and you\n   * want to find the line/column position for a given character\n   * offset. `input` should be the code string that the offset refers\n   * into.\n   *\n   * @param {string} input\n   * @param {number} offset\n   * @returns {!Object}\n   */\n  var getLineInfo = function(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreak.lastIndex = cur;\n      var match = lineBreak.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        break;\n      }\n    }\n    return {line: line, column: offset - cur};\n  };\n\n  // JS-Interpreter change:\n  // tokenize function never used.  Removed.\n  // -- Neil Fraser, February 2023.\n\n  // State is kept in (closure-)global variables. We already saw the\n  // `options`, `input`, and `inputLen` variables above.\n\n  /**\n   * The current position of the tokenizer in the input.\n   * @type {number}\n   */\n  var tokPos = 0;\n\n  /**\n   * The start offset of the current token.\n   * @type {number}\n   */\n  var tokStart = 0;\n\n  /**\n   * The end offset of the current token.\n   * @type {number}\n   */\n  var tokEnd = 0;\n\n  /**\n   * When `options.locations` is true, holds object\n   * containing the token's start line/column pairs.\n   * @type {!line_loc_t|undefined}\n   */\n  var tokStartLoc;\n\n  /**\n   * When `options.locations` is true, holds object\n   * containing the token's end line/column pairs.\n   * @type {!line_loc_t|undefined}\n   */\n  var tokEndLoc;\n\n  /**\n   * The type of the current token. Token types are objects,\n   * named by variables against which they can be compared, and\n   * holding properties that describe them (indicating, for example,\n   * the precedence of an infix operator, and the original name of a\n   * keyword token).\n   * @type {!Object|undefined}\n   */\n  var tokType;\n\n  /**\n   * The value of the current token. The kind of value that's held in\n   * `tokVal` depends on the type of the token. For literals, it is the\n   * literal value, for operators, the operator name, and so on.\n   * @type {*}\n   */\n  var tokVal;\n\n  /**\n   * Interal state for the tokenizer. To distinguish between division\n   * operators and regular expressions, it remembers whether the last\n   * token was one that is allowed to be followed by an expression.\n   * (If it is, a slash is probably a regexp, if it isn't it's a\n   * division operator. See the `parseStatement` function for a caveat.)\n   * @type {boolean|undefined}\n   */\n  var tokRegexpAllowed;\n\n  /**\n   * When `options.locations` is true, `tokCurLine` is used to keep\n   * track of the current line.\n   * @type {number|undefined}\n   */\n  var tokCurLine;\n\n  /**\n   * When `options.locations` is true, `tokLineStart` is used to know\n   * when a new line has been entered.\n   * @type {number|undefined}\n   */\n  var tokLineStart;\n\n  /**\n   * The start of the position of the previous token, which is useful\n   * when finishing a node and assigning its `end` position.\n   * @type {number}\n   */\n  var lastStart = 0;\n\n  /**\n   * The end oy the position of the previous token, which is useful\n   * when finishing a node and assigning its `end` position.\n   * @type {number}\n   */\n  var lastEnd = 0;\n\n  /**\n   * Stores the position of the previous token, which is useful\n   * when finishing a node and assigning its `end` position.\n   * @type {!line_loc_t|undefined}\n   */\n  var lastEndLoc;\n\n  /**\n   * `inFunction` is used to reject `return` statements outside of functions.\n   * @type {boolean|undefined}\n   */\n  var inFunction;\n\n  /**\n   * `labels` is used to verify that `break` and `continue` have somewhere\n   * to jump to.\n   * @type {!Array<!Object>|undefined}\n   */\n  var labels;\n\n  /**\n   * `strict` indicates whether strict mode is on.\n   * @type {boolean|undefined}\n   */\n  var strict;\n\n  /**\n   * This function is used to raise exceptions on parse errors. It\n   * takes an offset integer (into the current `input`) to indicate\n   * the location of the error, attaches the position to the end\n   * of the error message, and then raises a `SyntaxError` with that\n   * message.\n   *\n   * @param {number} pos\n   * @param {string} message\n   * @throws {SyntaxError}\n   */\n  function raise(pos, message) {\n    var loc = getLineInfo(input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos;\n    err.loc = loc;\n    err.raisedAt = tokPos;\n    throw err;\n  }\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty = [];\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // These are the general types. The `type` property is only used to\n  // make them recognizeable when debugging.\n\n  var _num = {type: \"num\"};\n  var _regexp = {type: \"regexp\"};\n  var _string = {type: \"string\"};\n  var _name = {type: \"name\"};\n  var _eof = {type: \"eof\"};\n\n  // Keyword tokens. The `keyword` property (also used in keyword-like\n  // operators) indicates that the token originated from an\n  // identifier-like word, which is used when parsing property names.\n  //\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var _break = {keyword: \"break\"};\n  var _case = {keyword: \"case\", beforeExpr: true};\n  var _catch = {keyword: \"catch\"};\n  var _continue = {keyword: \"continue\"};\n  var _debugger = {keyword: \"debugger\"};\n  var _default = {keyword: \"default\"};\n  var _do = {keyword: \"do\", isLoop: true};\n  var _else = {keyword: \"else\", beforeExpr: true};\n  var _finally = {keyword: \"finally\"};\n  var _for = {keyword: \"for\", isLoop: true};\n  var _function = {keyword: \"function\"};\n  var _if = {keyword: \"if\"};\n  var _return = {keyword: \"return\", beforeExpr: true};\n  var _switch = {keyword: \"switch\"};\n  var _throw = {keyword: \"throw\", beforeExpr: true};\n  var _try = {keyword: \"try\"};\n  var _var = {keyword: \"var\"};\n  var _while = {keyword: \"while\", isLoop: true};\n  var _with = {keyword: \"with\"};\n  var _new = {keyword: \"new\", beforeExpr: true};\n  var _this = {keyword: \"this\"};\n\n  // The keywords that denote values.\n\n  var _null = {keyword: \"null\", atomValue: null};\n  var _true = {keyword: \"true\", atomValue: true};\n  var _false = {keyword: \"false\", atomValue: false};\n\n  // Some keywords are treated as regular operators. `in` sometimes\n  // (when parsing `for`) needs to be tested against specifically, so\n  // we assign a variable name to it for quick comparing.\n\n  var _in = {keyword: \"in\", binop: 7, beforeExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywordTypes = {\n    \"break\": _break,\n    \"case\": _case,\n    \"catch\": _catch,\n    \"continue\": _continue,\n    \"debugger\": _debugger,\n    \"default\": _default,\n    \"do\": _do,\n    \"else\": _else,\n    \"finally\": _finally,\n    \"for\": _for,\n    \"function\": _function,\n    \"if\": _if,\n    \"return\": _return,\n    \"switch\": _switch,\n    \"throw\": _throw,\n    \"try\": _try,\n    \"var\": _var,\n    \"while\": _while,\n    \"with\": _with,\n    \"null\": _null,\n    \"true\": _true,\n    \"false\": _false,\n    \"new\": _new,\n    \"in\": _in,\n    \"instanceof\": {keyword: \"instanceof\", binop: 7, beforeExpr: true},\n    \"this\": _this,\n    \"typeof\": {keyword: \"typeof\", prefix: true, beforeExpr: true},\n    \"void\": {keyword: \"void\", prefix: true, beforeExpr: true},\n    \"delete\": {keyword: \"delete\", prefix: true, beforeExpr: true},\n  };\n\n  // Punctuation token types. Again, the `type` property is purely for debugging.\n\n  var _bracketL = {type: \"[\", beforeExpr: true};\n  var _bracketR = {type: \"]\"};\n  var _braceL = {type: \"{\", beforeExpr: true};\n  var _braceR = {type: \"}\"};\n  var _parenL = {type: \"(\", beforeExpr: true};\n  var _parenR = {type: \")\"};\n  var _comma = {type: \",\", beforeExpr: true};\n  var _semi = {type: \";\", beforeExpr: true};\n  var _colon = {type: \":\", beforeExpr: true};\n  var _dot = {type: \".\"};\n  var _question = {type: \"?\", beforeExpr: true};\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator. `isUpdate` specifies that the node produced by\n  // the operator should be of type UpdateExpression rather than\n  // simply UnaryExpression (`++` and `--`).\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  var _slash = {binop: 10, beforeExpr: true};\n  var _eq = {isAssign: true, beforeExpr: true};\n  var _assign = {isAssign: true, beforeExpr: true};\n  var _incDec = {postfix: true, prefix: true, isUpdate: true};\n  var _prefix = {prefix: true, beforeExpr: true};\n  var _logicalOR = {binop: 1, beforeExpr: true};\n  var _logicalAND = {binop: 2, beforeExpr: true};\n  var _bitwiseOR = {binop: 3, beforeExpr: true};\n  var _bitwiseXOR = {binop: 4, beforeExpr: true};\n  var _bitwiseAND = {binop: 5, beforeExpr: true};\n  var _equality = {binop: 6, beforeExpr: true};\n  var _relational = {binop: 7, beforeExpr: true};\n  var _bitShift = {binop: 8, beforeExpr: true};\n  var _plusMin = {binop: 9, prefix: true, beforeExpr: true};\n  var _multiplyModulo = {binop: 10, beforeExpr: true};\n\n  // JS-Interpreter change:\n  // tokTypes map never used.  Removed.\n  // -- Neil Fraser, February 2023.\n\n  // JS-Interpreter change:\n  // Acorn's original code built up functions using strings for maximum efficiency.\n  // However, this triggered a CSP unsafe-eval requirement.  Here's a slower, but\n  // simpler approach.  -- Neil Fraser, January 2022.\n  // https://github.com/NeilFraser/JS-Interpreter/issues/228\n\n  /**\n   * @param {string} words\n   * @returns {function(*): boolean}\n   */\n  function makePredicate(words) {\n    var wordList = words.split(\" \");\n    var set = Object.create(null);\n    for (var i = 0; i < wordList.length; i++) {\n      set[wordList[i]] = true;\n    }\n    return function(str) {\n      return set[str] || false;\n    };\n  }\n\n  // ECMAScript 5 reserved words.\n\n  var isReservedWord5 = makePredicate(\"class enum extends super const export import\");\n\n  // The additional reserved words in strict mode.\n\n  var isStrictReservedWord = makePredicate(\"implements interface let package private protected public static yield\");\n\n  // The forbidden variable names in strict mode.\n\n  var isStrictBadIdWord = makePredicate(\"eval arguments\");\n\n  // And the keywords.\n\n  var isKeyword = makePredicate(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\");\n\n  // ## Character categories\n\n  // Big ugly regular expressions that match characters in the\n  // whitespace, identifier, and identifier-start categories. These\n  // are only applied when a character is found to actually have a\n  // code point above 128.\n\n  var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  // Whether a single character denotes a newline.\n\n  var newline = /[\\n\\r\\u2028\\u2029]/;\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\n\n  /**\n   * Test whether a given character code starts an identifier.\n   *\n   * @param {number} code\n   * @returns {boolean}\n   */\n  var isIdentifierStart = function(code) {\n    if (code < 65) return code === 36;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123) return true;\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  };\n\n  /**\n   * Test whether a given character is part of an identifier.\n   *\n   * @param {number} code\n   * @returns {boolean}\n   */\n  var isIdentifierChar = function(code) {\n    if (code < 48) return code === 36;\n    if (code < 58) return true;\n    if (code < 65) return false;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123) return true;\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  };\n\n  // ## Tokenizer\n\n  /**\n   * These are used when `options.locations` is on, for the\n   * `tokStartLoc` and `tokEndLoc` properties.\n   * @constructor\n   */\n  function line_loc_t() {\n    this.line = tokCurLine;\n    this.column = tokPos - tokLineStart;\n  }\n\n  /**\n   * Reset the token state. Used at the start of a parse.\n   */\n  function initTokenState() {\n    tokCurLine = 1;\n    tokPos = tokLineStart = 0;\n    tokRegexpAllowed = true;\n    skipSpace();\n  }\n\n  /**\n   * Called at the end of every token. Sets `tokEnd`, `tokVal`, and\n   * `tokRegexpAllowed`, and skips the space after the token, so that\n   * the next one's `tokStart` will point at the right position.\n   *\n   * @param {!Object} type\n   * @param {*=} val\n   */\n  function finishToken(type, val) {\n    tokEnd = tokPos;\n    if (options.locations) {\n      tokEndLoc = new line_loc_t();\n    }\n    tokType = type;\n    skipSpace();\n    tokVal = val;\n    tokRegexpAllowed = type.beforeExpr;\n  }\n\n  function skipBlockComment() {\n    var startLoc = options.onComment && options.locations && new line_loc_t();\n    var start = tokPos;\n    var end = input.indexOf(\"*/\", tokPos += 2);\n    if (end === -1) {\n      raise(tokPos - 2, \"Unterminated comment\");\n    }\n    tokPos = end + 2;\n    if (options.locations) {\n      lineBreak.lastIndex = start;\n      var match;\n      while ((match = lineBreak.exec(input)) && match.index < tokPos) {\n        ++tokCurLine;\n        tokLineStart = match.index + match[0].length;\n      }\n    }\n    if (options.onComment) {\n      options.onComment(true, input.slice(start + 2, end), start, tokPos,\n                        startLoc, options.locations && new line_loc_t());\n    }\n  }\n\n  function skipLineComment() {\n    var start = tokPos;\n    var startLoc = options.onComment && options.locations && new line_loc_t();\n    var ch = input.charCodeAt(tokPos += 2);\n    while (tokPos < inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n      ++tokPos;\n      ch = input.charCodeAt(tokPos);\n    }\n    if (options.onComment) {\n      options.onComment(false, input.slice(start + 2, tokPos), start, tokPos,\n                        startLoc, options.locations && new line_loc_t());\n    }\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  function skipSpace() {\n    while (tokPos < inputLen) {\n      var ch = input.charCodeAt(tokPos);\n      if (ch === 32) { // ' '\n        ++tokPos;\n      } else if (ch === 13) {\n        ++tokPos;\n        var next = input.charCodeAt(tokPos);\n        if (next === 10) {\n          ++tokPos;\n        }\n        if (options.locations) {\n          ++tokCurLine;\n          tokLineStart = tokPos;\n        }\n      } else if (ch === 10 || ch === 8232 || ch === 8233) {\n        ++tokPos;\n        if (options.locations) {\n          ++tokCurLine;\n          tokLineStart = tokPos;\n        }\n      } else if (ch > 8 && ch < 14) {\n        ++tokPos;\n      } else if (ch === 47) { // '/'\n        var next = input.charCodeAt(tokPos + 1);\n        if (next === 42) { // '*'\n          skipBlockComment();\n        } else if (next === 47) { // '/'\n          skipLineComment();\n        } else break;\n      } else if (ch === 160) { // '\\xa0'\n        ++tokPos;\n      } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++tokPos;\n      } else {\n        break;\n      }\n    }\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  // The `forceRegexp` parameter is used in the one case where the\n  // `tokRegexpAllowed` trick does not work. See `parseStatement`.\n\n  function readToken_dot() {\n    var next = input.charCodeAt(tokPos + 1);\n    if (next >= 48 && next <= 57) {\n      readNumber(true);\n    } else {\n      ++tokPos;\n      finishToken(_dot);\n    }\n  }\n\n  function readToken_slash() {  // '/'\n    var next = input.charCodeAt(tokPos + 1);\n    if (tokRegexpAllowed) {\n      ++tokPos;\n      readRegexp();\n    } else if (next === 61) {\n      finishOp(_assign, 2);\n    } else {\n      finishOp(_slash, 1);\n    }\n  }\n\n  function readToken_mult_modulo() {  // '%*'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) {\n      finishOp(_assign, 2);\n    } else {\n      finishOp(_multiplyModulo, 1);\n    }\n  }\n\n  /**\n   * @param {number} code\n   */\n  function readToken_pipe_amp(code) {  // '|&'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === code) {\n      finishOp(code === 124 ? _logicalOR : _logicalAND, 2);\n    } else if (next === 61) {\n      finishOp(_assign, 2);\n    } else {\n      finishOp(code === 124 ? _bitwiseOR : _bitwiseAND, 1);\n    }\n  }\n\n  function readToken_caret() {  // '^'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) {\n      finishOp(_assign, 2);\n    } else {\n      finishOp(_bitwiseXOR, 1);\n    }\n  }\n\n  /**\n   * @param {number} code\n   */\n  function readToken_plus_min(code) {  // '+-'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === code) {\n      if (next === 45 && input.charCodeAt(tokPos + 2) === 62 &&\n          newline.test(input.slice(lastEnd, tokPos))) {\n        // A `-->` line comment\n        tokPos += 3;\n        skipLineComment();\n        skipSpace();\n        readToken();\n        return;\n      }\n      finishOp(_incDec, 2);\n    } else if (next === 61) {\n      finishOp(_assign, 2);\n    } else {\n      finishOp(_plusMin, 1);\n    }\n  }\n\n  /**\n   * @param {number} code\n   */\n  function readToken_lt_gt(code) {  // '<>'\n    var next = input.charCodeAt(tokPos + 1);\n    var size = 1;\n    if (next === code) {\n      size = (code === 62 && input.charCodeAt(tokPos + 2) === 62) ? 3 : 2;\n      if (input.charCodeAt(tokPos + size) === 61) {\n        finishOp(_assign, size + 1);\n      } else {\n        finishOp(_bitShift, size);\n      }\n      return;\n    }\n    if (next === 33 && code === 60 && input.charCodeAt(tokPos + 2) === 45 &&\n        input.charCodeAt(tokPos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      tokPos += 4;\n      skipLineComment();\n      skipSpace();\n      readToken();\n      return;\n    }\n    if (next === 61) {\n      size = input.charCodeAt(tokPos + 2) === 61 ? 3 : 2;\n    }\n    finishOp(_relational, size);\n  }\n\n  /**\n   * @param {number} code\n   */\n  function readToken_eq_excl(code) {  // '=!'\n    var next = input.charCodeAt(tokPos + 1);\n    if (next === 61) {\n      finishOp(_equality, input.charCodeAt(tokPos + 2) === 61 ? 3 : 2);\n    } else {\n      finishOp(code === 61 ? _eq : _prefix, 1);\n    }\n  }\n\n  /**\n   * @param {number} code\n   * @returns {boolean|undefined}\n   */\n  function getTokenFromCode(code) {\n    switch(code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit.\n      case 46: // '.'\n        return readToken_dot();\n\n        // Punctuation tokens.\n      case 40:  ++tokPos; return finishToken(_parenL);\n      case 41:  ++tokPos; return finishToken(_parenR);\n      case 59:  ++tokPos; return finishToken(_semi);\n      case 44:  ++tokPos; return finishToken(_comma);\n      case 91:  ++tokPos; return finishToken(_bracketL);\n      case 93:  ++tokPos; return finishToken(_bracketR);\n      case 123: ++tokPos; return finishToken(_braceL);\n      case 125: ++tokPos; return finishToken(_braceR);\n      case 58:  ++tokPos; return finishToken(_colon);\n      case 63:  ++tokPos; return finishToken(_question);\n\n        // '0x' is a hexadecimal number.\n      case 48: // '0'\n        var next = input.charCodeAt(tokPos + 1);\n        if (next === 120 || next === 88) return readHexNumber();\n        // Anything else beginning with a digit is an integer, octal\n        // number, or float.\n      case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n        return readNumber(false);\n\n        // Quotes produce strings.\n      case 34: case 39: // '\"', \"'\"\n        return readString(code);\n\n      // Operators are parsed inline in tiny state machines. '=' (61) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case 47: // '/'\n        return readToken_slash();\n\n      case 37: case 42: // '%*'\n        return readToken_mult_modulo();\n\n      case 124: case 38: // '|&'\n        return readToken_pipe_amp(code);\n\n      case 94: // '^'\n        return readToken_caret();\n\n      case 43: case 45: // '+-'\n        return readToken_plus_min(code);\n\n      case 60: case 62: // '<>'\n        return readToken_lt_gt(code);\n\n      case 61: case 33: // '=!'\n        return readToken_eq_excl(code);\n\n      case 126: // '~'\n        return finishOp(_prefix, 1);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {boolean=} forceRegexp\n   */\n  function readToken(forceRegexp) {\n    if (!forceRegexp) {\n      tokStart = tokPos;\n    } else {\n      tokPos = tokStart + 1;\n    }\n    if (options.locations) {\n      tokStartLoc = new line_loc_t();\n    }\n    if (forceRegexp) return readRegexp();\n    if (tokPos >= inputLen) return finishToken(_eof);\n\n    var code = input.charCodeAt(tokPos);\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code) || code === 92) {  // '\\'\n      return readWord();\n    }\n\n    var tok = getTokenFromCode(code);\n\n    if (tok === false) {\n      // If we are here, we either found a non-ASCII identifier\n      // character, or something that's entirely disallowed.\n      var ch = String.fromCharCode(code);\n      if (ch === \"\\\\\" || nonASCIIidentifierStart.test(ch)) {\n        return readWord();\n      }\n      raise(tokPos, \"Unexpected character '\" + ch + \"'\");\n    }\n  }\n\n  /**\n   * @param {!Object} type\n   * @param {number} size\n   */\n  function finishOp(type, size) {\n    var str = input.slice(tokPos, tokPos + size);\n    tokPos += size;\n    finishToken(type, str);\n  }\n\n  /**\n   * Parse a regular expression. Some context-awareness is necessary,\n   * since a '/' inside a '[]' set does not end the expression.\n   */\n  function readRegexp() {\n    // JS-Interpreter change:\n    // Removed redundant declaration of 'content' here.  Caused lint errors.\n    // -- Neil Fraser, June 2022.\n    var escaped;\n    var inClass;\n    var start = tokPos;\n    for (;;) {\n      if (tokPos >= inputLen) raise(start, \"Unterminated regexp\");\n      var ch = input.charAt(tokPos);\n      if (newline.test(ch)) raise(start, \"Unterminated regexp\");\n      if (!escaped) {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      } else escaped = false;\n      ++tokPos;\n    }\n    var content = input.slice(start, tokPos);\n    ++tokPos;\n    // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n    // here (don't ask).\n    var mods = readWord1();\n    // JS-Interpreter change:\n    // Acorn used to use 'gmsiy' to check for flags.  But 's' and 'y' are ES6.\n    // -- Neil Fraser, December 2022.\n    // https://github.com/acornjs/acorn/issues/1163\n    if (mods && !/^[gmi]*$/.test(mods)) {\n      raise(start, \"Invalid regexp flag\");\n    }\n    try {\n      var value = new RegExp(content, mods);\n    } catch (e) {\n      if (e instanceof SyntaxError) raise(start, e.message);\n      // JS-Interpreter change:\n      // Acorn used to use raise(e) here which is incorrect.\n      // -- Neil Fraser, July 2023.\n      throw(e);\n    }\n    finishToken(_regexp, value);\n  }\n\n  /**\n   * Read an integer in the given radix. Return null if zero digits\n   * were read, the integer value otherwise. When `len` is given, this\n   * will return `null` unless the integer has exactly `len` digits.\n   * @param {number} radix\n   * @param {number=} len\n   * @returns {?number}\n   */\n  function readInt(radix, len) {\n    var start = tokPos;\n    var total = 0;\n    var e = (len === undefined) ? Infinity : len;\n    for (var i = 0; i < e; ++i) {\n      var code = input.charCodeAt(tokPos), val;\n      if (code >= 97) {\n        val = code - 97 + 10; // a\n      } else if (code >= 65) {\n        val = code - 65 + 10; // A\n      } else if (code >= 48 && code <= 57) {\n        val = code - 48; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) break;\n      ++tokPos;\n      total = total * radix + val;\n    }\n    if (tokPos === start || len !== undefined && tokPos - start !== len) {\n      return null;\n    }\n    return total;\n  }\n\n  function readHexNumber() {\n    tokPos += 2; // 0x\n    var val = readInt(16);\n    if (val === null) {\n      raise(tokStart + 2, \"Expected hexadecimal number\");\n    }\n    if (isIdentifierStart(input.charCodeAt(tokPos))) {\n      raise(tokPos, \"Identifier directly after number\");\n    }\n    finishToken(_num, val);\n  }\n\n  /**\n   * Read an integer, octal integer, or floating-point number.\n   *\n   * @param {boolean} startsWithDot\n   */\n  function readNumber(startsWithDot) {\n    var start = tokPos;\n    var isFloat = false;\n    var octal = input.charCodeAt(tokPos) === 48;\n    if (!startsWithDot && readInt(10) === null) {\n      raise(start, \"Invalid number\");\n    }\n    if (input.charCodeAt(tokPos) === 46) {\n      ++tokPos;\n      readInt(10);\n      isFloat = true;\n    }\n    var next = input.charCodeAt(tokPos);\n    if (next === 69 || next === 101) { // 'eE'\n      next = input.charCodeAt(++tokPos);\n      if (next === 43 || next === 45) {\n        ++tokPos; // '+-'\n      }\n      if (readInt(10) === null) {\n        raise(start, \"Invalid number\");\n      }\n      isFloat = true;\n    }\n    if (isIdentifierStart(input.charCodeAt(tokPos))) {\n      raise(tokPos, \"Identifier directly after number\");\n    }\n\n    var str = input.slice(start, tokPos);\n    var val;\n    if (isFloat) {\n      val = parseFloat(str);\n    } else if (!octal || str.length === 1) {\n      val = parseInt(str, 10);\n    } else if (/[89]/.test(str) || strict) {\n      raise(start, \"Invalid number\");\n    } else {\n      val = parseInt(str, 8);\n    }\n    finishToken(_num, val);\n  }\n\n  /**\n   * Read a string value, interpreting backslash-escapes.\n   *\n   * @param {number} quote\n   */\n  function readString(quote) {\n    tokPos++;\n    var out = \"\";\n    for (;;) {\n      if (tokPos >= inputLen) raise(tokStart, \"Unterminated string constant\");\n      var ch = input.charCodeAt(tokPos);\n      if (ch === quote) {\n        ++tokPos;\n        finishToken(_string, out);\n        return;\n      }\n      if (ch === 92) { // '\\'\n        ch = input.charCodeAt(++tokPos);\n        var octal = /^[0-7]+/.exec(input.slice(tokPos, tokPos + 3));\n        if (octal) {\n          octal = octal[0];\n        }\n        while (octal && parseInt(octal, 8) > 255) {\n          octal = octal.slice(0, -1);\n        }\n        if (octal === \"0\") {\n          octal = null;\n        }\n        ++tokPos;\n        if (octal) {\n          if (strict) raise(tokPos - 2, \"Octal literal in strict mode\");\n          out += String.fromCharCode(parseInt(octal, 8));\n          tokPos += octal.length - 1;\n        } else {\n          switch (ch) {\n            case 110: out += \"\\n\"; break; // 'n' -> '\\n'\n            case 114: out += \"\\r\"; break; // 'r' -> '\\r'\n            case 120: out += String.fromCharCode(readHexChar(2)); break; // 'x'\n            case 117: out += String.fromCharCode(readHexChar(4)); break; // 'u'\n            case 85: out += String.fromCharCode(readHexChar(8)); break; // 'U'\n            case 116: out += \"\\t\"; break; // 't' -> '\\t'\n            case 98: out += \"\\b\"; break; // 'b' -> '\\b'\n            case 118: out += \"\\u000b\"; break; // 'v' -> '\\u000b'\n            case 102: out += \"\\f\"; break; // 'f' -> '\\f'\n            case 48: out += \"\\0\"; break; // 0 -> '\\0'\n            case 13:  // '\\r'\n              if (input.charCodeAt(tokPos) === 10) {\n                ++tokPos; // '\\r\\n'\n              }\n            case 10: // ' \\n'\n              if (options.locations) {\n                tokLineStart = tokPos;\n                ++tokCurLine;\n              }\n              break;\n            default: out += String.fromCharCode(ch); break;\n          }\n        }\n      } else {\n        if (ch === 13 || ch === 10 || ch === 8232 || ch === 8233) {\n          raise(tokStart, \"Unterminated string constant\");\n        }\n        out += String.fromCharCode(ch); // '\\'\n        ++tokPos;\n      }\n    }\n  }\n\n  /**\n   * Used to read character escape sequences ('\\x', '\\u', '\\U').\n   *\n   * @param {number} len\n   * @returns {number}\n   */\n  function readHexChar(len) {\n    var n = readInt(16, len);\n    if (n === null) raise(tokStart, \"Bad character escape sequence\");\n    return /** @type {number} */(n);\n  }\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n\n  /** @type {boolean|undefined} */\n  var containsEsc;\n\n  /**\n   * Read an identifier, and return it as a string. Sets `containsEsc`\n   * to whether the word contained a '\\u' escape.\n   *\n   * Only builds up the word character-by-character when it actually\n   * containeds an escape, as a micro-optimization.\n   *\n   * @returns {string|undefined}\n   */\n  function readWord1() {\n    containsEsc = false;\n    var word;\n    var first = true;\n    var start = tokPos;\n    for (;;) {\n      var ch = input.charCodeAt(tokPos);\n      if (isIdentifierChar(ch)) {\n        if (containsEsc) {\n          word += input.charAt(tokPos);\n        }\n        ++tokPos;\n      } else if (ch === 92) { // \"\\\"\n        if (!containsEsc) {\n          word = input.slice(start, tokPos);\n        }\n        containsEsc = true;\n        if (input.charCodeAt(++tokPos) !== 117) { // \"u\"\n          raise(tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n        }\n        ++tokPos;\n        var esc = readHexChar(4);\n        var escStr = String.fromCharCode(esc);\n        if (!escStr) raise(tokPos - 1, \"Invalid Unicode escape\");\n        if (!(first ? isIdentifierStart(esc) : isIdentifierChar(esc))) {\n          raise(tokPos - 4, \"Invalid Unicode escape\");\n        }\n        word += escStr;\n      } else {\n        break;\n      }\n      first = false;\n    }\n    return containsEsc ? word : input.slice(start, tokPos);\n  }\n\n  /**\n   * Read an identifier or keyword token. Will check for reserved\n   * words when necessary.\n   */\n  function readWord() {\n    var word = readWord1();\n    var type = _name;\n    if (!containsEsc && isKeyword(word)) {\n      type = keywordTypes[word];\n    }\n    finishToken(type, word);\n  }\n\n  // ## Parser\n\n  // A recursive descent parser operates by defining functions for all\n  // syntactic elements, and recursively calling those, each function\n  // advancing the input stream and returning an AST node. Precedence\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n  // instead of `(!x)[1]` is handled by the fact that the parser\n  // function that parses unary prefix operators is called first, and\n  // in turn calls the function that parses `[]` subscripts — that\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\n  // *that* in the unary operator node.\n  //\n  // Acorn uses an [operator precedence parser][opp] to handle binary\n  // operator precedence, because it is much more compact than using\n  // the technique outlined above, which uses different, nesting\n  // functions to specify precedence, for all of the ten binary\n  // precedence levels that JavaScript defines.\n  //\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n  // ### Parser utilities\n\n  /**\n   * Continue to the next token.\n   */\n  function next() {\n    lastStart = tokStart;\n    lastEnd = tokEnd;\n    lastEndLoc = tokEndLoc;\n    readToken();\n  }\n\n  /**\n   * Enter strict mode. Re-reads the next token to please pedantic\n   * tests (\"use strict\"; 010; -- should fail).\n   *\n   * @param {boolean} strct\n   */\n  function setStrict(strct) {\n    strict = strct;\n    tokPos = tokStart;\n    if (options.locations) {\n      while (tokPos < tokLineStart) {\n        tokLineStart = input.lastIndexOf(\"\\n\", tokLineStart - 2) + 1;\n        --tokCurLine;\n      }\n    }\n    skipSpace();\n    readToken();\n  }\n\n  // Start an AST node, attaching a start offset.\n\n  /**\n   * @constructor\n   */\n  function node_t() {\n    this.type = null;\n    this.start = tokStart;\n    this.end = null;\n  }\n\n  /**\n   * @constructor\n   */\n  function node_loc_t() {\n    this.start = tokStartLoc;\n    this.end = null;\n    if (sourceFile) {\n      this.source = sourceFile;\n    }\n  }\n\n  /**\n   * @returns {!node_t}\n   */\n  function startNode() {\n    var node = new node_t();\n    if (options.locations) {\n      node.loc = new node_loc_t();\n    }\n    if (options.directSourceFile) {\n      node.sourceFile = options.directSourceFile;\n    }\n    if (options.ranges) {\n      node.range = [tokStart, 0];\n    }\n    return node;\n  }\n\n  /**\n   * Start a node whose start offset information should be based on\n   * the start of another node. For example, a binary operator node is\n   * only started after its left-hand side has already been parsed.\n   *\n   * @param {!node_t} other\n   * @returns {!node_t}\n   */\n  function startNodeFrom(other) {\n    var node = new node_t();\n    node.start = other.start;\n    if (options.locations) {\n      node.loc = new node_loc_t();\n      node.loc.start = other.loc.start;\n    }\n    if (options.ranges) {\n      node.range = [other.range[0], 0];\n    }\n    return node;\n  }\n\n  /**\n   * Finish an AST node, adding `type` and `end` properties.\n   *\n   * @param {!node_t} node\n   * @param {string} type\n   * @returns {!node_t}\n   */\n  function finishNode(node, type) {\n    node.type = type;\n    node.end = lastEnd;\n    if (options.locations) {\n      node.loc.end = lastEndLoc;\n    }\n    if (options.ranges) {\n      node.range[1] = lastEnd;\n    }\n    return node;\n  }\n\n  /**\n   * Test whether a statement node is the string literal `\"use strict\"`.\n   *\n   * @param {!node_t} stmt\n   * @returns {boolean}\n   */\n  function isUseStrict(stmt) {\n    return stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        stmt.expression.value === \"use strict\";\n  }\n\n  /**\n   * Predicate that tests whether the next token is of the given\n   * type, and if yes, consumes it as a side effect.\n   * @param {!Object} type\n   * @returns {boolean}\n   */\n  function eat(type) {\n    if (tokType === type) {\n      next();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Test whether a semicolon can be inserted at the current position.\n   *\n   * @returns {boolean}\n   */\n  function canInsertSemicolon() {\n    return !options.strictSemicolons &&\n        (tokType === _eof || tokType === _braceR ||\n         newline.test(input.slice(lastEnd, tokStart)));\n  }\n\n  /**\n   * Consume a semicolon, or, failing that, see if we are allowed to\n   * pretend that there is a semicolon at this position.\n   */\n  function semicolon() {\n    if (!eat(_semi) && !canInsertSemicolon()) {\n      unexpected();\n    }\n  }\n\n  /**\n   * Expect a token of a given type.  If found, consume it, otherwise,\n   * raise an unexpected token error.\n   *\n   * @param {!Object} type\n   */\n  function expect(type) {\n    if (tokType === type) {\n      next();\n    } else {\n      unexpected();\n    }\n  }\n\n  /**\n   * Raise an unexpected token error.\n   * @throws {SyntaxError}\n   */\n  function unexpected() {\n    raise(tokStart, \"Unexpected token\");\n  }\n\n  /**\n   * Verify that a node is an lval — something that can be assigned to.\n   *\n   * @param {!node_t} expr\n   */\n  function checkLVal(expr) {\n    if (expr.type !== \"Identifier\" && expr.type !== \"MemberExpression\") {\n      raise(expr.start, \"Assigning to rvalue\");\n    }\n    if (strict && expr.type === \"Identifier\" && isStrictBadIdWord(expr.name)) {\n      raise(expr.start, \"Assigning to \" + expr.name + \" in strict mode\");\n    }\n  }\n\n  // ### Statement parsing\n\n  /**\n   * Parse a program. Initializes the parser, reads any number of\n   * statements, and wraps them in a Program node.  Optionally takes a\n   * `program` argument.  If present, the statements will be appended\n   * to its body instead of creating a new node.\n   *\n   * @param {node_t} program\n   * @returns {!node_t}\n   */\n  function parseTopLevel(program) {\n    lastStart = lastEnd = tokPos;\n    if (options.locations) {\n      lastEndLoc = new line_loc_t();\n    }\n    inFunction = strict = false;\n    labels = [];\n    readToken();\n\n    var node = program || startNode();\n    var first = true;\n    if (!program) {\n      node.body = [];\n    }\n    while (tokType !== _eof) {\n      var stmt = parseStatement();\n      node.body.push(stmt);\n      if (first && isUseStrict(stmt)) {\n        setStrict(true);\n      }\n      first = false;\n    }\n    return finishNode(node, \"Program\");\n  }\n\n  var loopLabel = {kind: \"loop\"};\n  var switchLabel = {kind: \"switch\"};\n\n  /**\n   * Parse a single statement.\n   *\n   * If expecting a statement and finding a slash operator, parse a\n   * regular expression literal. This is to handle cases like\n   * `if (foo) /blah/.exec(foo);`, where looking at the previous token\n   * does not help.\n   *\n   * @returns {!node_t}\n   */\n  function parseStatement() {\n    if (tokType === _slash || tokType === _assign && tokVal === \"/=\") {\n      readToken(true);\n    }\n\n    var starttype = tokType;\n    var node = startNode();\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case _break: case _continue:\n        next();\n        var isBreak = starttype === _break;\n        if (eat(_semi) || canInsertSemicolon()) {\n          node.label = null;\n        } else if (tokType !== _name) {\n          unexpected();\n        } else {\n          node.label = parseIdent();\n          semicolon();\n        }\n\n        // Verify that there is an actual destination to break or\n        // continue to.\n        for (var i = 0; i < labels.length; ++i) {\n          var lab = labels[i];\n          if (node.label === null || lab.name === node.label.name) {\n            if (lab.kind !== null && (isBreak || lab.kind === \"loop\")) break;\n            if (node.label && isBreak) break;\n          }\n        }\n        if (i === labels.length) {\n          raise(node.start, \"Unsyntactic \" + starttype.keyword);\n        }\n        return finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n\n      case _debugger:\n        next();\n        semicolon();\n        return finishNode(node, \"DebuggerStatement\");\n\n      case _do:\n        next();\n        labels.push(loopLabel);\n        node.body = parseStatement();\n        labels.pop();\n        expect(_while);\n        node.test = parseParenExpression();\n        semicolon();\n        return finishNode(node, \"DoWhileStatement\");\n\n        // Disambiguating between a `for` and a `for`/`in` loop is\n        // non-trivial. Basically, we have to parse the init `var`\n        // statement or expression, disallowing the `in` operator (see\n        // the second parameter to `parseExpression`), and then check\n        // whether the next token is `in`. When there is no init part\n        // (semicolon immediately after the opening parenthesis), it is\n        // a regular `for` loop.\n\n      case _for:\n        next();\n        labels.push(loopLabel);\n        expect(_parenL);\n        if (tokType === _semi) return parseFor(node, null);\n        if (tokType === _var) {\n          var init = startNode();\n          next();\n          parseVar(init, true);\n          finishNode(init, \"VariableDeclaration\");\n          if (init.declarations.length === 1 && eat(_in))\n            return parseForIn(node, init);\n          return parseFor(node, init);\n        }\n        var init = parseExpression(false, true);\n        if (eat(_in)) {\n          checkLVal(init);\n          return parseForIn(node, init);\n        }\n        return parseFor(node, init);\n\n      case _function:\n        next();\n        return parseFunction(node, true);\n\n      case _if:\n        next();\n        node.test = parseParenExpression();\n        node.consequent = parseStatement();\n        node.alternate = eat(_else) ? parseStatement() : null;\n        return finishNode(node, \"IfStatement\");\n\n      case _return:\n        if (!inFunction && !options.allowReturnOutsideFunction) {\n          raise(tokStart, \"'return' outside of function\");\n        }\n        next();\n\n        // In `return` (and `break`/`continue`), the keywords with\n        // optional arguments, we eagerly look for a semicolon or the\n        // possibility to insert one.\n\n        if (eat(_semi) || canInsertSemicolon()) {\n          node.argument = null;\n        } else {\n          node.argument = parseExpression();\n          semicolon();\n        }\n        return finishNode(node, \"ReturnStatement\");\n\n      case _switch:\n        next();\n        node.discriminant = parseParenExpression();\n        node.cases = [];\n        expect(_braceL);\n        labels.push(switchLabel);\n\n        // Statements under must be grouped (by label) in SwitchCase\n        // nodes. `cur` is used to keep the node that we are currently\n        // adding statements to.\n\n        for (var cur, sawDefault; tokType !== _braceR;) {\n          if (tokType === _case || tokType === _default) {\n            var isCase = tokType === _case;\n            if (cur) {\n              finishNode(cur, \"SwitchCase\");\n            }\n            node.cases.push(cur = startNode());\n            cur.consequent = [];\n            next();\n            if (isCase) {\n              cur.test = parseExpression();\n            } else {\n              if (sawDefault) {\n                raise(lastStart, \"Multiple default clauses\");\n              }\n              sawDefault = true;\n              cur.test = null;\n            }\n            expect(_colon);\n          } else {\n            if (!cur) unexpected();\n            cur.consequent.push(parseStatement());\n          }\n        }\n        if (cur) finishNode(cur, \"SwitchCase\");\n        next(); // Closing brace\n        labels.pop();\n        return finishNode(node, \"SwitchStatement\");\n\n      case _throw:\n        next();\n        if (newline.test(input.slice(lastEnd, tokStart)))\n          raise(lastEnd, \"Illegal newline after throw\");\n        node.argument = parseExpression();\n        semicolon();\n        return finishNode(node, \"ThrowStatement\");\n\n      case _try:\n        next();\n        node.block = parseBlock();\n        node.handler = null;\n        if (tokType === _catch) {\n          var clause = startNode();\n          next();\n          expect(_parenL);\n          clause.param = parseIdent();\n          if (strict && isStrictBadIdWord(clause.param.name))\n            raise(clause.param.start, \"Binding \" + clause.param.name + \" in strict mode\");\n          expect(_parenR);\n          // JS-Interpreter change:\n          // Obsolete unused property; commenting out.\n          // -- Neil Fraser, January 2023.\n          // clause.guard = null;\n          clause.body = parseBlock();\n          node.handler = finishNode(clause, \"CatchClause\");\n        }\n        // JS-Interpreter change:\n        // Obsolete unused property; commenting out.\n        // -- Neil Fraser, January 2023.\n        // node.guardedHandlers = empty;\n        node.finalizer = eat(_finally) ? parseBlock() : null;\n        if (!node.handler && !node.finalizer)\n          raise(node.start, \"Missing catch or finally clause\");\n        return finishNode(node, \"TryStatement\");\n\n      case _var:\n        next();\n        parseVar(node);\n        semicolon();\n        return finishNode(node, \"VariableDeclaration\");\n\n      case _while:\n        next();\n        node.test = parseParenExpression();\n        labels.push(loopLabel);\n        node.body = parseStatement();\n        labels.pop();\n        return finishNode(node, \"WhileStatement\");\n\n      case _with:\n        if (strict) raise(tokStart, \"'with' in strict mode\");\n        next();\n        node.object = parseParenExpression();\n        node.body = parseStatement();\n        return finishNode(node, \"WithStatement\");\n\n      case _braceL:\n        return parseBlock();\n\n      case _semi:\n        next();\n        return finishNode(node, \"EmptyStatement\");\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n      default:\n        var maybeName = tokVal;\n        var expr = parseExpression();\n        if (starttype === _name && expr.type === \"Identifier\" && eat(_colon)) {\n          for (var i = 0; i < labels.length; ++i) {\n            if (labels[i].name === maybeName) {\n              raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n            }\n          }\n          var kind = tokType.isLoop ? \"loop\" :\n              (tokType === _switch ? \"switch\" : null);\n          labels.push({name: maybeName, kind: kind});\n          node.body = parseStatement();\n          labels.pop();\n          node.label = expr;\n          return finishNode(node, \"LabeledStatement\");\n        } else {\n          node.expression = expr;\n          semicolon();\n          return finishNode(node, \"ExpressionStatement\");\n        }\n    }\n  }\n\n  /**\n   * Used for constructs like `switch` and `if` that insist on\n   * parentheses around their expression.\n   *\n   * @returns {!node_t}\n   */\n  function parseParenExpression() {\n    expect(_parenL);\n    var val = parseExpression();\n    expect(_parenR);\n    return val;\n  }\n\n  /**\n   * Parse a semicolon-enclosed block of statements, handling `\"use\n   * strict\"` declarations when `allowStrict` is true (used for\n   * function bodies).\n   *\n   * @param {boolean=} allowStrict\n   * @returns {!node_t}\n   */\n  function parseBlock(allowStrict) {\n    var node = startNode();\n    var first = true;\n    var strict = false;\n    var oldStrict;\n    node.body = [];\n    expect(_braceL);\n    while (!eat(_braceR)) {\n      var stmt = parseStatement();\n      node.body.push(stmt);\n      if (first && allowStrict && isUseStrict(stmt)) {\n        oldStrict = strict;\n        setStrict(strict = true);\n      }\n      first = false;\n    }\n    if (strict && !oldStrict) setStrict(false);\n    return finishNode(node, \"BlockStatement\");\n  }\n\n  /**\n   * Parse a regular `for` loop. The disambiguation code in `parseStatement`\n   * will already have parsed the init statement or expression.\n   *\n   * @param {!node_t} node\n   * @param {node_t} init\n   * @returns {!node_t}\n   */\n  function parseFor(node, init) {\n    node.init = init;\n    expect(_semi);\n    node.test = tokType === _semi ? null : parseExpression();\n    expect(_semi);\n    node.update = tokType === _parenR ? null : parseExpression();\n    expect(_parenR);\n    node.body = parseStatement();\n    labels.pop();\n    return finishNode(node, \"ForStatement\");\n  }\n\n  /**\n   * Parse a `for`/`in` loop.\n   *\n   * @param {!node_t} node\n   * @param {!node_t} init\n   * @returns {!node_t}\n   */\n  function parseForIn(node, init) {\n    node.left = init;\n    node.right = parseExpression();\n    expect(_parenR);\n    node.body = parseStatement();\n    labels.pop();\n    return finishNode(node, \"ForInStatement\");\n  }\n\n  /**\n   * Parse a list of variable declarations.\n   *\n   * @param {!node_t} node\n   * @param {boolean=} noIn\n   */\n  function parseVar(node, noIn) {\n    node.declarations = [];\n    node.kind = \"var\";\n    for (;;) {\n      var decl = startNode();\n      decl.id = parseIdent();\n      if (strict && isStrictBadIdWord(decl.id.name))\n        raise(decl.id.start, \"Binding \" + decl.id.name + \" in strict mode\");\n      decl.init = eat(_eq) ? parseExpression(true, noIn) : null;\n      node.declarations.push(finishNode(decl, \"VariableDeclarator\"));\n      if (!eat(_comma)) break;\n    }\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  /**\n   * Parse a full expression. The arguments are used to forbid comma\n   * sequences (in argument lists, array literals, or object literals)\n   * or the `in` operator (in for loops initalization expressions).\n   *\n   * @param {boolean=} noComma\n   * @param {boolean=} noIn\n   * @returns {!node_t}\n   */\n  function parseExpression(noComma, noIn) {\n    var expr = parseMaybeAssign(noIn);\n    if (!noComma && tokType === _comma) {\n      var node = startNodeFrom(expr);\n      node.expressions = [expr];\n      while (eat(_comma)) node.expressions.push(parseMaybeAssign(noIn));\n      return finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  /**\n   * Parse an assignment expression. This includes applications of\n   * operators like `+=`.\n   *\n   * @param {boolean|undefined} noIn\n   * @returns {!node_t}\n   */\n  function parseMaybeAssign(noIn) {\n    var left = parseMaybeConditional(noIn);\n    if (tokType.isAssign) {\n      var node = startNodeFrom(left);\n      node.operator = tokVal;\n      node.left = left;\n      next();\n      node.right = parseMaybeAssign(noIn);\n      checkLVal(left);\n      return finishNode(node, \"AssignmentExpression\");\n    }\n    return left;\n  }\n\n  /**\n   * Parse a ternary conditional (`?:`) operator.\n   *\n   * @param {boolean|undefined} noIn\n   * @returns {!node_t}\n   */\n  function parseMaybeConditional(noIn) {\n    var expr = parseExprOps(noIn);\n    if (eat(_question)) {\n      var node = startNodeFrom(expr);\n      node.test = expr;\n      node.consequent = parseExpression(true);\n      expect(_colon);\n      node.alternate = parseExpression(true, noIn);\n      return finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  /**\n   * Start the precedence parser.\n   *\n   * @param {boolean|undefined} noIn\n   * @returns {!node_t}\n   */\n  function parseExprOps(noIn) {\n    return parseExprOp(parseMaybeUnary(), -1, noIn);\n  }\n\n  /**\n   * Parse binary operators with the operator precedence parsing\n   * algorithm. `left` is the left-hand side of the operator.\n   * `minPrec` provides context that allows the function to stop and\n   * defer further parser to one of its callers when it encounters an\n   * operator that has a lower precedence than the set it is parsing.\n   *\n   * @param {!node_t} left\n   * @param {number} minPrec\n   * @param {boolean|undefined} noIn\n   * @returns {!node_t}\n   */\n  function parseExprOp(left, minPrec, noIn) {\n    var prec = tokType.binop;\n    if (prec !== null && (!noIn || tokType !== _in)) {\n      if (prec > minPrec) {\n        var node = startNodeFrom(left);\n        node.left = left;\n        node.operator = tokVal;\n        var op = tokType;\n        next();\n        node.right = parseExprOp(parseMaybeUnary(), prec, noIn);\n        var exprNode = finishNode(node, (op === _logicalOR || op === _logicalAND) ? \"LogicalExpression\" : \"BinaryExpression\");\n        return parseExprOp(exprNode, minPrec, noIn);\n      }\n    }\n    return left;\n  }\n\n  /**\n   * Parse unary operators, both prefix and postfix.\n   *\n   * @returns {!node_t}\n   */\n  function parseMaybeUnary() {\n    if (tokType.prefix) {\n      var node = startNode();\n      var update = tokType.isUpdate;\n      node.operator = tokVal;\n      node.prefix = true;\n      tokRegexpAllowed = true;\n      next();\n      node.argument = parseMaybeUnary();\n      if (update) checkLVal(node.argument);\n      else if (strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        raise(node.start, \"Deleting local variable in strict mode\");\n      return finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    }\n    var expr = parseExprSubscripts();\n    while (tokType.postfix && !canInsertSemicolon()) {\n      var node = startNodeFrom(expr);\n      node.operator = tokVal;\n      node.prefix = false;\n      node.argument = expr;\n      checkLVal(expr);\n      next();\n      expr = finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  /**\n   * Parse call, dot, and `[]`-subscript expressions.\n   *\n   * @returns {!node_t}\n   */\n  function parseExprSubscripts() {\n    return parseSubscripts(parseExprAtom());\n  }\n\n  /**\n   * @param {!node_t} base\n   * @param {boolean=} noCalls\n   * @returns {!node_t}\n   */\n  function parseSubscripts(base, noCalls) {\n    var node;\n    if (eat(_dot)) {\n      node = startNodeFrom(base);\n      node.object = base;\n      node.property = parseIdent(true);\n      node.computed = false;\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n    }\n    if (eat(_bracketL)) {\n      node = startNodeFrom(base);\n      node.object = base;\n      node.property = parseExpression();\n      node.computed = true;\n      expect(_bracketR);\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n    }\n    if (!noCalls && eat(_parenL)) {\n      node = startNodeFrom(base);\n      node.callee = base;\n      node.arguments = parseExprList(_parenR, false);\n      return parseSubscripts(finishNode(node, \"CallExpression\"), noCalls);\n    }\n    return base;\n  }\n\n  /**\n   * Parse an atomic expression — either a single token that is an expression,\n   * an expression started by a keyword like `function` or `new`,\n   * or an expression wrapped in punctuation like `()`, `[]`, or `{}`.\n   *\n   * @returns {!node_t}\n   * @suppress {missingReturn}\n   */\n  function parseExprAtom() {\n    var node;\n    switch (tokType) {\n      case _this:\n        node = startNode();\n        next();\n        return finishNode(node, \"ThisExpression\");\n      case _name:\n        return parseIdent();\n      case _num: case _string: case _regexp:\n        node = startNode();\n        node.value = tokVal;\n        node.raw = input.slice(tokStart, tokEnd);\n        next();\n        return finishNode(node, \"Literal\");\n\n      case _null: case _true: case _false:\n        node = startNode();\n        node.value = tokType.atomValue;\n        node.raw = tokType.keyword;\n        next();\n        return finishNode(node, \"Literal\");\n\n      case _parenL:\n        var tokStartLoc1 = tokStartLoc;\n        var tokStart1 = tokStart;\n        next();\n        var val = parseExpression();\n        val.start = tokStart1;\n        val.end = tokEnd;\n        if (options.locations) {\n          val.loc.start = tokStartLoc1;\n          val.loc.end = tokEndLoc;\n        }\n        if (options.ranges) {\n          val.range = [tokStart1, tokEnd];\n        }\n        expect(_parenR);\n        return val;\n\n      case _bracketL:\n        node = startNode();\n        next();\n        node.elements = parseExprList(_bracketR, true, true);\n        return finishNode(node, \"ArrayExpression\");\n\n      case _braceL:\n        return parseObj();\n\n      case _function:\n        node = startNode();\n        next();\n        return parseFunction(node, false);\n\n      case _new:\n        return parseNew();\n    }\n    unexpected();\n  }\n\n  /**\n   * New's precedence is slightly tricky. It must allow its argument to be\n   * a `[]` or dot subscript expression, but not a call — at least, not\n   * without wrapping it in parentheses. Thus, it uses the noCalls argument\n   * to parseSubscripts to prevent it from consuming the argument list.\n   *\n   * @returns {!node_t}\n   */\n  function parseNew() {\n    var node = startNode();\n    next();\n    node.callee = parseSubscripts(parseExprAtom(), true);\n    node.arguments = eat(_parenL) ? parseExprList(_parenR, false) : empty;\n    return finishNode(node, \"NewExpression\");\n  }\n\n  /**\n   * Parse an object literal.\n   *\n   * @returns {!node_t}\n   */\n  function parseObj() {\n    var node = startNode();\n    var first = true;\n    var sawGetSet = false;\n    node.properties = [];\n    next();\n    while (!eat(_braceR)) {\n      if (!first) {\n        expect(_comma);\n        if (options.allowTrailingCommas && eat(_braceR)) {\n          break;\n        }\n      } else {\n        first = false;\n      }\n\n      var prop = {key: parsePropertyName()};\n      var isGetSet = false;\n      var kind;\n      if (eat(_colon)) {\n        prop.value = parseExpression(true);\n        kind = prop.kind = \"init\";\n      } else if (prop.key.type === \"Identifier\" &&\n                 (prop.key.name === \"get\" || prop.key.name === \"set\")) {\n        isGetSet = sawGetSet = true;\n        kind = prop.kind = prop.key.name;\n        prop.key = parsePropertyName();\n        if (tokType !== _parenL) unexpected();\n        prop.value = parseFunction(startNode(), false);\n      } else {\n        unexpected();\n      }\n\n      // getters and setters are not allowed to clash — either with\n      // each other or with an init property — and in strict mode,\n      // init properties are also not allowed to be repeated.\n\n      if (prop.key.type === \"Identifier\" && (strict || sawGetSet)) {\n        for (var i = 0; i < node.properties.length; ++i) {\n          var other = node.properties[i];\n          if (other.key.name === prop.key.name) {\n            var conflict = kind === other.kind || isGetSet && other.kind === \"init\" ||\n                kind === \"init\" && (other.kind === \"get\" || other.kind === \"set\");\n            if (conflict && !strict && kind === \"init\" && other.kind === \"init\") {\n              conflict = false;\n            }\n            if (conflict) {\n              raise(prop.key.start, \"Redefinition of property\");\n            }\n          }\n        }\n      }\n      node.properties.push(prop);\n    }\n    return finishNode(node, \"ObjectExpression\");\n  }\n\n  /**\n   * @returns {!node_t}\n   */\n  function parsePropertyName() {\n    if (tokType === _num || tokType === _string) {\n      return parseExprAtom();\n    }\n    return parseIdent(true);\n  }\n\n  /**\n   * Parse a function declaration or literal (depending on the\n   * `isStatement` parameter).\n   *\n   * @param {!node_t} node\n   * @param {boolean} isStatement\n   * @returns {!node_t}\n   */\n  function parseFunction(node, isStatement) {\n    if (tokType === _name) {\n      node.id = parseIdent();\n    } else if (isStatement) {\n      unexpected();\n    } else {\n      node.id = null;\n    }\n    node.params = [];\n    var first = true;\n    expect(_parenL);\n    while (!eat(_parenR)) {\n      if (!first) {\n        expect(_comma);\n      } else {\n        first = false;\n      }\n      node.params.push(parseIdent());\n    }\n\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = inFunction;\n    var oldLabels = labels;\n    inFunction = true;\n    labels = [];\n    node.body = parseBlock(true);\n    inFunction = oldInFunc;\n    labels = oldLabels;\n\n    // If this is a strict mode function, verify that argument names\n    // are not repeated, and it does not try to bind the words `eval`\n    // or `arguments`.\n    if (strict || node.body.body.length && isUseStrict(node.body.body[0])) {\n      for (var i = node.id ? -1 : 0; i < node.params.length; ++i) {\n        var id = i < 0 ? node.id : node.params[i];\n        if (isStrictReservedWord(id.name) || isStrictBadIdWord(id.name)) {\n          raise(id.start, \"Defining '\" + id.name + \"' in strict mode\");\n        }\n        if (i >= 0) {\n          for (var j = 0; j < i; ++j) {\n            if (id.name === node.params[j].name) {\n              raise(id.start, \"Argument name clash in strict mode\");\n            }\n          }\n        }\n      }\n    }\n\n    return finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n  }\n\n  /**\n   * Parses a comma-separated list of expressions, and returns them as\n   * an array. `close` is the token type that ends the list, and\n   * `allowEmpty` can be turned on to allow subsequent commas with\n   * nothing in between them to be parsed as `null` (which is needed\n   * for array literals).\n   *\n   * @param {!Object} close\n   * @param {boolean} allowTrailingComma\n   * @param {boolean=} allowEmpty\n   * @returns {!Array<!node_t>}\n   */\n  function parseExprList(close, allowTrailingComma, allowEmpty) {\n    var elts = [];\n    var first = true;\n    while (!eat(close)) {\n      if (!first) {\n        expect(_comma);\n        if (allowTrailingComma && options.allowTrailingCommas && eat(close)) {\n          break;\n        }\n      } else {\n        first = false;\n      }\n\n      elts.push((allowEmpty && tokType === _comma) ?\n          null : parseExpression(true));\n    }\n    return elts;\n  }\n\n  /**\n   * Parse the next token as an identifier. If `liberal` is true (used\n   * when parsing properties), it will also convert keywords into\n   * identifiers.\n   *\n   * @param {boolean=} liberal\n   * @returns {!node_t}\n   */\n  function parseIdent(liberal) {\n    var node = startNode();\n    if (liberal && options.forbidReserved === \"everywhere\") {\n      liberal = false;\n    }\n    if (tokType === _name) {\n      if (!liberal &&\n          (options.forbidReserved && isReservedWord5(tokVal) ||\n           strict && isStrictReservedWord(tokVal)) &&\n          input.slice(tokStart, tokEnd).indexOf(\"\\\\\") === -1) {\n        raise(tokStart, \"The keyword '\" + tokVal + \"' is reserved\");\n      }\n      node.name = tokVal;\n    } else if (liberal && tokType.keyword) {\n      node.name = tokType.keyword;\n    } else {\n      unexpected();\n    }\n    tokRegexpAllowed = false;\n    next();\n    return finishNode(node, \"Identifier\");\n  }\n\n});\n\n\n/***/ }),\n\n/***/ \"vm\":\n/*!*********************!*\\\n  !*** external \"vm\" ***!\n  \\*********************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = require(\"vm\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n/*!*******************************!*\\\n  !*** ./src/js-interpreter.js ***!\n  \\*******************************/\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst acorn = __webpack_require__(/*! ../original-repo/acorn */ \"./original-repo/acorn.js\");\nglobalThis.acorn = acorn;\nconst { Interpreter } = __webpack_require__(/*! ../original-repo/interpreter */ \"./original-repo/interpreter.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Interpreter);\n\n})();\n\n__webpack_exports__ = __webpack_exports__[\"default\"];\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});","// src/mdx/components/blockly/interpreter.ts\nimport l from \"js-interpreter\";\n\n// src/mdx/components/blockly/io.ts\nimport { range as a } from \"lodash-es\";\nvar s = class {\n  constructor(t) {\n    this.index = 0;\n    this.readInt = () => {\n      if (this.index >= this.tokens.length)\n        throw new Error(\"Non ci sono abbastanza numeri in input\");\n      let t = Number(this.tokens[this.index++]);\n      if (Number.isNaN(t))\n        throw new TypeError(\"Il valore in input non \\xE8 un numero\");\n      return t;\n    };\n    this.readArrayInt = (t) => a(t).map(() => this.readInt());\n    this.tokens = t.split(`\n`).flatMap((i) => i.trim().split(/\\s+/));\n  }\n}, e = class {\n  constructor(t) {\n    this.onOutput = t;\n    this.MAX_OUTPUT_LENGTH = 3e3;\n    this.MAX_OUTPUT_LINES = 100;\n    this.lineCount = 0;\n    this.length = 0;\n    this.writeAny = (t) => {\n      if (t = (Array.isArray(t) ? t.join(\" \") : String(t)) + `\n`, this.length += t.length, this.lineCount += 1, this.lineCount > this.MAX_OUTPUT_LINES)\n        throw new Error(\"Output troppo lungo\");\n      if (this.length > this.MAX_OUTPUT_LENGTH)\n        throw new Error(\"Output troppo lungo\");\n      this.onOutput(t);\n    };\n  }\n};\n\n// src/mdx/components/blockly/interpreter.ts\nvar c = 1e3, h = class extends l {\n  constructor(i, p) {\n    super(i, (n, r) => {\n      n.setProperty(\n        r,\n        \"highlightBlock\",\n        n.createNativeFunction((o) => {\n          this.highlightedBlock = o, this.stepFinished = !0;\n        })\n      ), n.setProperty(\n        r,\n        \"exit\",\n        n.createNativeFunction(() => this.running = !1)\n      ), n.setProperty(r, \"input\", n.nativeToPseudo(new s(p))), n.setProperty(\n        r,\n        \"output\",\n        n.nativeToPseudo(new e((o) => this.output += o))\n      ), n.setProperty(r, \"loopTrap\", c);\n    });\n    this.stepFinished = !1;\n    this.highlightedBlock = \"\";\n    this.running = !0;\n    this.output = \"\";\n    this.step = () => {\n      if (!this.running)\n        return !1;\n      do {\n        this.stepFinished = !1;\n        try {\n          this.running = super.step() && this.running;\n        } catch (i) {\n          this.output += `===== Errore ========\n${i}\n`, this.running = !1;\n        }\n      } while (this.running && !this.stepFinished);\n      return this.running || (this.output += `===== Terminato =====\n`), this.running;\n    };\n  }\n};\nexport {\n  h as BlocklyInterpreter\n};\n//# sourceMappingURL=interpreter-NMV5WFLU.js.map"],"names":["xs","item","i","obj","res","key","fn","name","value","code","context","iframe","win","wEval","wExecScript","winKeys","ctx","s","copy","root","factory","module","this","__webpack_modules__","__unused_webpack_exports","__webpack_require__","Interpreter","opt_initFunc","nodeConstructor","ast","prop","stepMatch","m","methodName","state","x","n","node","start","end","sourceFile","options","stack","endTime","oldInterpreterValue","nextState","e","task","globalObject","thisInterpreter","wrapper","func","_x","strFunctions","nativeFunc","str","var_args","pid","identifierRegexp","argsStr","args","thisArg","box","throwIfNullUndefined","props","proto","descriptor","getter","setter","pseudoDescriptor","newArray","first","functions","compareString","locales","separator","limit","callback","string","sandbox","jsList","splitWorker","regexp","matchWorker","searchWorker","substr","newSubstr","replaceWorker","numConsts","fractionDigits","digits","precision","radix","_value","date","pattern","flags","rgx","nativeRegExp","match","matchToPseudo","execWorker","thisPseudoRegExp","result","opt_message","newError","createErrorSubclass","constructor","myMath","mathConsts","numFunctions","myJSON","text","nativeObj","replacer","space","word","child","pseudoRegexp","nativeRegexp","pseudoError","tracebackData","errorName","errorMessage","stackString","loc","locString","blob","ok","worker","array","argumentLength","isConstructor","scope","opt_name","asyncFunc","pseudoDate","prototype","pseudoArray","pseudoObj","opt_cycles","cycles","index","len","val","nativeArray","opt_descriptor","strict","defObj","parentScope","firstNode","object","opt_object","prevNode","variableCache","nodeClass","childCache","ref","errorClass","error","type","label","loop","realError","errorTable","message","errorConstructor","argument","isInterval","parentState","argsArray","exec","delay","functionRef","execNode","execStart","execEnd","a","b","left","funcThis","newStack","strs","maxLength","truncated","interval","elements","leftValue","rightValue","expression","funcNode","argsList","paramName","paramValue","evalNode","argLength","argsWithCallback","mode","gotPropName","labels","propName","property","kinds","switchCase","changeValue","returnValue","declarations","declarationNode","exports","mod","input","inputLen","inpt","opts","setOptions","initTokenState","parseTopLevel","defaultOptions","opt","getLineInfo","offset","line","cur","lineBreak","tokPos","tokStart","tokEnd","tokStartLoc","tokEndLoc","tokType","tokVal","tokRegexpAllowed","tokCurLine","tokLineStart","lastStart","lastEnd","lastEndLoc","inFunction","raise","pos","err","empty","_num","_regexp","_string","_name","_eof","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_while","_with","_new","_this","_null","_true","_false","_in","keywordTypes","_bracketL","_bracketR","_braceL","_braceR","_parenL","_parenR","_comma","_semi","_colon","_dot","_question","_slash","_eq","_assign","_incDec","_prefix","_logicalOR","_logicalAND","_bitwiseOR","_bitwiseXOR","_bitwiseAND","_equality","_relational","_bitShift","_plusMin","_multiplyModulo","makePredicate","words","wordList","set","isReservedWord5","isStrictReservedWord","isStrictBadIdWord","isKeyword","nonASCIIwhitespace","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","newline","isIdentifierStart","isIdentifierChar","line_loc_t","skipSpace","finishToken","skipBlockComment","startLoc","skipLineComment","ch","next","readToken_dot","readNumber","readToken_slash","readRegexp","finishOp","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken","readToken_lt_gt","size","readToken_eq_excl","getTokenFromCode","readHexNumber","readString","forceRegexp","readWord","tok","escaped","inClass","content","mods","readWord1","readInt","total","startsWithDot","isFloat","octal","quote","out","readHexChar","containsEsc","esc","escStr","setStrict","strct","node_t","node_loc_t","startNode","startNodeFrom","other","finishNode","isUseStrict","stmt","eat","canInsertSemicolon","semicolon","unexpected","expect","checkLVal","expr","program","parseStatement","loopLabel","switchLabel","starttype","isBreak","parseIdent","lab","parseParenExpression","parseFor","init","parseVar","parseForIn","parseExpression","parseFunction","sawDefault","isCase","parseBlock","clause","maybeName","kind","allowStrict","oldStrict","noIn","decl","noComma","parseMaybeAssign","parseMaybeConditional","parseExprOps","parseExprOp","parseMaybeUnary","minPrec","prec","op","exprNode","update","parseExprSubscripts","parseSubscripts","parseExprAtom","base","noCalls","parseExprList","tokStartLoc1","tokStart1","parseObj","parseNew","sawGetSet","parsePropertyName","isGetSet","conflict","isStatement","oldInFunc","oldLabels","id","j","close","allowTrailingComma","allowEmpty","elts","liberal","require$$0","__webpack_module_cache__","moduleId","cachedModule","definition","__webpack_exports__","__WEBPACK_DEFAULT_EXPORT__","acorn","t","p","r","o"],"mappings":"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vB,GAAI,UAAU,SAAW,GAAK,OAAOA,GAAU,SACzC,MAAM7C,EAAY,iBAAiB6C,CAAK,CAAC,GAC3CtB,EAAgB,eAAeA,EAAgB,YAChB,yBAA2BsB,CAAK,EAEjED,EAAS,WAAW,OAASC,MACxB,CACL,QAASrE,EAAI,EAAGA,EAAI,UAAU,OAAQA,IACpCoE,EAAS,WAAWpE,CAAC,EAAI,UAAUA,CAAC,EAEtCoE,EAAS,WAAW,OAASpE,CAC9B,CACD,OAAOoE,CACX,EACE,KAAK,MAAQ,KAAK,qBAAqBpB,EAAS,EAAI,EACpD,KAAK,YAAc,KAAK,MAAM,WAAW,UACzC,KAAK,YAAYF,EAAc,QAAS,KAAK,MACzCtB,EAAY,wBAAwB,EAGxCwB,EAAU,SAAiB/C,EAAK,CAC9B,OAAOA,GAAOA,EAAI,QAAU,OAChC,EACE,KAAK,YAAY,KAAK,MAAO,UACZ,KAAK,qBAAqB+C,EAAS,EAAK,EACxCxB,EAAY,wBAAwB,EAGrD,KAAK,YAAY,KAAK,YAAa,SAAU,EACzC,CAAC,aAAgB,GAAO,WAAc,GAAO,SAAY,EAAI,CAAC,EAClE,KAAK,YAAY,MAAQ,QAEzB,KAAK,WAAW,KAClB,gBACE,mCACE,iDACI,mDACN,IAEA,sBACE,mBACE,gCACA,8CACA,yBACE,gBACA,oBACF,IACA,SACA,kBACA,iBACA,kBACA,YACF,IACF,KAEA,sBACE,4BACE,gCACA,8CACA,+CACE,yBACA,SACF,IACA,kBACA,cACF,IACF,KAEA,sBACE,qBACE,gCACA,8CACA,yBACE,gBACA,oBACF,IACA,oBACA,sCACE,sBACE,mBACF,WACE,eACF,IACF,IACA,eACA,sBACA,gBACF,IACF,KAEA,sBACE,+BACE,gCACA,8CACA,yBACE,WACF,IACA,uCACE,gBACE,kCACF,WACE,kCACF,IACF,IACA,+CACE,uBACF,IACA,8CACF,IACF,KAEA,sBACE,uBACE,gCACA,8CACA,yBACE,YACF,IACA,4CACE,gBACA,qBACA,4BACE,yBACF,WACE,eACF,IACA,cACE,sBACF,WACE,yBACF,IACF,IACA,YACF,IACF,KAEA,sBACE,+CACE,gCACA,8CACA,yBACA,0BACE,aACF,IACA,uDACA,oBACE,0CACE,YACF,IACA,OACF,IACA,aACF,IACF,KAEA,sBACE,mDACE,gCACA,8CACA,cACE,aACF,IACA,mBACA,8BACE,qBACA,WACE,+CACF,IACF,IACA,6DACA,mBACE,0CACE,YACF,IACA,OACF,IACA,aACF,IACF,KAEA,sBACE,+BACE,gCACA,8CAEA,cACA,2DAEA,oCACE,0BACE,YACF,IACA,iBACE,mBACF,WACE,4BACF,IACF,WACE,aACF,IACA,0BACA,gCACA,mCACE,0BACE,4BACF,IACF,IACA,iBACF,IACF,KAEA,sBACE,kDACE,gCACA,8CACA,cACA,mBACE,oCACF,WACE,gCACF,IACA,8BACE,6BACF,WACE,oBACA,iEACF,IACA,oBAEA,sDACE,gBACE,sBACF,WACE,oBACF,IACA,gCACE,6BACF,WACE,eACF,IACF,IAEA,kEACE,gCACE,6BACF,WACE,eACF,IACF,IAEA,kDACE,eACF,IACA,sBAEA,kCACA,2CACE,gBACE,qBACF,WACE,qBACF,IACF,IACA,cACA,+CACE,mCACF,IACA,kBACA,kBACF,IACF,KAEA,sBACE,8BACE,gCACA,wBACA,mBACA,gDACE,6CACA,8BACE,kDACE,oBACE,yBACF,WACE,mBACF,IACF,IACF,WACE,sBACF,IACF,IACA,iBACF,IACF,KAEA,sBACE,iCACE,gCACA,8CACA,mDACI,8BACJ,gBACA,kCACE,4BACA,4DACF,IACA,cACF,IACF,KAIA,sBACE,wCACE,oEACA,gBACA,8CACA,yCACA,oBACE,+DACA,OACF,IACA,eACF,IACF,KAIA,sBACE,mCACE,wFACA,8CACA,gBACA,+DACA,kCACE,gBACE,kBACA,mDACF,IACF,IACA,cACF,IACF,KAIA,sBACE,wCACE,kEACA,gBACA,8CACA,yCACA,oBACE,4CACA,OACF,IACF,IACF,KAIA,sBACE,oCACE,kEACA,gBACA,8CACA,yCACA,0BACA,oBACE,mDACA,OACF,IACA,YACF,IACF,KAIA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","x_google_ignoreList":[0,1,2]}