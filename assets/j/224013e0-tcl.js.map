{"version":3,"file":"224013e0-tcl.js","sources":["../../../node_modules/shiki/dist/langs/tcl.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Tcl\", \"fileTypes\": [\"tcl\"], \"foldingStartMarker\": \"\\\\{\\\\s*$\", \"foldingStopMarker\": \"^\\\\s*\\\\}\", \"name\": \"tcl\", \"patterns\": [{ \"begin\": \"(?<=^|;)\\\\s*((#))\", \"beginCaptures\": { \"1\": { \"name\": \"comment.line.number-sign.tcl\" }, \"2\": { \"name\": \"punctuation.definition.comment.tcl\" } }, \"contentName\": \"comment.line.number-sign.tcl\", \"end\": \"\\\\n\", \"patterns\": [{ \"match\": \"(\\\\\\\\\\\\\\\\|\\\\\\\\\\\\n)\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.tcl\" } }, \"match\": \"(?<=^|[\\\\[{;])\\\\s*(if|while|for|catch|default|return|break|continue|switch|exit|foreach|try|throw)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.tcl\" } }, \"match\": \"(?<=^|})\\\\s*(then|elseif|else)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.tcl\" }, \"2\": { \"name\": \"entity.name.function.tcl\" } }, \"match\": \"(?<=^|{)\\\\s*(proc)\\\\s+([^\\\\s]+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.tcl\" } }, \"match\": \"(?<=^|[\\\\[{;])\\\\s*(after|append|array|auto_execok|auto_import|auto_load|auto_mkindex|auto_mkindex_old|auto_qualify|auto_reset|bgerror|binary|cd|clock|close|concat|dde|encoding|eof|error|eval|exec|expr|fblocked|fconfigure|fcopy|file|fileevent|filename|flush|format|gets|glob|global|history|http|incr|info|interp|join|lappend|library|lindex|linsert|list|llength|load|lrange|lreplace|lsearch|lset|lsort|memory|msgcat|namespace|open|package|parray|pid|pkg::create|pkg_mkIndex|proc|puts|pwd|re_syntax|read|registry|rename|resource|scan|seek|set|socket|SafeBase|source|split|string|subst|Tcl|tcl_endOfWord|tcl_findLibrary|tcl_startOfNextWord|tcl_startOfPreviousWord|tcl_wordBreakAfter|tcl_wordBreakBefore|tcltest|tclvars|tell|time|trace|unknown|unset|update|uplevel|upvar|variable|vwait)\\\\b\" }, { \"begin\": \"(?<=^|[\\\\[{;])\\\\s*(regexp|regsub)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.tcl\" } }, \"comment\": \"special-case regexp/regsub keyword in order to handle the expression\", \"end\": \"[\\\\n;\\\\]]\", \"patterns\": [{ \"match\": \"\\\\\\\\(?:.|\\\\n)\", \"name\": \"constant.character.escape.tcl\" }, { \"comment\": \"switch for regexp\", \"match\": \"-\\\\w+\\\\s*\" }, { \"applyEndPatternLast\": 1, \"begin\": \"--\\\\s*\", \"comment\": \"end of switches\", \"end\": \"\", \"patterns\": [{ \"include\": \"#regexp\" }] }, { \"include\": \"#regexp\" }] }, { \"include\": \"#escape\" }, { \"include\": \"#variable\" }, { \"include\": \"#operator\" }, { \"include\": \"#numeric\" }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.tcl\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.tcl\" } }, \"name\": \"string.quoted.double.tcl\", \"patterns\": [{ \"include\": \"#escape\" }, { \"include\": \"#variable\" }, { \"include\": \"#embedded\" }] }], \"repository\": { \"bare-string\": { \"begin\": '(?:^|(?<=\\\\s))\"', \"comment\": \"matches a single quote-enclosed word without scoping\", \"end\": '\"([^\\\\s\\\\]]*)', \"endCaptures\": { \"1\": { \"name\": \"invalid.illegal.tcl\" } }, \"patterns\": [{ \"include\": \"#escape\" }, { \"include\": \"#variable\" }] }, \"braces\": { \"begin\": \"(?:^|(?<=\\\\s))\\\\{\", \"comment\": \"matches a single brace-enclosed word\", \"end\": \"\\\\}([^\\\\s\\\\]]*)\", \"endCaptures\": { \"1\": { \"name\": \"invalid.illegal.tcl\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\[{}\\\\n]\", \"name\": \"constant.character.escape.tcl\" }, { \"include\": \"#inner-braces\" }] }, \"embedded\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.tcl\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.tcl\" } }, \"name\": \"source.tcl.embedded\", \"patterns\": [{ \"include\": \"source.tcl\" }] }, \"escape\": { \"match\": \"\\\\\\\\(\\\\d{1,3}|x[a-fA-F0-9]+|u[a-fA-F0-9]{1,4}|.|\\\\n)\", \"name\": \"constant.character.escape.tcl\" }, \"inner-braces\": { \"begin\": \"\\\\{\", \"comment\": \"matches a nested brace in a brace-enclosed word\", \"end\": \"\\\\}\", \"patterns\": [{ \"match\": \"\\\\\\\\[{}\\\\n]\", \"name\": \"constant.character.escape.tcl\" }, { \"include\": \"#inner-braces\" }] }, \"numeric\": { \"match\": \"(?<![a-zA-Z])([+-]?(\\\\d*[.])?\\\\d+f?)(?![\\\\.a-zA-Z])\", \"name\": \"constant.numeric.tcl\" }, \"operator\": { \"match\": \"(?<= |\\\\d)(-|\\\\+|~|&{1,2}|\\\\|{1,2}|<{1,2}|>{1,2}|\\\\*{1,2}|!|%|\\\\/|<=|>=|={1,2}|!=|\\\\^)(?= |\\\\d)\", \"name\": \"keyword.operator.tcl\" }, \"regexp\": { \"begin\": \"(?=\\\\S)(?![\\\\n;\\\\]])\", \"comment\": \"matches a single word, named as a regexp, then swallows the rest of the command\", \"end\": \"(?=[\\\\n;\\\\]])\", \"patterns\": [{ \"begin\": \"(?=[^ \\\\t\\\\n;])\", \"end\": \"(?=[ \\\\t\\\\n;])\", \"name\": \"string.regexp.tcl\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#bare-string\" }, { \"include\": \"#escape\" }, { \"include\": \"#variable\" }] }, { \"begin\": \"[ \\\\t]\", \"comment\": \"swallow the rest of the command\", \"end\": \"(?=[\\\\n;\\\\]])\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#embedded\" }, { \"include\": \"#escape\" }, { \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"applyEndPatternLast\": 1, \"begin\": '(?:^|(?<=\\\\s))(?=\")', \"comment\": \"matches a single quote-enclosed word with scoping\", \"end\": \"\", \"name\": \"string.quoted.double.tcl\", \"patterns\": [{ \"include\": \"#bare-string\" }] }, \"variable\": { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.tcl\" } }, \"match\": \"(\\\\$)((?:\\\\w|::)+(\\\\([^)]+\\\\))?|\\\\{[^}]*\\\\})\", \"name\": \"support.function.tcl\" } }, \"scopeName\": \"source.tcl\" });\nvar tcl = [\n  lang\n];\n\nexport { tcl as default };\n"],"names":["lang","tcl"],"mappings":"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","x_google_ignoreList":[0]}