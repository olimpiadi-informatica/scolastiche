{"version":3,"file":"e52975a7-awk.js","sources":["../../../node_modules/shiki/dist/langs/awk.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"AWK\", \"fileTypes\": [\"awk\"], \"name\": \"awk\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#procedure\" }, { \"include\": \"#pattern\" }], \"repository\": { \"builtin-pattern\": { \"match\": \"\\\\b(BEGINFILE|BEGIN|ENDFILE|END)\\\\b\", \"name\": \"constant.language.awk\" }, \"command\": { \"patterns\": [{ \"match\": \"\\\\b(?:next|print|printf)\\\\b\", \"name\": \"keyword.other.command.awk\" }, { \"match\": \"\\\\b(?:close|getline|delete|system)\\\\b\", \"name\": \"keyword.other.command.nawk\" }, { \"match\": \"\\\\b(?:fflush|nextfile)\\\\b\", \"name\": \"keyword.other.command.bell-awk\" }] }, \"comment\": { \"match\": \"#.*\", \"name\": \"comment.line.number-sign.awk\" }, \"constant\": { \"patterns\": [{ \"include\": \"#numeric-constant\" }, { \"include\": \"#string-constant\" }] }, \"escaped-char\": { \"match\": '\\\\\\\\(?:[\\\\\\\\abfnrtv/\"]|x[0-9A-Fa-f]{2}|[0-7]{3})', \"name\": \"constant.character.escape.awk\" }, \"expression\": { \"patterns\": [{ \"include\": \"#command\" }, { \"include\": \"#function\" }, { \"include\": \"#constant\" }, { \"include\": \"#variable\" }, { \"include\": \"#regexp-in-expression\" }, { \"include\": \"#operator\" }, { \"include\": \"#groupings\" }] }, \"function\": { \"patterns\": [{ \"match\": \"\\\\b(?:exp|int|log|sqrt|index|length|split|sprintf|substr)\\\\b\", \"name\": \"support.function.awk\" }, { \"match\": \"\\\\b(?:atan2|cos|rand|sin|srand|gsub|match|sub|tolower|toupper)\\\\b\", \"name\": \"support.function.nawk\" }, { \"match\": \"\\\\b(?:gensub|strftime|systime)\\\\b\", \"name\": \"support.function.gawk\" }] }, \"function-definition\": { \"begin\": \"\\\\b(function)\\\\s+(\\\\w+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.awk\" }, \"2\": { \"name\": \"entity.name.function.awk\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.awk\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.awk\" } }, \"patterns\": [{ \"match\": \"\\\\b(\\\\w+)\\\\b\", \"name\": \"variable.parameter.function.awk\" }, { \"match\": \"\\\\b(,)\\\\b\", \"name\": \"punctuation.separator.parameters.awk\" }] }, \"groupings\": { \"patterns\": [{ \"match\": \"\\\\(\", \"name\": \"meta.brace.round.awk\" }, { \"match\": \"\\\\)\", \"name\": \"meta.brace.round.awk\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.parameters.awk\" }] }, \"keyword\": { \"match\": \"\\\\b(?:break|continue|do|while|exit|for|if|else|return)\\\\b\", \"name\": \"keyword.control.awk\" }, \"numeric-constant\": { \"match\": \"\\\\b\\\\d+(?:\\\\.\\\\d+)?(?:e[+-]\\\\d+)?\\\\b\", \"name\": \"constant.numeric.awk\" }, \"operator\": { \"patterns\": [{ \"match\": \"(!?~|[=<>!]=|[<>])\", \"name\": \"keyword.operator.comparison.awk\" }, { \"match\": \"\\\\b(in)\\\\b\", \"name\": \"keyword.operator.comparison.awk\" }, { \"match\": \"([+\\\\-*/%^]=|\\\\+\\\\+|--|>>|=)\", \"name\": \"keyword.operator.assignment.awk\" }, { \"match\": \"(\\\\|\\\\||&&|!)\", \"name\": \"keyword.operator.boolean.awk\" }, { \"match\": \"([+\\\\-*/%^])\", \"name\": \"keyword.operator.arithmetic.awk\" }, { \"match\": \"([?:])\", \"name\": \"keyword.operator.trinary.awk\" }, { \"match\": \"(\\\\[|\\\\])\", \"name\": \"keyword.operator.index.awk\" }] }, \"pattern\": { \"patterns\": [{ \"include\": \"#regexp-as-pattern\" }, { \"include\": \"#function-definition\" }, { \"include\": \"#builtin-pattern\" }, { \"include\": \"#expression\" }] }, \"procedure\": { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#procedure\" }, { \"include\": \"#keyword\" }, { \"include\": \"#expression\" }] }, \"regex-as-assignment\": { \"begin\": \"([^=<>!+\\\\-*/%^]=)\\\\s*(/)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.awk\" }, \"2\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regex-as-comparison\": { \"begin\": \"(!?~)\\\\s*(/)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.comparison.awk\" }, \"2\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regex-as-first-argument\": { \"begin\": \"(\\\\()\\\\s*(/)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.round.awk\" }, \"2\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regex-as-nth-argument\": { \"begin\": \"(,)\\\\s*(/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.parameters.awk\" }, \"2\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regexp-as-pattern\": { \"begin\": \"/\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regexp-in-expression\": { \"patterns\": [{ \"include\": \"#regex-as-assignment\" }, { \"include\": \"#regex-as-comparison\" }, { \"include\": \"#regex-as-first-argument\" }, { \"include\": \"#regex-as-nth-argument\" }] }, \"string-constant\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.awk\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.awk\" } }, \"name\": \"string.quoted.double.awk\", \"patterns\": [{ \"include\": \"#escaped-char\" }] }, \"variable\": { \"patterns\": [{ \"match\": \"\\\\$\\\\d+\", \"name\": \"variable.language.awk\" }, { \"match\": \"\\\\b(?:FILENAME|FS|NF|NR|OFMT|OFS|ORS|RS)\\\\b\", \"name\": \"variable.language.awk\" }, { \"match\": \"\\\\b(?:ARGC|ARGV|CONVFMT|ENVIRON|FNR|RLENGTH|RSTART|SUBSEP)\\\\b\", \"name\": \"variable.language.nawk\" }, { \"match\": \"\\\\b(?:ARGIND|ERRNO|FIELDWIDTHS|IGNORECASE|RT)\\\\b\", \"name\": \"variable.language.gawk\" }] } }, \"scopeName\": \"source.awk\" });\nvar awk = [\n  lang\n];\n\nexport { awk as default };\n"],"names":["lang","awk"],"mappings":"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","x_google_ignoreList":[0]}