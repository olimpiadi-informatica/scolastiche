{"version":3,"file":"06426070-nushell.js","sources":["../../../node_modules/shiki/dist/langs/nushell.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"nushell\", \"name\": \"nushell\", \"patterns\": [{ \"include\": \"#define-variable\" }, { \"include\": \"#define-alias\" }, { \"include\": \"#function\" }, { \"include\": \"#extern\" }, { \"include\": \"#module\" }, { \"include\": \"#use-module\" }, { \"include\": \"#expression\" }, { \"include\": \"#comment\" }], \"repository\": { \"binary\": { \"begin\": \"\\\\b(0x)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"constant.numeric.nushell\" }, \"2\": { \"name\": \"meta.brace.square.begin.nushell\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.begin.nushell\" } }, \"name\": \"constant.binary.nushell\", \"patterns\": [{ \"match\": \"[0-9a-fA-F]{2}\", \"name\": \"constant.numeric.nushell\" }] }, \"braced-expression\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.block.begin.bracket.curly.nushell\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.block.end.bracket.curly.nushell\" } }, \"name\": \"meta.expression.braced.nushell\", \"patterns\": [{ \"begin\": \"(?<=\\\\{)\\\\s*\\\\|\", \"end\": \"\\\\|\", \"name\": \"meta.closure.parameters.nushell\", \"patterns\": [{ \"include\": \"#function-parameter\" }] }, { \"captures\": { \"1\": { \"name\": \"variable.other.nushell\" }, \"2\": { \"name\": \"keyword.control.nushell\" } }, \"match\": \"(\\\\w+)\\\\s*(:)\\\\s*\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.nushell\" }, \"2\": { \"name\": \"variable.other.nushell\", \"patterns\": [{ \"include\": \"#paren-expression\" }] }, \"3\": { \"name\": \"keyword.control.nushell\" } }, \"match\": '(\\\\$\"((?:[^\"\\\\\\\\]|\\\\\\\\.)*)\")\\\\s*(:)\\\\s*', \"name\": \"meta.record-entry.nushell\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.nushell\" }, \"2\": { \"name\": \"keyword.control.nushell\" } }, \"match\": '(\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\")\\\\s*(:)\\\\s*', \"name\": \"meta.record-entry.nushell\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.nushell\" }, \"2\": { \"name\": \"variable.other.nushell\", \"patterns\": [{ \"include\": \"#paren-expression\" }] }, \"3\": { \"name\": \"keyword.control.nushell\" } }, \"match\": \"(\\\\$'([^']*)')\\\\s*(:)\\\\s*\", \"name\": \"meta.record-entry.nushell\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.nushell\" }, \"2\": { \"name\": \"keyword.control.nushell\" } }, \"match\": \"('[^']*')\\\\s*(:)\\\\s*\", \"name\": \"meta.record-entry.nushell\" }, { \"include\": \"#spread\" }, { \"include\": \"source.nushell\" }] }, \"command\": { \"begin\": `(?<!\\\\w)(?:(\\\\^)|(?!\\\\d|\\\\$))([\\\\w.!]+(?:(?: (?!-)[\\\\w\\\\-.!]+(?:(?= |\\\\))|$)|[\\\\w\\\\-.!]+))*|(?<=\\\\^)\\\\$?(?:\"[^\"]+\"|'[^']+'))`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.nushell\" }, \"2\": { \"patterns\": [{ \"include\": \"#control-keywords\" }, { \"captures\": { \"0\": { \"name\": \"keyword.other.builtin.nushell\" } }, \"match\": \"(?:ansi|char) \\\\w+\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.builtin.nushell\" }, \"2\": { \"patterns\": [{ \"include\": \"#value\" }] } }, \"comment\": \"Regex generated with list-to-tree (https://github.com/glcraft/list-to-tree)\", \"match\": \"(a(?:l(?:ias|l)|n(?:si(?: (?:gradient|link|strip))?|y)|ppend|st)|b(?:g|its(?: (?:and|not|or|ro(?:l|r)|sh(?:l|r)|xor))?|reak|ytes(?: (?:a(?:dd|t)|build|collect|ends-with|index-of|length|re(?:move|place|verse)|starts-with))?)|c(?:al|d|har|l(?:ear|ipboard (?:copy|paste))|o(?:l(?:lect|umns)|m(?:mandline(?: (?:edit|get-cursor|set-cursor))?|p(?:act|lete))|n(?:fig(?: (?:env|nu|reset))?|st|tinue))|p|ustom-value (?:generate(?:2)?|update(?:-arg)?))|d(?:ate(?: (?:format|humanize|list-timezone|now|to-(?:record|t(?:able|imezone))))?|e(?:bug(?: info)?|code(?: (?:base64|hex))?|f(?:ault)?|scribe|tect columns)|fr(?: (?:a(?:gg(?:-groups)?|ll-(?:false|true)|ppend|rg-(?:m(?:ax|in)|sort|true|unique|where)|s(?:-date(?:time)?)?)|c(?:a(?:che|st)|o(?:l(?:lect|umns)?|n(?:cat(?:-str|enate)|tains)|unt(?:-null)?)|umulative)|d(?:atepart|rop(?:-(?:duplicates|nulls))?|types|ummies)|exp(?:lode|r-not)|f(?:etch|i(?:l(?:l-n(?:an|ull)|ter(?:-with)?)|rst)|latten)|g(?:et(?:-(?:day|hour|m(?:inute|onth)|nanosecond|ordinal|second|week(?:day)?|year))?|roup-by)|i(?:mplode|nto-(?:df|lazy|nu)|s-(?:duplicated|in|n(?:ot-null|ull)|unique))|join|l(?:ast|it|owercase|s)|m(?:ax|e(?:an|dian|lt)|in)|n(?:-unique|ot)|o(?:pen|therwise)|qu(?:antile|ery)|r(?:e(?:name|place(?:-all)?|verse)|olling)|s(?:ample|chema|e(?:lect|t(?:-with-idx)?)|h(?:ape|ift)|lice|ort-by|t(?:d|r(?:-(?:lengths|slice)|ftime))|um(?:mary)?)|t(?:ake|o-(?:a(?:rrow|vro)|csv|jsonl|parquet))|u(?:nique|ppercase)|va(?:lue-counts|r)|w(?:hen|ith-column)))?|o|rop(?: (?:column|nth))?|u)|e(?:ach(?: while)?|cho|moji|n(?:code(?: (?:base64|hex))?|umerate)|rror make|very|x(?:ec|it|p(?:l(?:ain|ore)|ort(?: (?:alias|const|def|extern|module|use)|-env)?)|tern))|f(?:i(?:l(?:e|l|ter)|nd|rst)|latten|mt|or(?:mat(?: (?:d(?:ate|uration)|filesize|pattern))?)?|rom(?: (?:csv|eml|i(?:cs|ni)|json|nuon|ods|p(?:arquet|ng)|ssv|t(?:oml|sv)|url|vcf|x(?:lsx|ml)|y(?:aml|ml)))?)|g(?:e(?:nerate|t)|lob|r(?:id|oup(?:-by)?)|stat)|h(?:ash(?: (?:md5|sha256))?|e(?:aders|lp(?: (?:aliases|commands|e(?:scapes|xterns)|modules|operators))?)|i(?:de(?:-env)?|ghlight|st(?:o(?:gram|ry(?: session)?))?)|ttp(?: (?:delete|get|head|options|p(?:atch|ost|ut)))?)|i(?:f|gnore|n(?:c|put(?: list(?:en)?)?|s(?:ert|pect)|t(?:erleave|o(?: (?:b(?:i(?:nary|ts)|ool)|cell-path|d(?:atetime|uration)|f(?:ilesize|loat)|glob|int|record|s(?:qlite|tring)|value))?))|s-(?:admin|empty|not-empty|terminal)|tems)|j(?:oin|son path|walk)|k(?:eybindings(?: (?:default|list(?:en)?))?|ill)|l(?:a(?:st|zy make)|e(?:ngth|t(?:-env)?)|ines|o(?:ad-env|op)|s)|m(?:at(?:ch|h(?: (?:a(?:bs|rc(?:cos(?:h)?|sin(?:h)?|tan(?:h)?)|vg)|c(?:eil|os(?:h)?)|exp|floor|l(?:n|og)|m(?:ax|edian|in|ode)|product|round|s(?:in(?:h)?|qrt|tddev|um)|tan(?:h)?|variance))?)|e(?:rge|tadata)|k(?:dir|temp)|o(?:dule|ve)|ut|v)|nu-(?:check|example-(?:1|2|3|config)|highlight)|o(?:pen|verlay(?: (?:hide|list|new|use))?)|p(?:a(?:nic|r(?:-each|se)|th(?: (?:basename|dirname|ex(?:ists|pand)|join|parse|relative-to|split|type))?)|eriodic-table|lot|net|ort(?: (?:list|scan))?|r(?:epend|int)|s)|query(?: (?:db|git|json|web|xml))?|r(?:an(?:dom(?: (?:bool|chars|dice|float|int|uuid))?|ge)|e(?:duce|g(?:ex|ist(?:er|ry query))|ject|name|turn|verse)|m|o(?:ll(?: (?:down|left|right|up))?|tate)|un-external)|s(?:ave|c(?:hema|ope(?: (?:aliases|commands|e(?:ngine-stats|xterns)|modules|variables))?)|e(?:lect|q(?: (?:char|date))?)|huffle|kip(?: (?:until|while))?|leep|o(?:rt(?:-by)?|urce(?:-env)?)|plit(?: (?:c(?:hars|olumn)|list|row|words)|-by)?|t(?:art|or(?: (?:create|delete|export|i(?:mport|nsert)|open|reset|update))?|r(?: (?:c(?:a(?:mel-case|pitalize)|ontains)|d(?:istance|owncase)|e(?:nds-with|scape-glob|xpand)|index-of|join|kebab-case|length|pascal-case|re(?:place|verse)|s(?:creaming-snake-case|imilarity|nake-case|ta(?:rts-with|ts)|ubstring)|t(?:itle-case|rim)|upcase)|eam_example(?: (?:collect-external|s(?:eq|um)))?)?)|ys)|t(?:a(?:ble|ke(?: (?:until|while))?)|e(?:e|rm size)|imeit|o(?: (?:csv|html|json|md|nuon|png|qr|t(?:ext|oml|sv)|xml|yaml)|uch)?|r(?:anspose|y)|utor)|u(?:limit|ni(?:q(?:-by)?|ts)|p(?:date(?: cells)?|sert)|rl(?: (?:build-query|decode|encode|join|parse))?|se)|v(?:alues|ersion|iew(?: (?:files|s(?:ource|pan)))?)|w(?:atch|h(?:ere|i(?:ch|le)|oami)|i(?:ndow|th-env)|rap)|xyplot|zip)(?![\\\\w-])( (.*))?\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#paren-expression\" }] } }, \"match\": `(?<=\\\\^)(?:\\\\$(\"[^\"]+\"|'[^']+')|\"[^\"]+\"|'[^']+')`, \"name\": \"entity.name.type.external.nushell\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.external.nushell\" }, \"2\": { \"patterns\": [{ \"include\": \"#value\" }] } }, \"match\": \"([\\\\w.]+(?:-[\\\\w.!]+)*)(?: (.*))?\" }, { \"include\": \"#value\" }] } }, \"end\": \"(?=\\\\||\\\\)|\\\\}|;)|$\", \"name\": \"meta.command.nushell\", \"patterns\": [{ \"include\": \"#parameters\" }, { \"include\": \"#spread\" }, { \"include\": \"#value\" }] }, \"comment\": { \"match\": \"(#.*)$\", \"name\": \"comment.nushell\" }, \"constant-keywords\": { \"match\": \"\\\\b(?:true|false|null)\\\\b\", \"name\": \"constant.language.nushell\" }, \"constant-value\": { \"patterns\": [{ \"include\": \"#constant-keywords\" }, { \"include\": \"#datetime\" }, { \"include\": \"#numbers\" }, { \"include\": \"#numbers-hexa\" }, { \"include\": \"#binary\" }] }, \"control-keywords\": { \"comment\": \"Regex generated with list-to-tree (https://github.com/glcraft/list-to-tree)\", \"match\": \"(?<![0-9a-zA-Z_\\\\-.\\\\/:\\\\\\\\])(?:break|continue|else(?: if)?|for|if|loop|mut|return|try|while)(?![0-9a-zA-Z_\\\\-.\\\\/:\\\\\\\\])\", \"name\": \"keyword.control.nushell\" }, \"datetime\": { \"match\": \"\\\\b\\\\d{4}-\\\\d{2}-\\\\d{2}(?:T\\\\d{2}:\\\\d{2}:\\\\d{2}(?:\\\\.\\\\d+)?(?:\\\\+\\\\d{2}:?\\\\d{2}|Z)?)?\\\\b\", \"name\": \"constant.numeric.nushell\" }, \"define-alias\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.nushell\" }, \"2\": { \"name\": \"entity.name.type.nushell\" }, \"3\": { \"patterns\": [{ \"include\": \"#operators\" }] } }, \"match\": \"((?:export )?alias)\\\\s+([\\\\w\\\\-!]+)\\\\s*(=)\" }, \"define-variable\": { \"captures\": { \"1\": { \"name\": \"keyword.other.nushell\" }, \"2\": { \"name\": \"variable.other.nushell\" }, \"3\": { \"patterns\": [{ \"include\": \"#operators\" }] } }, \"match\": \"(let|mut|(?:export\\\\s+)?const)\\\\s+(\\\\w+)\\\\s+(=)\" }, \"expression\": { \"patterns\": [{ \"include\": \"#pre-command\" }, { \"include\": \"#for-loop\" }, { \"include\": \"#operators\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.control.nushell\" }, { \"include\": \"#control-keywords\" }, { \"include\": \"#constant-value\" }, { \"include\": \"#command\" }, { \"include\": \"#value\" }] }, \"extern\": { \"begin\": '((?:export\\\\s+)?extern)\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\")', \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.nushell\" }, \"2\": { \"name\": \"entity.name.type.nushell\" } }, \"end\": \"(?<=\\\\])\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.function.end.nushell\" } }, \"patterns\": [{ \"include\": \"#function-parameters\" }] }, \"for-loop\": { \"begin\": \"(for)\\\\s+(\\\\$?\\\\w+)\\\\s+(in)\\\\s+(.+)\\\\s*(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.nushell\" }, \"2\": { \"name\": \"variable.other.nushell\" }, \"3\": { \"name\": \"keyword.other.nushell\" }, \"4\": { \"patterns\": [{ \"include\": \"#value\" }] }, \"5\": { \"name\": \"punctuation.section.block.begin.bracket.curly.nushell\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.block.end.bracket.curly.nushell\" } }, \"name\": \"meta.for-loop.nushell\", \"patterns\": [{ \"include\": \"source.nushell\" }] }, \"function\": { \"begin\": \"((?:export\\\\s+)?def(?:\\\\s+--\\\\w+)*)\\\\s+([\\\\w\\\\-]+|\\\"[\\\\w\\\\- ]+\\\"|'[\\\\w\\\\- ]+'|`[\\\\w\\\\- ]+`)(\\\\s+--\\\\w+)*\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.nushell\" }, \"2\": { \"name\": \"entity.name.type.nushell\" }, \"3\": { \"name\": \"entity.name.function.nushell\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#function-parameters\" }, { \"include\": \"#function-body\" }, { \"include\": \"#function-inout\" }] }, \"function-body\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.function.begin.nushell\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.function.end.nushell\" } }, \"name\": \"meta.function.body.nushell\", \"patterns\": [{ \"include\": \"source.nushell\" }] }, \"function-inout\": { \"patterns\": [{ \"include\": \"#types\" }, { \"match\": \"->\", \"name\": \"keyword.operator.nushell\" }, { \"include\": \"#function-multiple-inout\" }] }, \"function-multiple-inout\": { \"begin\": \"(?<=]\\\\s*)(:)\\\\s+(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.in-out.nushell\" }, \"2\": { \"name\": \"meta.brace.square.begin.nushell\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.end.nushell\" } }, \"patterns\": [{ \"include\": \"#types\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.nushell\" } }, \"match\": \"\\\\s*(,)\\\\s*\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.nushell\" } }, \"match\": \"\\\\s+(->)\\\\s+\" }] }, \"function-parameter\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.nushell\" } }, \"match\": \"(-{0,2}|\\\\.{3})[\\\\w-]+(?:\\\\((-[\\\\w?])\\\\))?\", \"name\": \"variable.parameter.nushell\" }, { \"begin\": \"\\\\??:\\\\s*\", \"end\": \"(?=(?:\\\\s+(?:-{0,2}|\\\\.{3})[\\\\w-]+)|(?:\\\\s*(?:,|\\\\]|\\\\||@|=|#|$)))\", \"patterns\": [{ \"include\": \"#types\" }] }, { \"begin\": `@(?=\"|')`, \"end\": `(?<=\"|')`, \"patterns\": [{ \"include\": \"#string\" }] }, { \"begin\": \"=\\\\s*\", \"end\": \"(?=(?:\\\\s+-{0,2}[\\\\w-]+)|(?:\\\\s*(?:,|\\\\]|\\\\||#|$)))\", \"name\": \"default.value.nushell\", \"patterns\": [{ \"include\": \"#value\" }] }] }, \"function-parameters\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.begin.nushell\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.end.nushell\" } }, \"name\": \"meta.function.parameters.nushell\", \"patterns\": [{ \"include\": \"#function-parameter\" }, { \"include\": \"#comment\" }] }, \"internal-variables\": { \"match\": \"\\\\$(?:nu|env)\\\\b\", \"name\": \"variable.language.nushell\" }, \"keyword\": { \"match\": \"(?:def(?:-env)?)\", \"name\": \"keyword.other.nushell\" }, \"module\": { \"begin\": \"((?:export\\\\s+)?module)\\\\s+([\\\\w\\\\-]+)\\\\s*\\\\{\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.nushell\" }, \"2\": { \"name\": \"entity.name.namespace.nushell\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.module.end.nushell\" } }, \"name\": \"meta.module.nushell\", \"patterns\": [{ \"include\": \"source.nushell\" }] }, \"numbers\": { \"match\": \"(?<![\\\\w-])[-+]?(?:\\\\d+|\\\\d{1,3}(?:_\\\\d{3})*)(?:\\\\.\\\\d*)?(?i:ns|us|ms|sec|min|hr|day|wk|b|kb|mb|gb|tb|pt|eb|zb|kib|mib|gib|tib|pit|eib|zib)?(?:(?![\\\\w.])|(?=\\\\.\\\\.))\", \"name\": \"constant.numeric.nushell\" }, \"numbers-hexa\": { \"match\": \"(?<![\\\\w-])0x[0-9a-fA-F]+(?![\\\\w.])\", \"name\": \"constant.numeric.nushell\" }, \"operators\": { \"patterns\": [{ \"include\": \"#operators-word\" }, { \"include\": \"#operators-symbols\" }, { \"include\": \"#ranges\" }] }, \"operators-symbols\": { \"match\": \"(?<= )(?:(?:\\\\+|-|\\\\*|\\\\/)=?|\\\\/\\\\/|\\\\*\\\\*|!=|[<>=]=?|[!=]~|\\\\+\\\\+=?)(?= |$)\", \"name\": \"keyword.control.nushell\" }, \"operators-word\": { \"match\": \"(?<= |\\\\()(?:mod|in|not-in|not|and|or|xor|bit-or|bit-and|bit-xor|bit-shl|bit-shr|starts-with|ends-with)(?= |\\\\)|$)\", \"name\": \"keyword.control.nushell\" }, \"parameters\": { \"captures\": { \"1\": { \"name\": \"keyword.control.nushell\" } }, \"match\": \"(?<=\\\\s)(-{1,2})[\\\\w-]+\", \"name\": \"variable.parameter.nushell\" }, \"paren-expression\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.begin.nushell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.end.nushell\" } }, \"name\": \"meta.expression.parenthesis.nushell\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"pre-command\": { \"begin\": \"(\\\\w+)(=)\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.nushell\" }, \"2\": { \"patterns\": [{ \"include\": \"#operators\" }] } }, \"end\": \"(?=\\\\s+)\", \"patterns\": [{ \"include\": \"#value\" }] }, \"ranges\": { \"match\": \"\\\\.\\\\.<?\", \"name\": \"keyword.control.nushell\" }, \"spread\": { \"match\": \"\\\\.\\\\.\\\\.(?=[^\\\\s\\\\]}])\", \"name\": \"keyword.control.nushell\" }, \"string\": { \"patterns\": [{ \"include\": \"#string-single-quote\" }, { \"include\": \"#string-backtick\" }, { \"include\": \"#string-double-quote\" }, { \"include\": \"#string-interpolated-double\" }, { \"include\": \"#string-interpolated-single\" }, { \"include\": \"#string-bare\" }] }, \"string-backtick\": { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nushell\" } }, \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nushell\" } }, \"name\": \"string.quoted.single.nushell\" }, \"string-bare\": { \"match\": `[^$\\\\[{(\"',|#\\\\s|][^\\\\[\\\\]{}()\"'\\\\s#,|]*`, \"name\": \"string.bare.nushell\" }, \"string-double-quote\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nushell\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nushell\" } }, \"name\": \"string.quoted.double.nushell\", \"patterns\": [{ \"match\": \"\\\\w+\" }, { \"include\": \"#string-escape\" }] }, \"string-escape\": { \"match\": `\\\\\\\\(?:[bfrnt\\\\\\\\'\"/]|u[0-9a-fA-F]{4})`, \"name\": \"constant.character.escape.nushell\" }, \"string-interpolated-double\": { \"begin\": '\\\\$\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nushell\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nushell\" } }, \"name\": \"string.interpolated.double.nushell\", \"patterns\": [{ \"match\": \"\\\\\\\\[()]\", \"name\": \"constant.character.escape.nushell\" }, { \"include\": \"#string-escape\" }, { \"include\": \"#paren-expression\" }] }, \"string-interpolated-single\": { \"begin\": \"\\\\$'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nushell\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nushell\" } }, \"name\": \"string.interpolated.single.nushell\", \"patterns\": [{ \"include\": \"#paren-expression\" }] }, \"string-single-quote\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nushell\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nushell\" } }, \"name\": \"string.quoted.single.nushell\" }, \"table\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.begin.nushell\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.end.nushell\" } }, \"name\": \"meta.table.nushell\", \"patterns\": [{ \"include\": \"#spread\" }, { \"include\": \"#value\" }, { \"match\": \",\", \"name\": \"punctuation.separator.nushell\" }] }, \"types\": { \"patterns\": [{ \"begin\": \"\\\\b(list)\\\\s*<\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.nushell\" } }, \"end\": \">\", \"name\": \"meta.list.nushell\", \"patterns\": [{ \"include\": \"#types\" }] }, { \"begin\": \"\\\\b(record)\\\\s*<\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.nushell\" } }, \"end\": \">\", \"name\": \"meta.record.nushell\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.parameter.nushell\" } }, \"match\": `([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[^']+')\\\\s*:\\\\s*` }, { \"include\": \"#types\" }] }, { \"match\": \"\\\\b(\\\\w+)\\\\b\", \"name\": \"entity.name.type.nushell\" }] }, \"use-module\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.nushell\" }, \"2\": { \"name\": \"entity.name.namespace.nushell\" }, \"3\": { \"name\": \"keyword.other.nushell\" } }, \"match\": `^\\\\s*((?:export )?use)\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+')(?:\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+'|\\\\*))?\\\\s*;?$` }, { \"begin\": `^\\\\s*((?:export )?use)\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+')\\\\s*\\\\[`, \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.nushell\" }, \"2\": { \"name\": \"entity.name.namespace.nushell\" } }, \"end\": \"(\\\\])\\\\s*;?\\\\s*$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.end.nushell\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.nushell\" } }, \"match\": `([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+'|\\\\*),?` }, { \"include\": \"#comment\" }] }, { \"captures\": { \"2\": { \"name\": \"entity.name.function.nushell\" }, \"3\": { \"name\": \"string.bare.nushell\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.namespace.nushell\" } }, \"match\": `([\\\\w\\\\- ]+)(?:\\\\.nu)?(?=$|\"|')` }] }, \"4\": { \"name\": \"keyword.other.nushell\" } }, \"match\": `(?<path>(?:/|\\\\\\\\|~[\\\\/\\\\\\\\]|\\\\.\\\\.?[\\\\/\\\\\\\\])?(?:[^\\\\/\\\\\\\\]+[\\\\/\\\\\\\\])*[\\\\w\\\\- ]+(?:\\\\.nu)?){0}^\\\\s*((?:export )?use)\\\\s+(\"\\\\g<path>\"|'\\\\g<path>\\\\'|(?![\"'])\\\\g<path>)(?:\\\\s+([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[^']+'|\\\\*))?\\\\s*;?$` }, { \"begin\": `(?<path>(?:/|\\\\\\\\|~[\\\\/\\\\\\\\]|\\\\.\\\\.?[\\\\/\\\\\\\\])?(?:[^\\\\/\\\\\\\\]+[\\\\/\\\\\\\\])*[\\\\w\\\\- ]+(?:\\\\.nu)?){0}^\\\\s*((?:export )?use)\\\\s+(\"\\\\g<path>\"|'\\\\g<path>\\\\'|(?![\"'])\\\\g<path>)\\\\s+\\\\[`, \"beginCaptures\": { \"2\": { \"name\": \"entity.name.function.nushell\" }, \"3\": { \"name\": \"string.bare.nushell\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.namespace.nushell\" } }, \"match\": `([\\\\w\\\\- ]+)(?:\\\\.nu)?(?=$|\"|')` }] } }, \"end\": \"(\\\\])\\\\s*;?\\\\s*$\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.square.end.nushell\" } }, \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"keyword.other.nushell\" } }, \"match\": `([\\\\w\\\\-]+|\"[\\\\w\\\\- ]+\"|'[\\\\w\\\\- ]+'|\\\\*),?` }, { \"include\": \"#comment\" }] }, { \"captures\": { \"0\": { \"name\": \"entity.name.function.nushell\" } }, \"match\": \"^\\\\s*(?:export )?use\\\\b\" }] }, \"value\": { \"patterns\": [{ \"include\": \"#variables\" }, { \"include\": \"#variable-fields\" }, { \"include\": \"#control-keywords\" }, { \"include\": \"#constant-value\" }, { \"include\": \"#table\" }, { \"include\": \"#operators\" }, { \"include\": \"#paren-expression\" }, { \"include\": \"#braced-expression\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }] }, \"variable-fields\": { \"match\": '(?<=\\\\)|\\\\}|\\\\])(?:\\\\.(?:[\\\\w-]+|\"[\\\\w\\\\- ]+\"))+', \"name\": \"variable.other.nushell\" }, \"variables\": { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#internal-variables\" }, { \"match\": \"\\\\$.+\", \"name\": \"variable.other.nushell\" }] }, \"2\": { \"name\": \"variable.other.nushell\" } }, \"match\": '(\\\\$\\\\w+)((?:\\\\.(?:[\\\\w-]+|\"[\\\\w\\\\- ]+\"))*)' } }, \"scopeName\": \"source.nushell\", \"aliases\": [\"nu\"] });\nvar nushell = [\n  lang\n];\n\nexport { nushell as default };\n"],"names":["lang","nushell"],"mappings":"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","x_google_ignoreList":[0]}