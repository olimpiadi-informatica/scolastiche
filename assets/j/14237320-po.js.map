{"version":3,"file":"14237320-po.js","sources":["../../../node_modules/shiki/dist/langs/po.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Gettext PO\", \"fileTypes\": [\"po\", \"pot\", \"potx\"], \"name\": \"po\", \"patterns\": [{ \"begin\": '^(?=(msgid(_plural)?|msgctxt)\\\\s*\"[^\"])|^\\\\s*$', \"comment\": \"Start of body of document, after header\", \"end\": \"\\\\z\", \"patterns\": [{ \"include\": \"#body\" }] }, { \"include\": \"#comments\" }, { \"match\": '^msg(id|str)\\\\s+\"\"\\\\s*$\\\\n?', \"name\": \"comment.line.number-sign.po\" }, { \"captures\": { \"1\": { \"name\": \"constant.language.po\" }, \"2\": { \"name\": \"punctuation.separator.key-value.po\" }, \"3\": { \"name\": \"string.other.po\" } }, \"match\": '^\"(?:([^\\\\s:]+)(:)\\\\s+)?([^\"]*)\"\\\\s*$\\\\n?', \"name\": \"meta.header.po\" }], \"repository\": { \"body\": { \"patterns\": [{ \"begin\": \"^(msgid(_plural)?)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.msgid.po\" } }, \"end\": '^(?!\")', \"name\": \"meta.scope.msgid.po\", \"patterns\": [{ \"begin\": '(\\\\G|^)\"', \"end\": '\"', \"name\": \"string.quoted.double.po\", \"patterns\": [{ \"match\": '\\\\\\\\[\\\\\\\\\"]', \"name\": \"constant.character.escape.po\" }] }] }, { \"begin\": \"^(msgstr)(?:(\\\\[)(\\\\d+)(\\\\]))?\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.msgstr.po\" }, \"2\": { \"name\": \"keyword.control.msgstr.po\" }, \"3\": { \"name\": \"constant.numeric.po\" }, \"4\": { \"name\": \"keyword.control.msgstr.po\" } }, \"end\": '^(?!\")', \"name\": \"meta.scope.msgstr.po\", \"patterns\": [{ \"begin\": '(\\\\G|^)\"', \"end\": '\"', \"name\": \"string.quoted.double.po\", \"patterns\": [{ \"match\": '\\\\\\\\[\\\\\\\\\"]', \"name\": \"constant.character.escape.po\" }] }] }, { \"begin\": \"^(msgctxt)(?:(\\\\[)(\\\\d+)(\\\\]))?\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.msgctxt.po\" }, \"2\": { \"name\": \"keyword.control.msgctxt.po\" }, \"3\": { \"name\": \"constant.numeric.po\" }, \"4\": { \"name\": \"keyword.control.msgctxt.po\" } }, \"end\": '^(?!\")', \"name\": \"meta.scope.msgctxt.po\", \"patterns\": [{ \"begin\": '(\\\\G|^)\"', \"end\": '\"', \"name\": \"string.quoted.double.po\", \"patterns\": [{ \"match\": '\\\\\\\\[\\\\\\\\\"]', \"name\": \"constant.character.escape.po\" }] }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.po\" } }, \"match\": \"^(#~).*$\\\\n?\", \"name\": \"comment.line.number-sign.obsolete.po\" }, { \"include\": \"#comments\" }, { \"comment\": 'a line that does not begin with # or \". Could improve this regexp', \"match\": '^(?!\\\\s*$)[^#\"].*$\\\\n?', \"name\": \"invalid.illegal.po\" }] }, \"comments\": { \"patterns\": [{ \"begin\": \"^(?=#)\", \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"(#,)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.flag.po\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.flag.po\" } }, \"match\": \"(?:\\\\G|,\\\\s*)((?:fuzzy)|(?:no-)?(?:c|objc|sh|lisp|elisp|librep|scheme|smalltalk|java|csharp|awk|object-pascal|ycp|tcl|perl|perl-brace|php|gcc-internal|qt|boost)-format)\" }] }, { \"begin\": \"#\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.extracted.po\" }, { \"begin\": \"(#:)[ \\\\t]*\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.reference.po\", \"patterns\": [{ \"match\": \"(\\\\S+:)([\\\\d;]*)\", \"name\": \"storage.type.class.po\" }] }, { \"begin\": \"#\\\\|\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.previous.po\" }, { \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.po\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.po\" }] }] } }, \"scopeName\": \"source.po\", \"aliases\": [\"pot\", \"potx\"] });\nvar po = [\n  lang\n];\n\nexport { po as default };\n"],"names":["lang","po"],"mappings":";AAAA,MAAMA,EAAO,OAAO,OAAO,CAAE,YAAe,aAAc,UAAa,CAAC,KAAM,MAAO,MAAM,EAAG,KAAQ,KAAM,SAAY,CAAC,CAAE,MAAS,iDAAkD,QAAW,0CAA2C,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,OAAO,CAAE,CAAG,EAAE,CAAE,QAAW,WAAa,EAAE,CAAE,MAAS,8BAA+B,KAAQ,6BAA+B,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,EAAE,EAAK,CAAE,KAAQ,sCAAwC,EAAK,CAAE,KAAQ,iBAAiB,GAAM,MAAS,4CAA6C,KAAQ,gBAAgB,CAAE,EAAG,WAAc,CAAE,KAAQ,CAAE,SAAY,CAAC,CAAE,MAAS,yBAA0B,cAAiB,CAAE,EAAK,CAAE,KAAQ,0BAA4B,CAAA,EAAI,IAAO,SAAU,KAAQ,sBAAuB,SAAY,CAAC,CAAE,MAAS,WAAY,IAAO,IAAK,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,cAAe,KAAQ,8BAA8B,CAAE,CAAG,CAAA,CAAG,EAAE,CAAE,MAAS,qCAAsC,cAAiB,CAAE,EAAK,CAAE,KAAQ,2BAA6B,EAAE,EAAK,CAAE,KAAQ,6BAA+B,EAAK,CAAE,KAAQ,qBAAqB,EAAI,EAAK,CAAE,KAAQ,2BAA2B,CAAI,EAAE,IAAO,SAAU,KAAQ,uBAAwB,SAAY,CAAC,CAAE,MAAS,WAAY,IAAO,IAAK,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,cAAe,KAAQ,8BAAgC,CAAA,EAAG,CAAC,EAAI,CAAE,MAAS,sCAAuC,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAAgC,EAAK,CAAE,KAAQ,4BAA4B,EAAI,EAAK,CAAE,KAAQ,qBAAqB,EAAI,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,IAAO,SAAU,KAAQ,wBAAyB,SAAY,CAAC,CAAE,MAAS,WAAY,IAAO,IAAK,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,cAAe,KAAQ,8BAAgC,CAAA,EAAG,CAAC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAqC,CAAA,EAAI,MAAS,eAAgB,KAAQ,sCAAwC,EAAE,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,oEAAqE,MAAS,yBAA0B,KAAQ,oBAAsB,CAAA,GAAK,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,SAAU,IAAO,UAAW,SAAY,CAAC,CAAE,MAAS,WAAY,cAAiB,CAAE,EAAK,CAAE,KAAQ,mCAAmC,CAAI,EAAE,IAAO,MAAO,KAAQ,mCAAoC,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,0BAA0B,CAAI,EAAE,MAAS,0KAA0K,CAAE,CAAG,EAAE,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,mCAAmC,GAAM,IAAO,MAAO,KAAQ,yCAA2C,CAAE,MAAS,cAAe,cAAiB,CAAE,EAAK,CAAE,KAAQ,mCAAqC,CAAA,EAAI,IAAO,MAAO,KAAQ,wCAAyC,SAAY,CAAC,CAAE,MAAS,mBAAoB,KAAQ,uBAAyB,CAAA,CAAG,EAAE,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,mCAAqC,CAAA,EAAI,IAAO,MAAO,KAAQ,sCAAsC,EAAI,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,mCAAmC,GAAM,IAAO,MAAO,KAAQ,8BAA+B,CAAC,CAAE,CAAC,CAAI,EAAE,UAAa,YAAa,QAAW,CAAC,MAAO,MAAM,CAAC,CAAE,EACr8G,IAACC,EAAK,CACPD,CACF","x_google_ignoreList":[0]}