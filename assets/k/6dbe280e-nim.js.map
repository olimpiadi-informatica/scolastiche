{"version":3,"file":"6dbe280e-nim.js","sources":["../../../node_modules/shiki/dist/langs/nim.mjs"],"sourcesContent":["import c from './c.mjs';\nimport html from './html.mjs';\nimport xml from './xml.mjs';\nimport javascript from './javascript.mjs';\nimport css from './css.mjs';\nimport glsl from './glsl.mjs';\nimport markdown from './markdown.mjs';\nimport './java.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Nim\", \"fileTypes\": [\"nim\"], \"name\": \"nim\", \"patterns\": [{ \"begin\": \"[ \\\\t]*##\\\\[\", \"contentName\": \"comment.block.doc-comment.content.nim\", \"end\": \"\\\\]##\", \"name\": \"comment.block.doc-comment.nim\", \"patterns\": [{ \"include\": \"#multilinedoccomment\", \"name\": \"comment.block.doc-comment.nested.nim\" }] }, { \"begin\": \"[ \\\\t]*#\\\\[\", \"contentName\": \"comment.block.content.nim\", \"end\": \"\\\\]#\", \"name\": \"comment.block.nim\", \"patterns\": [{ \"include\": \"#multilinecomment\", \"name\": \"comment.block.nested.nim\" }] }, { \"begin\": \"(^[ \\\\t]+)?(?=##)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.nim\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"##\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.nim\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.doc-comment.nim\" }] }, { \"begin\": \"(^[ \\\\t]+)?(?=#[^\\\\[])\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.nim\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.nim\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.nim\" }] }, { \"comment\": \"A nim procedure or method\", \"name\": \"meta.proc.nim\", \"patterns\": [{ \"begin\": \"\\\\b(proc|method|template|macro|iterator|converter|func)\\\\s+\\\\`?([^:{\\\\s\\\\`\\\\*(]*)\\\\`?(\\\\s*\\\\*)?\\\\s*(?=\\\\(|=|:|\\\\[|\\\\n|\\\\{)\", \"captures\": { \"1\": { \"name\": \"keyword.other\" }, \"2\": { \"name\": \"entity.name.function.nim\" }, \"3\": { \"name\": \"keyword.control.export\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"source.nim\" }] }] }, { \"begin\": 'discard \"\"\"', \"comment\": \"A discarded triple string literal comment\", \"end\": '\"\"\"(?!\")', \"name\": \"comment.line.discarded.nim\" }, { \"include\": \"#float_literal\" }, { \"include\": \"#integer_literal\" }, { \"comment\": \"Operator as function name\", \"match\": \"(?<=\\\\`)[^\\\\` ]+(?=\\\\`)\", \"name\": \"entity.name.function.nim\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.export\" } }, \"comment\": \"Export qualifier.\", \"match\": \"\\\\b\\\\s*(\\\\*)(?:\\\\s*(?=[,:])|\\\\s+(?=[=]))\" }, { \"captures\": { \"1\": { \"name\": \"support.type.nim\" }, \"2\": { \"name\": \"keyword.control.export\" } }, \"comment\": \"Export qualifier following a type def.\", \"match\": \"\\\\b([A-Z]\\\\w+)(\\\\*)\" }, { \"include\": \"#string_literal\" }, { \"comment\": \"Language Constants.\", \"match\": \"\\\\b(true|false|Inf|NegInf|NaN|nil)\\\\b\", \"name\": \"constant.language.nim\" }, { \"comment\": \"Keywords that affect program control flow or scope.\", \"match\": \"\\\\b(block|break|case|continue|do|elif|else|end|except|finally|for|if|raise|return|try|when|while|yield)\\\\b\", \"name\": \"keyword.control.nim\" }, { \"comment\": \"Keyword boolean operators for expressions.\", \"match\": \"(\\\\b(and|in|is|isnot|not|notin|or|xor)\\\\b)\", \"name\": \"keyword.boolean.nim\" }, { \"comment\": \"Generic operators for expressions.\", \"match\": \"(=|\\\\+|-|\\\\*|/|<|>|@|\\\\$|~|&|%|!|\\\\?|\\\\^|\\\\.|:|\\\\\\\\)+\", \"name\": \"keyword.operator.nim\" }, { \"comment\": \"Other keywords.\", \"match\": \"(\\\\b(addr|as|asm|atomic|bind|cast|const|converter|concept|defer|discard|distinct|div|enum|export|from|import|include|let|mod|mixin|object|of|ptr|ref|shl|shr|static|type|using|var|tuple|iterator|macro|func|method|proc|template)\\\\b)\", \"name\": \"keyword.other.nim\" }, { \"comment\": \"Invalid and unused keywords.\", \"match\": \"(\\\\b(generic|interface|lambda|out|shared)\\\\b)\", \"name\": \"invalid.illegal.invalid-keyword.nim\" }, { \"comment\": \"Common functions\", \"match\": \"\\\\b(new|await|assert|echo|defined|declared|newException|countup|countdown|high|low)\\\\b\", \"name\": \"keyword.other.common.function.nim\" }, { \"comment\": \"Built-in, concrete types.\", \"match\": \"\\\\b(((uint|int)(8|16|32|64)?)|float(32|64)?|bool|string|auto|cstring|char|byte|tobject|typedesc|stmt|expr|any|untyped|typed)\\\\b\", \"name\": \"storage.type.concrete.nim\" }, { \"comment\": \"Built-in, generic types.\", \"match\": \"\\\\b(range|array|seq|set|pointer)\\\\b\", \"name\": \"storage.type.generic.nim\" }, { \"comment\": \"Special types.\", \"match\": \"\\\\b(openarray|varargs|void)\\\\b\", \"name\": \"storage.type.generic.nim\" }, { \"comment\": \"Other constants.\", \"match\": \"\\\\b[A-Z][A-Z0-9_]+\\\\b\", \"name\": \"support.constant.nim\" }, { \"comment\": \"Other types.\", \"match\": \"\\\\b[A-Z]\\\\w+\\\\b\", \"name\": \"support.type.nim\" }, { \"comment\": \"Function call.\", \"match\": \"\\\\b\\\\w+\\\\b(?=(\\\\[([a-zA-Z0-9_,]|\\\\s)+\\\\])?\\\\()\", \"name\": \"support.function.any-method.nim\" }, { \"comment\": \"Function call (no parenthesis).\", \"match\": \"(?!(openarray|varargs|void|range|array|seq|set|pointer|new|await|assert|echo|defined|declared|newException|countup|countdown|high|low|((uint|int)(8|16|32|64)?)|float(32|64)?|bool|string|auto|cstring|char|byte|tobject|typedesc|stmt|expr|any|untyped|typed|addr|as|asm|atomic|bind|cast|const|converter|concept|defer|discard|distinct|div|enum|export|from|import|include|let|mod|mixin|object|of|ptr|ref|shl|shr|static|type|using|var|tuple|iterator|macro|func|method|proc|template|and|in|is|isnot|not|notin|or|xor|proc|method|template|macro|iterator|converter|func|true|false|Inf|NegInf|NaN|nil|block|break|case|continue|do|elif|else|end|except|finally|for|if|raise|return|try|when|while|yield)\\\\b)\\\\w+\\\\s+(?!(and|in|is|isnot|not|notin|or|xor|[^a-zA-Z0-9_\\\"'`(-+]+)\\\\b)(?=[a-zA-Z0-9_\\\"'`(-+])\", \"name\": \"support.function.any-method.nim\" }, { \"begin\": '(^\\\\s*)?(?=\\\\{\\\\.emit: ?\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.leading.nim\" } }, \"end\": \"(?!\\\\G)(\\\\s*$\\\\n?)?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.trailing.nim\" } }, \"patterns\": [{ \"begin\": '\\\\{\\\\.(emit:) ?(\"\"\")', \"captures\": { \"1\": { \"name\": \"keyword.other.nim\" }, \"2\": { \"name\": \"punctuation.section.embedded.begin.nim\" } }, \"contentName\": \"source.c\", \"end\": '(\")\"\"(?!\")(\\\\.{0,1}\\\\})?', \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nim\" }, \"1\": { \"name\": \"source.c\" } }, \"name\": \"meta.embedded.block.c\", \"patterns\": [{ \"begin\": \"\\\\`\", \"end\": \"\\\\`\", \"name\": \"keyword.operator.nim\" }, { \"include\": \"source.c\" }] }] }, { \"begin\": \"\\\\{\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.pragma.start.nim\" } }, \"end\": \"\\\\.?\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.pragma.end.nim\" } }, \"patterns\": [{ \"begin\": \"\\\\b([A-Za-z]\\\\w*)(?:\\\\s|\\\\s*:)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.preprocessor.pragma.nim\" } }, \"end\": \"(?=\\\\.?\\\\}|,)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"\\\\b([A-Za-z]\\\\w*)\\\\(\", \"beginCaptures\": { \"1\": { \"name\": \"meta.preprocessor.pragma.nim\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"captures\": { \"1\": { \"name\": \"meta.preprocessor.pragma.nim\" } }, \"match\": \"\\\\b([A-Za-z]\\\\w*)(?=\\\\.?\\\\}|,)\" }, { \"begin\": '\\\\b([A-Za-z]\\\\w*)(\"\"\")', \"beginCaptures\": { \"1\": { \"name\": \"meta.preprocessor.pragma.nim\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.triple.raw.nim\" }, { \"begin\": '\\\\b([A-Za-z]\\\\w*)(\")', \"beginCaptures\": { \"1\": { \"name\": \"meta.preprocessor.pragma.nim\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.double.raw.nim\" }, { \"begin\": \"\\\\b(hint\\\\[\\\\w+\\\\]):\", \"beginCaptures\": { \"1\": { \"name\": \"meta.preprocessor.pragma.nim\" } }, \"end\": \"(?=\\\\.?\\\\}|,)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"match\": \",\", \"name\": \"punctuation.separator.comma.nim\" }] }, { \"begin\": '(^\\\\s*)?(?=asm \"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.leading.nim\" } }, \"end\": \"(?!\\\\G)(\\\\s*$\\\\n?)?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.trailing.nim\" } }, \"patterns\": [{ \"begin\": '(asm) (\"\"\")', \"captures\": { \"1\": { \"name\": \"keyword.other.nim\" }, \"2\": { \"name\": \"punctuation.section.embedded.begin.nim\" } }, \"contentName\": \"source.asm\", \"end\": '(\")\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nim\" }, \"1\": { \"name\": \"source.asm\" } }, \"name\": \"meta.embedded.block.asm\", \"patterns\": [{ \"begin\": \"\\\\`\", \"end\": \"\\\\`\", \"name\": \"keyword.operator.nim\" }, { \"include\": \"source.asm\" }] }] }, { \"captures\": { \"1\": { \"name\": \"storage.type.function.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"comment\": \"tmpl specifier\", \"match\": '(tmpl(i)?)(?=( (html|xml|js|css|glsl|md))?\"\"\")' }, { \"begin\": '(^\\\\s*)?(?=html\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.leading.nim\" } }, \"end\": \"(?!\\\\G)(\\\\s*$\\\\n?)?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.trailing.nim\" } }, \"patterns\": [{ \"begin\": '(html)(\"\"\")', \"captures\": { \"1\": { \"name\": \"keyword.other.nim\" }, \"2\": { \"name\": \"punctuation.section.embedded.begin.nim\" } }, \"contentName\": \"text.html\", \"end\": '(\")\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nim\" }, \"1\": { \"name\": \"text.html\" } }, \"name\": \"meta.embedded.block.html\", \"patterns\": [{ \"begin\": \"(?<!\\\\$)(\\\\$)\\\\(\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)\\\\{\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)(for|while|case|of|when|if|else|elif)( )\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"(\\\\{|\\\\n)\", \"endCaptures\": { \"1\": { \"name\": \"plain\" } }, \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"match\": \"(?<!\\\\$)(\\\\$\\\\w+)\", \"name\": \"keyword.operator.nim\" }, { \"include\": \"text.html.basic\" }] }] }, { \"begin\": '(^\\\\s*)?(?=xml\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.leading.nim\" } }, \"end\": \"(?!\\\\G)(\\\\s*$\\\\n?)?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.trailing.nim\" } }, \"patterns\": [{ \"begin\": '(xml)(\"\"\")', \"captures\": { \"1\": { \"name\": \"keyword.other.nim\" }, \"2\": { \"name\": \"punctuation.section.embedded.begin.nim\" } }, \"contentName\": \"text.xml\", \"end\": '(\")\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nim\" }, \"1\": { \"name\": \"text.xml\" } }, \"name\": \"meta.embedded.block.xml\", \"patterns\": [{ \"begin\": \"(?<!\\\\$)(\\\\$)\\\\(\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)\\\\{\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)(for|while|case|of|when|if|else|elif)( )\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"(\\\\{|\\\\n)\", \"endCaptures\": { \"1\": { \"name\": \"plain\" } }, \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"match\": \"(?<!\\\\$)(\\\\$\\\\w+)\", \"name\": \"keyword.operator.nim\" }, { \"include\": \"text.xml\" }] }] }, { \"begin\": '(^\\\\s*)?(?=js\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.leading.nim\" } }, \"end\": \"(?!\\\\G)(\\\\s*$\\\\n?)?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.trailing.nim\" } }, \"patterns\": [{ \"begin\": '(js)(\"\"\")', \"captures\": { \"1\": { \"name\": \"keyword.other.nim\" }, \"2\": { \"name\": \"punctuation.section.embedded.begin.nim\" } }, \"contentName\": \"source.js\", \"end\": '(\")\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nim\" }, \"1\": { \"name\": \"source.js\" } }, \"name\": \"meta.embedded.block.js\", \"patterns\": [{ \"begin\": \"(?<!\\\\$)(\\\\$)\\\\(\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)\\\\{\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)(for|while|case|of|when|if|else|elif)( )\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"(\\\\{|\\\\n)\", \"endCaptures\": { \"1\": { \"name\": \"plain\" } }, \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"match\": \"(?<!\\\\$)(\\\\$\\\\w+)\", \"name\": \"keyword.operator.nim\" }, { \"include\": \"source.js\" }] }] }, { \"begin\": '(^\\\\s*)?(?=css\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.leading.nim\" } }, \"end\": \"(?!\\\\G)(\\\\s*$\\\\n?)?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.trailing.nim\" } }, \"patterns\": [{ \"begin\": '(css)(\"\"\")', \"captures\": { \"1\": { \"name\": \"keyword.other.nim\" }, \"2\": { \"name\": \"punctuation.section.embedded.begin.nim\" } }, \"contentName\": \"source.css\", \"end\": '(\")\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nim\" }, \"1\": { \"name\": \"source.css\" } }, \"name\": \"meta.embedded.block.css\", \"patterns\": [{ \"begin\": \"(?<!\\\\$)(\\\\$)\\\\(\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)\\\\{\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)(for|while|case|of|when|if|else|elif)( )\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"(\\\\{|\\\\n)\", \"endCaptures\": { \"1\": { \"name\": \"plain\" } }, \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"match\": \"(?<!\\\\$)(\\\\$\\\\w+)\", \"name\": \"keyword.operator.nim\" }, { \"include\": \"source.css\" }] }] }, { \"begin\": '(^\\\\s*)?(?=glsl\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.leading.nim\" } }, \"end\": \"(?!\\\\G)(\\\\s*$\\\\n?)?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.trailing.nim\" } }, \"patterns\": [{ \"begin\": '(glsl)(\"\"\")', \"captures\": { \"1\": { \"name\": \"keyword.other.nim\" }, \"2\": { \"name\": \"punctuation.section.embedded.begin.nim\" } }, \"contentName\": \"source.glsl\", \"end\": '(\")\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nim\" }, \"1\": { \"name\": \"source.glsl\" } }, \"name\": \"meta.embedded.block.glsl\", \"patterns\": [{ \"begin\": \"(?<!\\\\$)(\\\\$)\\\\(\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)\\\\{\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)(for|while|case|of|when|if|else|elif)( )\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"(\\\\{|\\\\n)\", \"endCaptures\": { \"1\": { \"name\": \"plain\" } }, \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"match\": \"(?<!\\\\$)(\\\\$\\\\w+)\", \"name\": \"keyword.operator.nim\" }, { \"include\": \"source.glsl\" }] }] }, { \"begin\": '(^\\\\s*)?(?=md\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.leading.nim\" } }, \"end\": \"(?!\\\\G)(\\\\s*$\\\\n?)?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.whitespace.embedded.trailing.nim\" } }, \"patterns\": [{ \"begin\": '(md)(\"\"\")', \"captures\": { \"1\": { \"name\": \"keyword.other.nim\" }, \"2\": { \"name\": \"punctuation.section.embedded.begin.nim\" } }, \"contentName\": \"text.html.markdown\", \"end\": '(\")\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nim\" }, \"1\": { \"name\": \"text.html.markdown\" } }, \"name\": \"meta.embedded.block.html.markdown\", \"patterns\": [{ \"begin\": \"(?<!\\\\$)(\\\\$)\\\\(\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)\\\\{\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"begin\": \"(?<!\\\\$)(\\\\$)(for|while|case|of|when|if|else|elif)( )\", \"captures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"keyword.operator.nim\" } }, \"end\": \"(\\\\{|\\\\n)\", \"endCaptures\": { \"1\": { \"name\": \"plain\" } }, \"patterns\": [{ \"include\": \"source.nim\" }] }, { \"match\": \"(?<!\\\\$)(\\\\$\\\\w+)\", \"name\": \"keyword.operator.nim\" }, { \"include\": \"text.html.markdown\" }] }] }], \"repository\": { \"char_escapes\": { \"patterns\": [{ \"match\": \"\\\\\\\\[cC]|\\\\\\\\[rR]\", \"name\": \"constant.character.escape.carriagereturn.nim\" }, { \"match\": \"\\\\\\\\[lL]|\\\\\\\\[nN]\", \"name\": \"constant.character.escape.linefeed.nim\" }, { \"match\": \"\\\\\\\\[fF]\", \"name\": \"constant.character.escape.formfeed.nim\" }, { \"match\": \"\\\\\\\\[tT]\", \"name\": \"constant.character.escape.tabulator.nim\" }, { \"match\": \"\\\\\\\\[vV]\", \"name\": \"constant.character.escape.verticaltabulator.nim\" }, { \"match\": '\\\\\\\\\\\\\"', \"name\": \"constant.character.escape.double-quote.nim\" }, { \"match\": \"\\\\\\\\'\", \"name\": \"constant.character.escape.single-quote.nim\" }, { \"match\": \"\\\\\\\\\\\\d+\", \"name\": \"constant.character.escape.chardecimalvalue.nim\" }, { \"match\": \"\\\\\\\\[aA]\", \"name\": \"constant.character.escape.alert.nim\" }, { \"match\": \"\\\\\\\\[bB]\", \"name\": \"constant.character.escape.backspace.nim\" }, { \"match\": \"\\\\\\\\[eE]\", \"name\": \"constant.character.escape.escape.nim\" }, { \"match\": \"\\\\\\\\[xX]\\\\h\\\\h\", \"name\": \"constant.character.escape.hex.nim\" }, { \"match\": \"\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.backslash.nim\" }] }, \"extended_string_quoted_double_raw\": { \"begin\": '\\\\b(\\\\w+)(\")', \"beginCaptures\": { \"1\": { \"name\": \"support.function.any-method.nim\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.double.raw.nim\", \"patterns\": [{ \"include\": \"#raw_string_escapes\" }] }, \"extended_string_quoted_triple_raw\": { \"begin\": '\\\\b(\\\\w+)(\"\"\")', \"beginCaptures\": { \"1\": { \"name\": \"support.function.any-method.nim\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.triple.raw.nim\" }, \"float_literal\": { \"patterns\": [{ \"match\": \"\\\\b\\\\d[_\\\\d]*((\\\\.\\\\d[_\\\\d]*([eE][+\\\\-]?\\\\d[_\\\\d]*)?)|([eE][+\\\\-]?\\\\d[_\\\\d]*))('([fF](32|64|128)|[fFdD]))?\", \"name\": \"constant.numeric.float.decimal.nim\" }, { \"match\": \"\\\\b0[xX]\\\\h[_\\\\h]*'([fF](32|64|128)|[fFdD])\", \"name\": \"constant.numeric.float.hexadecimal.nim\" }, { \"match\": \"\\\\b0o[0-7][_0-7]*'([fF](32|64|128)|[fFdD])\", \"name\": \"constant.numeric.float.octal.nim\" }, { \"match\": \"\\\\b0(b|B)[01][_01]*'([fF](32|64|128)|[fFdD])\", \"name\": \"constant.numeric.float.binary.nim\" }, { \"match\": \"\\\\b(\\\\d[_\\\\d]*)'([fF](32|64|128)|[fFdD])\", \"name\": \"constant.numeric.float.decimal.nim\" }] }, \"fmt_interpolation\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.nim\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.nim\" } }, \"name\": \"meta.template.expression.nim\", \"patterns\": [{ \"begin\": \":\", \"end\": \"(?=\\\\})\", \"name\": \"meta.template.format-specifier.nim\" }, { \"include\": \"source.nim\" }] }, \"fmt_string\": { \"begin\": '\\\\b(fmt)(\")', \"beginCaptures\": { \"1\": { \"name\": \"support.function.any-method.nim\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.double.raw.nim\", \"patterns\": [{ \"match\": '(?<!\")\"(?!\")', \"name\": \"invalid.illegal.nim\" }, { \"include\": \"#raw_string_escapes\" }, { \"include\": \"#fmt_interpolation\" }] }, \"fmt_string_call\": { \"begin\": '(fmt)\\\\((?=\")', \"beginCaptures\": { \"1\": { \"name\": \"support.function.any-method.nim\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"(?=\\\\))', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.double.nim\", \"patterns\": [{ \"match\": '\"', \"name\": \"invalid.illegal.nim\" }, { \"include\": \"#string_escapes\" }, { \"include\": \"#fmt_interpolation\" }] }] }, \"fmt_string_operator\": { \"begin\": '(&)(\")', \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.double.nim\", \"patterns\": [{ \"match\": '\"', \"name\": \"invalid.illegal.nim\" }, { \"include\": \"#string_escapes\" }, { \"include\": \"#fmt_interpolation\" }] }, \"fmt_string_triple\": { \"begin\": '\\\\b(fmt)(\"\"\")', \"beginCaptures\": { \"1\": { \"name\": \"support.function.any-method.nim\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.triple.raw.nim\", \"patterns\": [{ \"include\": \"#fmt_interpolation\" }] }, \"fmt_string_triple_operator\": { \"begin\": '(&)(\"\"\")', \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.nim\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.triple.raw.nim\", \"patterns\": [{ \"include\": \"#fmt_interpolation\" }] }, \"integer_literal\": { \"patterns\": [{ \"match\": \"\\\\b(0[xX]\\\\h[_\\\\h]*)('(([iIuU](8|16|32|64))|[uU]))?\", \"name\": \"constant.numeric.integer.hexadecimal.nim\" }, { \"match\": \"\\\\b(0o[0-7][_0-7]*)('(([iIuU](8|16|32|64))|[uU]))?\", \"name\": \"constant.numeric.integer.octal.nim\" }, { \"match\": \"\\\\b(0(b|B)[01][_01]*)('(([iIuU](8|16|32|64))|[uU]))?\", \"name\": \"constant.numeric.integer.binary.nim\" }, { \"match\": \"\\\\b(\\\\d[_\\\\d]*)('(([iIuU](8|16|32|64))|[uU]))?\", \"name\": \"constant.numeric.integer.decimal.nim\" }] }, \"multilinecomment\": { \"begin\": \"#\\\\[\", \"end\": \"\\\\]#\", \"patterns\": [{ \"include\": \"#multilinecomment\" }] }, \"multilinedoccomment\": { \"begin\": \"##\\\\[\", \"end\": \"\\\\]##\", \"patterns\": [{ \"include\": \"#multilinedoccomment\" }] }, \"raw_string_escapes\": { \"captures\": { \"1\": { \"name\": \"constant.character.escape.double-quote.nim\" } }, \"match\": '[^\"](\"\")' }, \"string_escapes\": { \"patterns\": [{ \"match\": \"\\\\\\\\[pP]\", \"name\": \"constant.character.escape.newline.nim\" }, { \"match\": \"\\\\\\\\[uU]\\\\h\\\\h\\\\h\\\\h\", \"name\": \"constant.character.escape.hex.nim\" }, { \"match\": \"\\\\\\\\[uU]\\\\{\\\\h+\\\\}\", \"name\": \"constant.character.escape.hex.nim\" }, { \"include\": \"#char_escapes\" }] }, \"string_literal\": { \"patterns\": [{ \"include\": \"#fmt_string_triple\" }, { \"include\": \"#fmt_string_triple_operator\" }, { \"include\": \"#extended_string_quoted_triple_raw\" }, { \"include\": \"#string_quoted_triple_raw\" }, { \"include\": \"#fmt_string_operator\" }, { \"include\": \"#fmt_string\" }, { \"include\": \"#fmt_string_call\" }, { \"include\": \"#string_quoted_double_raw\" }, { \"include\": \"#extended_string_quoted_double_raw\" }, { \"include\": \"#string_quoted_single\" }, { \"include\": \"#string_quoted_triple\" }, { \"include\": \"#string_quoted_double\" }] }, \"string_quoted_double\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"comment\": \"Double Quoted String\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.double.nim\", \"patterns\": [{ \"include\": \"#string_escapes\" }] }, \"string_quoted_double_raw\": { \"begin\": '\\\\br\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.double.raw.nim\", \"patterns\": [{ \"include\": \"#raw_string_escapes\" }] }, \"string_quoted_single\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"comment\": \"Single quoted character literal\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.single.nim\", \"patterns\": [{ \"include\": \"#char_escapes\" }, { \"match\": \"([^']{2,}?)\", \"name\": \"invalid.illegal.character.nim\" }] }, \"string_quoted_triple\": { \"begin\": '\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"comment\": \"Triple Quoted String\", \"end\": '\"\"\"(?!\")', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.triple.nim\" }, \"string_quoted_triple_raw\": { \"begin\": 'r\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.nim\" } }, \"comment\": \"Raw Triple Quoted String\", \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.nim\" } }, \"name\": \"string.quoted.triple.raw.nim\" } }, \"scopeName\": \"source.nim\", \"embeddedLangs\": [\"c\", \"html\", \"xml\", \"javascript\", \"css\", \"glsl\", \"markdown\"] });\nvar nim = [\n  ...c,\n  ...html,\n  ...xml,\n  ...javascript,\n  ...css,\n  ...glsl,\n  ...markdown,\n  lang\n];\n\nexport { nim as default };\n"],"names":["lang","nim","c","html","xml","javascript","css","glsl","markdown"],"mappings":";wQASA,MAAMA,EAAO,OAAO,OAAO,CAAE,YAAe,MAAO,UAAa,CAAC,KAAK,EAAG,KAAQ,MAAO,SAAY,CAAC,CAAE,MAAS,eAAgB,YAAe,wCAAyC,IAAO,QAAS,KAAQ,gCAAiC,SAAY,CAAC,CAAE,QAAW,uBAAwB,KAAQ,sCAAwC,CAAA,CAAG,EAAE,CAAE,MAAS,cAAe,YAAe,4BAA6B,IAAO,OAAQ,KAAQ,oBAAqB,SAAY,CAAC,CAAE,QAAW,oBAAqB,KAAQ,0BAA0B,CAAE,CAAG,EAAE,CAAE,MAAS,oBAAqB,cAAiB,CAAE,EAAK,CAAE,KAAQ,4CAA4C,CAAI,EAAE,IAAO,UAAW,SAAY,CAAC,CAAE,MAAS,KAAM,cAAiB,CAAE,EAAK,CAAE,KAAQ,oCAAoC,CAAI,EAAE,IAAO,MAAO,KAAQ,0CAA4C,CAAA,CAAG,EAAE,CAAE,MAAS,yBAA0B,cAAiB,CAAE,EAAK,CAAE,KAAQ,4CAA4C,CAAI,EAAE,IAAO,UAAW,SAAY,CAAC,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,oCAAoC,CAAI,EAAE,IAAO,MAAO,KAAQ,+BAAgC,CAAC,EAAI,CAAE,QAAW,4BAA6B,KAAQ,gBAAiB,SAAY,CAAC,CAAE,MAAS,6HAA8H,SAAY,CAAE,EAAK,CAAE,KAAQ,iBAAmB,EAAK,CAAE,KAAQ,0BAA0B,EAAI,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAc,CAAA,CAAG,CAAA,CAAG,EAAE,CAAE,MAAS,cAAe,QAAW,4CAA6C,IAAO,WAAY,KAAQ,4BAA8B,EAAE,CAAE,QAAW,kBAAoB,CAAE,QAAW,kBAAkB,EAAI,CAAE,QAAW,4BAA6B,MAAS,0BAA2B,KAAQ,0BAA4B,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,QAAW,oBAAqB,MAAS,0CAA4C,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,kBAAkB,EAAI,EAAK,CAAE,KAAQ,wBAA0B,CAAA,EAAI,QAAW,yCAA0C,MAAS,qBAAuB,EAAE,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,sBAAuB,MAAS,wCAAyC,KAAQ,uBAAuB,EAAI,CAAE,QAAW,sDAAuD,MAAS,6GAA8G,KAAQ,qBAAuB,EAAE,CAAE,QAAW,6CAA8C,MAAS,6CAA8C,KAAQ,qBAAqB,EAAI,CAAE,QAAW,qCAAsC,MAAS,wDAAyD,KAAQ,sBAAwB,EAAE,CAAE,QAAW,kBAAmB,MAAS,yOAA0O,KAAQ,mBAAqB,EAAE,CAAE,QAAW,+BAAgC,MAAS,gDAAiD,KAAQ,uCAAyC,CAAE,QAAW,mBAAoB,MAAS,yFAA0F,KAAQ,mCAAmC,EAAI,CAAE,QAAW,4BAA6B,MAAS,kIAAmI,KAAQ,2BAA6B,EAAE,CAAE,QAAW,2BAA4B,MAAS,sCAAuC,KAAQ,0BAA4B,EAAE,CAAE,QAAW,iBAAkB,MAAS,iCAAkC,KAAQ,0BAA0B,EAAI,CAAE,QAAW,mBAAoB,MAAS,wBAAyB,KAAQ,sBAAsB,EAAI,CAAE,QAAW,eAAgB,MAAS,kBAAmB,KAAQ,kBAAoB,EAAE,CAAE,QAAW,iBAAkB,MAAS,iDAAkD,KAAQ,iCAAmC,EAAE,CAAE,QAAW,kCAAmC,MAAS,qxBAAsxB,KAAQ,iCAAiC,EAAI,CAAE,MAAS,+BAAgC,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAA+C,CAAA,EAAI,IAAO,sBAAuB,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAA8C,CAAI,EAAE,SAAY,CAAC,CAAE,MAAS,uBAAwB,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAqB,EAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,YAAe,WAAY,IAAO,2BAA4B,YAAe,CAAE,EAAK,CAAE,KAAQ,sCAAwC,EAAE,EAAK,CAAE,KAAQ,UAAY,CAAA,EAAI,KAAQ,wBAAyB,SAAY,CAAC,CAAE,MAAS,MAAO,IAAO,MAAO,KAAQ,sBAAsB,EAAI,CAAE,QAAW,UAAU,CAAE,CAAC,CAAE,CAAC,EAAI,CAAE,MAAS,SAAU,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAAgC,CAAA,EAAI,IAAO,UAAW,YAAe,CAAE,EAAK,CAAE,KAAQ,4BAA4B,GAAM,SAAY,CAAC,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAAgC,CAAA,EAAI,IAAO,gBAAiB,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,uBAAwB,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAA8B,CAAI,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,aAAc,CAAC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8BAAgC,CAAA,EAAI,MAAS,gCAAkC,EAAE,CAAE,MAAS,yBAA0B,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAA8B,EAAI,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,IAAO,WAAY,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,gCAAkC,CAAE,MAAS,uBAAwB,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAAgC,EAAE,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAuC,CAAI,EAAE,KAAQ,8BAAgC,EAAE,CAAE,MAAS,uBAAwB,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAAgC,CAAA,EAAI,IAAO,gBAAiB,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,IAAK,KAAQ,iCAAiC,CAAE,CAAG,EAAE,CAAE,MAAS,sBAAuB,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAA6C,CAAI,EAAE,IAAO,sBAAuB,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAA8C,CAAI,EAAE,SAAY,CAAC,CAAE,MAAS,cAAe,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAmB,EAAI,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,YAAe,aAAc,IAAO,aAAc,YAAe,CAAE,EAAK,CAAE,KAAQ,sCAAwC,EAAE,EAAK,CAAE,KAAQ,YAAY,CAAI,EAAE,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,MAAO,IAAO,MAAO,KAAQ,sBAAwB,EAAE,CAAE,QAAW,aAAc,CAAC,CAAE,CAAC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,2BAA6B,EAAE,EAAK,CAAE,KAAQ,sBAAsB,CAAI,EAAE,QAAW,iBAAkB,MAAS,gDAAkD,EAAE,CAAE,MAAS,sBAAuB,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAA6C,CAAI,EAAE,IAAO,sBAAuB,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAAgD,CAAA,EAAI,SAAY,CAAC,CAAE,MAAS,cAAe,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAqB,EAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,YAAe,YAAa,IAAO,aAAc,YAAe,CAAE,EAAK,CAAE,KAAQ,sCAAwC,EAAE,EAAK,CAAE,KAAQ,WAAW,CAAI,EAAE,KAAQ,2BAA4B,SAAY,CAAC,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAsB,GAAM,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAc,CAAA,GAAK,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAsB,EAAI,EAAK,CAAE,KAAQ,sBAAsB,CAAI,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,wDAAyD,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,EAAE,EAAK,CAAE,KAAQ,sBAAsB,CAAI,EAAE,IAAO,YAAa,YAAe,CAAE,EAAK,CAAE,KAAQ,OAAS,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,oBAAqB,KAAQ,wBAA0B,CAAE,QAAW,iBAAiB,CAAE,CAAC,CAAE,CAAC,EAAI,CAAE,MAAS,qBAAsB,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAA+C,CAAA,EAAI,IAAO,sBAAuB,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAA8C,CAAI,EAAE,SAAY,CAAC,CAAE,MAAS,aAAc,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAqB,EAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,YAAe,WAAY,IAAO,aAAc,YAAe,CAAE,EAAK,CAAE,KAAQ,sCAAwC,EAAE,EAAK,CAAE,KAAQ,UAAY,CAAA,EAAI,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAsB,CAAI,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAc,CAAA,CAAG,EAAE,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,EAAE,EAAK,CAAE,KAAQ,uBAA0B,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,aAAc,CAAC,EAAI,CAAE,MAAS,wDAAyD,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,EAAE,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,IAAO,YAAa,YAAe,CAAE,EAAK,CAAE,KAAQ,OAAO,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,aAAc,CAAC,EAAI,CAAE,MAAS,oBAAqB,KAAQ,sBAAwB,EAAE,CAAE,QAAW,UAAY,CAAA,CAAG,CAAA,GAAK,CAAE,MAAS,oBAAqB,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAA+C,CAAA,EAAI,IAAO,sBAAuB,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAA8C,CAAI,EAAE,SAAY,CAAC,CAAE,MAAS,YAAa,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAmB,EAAI,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,YAAe,YAAa,IAAO,aAAc,YAAe,CAAE,EAAK,CAAE,KAAQ,sCAAsC,EAAI,EAAK,CAAE,KAAQ,WAAW,GAAM,KAAQ,yBAA0B,SAAY,CAAC,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,EAAE,EAAK,CAAE,KAAQ,sBAAsB,CAAI,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,wDAAyD,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,EAAE,EAAK,CAAE,KAAQ,uBAA0B,EAAE,IAAO,YAAa,YAAe,CAAE,EAAK,CAAE,KAAQ,OAAS,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,oBAAqB,KAAQ,sBAAwB,EAAE,CAAE,QAAW,YAAa,CAAC,CAAE,CAAC,EAAI,CAAE,MAAS,qBAAsB,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAA+C,CAAA,EAAI,IAAO,sBAAuB,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAA8C,GAAM,SAAY,CAAC,CAAE,MAAS,aAAc,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAmB,EAAI,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,YAAe,aAAc,IAAO,aAAc,YAAe,CAAE,EAAK,CAAE,KAAQ,sCAAsC,EAAI,EAAK,CAAE,KAAQ,YAAc,CAAA,EAAI,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAc,CAAA,GAAK,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,EAAE,EAAK,CAAE,KAAQ,sBAAsB,CAAI,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAc,CAAA,CAAG,EAAE,CAAE,MAAS,wDAAyD,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAsB,EAAI,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,IAAO,YAAa,YAAe,CAAE,EAAK,CAAE,KAAQ,OAAO,GAAM,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,oBAAqB,KAAQ,sBAAsB,EAAI,CAAE,QAAW,YAAc,CAAA,CAAG,CAAA,CAAG,EAAE,CAAE,MAAS,sBAAuB,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAA6C,CAAI,EAAE,IAAO,sBAAuB,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAA8C,CAAI,EAAE,SAAY,CAAC,CAAE,MAAS,cAAe,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAmB,EAAI,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,YAAe,cAAe,IAAO,aAAc,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,aAAe,CAAA,EAAI,KAAQ,2BAA4B,SAAY,CAAC,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAc,CAAA,CAAG,EAAE,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAsB,EAAI,EAAK,CAAE,KAAQ,uBAA0B,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAG,EAAE,CAAE,MAAS,wDAAyD,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAsB,EAAI,EAAK,CAAE,KAAQ,sBAAsB,CAAI,EAAE,IAAO,YAAa,YAAe,CAAE,EAAK,CAAE,KAAQ,OAAO,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,YAAc,CAAA,CAAG,EAAE,CAAE,MAAS,oBAAqB,KAAQ,sBAAsB,EAAI,CAAE,QAAW,aAAa,CAAE,CAAC,CAAE,CAAC,EAAI,CAAE,MAAS,oBAAqB,cAAiB,CAAE,EAAK,CAAE,KAAQ,8CAAiD,EAAE,IAAO,sBAAuB,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAA8C,CAAI,EAAE,SAAY,CAAC,CAAE,MAAS,YAAa,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAqB,EAAE,EAAK,CAAE,KAAQ,yCAA4C,EAAE,YAAe,qBAAsB,IAAO,aAAc,YAAe,CAAE,EAAK,CAAE,KAAQ,sCAAwC,EAAE,EAAK,CAAE,KAAQ,oBAAoB,GAAM,KAAQ,oCAAqC,SAAY,CAAC,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,mBAAoB,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAsB,EAAI,EAAK,CAAE,KAAQ,sBAAwB,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,wDAAyD,SAAY,CAAE,EAAK,CAAE,KAAQ,sBAAwB,EAAE,EAAK,CAAE,KAAQ,uBAA0B,EAAE,IAAO,YAAa,YAAe,CAAE,EAAK,CAAE,KAAQ,OAAO,CAAI,EAAE,SAAY,CAAC,CAAE,QAAW,YAAY,CAAE,CAAC,EAAI,CAAE,MAAS,oBAAqB,KAAQ,sBAAwB,EAAE,CAAE,QAAW,qBAAsB,CAAC,CAAE,CAAC,CAAE,EAAG,WAAc,CAAE,aAAgB,CAAE,SAAY,CAAC,CAAE,MAAS,oBAAqB,KAAQ,8CAA8C,EAAI,CAAE,MAAS,oBAAqB,KAAQ,wCAA0C,EAAE,CAAE,MAAS,WAAY,KAAQ,0CAA4C,CAAE,MAAS,WAAY,KAAQ,yCAAyC,EAAI,CAAE,MAAS,WAAY,KAAQ,iDAAmD,EAAE,CAAE,MAAS,UAAW,KAAQ,8CAAgD,CAAE,MAAS,QAAS,KAAQ,4CAA8C,EAAE,CAAE,MAAS,WAAY,KAAQ,gDAAgD,EAAI,CAAE,MAAS,WAAY,KAAQ,qCAAuC,EAAE,CAAE,MAAS,WAAY,KAAQ,yCAAyC,EAAI,CAAE,MAAS,WAAY,KAAQ,sCAAwC,EAAE,CAAE,MAAS,iBAAkB,KAAQ,mCAAmC,EAAI,CAAE,MAAS,WAAY,KAAQ,yCAA2C,CAAA,GAAK,kCAAqC,CAAE,MAAS,eAAgB,cAAiB,CAAE,EAAK,CAAE,KAAQ,iCAAmC,EAAE,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAuC,CAAI,EAAE,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,qBAAqB,CAAE,CAAC,EAAI,kCAAqC,CAAE,MAAS,iBAAkB,cAAiB,CAAE,EAAK,CAAE,KAAQ,iCAAiC,EAAI,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,8BAA8B,EAAI,cAAiB,CAAE,SAAY,CAAC,CAAE,MAAS,6GAA8G,KAAQ,oCAAoC,EAAI,CAAE,MAAS,8CAA+C,KAAQ,wCAAwC,EAAI,CAAE,MAAS,6CAA8C,KAAQ,kCAAoC,EAAE,CAAE,MAAS,+CAAgD,KAAQ,mCAAmC,EAAI,CAAE,MAAS,2CAA4C,KAAQ,oCAAoC,CAAE,CAAG,EAAE,kBAAqB,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,sDAAwD,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,oDAAoD,GAAM,KAAQ,+BAAgC,SAAY,CAAC,CAAE,MAAS,IAAK,IAAO,UAAW,KAAQ,oCAAoC,EAAI,CAAE,QAAW,YAAc,CAAA,GAAK,WAAc,CAAE,MAAS,cAAe,cAAiB,CAAE,EAAK,CAAE,KAAQ,iCAAmC,EAAE,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,MAAS,eAAgB,KAAQ,qBAAuB,EAAE,CAAE,QAAW,uBAAyB,CAAE,QAAW,oBAAoB,CAAE,CAAC,EAAI,gBAAmB,CAAE,MAAS,gBAAiB,cAAiB,CAAE,EAAK,CAAE,KAAQ,iCAAmC,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,IAAO,WAAY,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,2BAA4B,SAAY,CAAC,CAAE,MAAS,IAAK,KAAQ,qBAAqB,EAAI,CAAE,QAAW,iBAAmB,EAAE,CAAE,QAAW,oBAAsB,CAAA,CAAG,CAAA,CAAG,EAAE,oBAAuB,CAAE,MAAS,SAAU,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAA0B,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAuC,CAAI,EAAE,KAAQ,2BAA4B,SAAY,CAAC,CAAE,MAAS,IAAK,KAAQ,qBAAuB,EAAE,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,oBAAsB,CAAA,CAAG,EAAE,kBAAqB,CAAE,MAAS,gBAAiB,cAAiB,CAAE,EAAK,CAAE,KAAQ,iCAAmC,EAAE,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAuC,CAAI,EAAE,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,oBAAoB,CAAE,CAAC,EAAI,2BAA8B,CAAE,MAAS,WAAY,cAAiB,CAAE,EAAK,CAAE,KAAQ,wBAA0B,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,oBAAsB,CAAA,CAAG,EAAE,gBAAmB,CAAE,SAAY,CAAC,CAAE,MAAS,sDAAuD,KAAQ,0CAA0C,EAAI,CAAE,MAAS,qDAAsD,KAAQ,oCAAsC,EAAE,CAAE,MAAS,uDAAwD,KAAQ,qCAAqC,EAAI,CAAE,MAAS,iDAAkD,KAAQ,sCAAsC,CAAE,CAAC,EAAI,iBAAoB,CAAE,MAAS,OAAQ,IAAO,OAAQ,SAAY,CAAC,CAAE,QAAW,mBAAqB,CAAA,CAAG,EAAE,oBAAuB,CAAE,MAAS,QAAS,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,sBAAwB,CAAA,GAAK,mBAAsB,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,4CAA4C,GAAM,MAAS,UAAY,EAAE,eAAkB,CAAE,SAAY,CAAC,CAAE,MAAS,WAAY,KAAQ,uCAAyC,EAAE,CAAE,MAAS,uBAAwB,KAAQ,mCAAmC,EAAI,CAAE,MAAS,qBAAsB,KAAQ,mCAAmC,EAAI,CAAE,QAAW,eAAiB,CAAA,CAAG,EAAE,eAAkB,CAAE,SAAY,CAAC,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,6BAA+B,EAAE,CAAE,QAAW,sCAAwC,CAAE,QAAW,2BAA2B,EAAI,CAAE,QAAW,sBAAsB,EAAI,CAAE,QAAW,aAAe,EAAE,CAAE,QAAW,kBAAoB,EAAE,CAAE,QAAW,6BAA+B,CAAE,QAAW,oCAAoC,EAAI,CAAE,QAAW,uBAAuB,EAAI,CAAE,QAAW,uBAAyB,EAAE,CAAE,QAAW,uBAAuB,CAAE,CAAC,EAAI,qBAAwB,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA6C,EAAE,QAAW,uBAAwB,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,2BAA4B,SAAY,CAAC,CAAE,QAAW,iBAAiB,CAAE,CAAC,EAAI,yBAA4B,CAAE,MAAS,QAAS,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,qBAAqB,CAAE,CAAC,EAAI,qBAAwB,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,QAAW,kCAAmC,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAuC,CAAI,EAAE,KAAQ,2BAA4B,SAAY,CAAC,CAAE,QAAW,eAAiB,EAAE,CAAE,MAAS,cAAe,KAAQ,gCAAiC,CAAC,EAAI,qBAAwB,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,QAAW,uBAAwB,IAAO,WAAY,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,0BAA0B,EAAI,yBAA4B,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,QAAW,2BAA4B,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,KAAQ,8BAA8B,CAAI,EAAE,UAAa,aAAc,cAAiB,CAAC,IAAK,OAAQ,MAAO,aAAc,MAAO,OAAQ,UAAU,CAAG,CAAA,EAC17vB,IAACC,EAAM,CACR,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACHR,CACF","x_google_ignoreList":[0]}