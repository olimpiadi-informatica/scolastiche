{"version":3,"file":"3e7444ec-soy.js","sources":["../../../node_modules/shiki/dist/langs/soy.mjs"],"sourcesContent":["import html from './html.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Closure Templates\", \"fileTypes\": [\"soy\"], \"injections\": { \"meta.tag\": { \"patterns\": [{ \"include\": \"#body\" }] } }, \"name\": \"soy\", \"patterns\": [{ \"include\": \"#alias\" }, { \"include\": \"#delpackage\" }, { \"include\": \"#namespace\" }, { \"include\": \"#template\" }, { \"include\": \"#comment\" }], \"repository\": { \"alias\": { \"captures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"entity.name.type.soy\" }, \"3\": { \"name\": \"storage.type.soy\" }, \"4\": { \"name\": \"entity.name.type.soy\" } }, \"match\": \"{(alias)\\\\s+([\\\\w\\\\.]+)(?:\\\\s+(as)\\\\s+(\\\\w+))?}\" }, \"attribute\": { \"captures\": { \"1\": { \"name\": \"storage.other.attribute.soy\" }, \"2\": { \"name\": \"string.double.quoted.soy\" } }, \"match\": '(\\\\w+)=(\"(?:\\\\\\\\?.)*?\")' }, \"body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#let\" }, { \"include\": \"#call\" }, { \"include\": \"#css\" }, { \"include\": \"#xid\" }, { \"include\": \"#condition\" }, { \"include\": \"#condition-control\" }, { \"include\": \"#for\" }, { \"include\": \"#literal\" }, { \"include\": \"#msg\" }, { \"include\": \"#special-character\" }, { \"include\": \"#print\" }, { \"include\": \"text.html.basic\" }] }, \"boolean\": { \"match\": \"true|false\", \"name\": \"language.constant.boolean.soy\" }, \"call\": { \"patterns\": [{ \"begin\": \"{((?:del)?call)\\\\s+([\\\\w\\\\.]+)(?=[^/]*?})\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.soy\" }, \"2\": { \"name\": \"entity.name.function.soy\" } }, \"end\": \"{/(\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.function.soy\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variant\" }, { \"include\": \"#attribute\" }, { \"include\": \"#param\" }] }, { \"begin\": \"{((?:del)?call)(\\\\s+[\\\\w\\\\.]+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.soy\" }, \"2\": { \"name\": \"entity.name.function.soy\" } }, \"end\": \"/}\", \"patterns\": [{ \"include\": \"#variant\" }, { \"include\": \"#attribute\" }] }] }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*\", \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.soy\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.parameter.soy\" }, \"2\": { \"name\": \"variable.parameter.soy\" } }, \"match\": \"(@param\\\\??)\\\\s+(\\\\S+)\" }] }, { \"match\": \"^\\\\s*(\\\\/\\\\/.*)$\", \"name\": \"comment.line.double-slash.soy\" }] }, \"condition\": { \"begin\": \"{/?(if|elseif|switch|case)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"include\": \"#attribute\" }, { \"include\": \"#expression\" }] }, \"condition-control\": { \"captures\": { \"1\": { \"name\": \"keyword.control.soy\" } }, \"match\": \"{(else|ifempty|default)}\" }, \"css\": { \"begin\": \"{(css)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"delpackage\": { \"captures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"entity.name.type.soy\" } }, \"match\": \"{(delpackage)\\\\s+([\\\\w\\\\.]+)}\" }, \"expression\": { \"patterns\": [{ \"include\": \"#boolean\" }, { \"include\": \"#number\" }, { \"include\": \"#function\" }, { \"include\": \"#null\" }, { \"include\": \"#string\" }, { \"include\": \"#variable-ref\" }, { \"include\": \"#operator\" }] }, \"for\": { \"begin\": \"{/?(foreach|for)(?=\\\\s|})\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"match\": \"in\", \"name\": \"keyword.control.soy\" }, { \"include\": \"#expression\" }, { \"include\": \"#body\" }] }, \"function\": { \"begin\": \"(\\\\w+)\\\\(\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.soy\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"let\": { \"patterns\": [{ \"begin\": \"{(let)\\\\s+(\\\\$\\\\w+\\\\s*:)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"variable.soy\" } }, \"end\": \"/}\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#expression\" }] }, { \"begin\": \"{(let)\\\\s+(\\\\$\\\\w+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"variable.soy\" } }, \"end\": \"{/(\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.soy\" } }, \"patterns\": [{ \"include\": \"#attribute\" }, { \"include\": \"#body\" }] }] }, \"literal\": { \"begin\": \"{(literal)}\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"{/(\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"name\": \"meta.literal\" }, \"msg\": { \"captures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"}\", \"match\": \"{/?(msg|fallbackmsg)\", \"patterns\": [{ \"include\": \"#attribute\" }] }, \"namespace\": { \"captures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"entity.name.type.soy\" } }, \"match\": \"{(namespace)\\\\s+([\\\\w\\\\.]+)}\" }, \"null\": { \"match\": \"null\", \"name\": \"language.constant.null.soy\" }, \"number\": { \"match\": \"-?\\\\.?\\\\d+|\\\\d[\\\\.\\\\d]*\", \"name\": \"language.constant.numeric\" }, \"operator\": { \"match\": \"-|not|\\\\*|\\\\/|%|\\\\+|<=|>=|<|>|==|!=|and|or|\\\\?:|\\\\?|:\", \"name\": \"keyword.operator.soy\" }, \"param\": { \"patterns\": [{ \"begin\": \"{(param)\\\\s+(\\\\w+\\\\s*:)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"variable.parameter.soy\" } }, \"end\": \"/}\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"{(param)\\\\s+(\\\\w+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"variable.parameter.soy\" } }, \"end\": \"{/(\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.soy\" } }, \"patterns\": [{ \"include\": \"#attribute\" }, { \"include\": \"#body\" }] }] }, \"print\": { \"begin\": \"{(print)?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.function.soy\" } }, \"match\": \"\\\\|\\\\s*(changeNewlineToBr|truncate|bidiSpanWrap|bidiUnicodeWrap)\" }, { \"include\": \"#expression\" }] }, \"special-character\": { \"captures\": { \"1\": { \"name\": \"language.support.constant\" } }, \"match\": \"{(sp|nil|\\\\\\\\r|\\\\\\\\n|\\\\\\\\t|lb|rb)}\" }, \"string\": { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.soy\", \"patterns\": [{ \"match\": `\\\\\\\\(?:[\\\\\\\\'\"nrtbf]|u[0-9a-fA-F]{4})`, \"name\": \"constant.character.escape.soy\" }] }, \"template\": { \"begin\": \"{(template|deltemplate)\\\\s([\\\\w\\\\.]+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.soy\" }, \"2\": { \"name\": \"entity.name.function.soy\" } }, \"end\": \"{(/\\\\1)}\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.soy\" } }, \"patterns\": [{ \"begin\": \"{(@param)(\\\\??)\\\\s+(\\\\S+\\\\s*:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.parameter.soy\" }, \"2\": { \"name\": \"storage.modifier.keyword.operator.soy\" }, \"3\": { \"name\": \"variable.parameter.soy\" } }, \"end\": \"}\", \"name\": \"meta.parameter.soy\", \"patterns\": [{ \"include\": \"#type\" }] }, { \"include\": \"#variant\" }, { \"include\": \"#body\" }, { \"include\": \"#attribute\" }] }, \"type\": { \"patterns\": [{ \"match\": \"any|null|\\\\?|string|bool|int|float|number|html|uri|js|css|attributes\", \"name\": \"support.type.soy\" }, { \"begin\": \"(list|map)(<)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.soy\" }, \"2\": { \"name\": \"support.type.punctuation.soy\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"support.type.modifier.soy\" } }, \"patterns\": [{ \"include\": \"#type\" }] }] }, \"variable-ref\": { \"match\": \"\\\\$[\\\\a-zA-Z_][\\\\w\\\\.]*\", \"name\": \"variable.other.soy\" }, \"variant\": { \"begin\": '(variant)=(\")', \"beginCaptures\": { \"1\": { \"name\": \"storage.other.attribute.soy\" }, \"2\": { \"name\": \"string.double.quoted.soy\" } }, \"contentName\": \"string.double.quoted.soy\", \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"string.double.quoted.soy\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"xid\": { \"begin\": \"{(xid)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.soy\" } }, \"end\": \"}\", \"patterns\": [{ \"include\": \"#expression\" }] } }, \"scopeName\": \"text.html.soy\", \"embeddedLangs\": [\"html\"], \"aliases\": [\"closure-templates\"] });\nvar soy = [\n  ...html,\n  lang\n];\n\nexport { soy as default };\n"],"names":["lang","soy","html"],"mappings":"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","x_google_ignoreList":[0]}