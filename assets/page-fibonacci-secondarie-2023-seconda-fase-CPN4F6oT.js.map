{"version":3,"file":"page-fibonacci-secondarie-2023-seconda-fase-CPN4F6oT.js","sources":["../../src/fibonacci-primarie/2023-seconda-fase/contest/p-4-contatore/code.asy","../../src/fibonacci-primarie/2023-seconda-fase/contest/p-4-contatore/secondarie.asy","../../src/fibonacci-primarie/2023-seconda-fase/contest/p-4-contatore/question.md","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/sol.png","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/secondarie.asy","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/testcases.py","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/asy/bunny_left.asy?w=66","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/asy/bunny_right.asy?w=66","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/asy/stairs1.asy?w=80","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/asy/stairs2.asy?w=80","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/asy/stairs3.asy?w=80","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/visualizer.jsx","../../src/fibonacci-primarie/2023-seconda-fase/contest/s-4-torri-gemelle/question.mdx","../../src/fibonacci-secondarie/2023-seconda-fase/contest/header.md","../../src/fibonacci-secondarie/2023-seconda-fase/contest/contest.mdx","../../src/fibonacci-secondarie/2023-seconda-fase/index.jsx"],"sourcesContent":["import \"/scolastiche/src/asy_library/structures/layout.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_DNTJ1fCG,\n  width: \"513.3333333333333\",\n  height: \"890.6666666666666\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/structures/histogram.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_DXaeSYmy,\n  width: \"305.3333333333333\",\n  height: \"248\",\n};\nexport default image;","Tip-Tap sistemando la sua soffitta si è imbattuto in un libro di programmazione molto vecchio. Nella prima pagina trova il seguente procedimento:\n\n![code](code.asy)\n\nPurtroppo la successiva pagina è rovinata perciò Tip-Tap non riesce a capire che numero verrà stampato alla fine, aiutalo tu! Quale numero viene stampato dall'ultimo blocco?\n- [ ] 0\n- [x] 2\n- [ ] 4\n- [ ] 6\n- [ ] 10\n\n> Il programma incrementa il contatore per ogni multiplo di $7$ fino a $42$,\n> e lo decrementa per ogni multiplo di $9$ fino a $42$.\n> Siccome i multipli di $7$ fino a $42$ sono $6$ e i multipli di $9$ fino a $42$ sono $4$,\n> il contatore alla fine varrà $6 - 4 = 2$.\n>\n> ![secondarie](secondarie.asy)","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_BHMMyiHI,\n  width: \"944\",\n  height: \"643\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/structures/histogram.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_1EwCsJ4r,\n  width: \"305.3333333333333\",\n  height: \"248\",\n};\nexport default image;","const module = [{\"S\":9,\"D\":12,\"M\":6,\"blocchi\":[[1,0],[1,1],[1,2],[1,3],[1,4],[1,5]],\"pos\":[0,0,0,0],\"rimasti\":6,\"orient\":1},{\"S\":70,\"D\":35,\"M\":14,\"blocchi\":[[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[1,10],[1,11],[1,12],[1,13]],\"pos\":[0,0,0,0],\"rimasti\":14,\"orient\":1},{\"S\":330,\"D\":166,\"M\":31,\"blocchi\":[[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[1,10],[1,11],[1,12],[1,13],[1,14],[1,15],[1,16],[1,17],[1,18],[1,19],[1,20],[1,21],[1,22],[1,23],[1,24],[1,25],[1,26],[1,27],[1,28],[1,29],[1,30]],\"pos\":[0,0,0,0],\"rimasti\":31,\"orient\":1}];\nexport default module;","import \"/scolastiche/src/asy_library/pictures/bunny_polychrome.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_CPck0v0q,\n  width: \"66\",\n  height: \"116.23880597014924\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/bunny_polychrome.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_D8$2$6Gs,\n  width: \"66\",\n  height: \"116.23880597014924\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/stairs.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_AEMQ0Pfr,\n  width: \"80\",\n  height: \"248\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/stairs.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_C6cXra_s,\n  width: \"80\",\n  height: \"1370.6666666666665\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/stairs.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_D9ouJ4d2,\n  width: \"80\",\n  height: \"6512\",\n};\nexport default image;","import React from \"react\";\nimport { range } from \"lodash-es\";\n\nimport { Canvas, Rectangle, Sprite, Variables } from \"~/utils/visualizer\";\n\nimport bunny_left from \"./asy/bunny_left.asy?w=66\";\nimport bunny_right from \"./asy/bunny_right.asy?w=66\";\nimport stairs1 from \"./asy/stairs1.asy?w=80\";\nimport stairs2 from \"./asy/stairs2.asy?w=80\";\nimport stairs3 from \"./asy/stairs3.asy?w=80\";\n\nexport default function Visualizer({ variables }) {\n  const { blocklyVariables, hiddenState } = variables;\n  if (!hiddenState) return;\n\n  const stairs = [stairs1, stairs2, stairs3][hiddenState.M <= 6 ? 0 : hiddenState.M <= 14 ? 1 : 2];\n  const bunnies = [bunny_left, bunny_right];\n  const hf = 2.0;\n  const wf = 3.0;\n\n  const colors = [\n    \"#4093b0\",\n    \"#bf4eb4\",\n    \"#44c966\",\n    \"#4473c9\",\n    \"#c2a948\",\n    \"#7468c5\",\n    \"#9c5ebd\",\n    \"#7cc258\",\n    \"#a3b651\",\n    \"#40af91\",\n    \"#4473c9\",\n    \"#c2a948\",\n    \"#7468c5\",\n    \"#9c5ebd\",\n    \"#7cc258\",\n    \"#a3b651\",\n  ];\n\n  let bsplit = 0;\n  for (let i = 0; i < hiddenState.pos[1]; ++i) {\n    if (hiddenState.blocchi[i][0] === 1) bsplit += 1;\n  }\n\n  let bx = 3 - bsplit * (wf + 1);\n  return (\n    <>\n      <Canvas gravity=\"bottom\" scale={10}>\n        <Rectangle key={\"L\"} color={\"#eeeeee\"} height={hiddenState.S * hf} width={wf + 1} x={7} y={0} />\n        <Rectangle key={\"R\"} color={\"#eeeeee\"} height={hiddenState.D * hf} width={wf + 1} x={23} y={0} />\n        <Sprite src={stairs} alt=\"Scale\" x={13.1} y={0} />\n        <Rectangle key={\"base\"} color={\"#954520\"} height={1} width={(wf + 1) * hiddenState.M * 2 + wf + 17} x={7 - (wf + 1) * hiddenState.M} y={hiddenState.pos[3] * hf} />\n        <Sprite src={bunnies[hiddenState.orient]} alt=\"Bunny\" x={14} y={hiddenState.pos[3] * hf} follow />\n        {range(hiddenState.M).map((i) => {\n          let x = hiddenState.blocchi[i][0] * 8 + 7.5;\n          let y = hiddenState.blocchi[i][1] * hf;\n          if (hiddenState.blocchi[i][0] === 1) {\n            if (i >= hiddenState.pos[1] && bx < 23) bx = 23.5;\n            bx += wf + 1;\n            x = bx;\n            y = hiddenState.pos[3] * hf + 0.5;\n          }\n          return (\n            <Rectangle\n              key={i}\n              color={colors[i % colors.length]}\n              height={(i + 1) * hf}\n              width={wf}\n              x={x}\n              y={y}\n              style={{ \"paddingLeft\": \"2.5px\", \"lineHeight\": \"16px\" }}\n              className=\"pl-0.5 leading-4\"\n              children={i + 1}\n            />\n          );\n        })}\n      </Canvas>\n      <Variables\n        variables={{\n          sinistra: hiddenState.pos[0] + \"/\" + hiddenState.S,\n          destra: hiddenState.pos[2] + \"/\" + hiddenState.D,\n          blocchetti: hiddenState.rimasti + \"/\" + hiddenState.M,\n          ...blocklyVariables,\n        }}\n      />\n    </>\n  );\n}\n","import initialBlocks from \"./initialBlocks.json\";\nimport customBlocks from \"./customBlocks.yaml\";\nimport testcases from \"./testcases.py\";\nimport Visualizer from \"./visualizer.jsx\";\n\nTip-Tap vuole costruire una nuova tettoia per la sua fattoria!\nCome prima cosa, ha bisogno di costruire le due colonne portanti:\nuna a sinistra alta $S$ centimetri, e una a destra alta $D$ centimetri.\n\nPer farlo intende impilare alcuni blocchetti presi da un set da costruzioni,\ncomposto da un singolo blocchetto per ogni altezza possibile tra un minimo\ndi 1 centimetro e un massimo di $M$ centimetri, e che in tutto arrivano\nesattamente all'altezza totale delle due colonne. Ora può fare queste operazioni:\n- `altezza colonna destra`: l'altezza corrente della colonna di destra.\n- `altezza colonna sinistra`: l'altezza corrente della colonna di sinistra.\n- `impila blocchetto i a destra`: aggiunge il blocchetto alto $i$ centimetri alla colonna di destra, se non l'ha già usato.\n- `impila blocchetto i a sinistra`: aggiunge il blocchetto alto $i$ centimetri alla colonna di sinistra, se non l'ha già usato.\n- `termina`: completa le colonne e costruisci la tettoia.\n\nAiuta Tip-Tap a completare la tettoia come previsto!\n\n<Blockly\n  customBlocks={customBlocks}\n  initialBlocks={initialBlocks}\n  testcases={testcases}\n  debug={{ logBlocks: false, logJs: false, logVariables: false }}\n  Visualizer={Visualizer}\n/>\n\n> Un possibile programma corretto è il seguente:\n>\n> ![soluzione](sol.png)\n>\n> Questo programma procede a selezionare i blocchetti dal più grande al più piccolo.\n> Per ogni blocchetto, prova prima se può metterlo nella colonna a sinistra.\n> Se non può, prova anche a destra prima di scartarlo definitivamente.\n>\n> **Approfondimento:** Si può dimostrare che questo procedimento riesce sempre a costruire\n> le colonne. Per mostrarlo, consideriamo cosa succede quando vogliamo piazzare il\n> blocchetto alto $M$. La più alta delle due colonne deve essere alta più della metà del\n> totale, ma $M$ è al massimo la metà del totale dei blocchetti da $1$ a $M$, quindi\n> posso sicuramente farlo stare in una delle due colonne. Mettendolo, abbiamo ridotto sia l'altezza\n> totale da costruire che l'altezza totale dei blocchetti di $M$, quindi è ancora vero che\n> l'altezza totale dei blocchetti è uguale all'altezza totale delle colonne da costruire.\n>\n> ![secondarie](secondarie.asy)","# Giochi di Fibonacci 2023/2024\n\n## Fase II - Scuole secondarie\n\nQuesta prova contiene _6 domande_ da risolvere in _100 minuti_.\nLe domande sono a **scelta multipla** o a **blocchi**, e sono divise in due parti:\n\n- domande di interpretazione di **procedimenti procedurali** come programmi a blocchi, e\n- domande di **programmazione** tramite blocchi.\n\nIn entrambe le parti, le domande sono ordinate per difficoltà crescente.\n**Attento che la difficoltà è soggettiva!** Se stai passando tanto tempo cercando di risolvere una domanda, prova a passare ad altre domande e altre categorie!\n\n## Punteggio\n\nTutte le domande a _scelta multipla_ hanno 5 opzioni, di cui **solo una** è corretta. Il punteggio che puoi ottenere è:\n\n- 5 punti per una risposta _corretta_;\n- 1 punto per una risposta _non data_;\n- 0 punti per una risposta _sbagliata_.\n\nLe domande a _blocchi_ richiedono di scrivere un singolo programma a blocchi, che viene valutato su tre diversi livelli.\nPer ciascuna domanda e per ciascun livello, Il punteggio che puoi ottenere è:\n\n- 5 punti se il programma produce la risposta _corretta_;\n- 0 punti se il programma produce una risposta _sbagliata_.\n\nQuindi ogni domanda a blocchi può valere fino a 15 punti in totale.\n","import { P1CicliCondizioni } from \"problemset\";\nimport { P2BalleDiFieno } from \"problemset\";\nimport { P3PileDiCarote } from \"problemset\";\nimport { P4Contatore } from \"problemset\";\nimport { S1OrdinaPalloni } from \"problemset\";\nimport { S2GaraSalto } from \"problemset\";\nimport { S3SquadreBasket } from \"problemset\";\nimport { S4TorriGemelle } from \"problemset\";\n\n<Contest>\n\n## Sezione 1: procedimenti procedurali\n\n<Section>\n  <Problem points={[5, 1, 0]} statement={P2BalleDiFieno} />\n  <Problem points={[5, 1, 0]} statement={P3PileDiCarote} />\n  <Problem points={[5, 1, 0]} statement={P4Contatore} />\n</Section>\n\n## Sezione 2: programmazione\n\n<Section>\n  <Problem points={[5, 0, 0]} statement={S2GaraSalto} />\n  <Problem points={[5, 0, 0]} statement={S3SquadreBasket} />\n  <Problem points={[5, 0, 0]} statement={S4TorriGemelle} />\n</Section>\n\n</Contest>\n","import { OlinfoAuth } from \"~/utils/olinfo-auth\";\n\nimport Header from \"./contest/header.md\";\nimport Statement from \"./contest/contest.mdx\";\n\nexport const title = \"Giochi di Fibonacci 2023/2024 - Fase II - Scuole secondarie\";\nexport const description = \"Seconda fase dei Giochi di Fibonacci 2023/2024 per le scuole secondarie\";\n\nexport function App() {\n  return (\n    <OlinfoAuth questionCount={12} duration={100}>\n      <Header />\n      <Statement />\n    </OlinfoAuth>\n  );\n}\n"],"names":["image","_jsx","MathExpr","_jsxs","_components","module","Visualizer","variables","blocklyVariables","hiddenState","stairs","stairs1","stairs2","stairs3","M","bunnies","bunny_left","bunny_right","hf","wf","colors","bsplit","i","pos","blocchi","bx","_Fragment","Canvas","gravity","scale","Rectangle","color","height","S","width","x","y","D","Sprite","src","alt","orient","follow","range","map","length","style","className","children","Variables","sinistra","destra","blocchetti","rimasti","customBlocks","initialBlocks","testcases","logBlocks","logJs","logVariables","span","points","P2BalleDiFieno","P3PileDiCarote","P4Contatore","S2GaraSalto","S3SquadreBasket","S4TorriGemelle","title","App","OlinfoAuth","questionCount","duration","Header","Statement"],"mappings":"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"}