{"version":3,"file":"page-scolastiche-2023-4n9iWtnu.js","sources":["../../src/scolastiche/2023/contest/m-5-palline-tricolori/fig.asy","../../src/scolastiche/2023/contest/m-5-palline-tricolori/variants.py","../../src/scolastiche/2023/contest/m-5-palline-tricolori/question.md","../../src/scolastiche/2023/contest/m-6-stringa-oii/fig.asy","../../src/scolastiche/2023/contest/m-6-stringa-oii/question.md","../../src/scolastiche/2023/contest/m-9-hard-rettangoli-cornice/fig.asy","../../src/scolastiche/2023/contest/m-9-hard-rettangoli-cornice/variants.py","../../src/scolastiche/2023/contest/m-9-hard-rettangoli-cornice/question.md","../../src/scolastiche/2023/contest/m-12-cavalieri-furfanti/variants.py","../../src/scolastiche/2023/contest/m-12-cavalieri-furfanti/question.md","../../src/scolastiche/2023/contest/m-17-quasi-ordinato/variants.py","../../src/scolastiche/2023/contest/m-17-quasi-ordinato/question.md","../../src/scolastiche/2023/contest/p-8-sostituisci-riga/variants.py","../../src/scolastiche/2023/contest/p-8-sostituisci-riga/question.md","../../src/scolastiche/2023/contest/p-7-terzo-numero/variants.py","../../src/scolastiche/2023/contest/p-7-terzo-numero/question.md","../../src/scolastiche/2023/contest/p-2-somma-zero/variants.py","../../src/scolastiche/2023/contest/p-2-somma-zero/question.md","../../src/scolastiche/2023/contest/p-6-walk-back/variants.py","../../src/scolastiche/2023/contest/p-6-walk-back/question.md","../../src/scolastiche/2023/contest/p-3-step-invariante/variants.py","../../src/scolastiche/2023/contest/p-3-step-invariante/question.md","../../src/scolastiche/2023/contest/p-4-intervalli-nascosti/question.md","../../src/scolastiche/2023/contest/p-5-piu-stampato/variants.py","../../src/scolastiche/2023/contest/p-5-piu-stampato/question.md","../../src/scolastiche/2023/contest/a-1-ordina-colonne/examples.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+2%2C+3%2C+4%2C+7%2C+8%2C+12+%7D%2C+%7B+1%2C+5%2C+6%2C+9%2C+11%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+8%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+5%2C+12%2C+8%2C+15+%7D%2C+%7B+3%2C+4%2C+6%2C+14%2C+9+%7D%2C+%7B+2%2C+7%2C+10%2C+11%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/examples.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+1%2C+3%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+2%2C+4%2C+7%2C+6%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+4%2C+5%2C+9%2C+15+%7D%2C+%7B+2%2C+6%2C+8%2C+10%2C+14+%7D%2C+%7B+3%2C+7%2C+11%2C+12%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+864%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/examples.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+3%2C+2%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+1%2C+4%2C+6%2C+7%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+7%2C+10%2C+8%2C+9+%7D%2C+%7B+2%2C+5%2C+6%2C+11%2C+15+%7D%2C+%7B+3%2C+4%2C+12%2C+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/examples.asy?v=variants.py","../../src/scolastiche/2023/contest/a-1-ordina-colonne/table1.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+2%2C+3%2C+4%2C+7%2C+8%2C+12+%7D%2C+%7B+1%2C+5%2C+6%2C+9%2C+11%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+8%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+5%2C+12%2C+8%2C+15+%7D%2C+%7B+3%2C+4%2C+6%2C+14%2C+9+%7D%2C+%7B+2%2C+7%2C+10%2C+11%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/table1.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+1%2C+3%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+2%2C+4%2C+7%2C+6%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+4%2C+5%2C+9%2C+15+%7D%2C+%7B+2%2C+6%2C+8%2C+10%2C+14+%7D%2C+%7B+3%2C+7%2C+11%2C+12%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+864%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/table1.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+3%2C+2%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+1%2C+4%2C+6%2C+7%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+7%2C+10%2C+8%2C+9+%7D%2C+%7B+2%2C+5%2C+6%2C+11%2C+15+%7D%2C+%7B+3%2C+4%2C+12%2C+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/table1.asy?v=variants.py","../../src/scolastiche/2023/contest/a-1-ordina-colonne/table2.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+2%2C+3%2C+4%2C+7%2C+8%2C+12+%7D%2C+%7B+1%2C+5%2C+6%2C+9%2C+11%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+8%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+5%2C+12%2C+8%2C+15+%7D%2C+%7B+3%2C+4%2C+6%2C+14%2C+9+%7D%2C+%7B+2%2C+7%2C+10%2C+11%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/table2.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+1%2C+3%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+2%2C+4%2C+7%2C+6%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+4%2C+5%2C+9%2C+15+%7D%2C+%7B+2%2C+6%2C+8%2C+10%2C+14+%7D%2C+%7B+3%2C+7%2C+11%2C+12%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+864%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/table2.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+3%2C+2%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+1%2C+4%2C+6%2C+7%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+7%2C+10%2C+8%2C+9+%7D%2C+%7B+2%2C+5%2C+6%2C+11%2C+15+%7D%2C+%7B+3%2C+4%2C+12%2C+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B","../../src/scolastiche/2023/contest/a-1-ordina-colonne/table2.asy?v=variants.py","../../src/scolastiche/2023/contest/a-1-ordina-colonne/variants.py","../../src/scolastiche/2023/contest/a-1-ordina-colonne/question.md","../../src/scolastiche/2023/contest/a-8-grafo-disconnesso/immagine1.asy?inject=int+n1+%3D+7%3B%0Aint%5B%5D%5B%5D+edges1+%3D+%7B+%7B+0%2C+3+%7D%2C+%7B+1%2C+3+%7D%2C+%7B+3%2C+4+%7D%2C+%7B+4%2C+6+%7D%2C+%7B+5%2C+2+%7D+%7D%3B%0Aint+ans1+%3D+6%3B%0Aint+n2+%3D+20%3B%0Aint%5B%5D%5B%5D+edges2+%3D+%7B+%7B+1%2C+0+%7D%2C+%7B+1%2C+6+%7D%2C+%7B+0%2C+6+%7D%2C+%7B+6%2C+2+%7D%2C+%7B+12%2C+15+%7D%2C+%7B+15%2C+16+%7D%2C+%7B+16%2C+5+%7D%2C+%7B+19%2C+10+%7D%2C+%7B+10%2C+8+%7D%2C+%7B+18%2C+17+%7D%2C+%7B+7%2C+17+%7D%2C+%7B+17%2C+11+%7D%2C+%7B+4%2C+9+%7D%2C+%7B+3%2C+14+%7D%2C+%7B+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+139%3B","../../src/scolastiche/2023/contest/a-8-grafo-disconnesso/immagine1.asy?v=variants.py","../../src/scolastiche/2023/contest/a-8-grafo-disconnesso/immagine2.asy?inject=int+n1+%3D+7%3B%0Aint%5B%5D%5B%5D+edges1+%3D+%7B+%7B+0%2C+3+%7D%2C+%7B+1%2C+3+%7D%2C+%7B+3%2C+4+%7D%2C+%7B+4%2C+6+%7D%2C+%7B+5%2C+2+%7D+%7D%3B%0Aint+ans1+%3D+6%3B%0Aint+n2+%3D+20%3B%0Aint%5B%5D%5B%5D+edges2+%3D+%7B+%7B+1%2C+0+%7D%2C+%7B+1%2C+6+%7D%2C+%7B+0%2C+6+%7D%2C+%7B+6%2C+2+%7D%2C+%7B+12%2C+15+%7D%2C+%7B+15%2C+16+%7D%2C+%7B+16%2C+5+%7D%2C+%7B+19%2C+10+%7D%2C+%7B+10%2C+8+%7D%2C+%7B+18%2C+17+%7D%2C+%7B+7%2C+17+%7D%2C+%7B+17%2C+11+%7D%2C+%7B+4%2C+9+%7D%2C+%7B+3%2C+14+%7D%2C+%7B+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+139%3B","../../src/scolastiche/2023/contest/a-8-grafo-disconnesso/immagine2.asy?v=variants.py","../../src/scolastiche/2023/contest/a-8-grafo-disconnesso/variants.py","../../src/scolastiche/2023/contest/a-8-grafo-disconnesso/question.md","../../src/scolastiche/2023/contest/a-5-cancella-permutazione/variants.py","../../src/scolastiche/2023/contest/a-5-cancella-permutazione/question.md","../../src/scolastiche/2023/contest/a-6-muro-mattoni/variants.py","../../src/scolastiche/2023/contest/a-6-muro-mattoni/question.md","../../src/scolastiche/2023/contest/contest.mdx","../../src/scolastiche/2023/contest/pseudocodice-cheatsheet.svg","../../src/scolastiche/2023/contest/header.md","../../src/scolastiche/2023/index.jsx"],"sourcesContent":["import \"/scolastiche/src/scolastiche/2023/asy_library/pictures/spheric_ball.asy?url\";\nimport \"/scolastiche/src/scolastiche/2023/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_GQjue538,\n  width: \"343.265\",\n  height: \"187.829\",\n};\nexport default image;","const module = [{\"correct\":1006,\"wrong\":[1010,2009,2021,4054],\"r\":12,\"b\":2033},{\"correct\":1009,\"wrong\":[1014,2015,2029,4072],\"r\":14,\"b\":2043},{\"correct\":1012,\"wrong\":[1018,2021,2037,4090],\"r\":16,\"b\":2053},{\"correct\":1015,\"wrong\":[1022,2027,2045,4108],\"r\":18,\"b\":2063}];\nexport default module;","import variants from \"./variants.py\";\n\nAmy ha $\\js{r}$ palline rosse e $\\js{b}$ palline blu.\nAl negozio di palline, può comprare altre palline rosse e blu (quante ne vuole) al prezzo di $1$ euro ciascuna. Può anche dipingere **gratis** di verde tutte le palline che vuole.\n\n![Amy pittrice](fig.asy)\n\nAlla fine, vorrebbe avere lo stesso numero di palline rosse, blu e verdi. Nota che Amy **non può buttare** via palline!\nQual è il minimo numero di euro che Amy deve spendere per raggiungere il suo obiettivo?\n\n- [x] $\\js{correct}$\n- [ ] $\\js{wrong[0]}$\n- [ ] $\\js{wrong[1]}$\n- [ ] $\\js{wrong[2]}$\n- [ ] $\\js{wrong[3]}$\n","import \"/scolastiche/src/scolastiche/2023/asy_library/structures/layout.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_er8el6Df,\n  width: \"942.936\",\n  height: \"111.364\",\n};\nexport default image;","Valerio sta organizzando una gara di informatica, ma ne deve ancora decidere il nome.\nIl nome deve essere una parola di $6$ lettere, composta da solo $\\textsf{O}$ e $\\textsf{I}$.\nPer evitare problemi di copyright, il nome non deve contenere tre lettere consecutive che formano la parola $\\textsf{OII}$.\nPer esempio:\n\n![nomi](fig.asy)\n\nQuanti sono i possibili nomi che Valerio può dare alla gara?\n\n- [ ] $24$\n- [ ] $31$\n- [ ] $32$\n- [x] $33$\n- [ ] $36$\n","import \"/scolastiche/src/scolastiche/2023/contest/m-9-hard-rettangoli-cornice/griglia.asy?url\";\nimport \"/scolastiche/src/scolastiche/2023/contest/m-9-hard-rettangoli-cornice/poster.asy?url\";\nimport \"/scolastiche/src/scolastiche/2023/asy_library/pictures/picture_frame.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_qnPljy$Z,\n  width: \"458.757\",\n  height: \"524.967\",\n};\nexport default image;","const module = [{\"correct\":50,\"wrong\":[100,90,40,200],\"n\":5,\"rettangoli\":[[4,5],[10,2],[3,9],[7,3],[5,8]]}];\nexport default module;","import variants from \"./variants.py\";\n\nFrancesco ha ricevuto $\\js{n}$ cartoline rettangolari di dimensioni $\\js{rettangoli[0][0]} \\times \\js{rettangoli[0][1]}$, $\\js{rettangoli[1][0]} \\times \\js{rettangoli[1][1]}$, $\\js{rettangoli[2][0]} \\times \\js{rettangoli[2][1]}$, $\\js{rettangoli[3][0]} \\times \\js{rettangoli[3][1]}$ e $\\js{rettangoli[4][0]} \\times \\js{rettangoli[4][1]}$.\nOra vuole acquistare una bacheca rettangolare in cui mettere le cartoline, possibilmente sovrapposte ed eventualmente ruotate di 90°.\n\nPer esempio se le dimensioni delle cartoline (in cm) **fossero** $8 \\times 4$, $5 \\times 5$, $3 \\times 10$, $9 \\times 1$ e $4 \\times 6$, questa sarebbe una **possibile** bacheca di area $9 \\times 11 = 99$ che contiene quelle cartoline (che **non** sono quelle che ha Francesco).\n\n![cornice](fig.asy)\n\nPer risparmiare, Francesco vorrebbe acquistare la bacheca più piccola possibile: quanto vale al minimo l'area (in cm²) di una bacheca che può contenere le cartoline?\n\n- [x] $\\js{correct}$\n- [ ] $\\js{wrong[0]}$\n- [ ] $\\js{wrong[1]}$\n- [ ] $\\js{wrong[2]}$\n- [ ] $\\js{wrong[3]}$\n","const module = [{\"n\":2024,\"correct\":1350,\"wrong\":[0,675,674,1012]},{\"n\":2027,\"correct\":1352,\"wrong\":[0,676,675,1013]},{\"n\":1025,\"correct\":684,\"wrong\":[0,342,341,512]},{\"n\":2000,\"correct\":1334,\"wrong\":[0,667,666,1000]}];\nexport default module;","import variants from \"./variants.py\";\n\nCi sono $\\js{n}$ persone in fila. Ognuna di esse è un furfante o un cavaliere.\nI cavalieri dicono sempre la verità, mentre i furfanti dicono sempre il falso.\nOgni persona che non si trova agli estremi della fila dichiara: \"I miei vicini sono entrambi furfanti o entrambi cavalieri\".\n\nQuanti sono al massimo i furfanti?\n\n- [x] $\\js{correct}$\n- [ ] $\\js{wrong[0]}$\n- [ ] $\\js{wrong[1]}$\n- [ ] $\\js{wrong[2]}$\n- [ ] $\\js{wrong[3]}$\n","const module = [{\"A\":[1,4,5,6,7,9,13,15],\"N\":8,\"correct\":248,\"wrong\":[256,136,5040,29]},{\"A\":[1,2,4,7,8,9,13,15],\"N\":8,\"correct\":248,\"wrong\":[256,136,5040,29]},{\"A\":[2,3,4,7,8,9,11,12,14],\"N\":9,\"correct\":503,\"wrong\":[512,265,40320,37]},{\"A\":[1,2,4,5,9,11,12,13,17],\"N\":9,\"correct\":503,\"wrong\":[512,265,40320,37]},{\"A\":[1,2,4,5,9,11,13],\"N\":7,\"correct\":121,\"wrong\":[128,71,720,22]},{\"A\":[1,2,7,9,12,13,15],\"N\":7,\"correct\":121,\"wrong\":[128,71,720,22]}];\nexport default module;","import variants from \"./variants.py\";\n\nUna sequenza di numeri $A$, indicizzata da $0$ a $N-1$ è detta _quasi crescente_ se $A_i > A_{i+1}$ per **al più** un indice $i$.\nPer esempio `[1,3,7]` e `[3,5,8,2,6]` sono quasi crescenti, mentre `[2,6,5,3]` non lo è.\n\nData la sequenza `[{A}]` , quanti sono i suoi diversi riordinamenti, eventualmente incluso quello della sequenza iniziale, che sono _quasi crescenti_?\n\n- [x] $\\js{correct}$\n- [ ] $\\js{wrong[0]}$\n- [ ] $\\js{wrong[1]}$\n- [ ] $\\js{wrong[2]}$\n- [ ] $\\js{wrong[3]}$\n","const module = [{\"correct\":\"y[1] ← y[1]\",\"wrong\":[\"x ← x[2]\",\"y ← x\",\"x[0] ← 2 + y\",\"y ← x + 2\"]},{\"correct\":\"y[0] ← y[0]\",\"wrong\":[\"x ← x[2]\",\"x + y[2] ← 2\",\"x[0] ← 2 + y\",\"y[0] ← x[0] + 2\"]},{\"correct\":\"y[2] ← y[2]\",\"wrong\":[\"y ← x\",\"x + y[2] ← 2\",\"y ← x + 2\",\"y[0] ← x[0] + 2\"]},{\"correct\":\"y[3] ← y[3]\",\"wrong\":[\"x ← x[2]\",\"y ← x\",\"y ← x + 2\",\"y[0] ← x[0] + 2\"]}];\nexport default module;","import variants from \"./variants.py\";\n\nNel seguente programma, una riga è stata sostituita da `[???]`.\n\n```srs\nvariable x: integer\nvariable y: integer[]\nx <- 42\ny <- [0, 1, 2, 3]\n[???]\n```\n\nQuale dei seguenti assegnamenti, sostituito a `[???]`, risulta in un programma valido?\n\n- [x] `{correct}`\n- [ ] `{wrong[0]}`\n- [ ] `{wrong[1]}`\n- [ ] `{wrong[2]}`\n- [ ] `{wrong[3]}`\n","const module = [{\"correct\":40,\"wrong\":[120,60,30,24,20,15,12,10,8,6,5,4,3,2],\"n\":120},{\"correct\":25,\"wrong\":[100,50,20,10,5,4,2],\"n\":100},{\"correct\":30,\"wrong\":[90,45,18,15,10,9,6,5,3,2],\"n\":90},{\"correct\":20,\"wrong\":[80,40,16,10,8,5,4,2],\"n\":80}];\nexport default module;","import variants from \"./variants.py\";\n\nQual è il **terzo** numero stampato dal seguente programma?\n\n```srs\nfor i in [1, {n+1}) do\n  for j in [1, {n+1}) do\n    if i * j == {n} then\n      output(j)\n    end if\n  end for\nend for\n```\n\n- [x] $\\js{correct}$\n- [ ] $\\js{wrong[0]}$\n- [ ] $\\js{wrong[1]}$\n- [ ] $\\js{wrong[2]}$\n- [ ] $\\js{wrong[3]}$\n","const module = [{\"correct\":17,\"wrong\":[14,42,25,0],\"a\":[2,3,6,4,4,5,8,2,8],\"n\":9},{\"correct\":13,\"wrong\":[14,47,34,0],\"a\":[2,3,6,4,9,5,8,2,8],\"n\":9},{\"correct\":20,\"wrong\":[14,41,21,0],\"a\":[2,3,6,3,4,5,8,2,8],\"n\":9}];\nexport default module;","import variants from \"./variants.py\";\n\nConsidera la seguente funzione, che prende come parametri un intero **positivo** `n` e un array di interi `a` di lunghezza `n`, e restituisce un intero:\n\n```srs\nfunction compute(a: integer[], n: integer) -> integer\n  variable ans: integer\n  ans <- 0\n\n  for i in [0 ... n) do\n    if a[0] == i then\n      ans <- ans + i\n    end if\n    for j in [0 ... n-1) do\n      (a[j], a[j + 1]) <- (a[j + 1], a[j])\n    end for\n  end for\n\n  return ans\nend function\n```\n\nSupponiamo di chiamare `compute(a, {n})`, dove `a = [{a}]`. Qual è il valore restituito dalla funzione?\n\n- [x] $\\js{correct}$\n- [ ] $\\js{wrong[0]}$\n- [ ] $\\js{wrong[1]}$\n- [ ] $\\js{wrong[2]}$\n- [ ] $\\js{wrong[3]}$\n","const module = [{\"n\":7,\"correct\":12,\"wrong\":[7,28,35,10],\"a\":[2,0,4,0,9,12,1]},{\"n\":7,\"correct\":9,\"wrong\":[7,29,36,10],\"a\":[2,6,3,0,9,2,7]},{\"n\":7,\"correct\":14,\"wrong\":[7,43,50,10],\"a\":[2,0,7,10,9,14,1]}];\nexport default module;","import variants from \"./variants.py\";\n\nConsideriamo la seguente funzione ricorsiva, dove `a` è un array di lunghezza `n`, `pos` è un intero tra $0$ e `n`, e `x` è un intero:\n\n```srs\nfunction walk(n: integer, a: integer[], pos: integer, x: integer)\n  if pos == n then\n    return\n  end if\n  if x < a[pos] then\n    output(\"back\")\n    walk(n, a, 0, x + 1)\n  else\n    walk(n, a, pos + 1, x)\n  end if\nend function\n```\n\nSupponiamo di chiamare `walk({n}, a, 0, 0)`, dove `a = [{a}]`. Quante volte viene stampata in output la stringa `”back”`?\n\n- [x] $\\js{correct}$\n- [ ] $\\js{wrong[0]}$\n- [ ] $\\js{wrong[1]}$\n- [ ] $\\js{wrong[2]}$\n- [ ] $\\js{wrong[3]}$\n","const module = [{\"correct\":[307,1793],\"wrong\":[[1413,578],[1,2101],[2100,2100],[2100,1]],\"n\":2100},{\"correct\":[7,2193],\"wrong\":[[37,466],[1,2201],[2200,2200],[2200,1]],\"n\":2200},{\"correct\":[1467,833],\"wrong\":[[101,1593],[1,2301],[2300,2300],[2300,1]],\"n\":2300},{\"correct\":[2395,5],\"wrong\":[[5,448],[1,2401],[2400,2400],[2400,1]],\"n\":2400}];\nexport default module;","import variants from \"./variants.py\";\n\nConsidera la seguente funzione, che prende come parametri due interi **positivi** `a`, `b`, e restituisce un intero:\n\n```srs\nfunction step(a: integer, b: integer) -> integer\n  variable k: integer\n  k <- 0\n\n  while a > 0 or b > 0 do\n    if a * a < b then\n      b <- b - a - 1\n      a <- 2 * a\n    else\n      a <- a - 1\n    end if\n    k <- k + 1\n  end while\n\n  return k\nend function\n```\n\nPer quale delle seguenti coppie `(a, b)` il valore restituito da `step(a, b)` è {n}?\n\n- [x] $(\\js{correct})$\n- [ ] $(\\js{wrong[0]})$\n- [ ] $(\\js{wrong[1]})$\n- [ ] $(\\js{wrong[2]})$\n- [ ] $(\\js{wrong[3]})$\n","Considera la seguente funzione, che prende come parametri quattro interi **di segno qualunque** `a`, `b`, `c`, `d`, e restituisce un intero:\n\n```srs\nfunction loop(a: integer, b: integer, c: integer, d: integer) -> integer\n  variable ans: integer\n  ans <- 0\n  for i in [a, b + 1) do\n    if (i - c) * (i - d) <= 0 then\n      ans <- ans + 1\n    end if\n  end for\n  return ans\nend function\n```\n\nQuale delle seguenti affermazioni è vera?\n\n- [x] `loop(a, b, c, d)` è sempre uguale a `loop(c, d, a, b)`\n- [ ] `loop` restituisce sicuramente un numero $\\leq b - a$\n- [ ] `loop` restituisce sicuramente un numero $\\leq d - c$\n- [ ] `loop` non restituisce mai $0$\n- [ ] `loop(2 * a, 2 * b, 2 * c, 2 * d)` è sempre uguale a `2 * loop(a, b, c, d)`\n","const module = [{\"correct\":\"Poco più di 550\",\"wrong\":[\"Due volte\",\"Poco meno di 2500\",\"Circa 1100\",\"Circa 1650\"],\"n\":5000},{\"correct\":\"Poco più di 220\",\"wrong\":[\"Due volte\",\"Poco meno di 1000\",\"Circa 440\",\"Circa 660\"],\"n\":2000},{\"correct\":\"Poco più di 330\",\"wrong\":[\"Due volte\",\"Poco meno di 1500\",\"Circa 660\",\"Circa 990\"],\"n\":3000},{\"correct\":\"Poco più di 660\",\"wrong\":[\"Due volte\",\"Poco meno di 3000\",\"Circa 1320\",\"Circa 1980\"],\"n\":6000}];\nexport default module;","import variants from \"./variants.py\";\n\nConsidera la seguente funzione:\n\n```srs\nfunction f(n: integer)\n  variable i: integer\n  variable j: integer\n  i <- 0\n  j <- 1\n  while j <= n do\n    for k in [i, j) do\n      output(k)\n    end for\n    i <- i + 2\n    j <- j + 3\n  end while\nend function\n```\n\nChiamando `f({n})`, quante volte viene stampato il numero che viene stampato più volte?\n\n- [x] {correct}\n- [ ] {wrong[0]}\n- [ ] {wrong[1]}\n- [ ] {wrong[2]}\n- [ ] {wrong[3]}\n","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_4AP5LzgW,\n  width: \"604.724\",\n  height: \"151.681\",\n};\nexport default image;","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_N3NLF3GJ,\n  width: \"604.724\",\n  height: \"151.681\",\n};\nexport default image;","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_H9$b4eqc,\n  width: \"604.724\",\n  height: \"151.681\",\n};\nexport default image;","import img_0 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/examples.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+2%2C+3%2C+4%2C+7%2C+8%2C+12+%7D%2C+%7B+1%2C+5%2C+6%2C+9%2C+11%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+8%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+5%2C+12%2C+8%2C+15+%7D%2C+%7B+3%2C+4%2C+6%2C+14%2C+9+%7D%2C+%7B+2%2C+7%2C+10%2C+11%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport img_1 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/examples.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+1%2C+3%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+2%2C+4%2C+7%2C+6%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+4%2C+5%2C+9%2C+15+%7D%2C+%7B+2%2C+6%2C+8%2C+10%2C+14+%7D%2C+%7B+3%2C+7%2C+11%2C+12%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+864%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport img_2 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/examples.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+3%2C+2%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+1%2C+4%2C+6%2C+7%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+7%2C+10%2C+8%2C+9+%7D%2C+%7B+2%2C+5%2C+6%2C+11%2C+15+%7D%2C+%7B+3%2C+4%2C+12%2C+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/variants.py?url\";\n\nconst variants = [img_0, img_1, img_2];\n\nexport default function img(variant) {\n  return variants[variant];\n}\n","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_Bd76akXR,\n  width: \"453.543\",\n  height: \"151.626\",\n};\nexport default image;","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_CWGe9VmX,\n  width: \"453.543\",\n  height: \"151.626\",\n};\nexport default image;","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_6pJTiINU,\n  width: \"453.543\",\n  height: \"151.626\",\n};\nexport default image;","import img_0 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/table1.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+2%2C+3%2C+4%2C+7%2C+8%2C+12+%7D%2C+%7B+1%2C+5%2C+6%2C+9%2C+11%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+8%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+5%2C+12%2C+8%2C+15+%7D%2C+%7B+3%2C+4%2C+6%2C+14%2C+9+%7D%2C+%7B+2%2C+7%2C+10%2C+11%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport img_1 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/table1.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+1%2C+3%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+2%2C+4%2C+7%2C+6%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+4%2C+5%2C+9%2C+15+%7D%2C+%7B+2%2C+6%2C+8%2C+10%2C+14+%7D%2C+%7B+3%2C+7%2C+11%2C+12%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+864%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport img_2 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/table1.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+3%2C+2%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+1%2C+4%2C+6%2C+7%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+7%2C+10%2C+8%2C+9+%7D%2C+%7B+2%2C+5%2C+6%2C+11%2C+15+%7D%2C+%7B+3%2C+4%2C+12%2C+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/variants.py?url\";\n\nconst variants = [img_0, img_1, img_2];\n\nexport default function img(variant) {\n  return variants[variant];\n}\n","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_RMesWUg1,\n  width: \"453.543\",\n  height: \"272.393\",\n};\nexport default image;","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_KsxlAFIa,\n  width: \"453.543\",\n  height: \"272.393\",\n};\nexport default image;","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_bVzgT7kW,\n  width: \"453.543\",\n  height: \"272.393\",\n};\nexport default image;","import img_0 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/table2.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+2%2C+3%2C+4%2C+7%2C+8%2C+12+%7D%2C+%7B+1%2C+5%2C+6%2C+9%2C+11%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+8%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+5%2C+12%2C+8%2C+15+%7D%2C+%7B+3%2C+4%2C+6%2C+14%2C+9+%7D%2C+%7B+2%2C+7%2C+10%2C+11%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport img_1 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/table2.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+1%2C+3%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+2%2C+4%2C+7%2C+6%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+4%2C+5%2C+9%2C+15+%7D%2C+%7B+2%2C+6%2C+8%2C+10%2C+14+%7D%2C+%7B+3%2C+7%2C+11%2C+12%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+864%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport img_2 from \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/table2.asy?inject=int+n1+%3D+6%3B%0Aint+k1+%3D+2%3B%0Aint%5B%5D%5B%5D+table1+%3D+%7B+%7B+3%2C+2%2C+5%2C+8%2C+11%2C+12+%7D%2C+%7B+1%2C+4%2C+6%2C+7%2C+9%2C+10+%7D+%7D%3B%0Aint+ans1+%3D+16%3B%0Aint+n2+%3D+5%3B%0Aint+k2+%3D+3%3B%0Aint%5B%5D%5B%5D+table2+%3D+%7B+%7B+1%2C+7%2C+10%2C+8%2C+9+%7D%2C+%7B+2%2C+5%2C+6%2C+11%2C+15+%7D%2C+%7B+3%2C+4%2C+12%2C+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+144%3B%0Aint+nes+%3D+3%3B%0Aint+kes+%3D+2%3B%0Aint%5B%5D%5B%5D+example+%3D+%7B+%7B+1%2C+3%2C+6+%7D%2C+%7B+2%2C+5%2C+4+%7D+%7D%3B%0Aint%5B%5D%5B%5D+example_res+%3D+%7B+%7B+2%2C+3%2C+4+%7D%2C+%7B+1%2C+5%2C+6+%7D+%7D%3B\";\nimport \"/scolastiche/src/scolastiche/2023/contest/a-1-ordina-colonne/variants.py?url\";\n\nconst variants = [img_0, img_1, img_2];\n\nexport default function img(variant) {\n  return variants[variant];\n}\n","const module = [{\"n1\":6,\"k1\":2,\"table1\":[[2,3,4,7,8,12],[1,5,6,9,11,10]],\"ans1\":8,\"n2\":5,\"k2\":3,\"table2\":[[1,5,12,8,15],[3,4,6,14,9],[2,7,10,11,13]],\"ans2\":144,\"nes\":3,\"kes\":2,\"example\":[[1,3,6],[2,5,4]],\"example_res\":[[2,3,4],[1,5,6]]},{\"n1\":6,\"k1\":2,\"table1\":[[1,3,5,8,11,12],[2,4,7,6,9,10]],\"ans1\":16,\"n2\":5,\"k2\":3,\"table2\":[[1,4,5,9,15],[2,6,8,10,14],[3,7,11,12,13]],\"ans2\":864,\"nes\":3,\"kes\":2,\"example\":[[1,3,6],[2,5,4]],\"example_res\":[[2,3,4],[1,5,6]]},{\"n1\":6,\"k1\":2,\"table1\":[[3,2,5,8,11,12],[1,4,6,7,9,10]],\"ans1\":16,\"n2\":5,\"k2\":3,\"table2\":[[1,7,10,8,9],[2,5,6,11,15],[3,4,12,14,13]],\"ans2\":144,\"nes\":3,\"kes\":2,\"example\":[[1,3,6],[2,5,4]],\"example_res\":[[2,3,4],[1,5,6]]}];\nexport default module;","import variants from \"./variants.py\";\n\nData una tabella $A$ con $K$ righe e $N$ colonne, contenente i numeri da $1$ a $NK$, una sua _simile_ è una tabella che si ottiene da $A$ riordinando i numeri nelle colonne, colonna per colonna (e in alcune colonne l'ordine potrebbe rimanere lo stesso).\n\nUna tabella è detta _crescente_ se in ogni sua riga i numeri sono in ordine crescente da sinistra verso destra.\nPer esempio, data la tabella a sinistra, quella a destra è una tabella simile crescente.\n\n![](examples.asy?v=variants.py)\n\nQuante sono le tabelle crescenti simili alla seguente tabella?\n\n![](table1.asy?v=variants.py)\n\n?> {ans1}\n\n---\n\nQuante sono le tabelle crescenti simili alla seguente tabella?\n\n![](table2.asy?v=variants.py)\n\n?> {ans2}\n","import \"/scolastiche/src/scolastiche/2023/asy_library/structures/graph.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_pkpUV3qo,\n  width: \"429.974\",\n  height: \"429.974\",\n};\nexport default image;","import img_0 from \"/scolastiche/src/scolastiche/2023/contest/a-8-grafo-disconnesso/immagine1.asy?inject=int+n1+%3D+7%3B%0Aint%5B%5D%5B%5D+edges1+%3D+%7B+%7B+0%2C+3+%7D%2C+%7B+1%2C+3+%7D%2C+%7B+3%2C+4+%7D%2C+%7B+4%2C+6+%7D%2C+%7B+5%2C+2+%7D+%7D%3B%0Aint+ans1+%3D+6%3B%0Aint+n2+%3D+20%3B%0Aint%5B%5D%5B%5D+edges2+%3D+%7B+%7B+1%2C+0+%7D%2C+%7B+1%2C+6+%7D%2C+%7B+0%2C+6+%7D%2C+%7B+6%2C+2+%7D%2C+%7B+12%2C+15+%7D%2C+%7B+15%2C+16+%7D%2C+%7B+16%2C+5+%7D%2C+%7B+19%2C+10+%7D%2C+%7B+10%2C+8+%7D%2C+%7B+18%2C+17+%7D%2C+%7B+7%2C+17+%7D%2C+%7B+17%2C+11+%7D%2C+%7B+4%2C+9+%7D%2C+%7B+3%2C+14+%7D%2C+%7B+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+139%3B\";\nimport img_1 from \"/scolastiche/src/scolastiche/2023/contest/a-8-grafo-disconnesso/immagine1.asy?inject=int+n1+%3D+7%3B%0Aint%5B%5D%5B%5D+edges1+%3D+%7B+%7B+0%2C+3+%7D%2C+%7B+1%2C+3+%7D%2C+%7B+3%2C+4+%7D%2C+%7B+4%2C+6+%7D%2C+%7B+5%2C+2+%7D+%7D%3B%0Aint+ans1+%3D+6%3B%0Aint+n2+%3D+20%3B%0Aint%5B%5D%5B%5D+edges2+%3D+%7B+%7B+1%2C+0+%7D%2C+%7B+1%2C+6+%7D%2C+%7B+0%2C+6+%7D%2C+%7B+6%2C+2+%7D%2C+%7B+12%2C+15+%7D%2C+%7B+15%2C+16+%7D%2C+%7B+16%2C+5+%7D%2C+%7B+19%2C+10+%7D%2C+%7B+10%2C+8+%7D%2C+%7B+18%2C+17+%7D%2C+%7B+7%2C+17+%7D%2C+%7B+17%2C+11+%7D%2C+%7B+4%2C+9+%7D%2C+%7B+3%2C+14+%7D%2C+%7B+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+139%3B\";\nimport \"/scolastiche/src/scolastiche/2023/contest/a-8-grafo-disconnesso/variants.py?url\";\n\nconst variants = [img_0, img_1];\n\nexport default function img(variant) {\n  return variants[variant];\n}\n","import \"/scolastiche/src/scolastiche/2023/asy_library/structures/graph.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_K5DzijSR,\n  width: \"770.131\",\n  height: \"543.36\",\n};\nexport default image;","import img_0 from \"/scolastiche/src/scolastiche/2023/contest/a-8-grafo-disconnesso/immagine2.asy?inject=int+n1+%3D+7%3B%0Aint%5B%5D%5B%5D+edges1+%3D+%7B+%7B+0%2C+3+%7D%2C+%7B+1%2C+3+%7D%2C+%7B+3%2C+4+%7D%2C+%7B+4%2C+6+%7D%2C+%7B+5%2C+2+%7D+%7D%3B%0Aint+ans1+%3D+6%3B%0Aint+n2+%3D+20%3B%0Aint%5B%5D%5B%5D+edges2+%3D+%7B+%7B+1%2C+0+%7D%2C+%7B+1%2C+6+%7D%2C+%7B+0%2C+6+%7D%2C+%7B+6%2C+2+%7D%2C+%7B+12%2C+15+%7D%2C+%7B+15%2C+16+%7D%2C+%7B+16%2C+5+%7D%2C+%7B+19%2C+10+%7D%2C+%7B+10%2C+8+%7D%2C+%7B+18%2C+17+%7D%2C+%7B+7%2C+17+%7D%2C+%7B+17%2C+11+%7D%2C+%7B+4%2C+9+%7D%2C+%7B+3%2C+14+%7D%2C+%7B+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+139%3B\";\nimport img_1 from \"/scolastiche/src/scolastiche/2023/contest/a-8-grafo-disconnesso/immagine2.asy?inject=int+n1+%3D+7%3B%0Aint%5B%5D%5B%5D+edges1+%3D+%7B+%7B+0%2C+3+%7D%2C+%7B+1%2C+3+%7D%2C+%7B+3%2C+4+%7D%2C+%7B+4%2C+6+%7D%2C+%7B+5%2C+2+%7D+%7D%3B%0Aint+ans1+%3D+6%3B%0Aint+n2+%3D+20%3B%0Aint%5B%5D%5B%5D+edges2+%3D+%7B+%7B+1%2C+0+%7D%2C+%7B+1%2C+6+%7D%2C+%7B+0%2C+6+%7D%2C+%7B+6%2C+2+%7D%2C+%7B+12%2C+15+%7D%2C+%7B+15%2C+16+%7D%2C+%7B+16%2C+5+%7D%2C+%7B+19%2C+10+%7D%2C+%7B+10%2C+8+%7D%2C+%7B+18%2C+17+%7D%2C+%7B+7%2C+17+%7D%2C+%7B+17%2C+11+%7D%2C+%7B+4%2C+9+%7D%2C+%7B+3%2C+14+%7D%2C+%7B+14%2C+13+%7D+%7D%3B%0Aint+ans2+%3D+139%3B\";\nimport \"/scolastiche/src/scolastiche/2023/contest/a-8-grafo-disconnesso/variants.py?url\";\n\nconst variants = [img_0, img_1];\n\nexport default function img(variant) {\n  return variants[variant];\n}\n","const module = [{\"n1\":7,\"edges1\":[[0,3],[1,3],[3,4],[4,6],[5,2]],\"ans1\":6,\"n2\":20,\"edges2\":[[1,0],[1,6],[0,6],[6,2],[12,15],[15,16],[16,5],[19,10],[10,8],[18,17],[7,17],[17,11],[4,9],[3,14],[14,13]],\"ans2\":139},{\"n1\":7,\"edges1\":[[0,3],[1,3],[3,4],[4,6],[5,2]],\"ans1\":6,\"n2\":20,\"edges2\":[[1,0],[1,6],[0,6],[6,2],[12,15],[15,16],[16,5],[19,10],[10,8],[18,17],[7,17],[17,11],[4,9],[3,14],[14,13]],\"ans2\":139}];\nexport default module;","import variants from \"./variants.py\";\n\nLuca ha trovato la cartina della rete idrica del suo paese. Sopra vi sono rappresentati gli snodi e le tubature che li collegano. Gli snodi sono indicati tramite dei cerchi numerati, mentre se esiste una tubatura tra lo snodo $a$ e lo snodo $b$ ci sarà una linea che li collega.\n\nDiciamo che uno snodo è _connesso_ ad un'altro se è esiste una sequenza di tubature che li collega. Per esempio, in questa rete:\n\n![Immagine](immagine1.asy?v=variants.py)\n\nlo snodo 1 è connesso allo snodo 6, mentre lo snodo 3 non è connesso allo snodo 5.\nLuca vuole aggiungere nuove tubature, ma l'ufficio di igiene gli ha chiesto di evitare\ndi mettere in connessione tutti gli snodi (in altre parole, devono esserci almeno\ndue snodi non connessi), e l'economato non vuole che due tubature diverse abbiano per\nestremi la stessa coppia di snodi. Quante tubature può aggiungere al massimo?\n\n?> {ans1}\n\n---\n\nLuca ora si sta occupando della rete idrica di un'altra città. Quante tubature al massimo può aggiungere in questa nuova rete, rispettando gli stessi vincoli?\n\n![Immagine](immagine2.asy?v=variants.py)\n\n?> {ans2}\n","const module = [{\"perm\":[3,1,4,7,2,5,6],\"ans1\":3,\"ans2\":6,\"pair\":[4,7],\"reduced\":[3,1,7,2,5,6]},{\"perm\":[3,2,6,7,5,1,4],\"ans1\":4,\"ans2\":8,\"pair\":[6,7],\"reduced\":[3,2,7,5,1,4]},{\"perm\":[1,5,4,2,7,3,6],\"ans1\":3,\"ans2\":6,\"pair\":[4,2],\"reduced\":[1,5,4,7,3,6]}];\nexport default module;","import variants from \"./variants.py\";\n\nHai la seguente lista di numeri: $[\\js{perm}]$.\nIn una mossa puoi scegliere due numeri consecutivi e togliere dalla lista il più piccolo dei due (eventualmente riunendo le due parti della lista).\n\nPer esempio, se scegli i numeri consecutivi $(\\js{pair})$, la lista diventa $[\\js{reduced}]$.\nDopo $\\js{perm.length - 2}$ mosse, quante sono le diverse liste di $2$ numeri che possono rimanere?\n\n?> {ans1}\n\n---\n\nDopo $\\js{perm.length - 3}$ mosse, quante sono le diverse liste di $3$ numeri che possono rimanere?\n\n?> {ans2}\n","const module = [{\"h\":[1,2,7,3,6,4,5],\"M\":11,\"d\":4,\"ans1\":7,\"ans2\":5},{\"h\":[7,4,5,1,2,6,3],\"M\":12,\"d\":4,\"ans1\":7,\"ans2\":5},{\"h\":[6,4,2,5,3,7,1],\"M\":11,\"d\":4,\"ans1\":7,\"ans2\":5},{\"h\":[5,2,6,3,7,4,1],\"M\":14,\"d\":4,\"ans1\":7,\"ans2\":5}];\nexport default module;","import variants from \"./variants.py\";\n\nDevi costruire $\\js{h.length}$ pile di mattoncini.\nAll’inizio ogni pila è vuota. Nella pila $i$-esima puoi aggiungere solo mattoncini di altezza $h_i$ dove $h = [\\js{h}]$.\n\nPer ragioni di stabilità, in ogni istante le altezze di due pile **adiacenti** possono differire di al più $d = \\js{d}$.\nQual è il massimo intero $M$ tale che si riescono a rendere tutte le pile alte almeno $M$?\n\n?> {ans1}\n\n---\n\nQual è il minimo valore intero per il parametro $d$ tale che si riescono a rendere tutte le pile alte almeno $\\js{M}$?\n\n?> {ans2}\n","import {\n  M5PallineTricolori,\n  M6StringaOii,\n  M9HardRettangoliCornice,\n  M12CavalieriFurfanti,\n  M17QuasiOrdinato,\n} from \"problemset\";\nimport {\n  P8SostituisciRiga,\n  P7TerzoNumero,\n  P2SommaZero,\n  P6WalkBack,\n  P3StepInvariante,\n  P4IntervalliNascosti,\n  P5PiuStampato,\n} from \"problemset\";\nimport { A1OrdinaColonne, A8GrafoDisconnesso, A5CancellaPermutazione, A6MuroMattoni } from \"problemset\";\n\n<Contest>\n\n## Sezione 1: Esercizi a carattere logico-matematico\n\n<Section>\n  <Problem points={[5, 1, 0]} statement={M5PallineTricolori} />\n  <Problem points={[5, 1, 0]} statement={M9HardRettangoliCornice} />\n  <Problem points={[5, 1, 0]} statement={M6StringaOii} />\n  <Problem points={[5, 1, 0]} statement={M12CavalieriFurfanti} />\n  <Problem points={[5, 1, 0]} statement={M17QuasiOrdinato} />\n</Section>\n\n## Sezione 2: Esercizi di programmazione\n\n<Section>\n  <Problem points={[5, 1, 0]} statement={P8SostituisciRiga} />\n  <Problem points={[5, 1, 0]} statement={P7TerzoNumero} />\n  <Problem points={[5, 1, 0]} statement={P2SommaZero} />\n  <Problem points={[5, 1, 0]} statement={P6WalkBack} />\n  <Problem points={[5, 1, 0]} statement={P3StepInvariante} />\n  <Problem points={[5, 1, 0]} statement={P4IntervalliNascosti} />\n  <Problem points={[5, 1, 0]} statement={P5PiuStampato} />\n</Section>\n\n## Sezione 3: Esercizi a carattere algoritmico\n\n<Section>\n  <Problem points={[5, 0, 0]} statement={A1OrdinaColonne} />\n  <Problem points={[5, 0, 0]} statement={A5CancellaPermutazione} />\n  <Problem points={[5, 0, 0]} statement={A6MuroMattoni} />\n  <Problem points={[5, 0, 0]} statement={A8GrafoDisconnesso} />\n</Section>\n\n</Contest>\n","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_l3egZI$5,\n  width: \"1122.52\",\n  height: \"1398.425\",\n};\nexport default image;","Ciao! Ecco le informazioni essenziali sulla prova che stai per svolgere. Ti consigliamo di leggerle attentamente.\n\n## Regole di base\n\nTi è permesso:\n\n- avere a disposizione una calcolatrice -- va bene qualunque tipo di calcolatrice, comprese quelle grafiche e la calcolatrice di sistema dell'eventuale dispositivo elettronico che stai usando (PC o dispositivo mobile);\n- avere con te dei fogli bianchi (eventualmente a righe o quadretti);\n- avere con te del materiale di cancelleria (penne, matite, gomma, etc.);\n- andare in bagno in qualunque momento -- in tal caso, dovrai lasciare nell'aula dispositivi elettronici, il testo della prova, e altro materiale cartaceo;\n- comunicare con il docente sorvegliante in caso di problemi tecnici.\n\nNon ti è permesso:\n\n- navigare su internet, se non all'indirizzo del sito della prova [https://scolastiche23.olinfo.it](https://scolastiche23.olinfo.it);\n- comunicare con i tuoi compagni;\n- comunicare con il docente sorvegliante sul contenuto della prova;\n- diffondere il testo della prova, o parte di esso, prima delle 20:00 del giorno della prova (14 dicembre).\n\n## Formato della prova\n\nQuesta prova contiene _20 domande_, da svolgere in un tempo totale di _90 minuti_. La prova consiste di quesiti a **scelta multipla** e quesiti a **domanda aperta numerica**, ed è divisa in tre parti:\n\n- 6 quesiti a scelta multipla a **carattere logico-matematico**,\n- 6 quesiti a scelta multipla di **programmazione** in pseudocodice, e\n- 4 quesiti a **carattere algoritmico**, ciascuno con 2 domande aperte numeriche.\n\n## Punteggio\n\nTutti i quesiti a _scelta multipla_ presentano 5 opzioni, di cui **solo una** è corretta. Il punteggio assegnato per tali quesiti è:\n\n- 5 punti per una risposta _corretta_;\n- 1 punto per una risposta _in bianco_;\n- 0 punti per una risposta _errata_.\n\nOgni _domanda aperta numerica_ richiede come risposta un numero intero (eventualmente negativo). Il punteggio assegnato per tali domande è:\n\n- 5 punti per una risposta _corretta_;\n- 0 punti per una risposta _errata_ o _in bianco_.\n\nIn particolare, il punteggio massimo ottenibile per un quesito a carattere algoritmico è 5 + 5 = 10.\n\n## Quesiti di programmazione e pseudocodice\n\nI quesiti di programmazione presentano semplici programmi scritti in _pseudocodice_. Qui sotto puoi trovare un riassunto della sintassi dello pseudocodice, oppure [scarica la guida completa](/Pseudocodice.pdf) in PDF.\n\n![Riassunto guida pseudocodice](pseudocodice-cheatsheet.svg)\n","import { OlinfoAuth } from \"../../utils/olinfo-auth\";\n\nimport Contest from \"./contest/contest.mdx\";\nimport Header from \"./contest/header.md\";\n\nexport const title = \"Scolastiche 2023\";\nexport const description = \"Olimpiadi Italiane di Informatica 2023/2024 - Selezione scolastica\";\n\nexport function App() {\n  return (\n    <OlinfoAuth contestName={description} questionCount={20} duration={90}>\n      <Header />\n      <Contest />\n    </OlinfoAuth>\n  );\n}\n"],"names":["image","module","_jsx","MathExpr","_components","_jsxs","Code","n","correct","wrong","variants","img_0","img_1","img_2","img","variant","children","points","M5PallineTricolori","M9HardRettangoliCornice","M6StringaOii","M12CavalieriFurfanti","M17QuasiOrdinato","P8SostituisciRiga","P7TerzoNumero","P2SommaZero","P6WalkBack","P3StepInvariante","P4IntervalliNascosti","P5PiuStampato","A1OrdinaColonne","A5CancellaPermutazione","A6MuroMattoni","A8GrafoDisconnesso","title","description","App","OlinfoAuth","contestName","questionCount","duration","Header","Contest"],"mappings":"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"}