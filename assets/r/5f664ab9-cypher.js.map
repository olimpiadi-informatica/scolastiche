{"version":3,"file":"5f664ab9-cypher.js","sources":["../../../node_modules/shiki/dist/langs/cypher.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Cypher\", \"fileTypes\": [\"cql\", \"cyp\", \"cypher\"], \"name\": \"cypher\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#constants\" }, { \"include\": \"#keywords\" }, { \"include\": \"#functions\" }, { \"include\": \"#path-patterns\" }, { \"include\": \"#operators\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#properties_literal\" }, { \"include\": \"#numbers\" }, { \"include\": \"#strings\" }], \"repository\": { \"comments\": { \"patterns\": [{ \"match\": \"//.*$\\\\n?\", \"name\": \"comment.line.double-slash.cypher\" }] }, \"constants\": { \"patterns\": [{ \"match\": \"(?i)\\\\bTRUE|FALSE\\\\b\", \"name\": \"constant.language.bool.cypher\" }, { \"match\": \"(?i)\\\\bNULL\\\\b\", \"name\": \"constant.language.missing.cypher\" }] }, \"functions\": { \"patterns\": [{ \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\", \"match\": \"(?i)\\\\b((NOT)(?=\\\\s*\\\\()|IS\\\\s+NULL|IS\\\\s+NOT\\\\s+NULL)\", \"name\": \"keyword.control.function.boolean.cypher\" }, { \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\", \"match\": \"(?i)\\\\b(ALL|ANY|NONE|SINGLE)(?=\\\\s*\\\\()\", \"name\": \"support.function.predicate.cypher\" }, { \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\", \"match\": \"(?i)\\\\b(LENGTH|TYPE|ID|COALESCE|HEAD|LAST|TIMESTAMP|STARTNODE|ENDNODE|TOINT|TOFLOAT)(?=\\\\s*\\\\()\", \"name\": \"support.function.scalar.cypher\" }, { \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\", \"match\": \"(?i)\\\\b(NODES|RELATIONSHIPS|LABELS|EXTRACT|FILTER|TAIL|RANGE|REDUCE)(?=\\\\s*\\\\()\", \"name\": \"support.function.collection.cypher\" }, { \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\", \"match\": \"(?i)\\\\b(ABS|ACOS|ASIN|ATAN|ATAN2|COS|COT|DEGREES|E|EXP|FLOOR|HAVERSIN|LOG|LOG10|PI|RADIANS|RAND|ROUND|SIGN|SIN|SQRT|TAN)(?=\\\\s*\\\\()\", \"name\": \"support.function.math.cypher\" }, { \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\", \"match\": \"(?i)\\\\b(COUNT|sum|avg|max|min|stdev|stdevp|percentileDisc|percentileCont|collect)(?=\\\\s*\\\\()\", \"name\": \"support.function.aggregation.cypher\" }, { \"comment\": \"List of Cypher built-in functions from http://docs.neo4j.org/chunked/milestone/query-function.html\", \"match\": \"(?i)\\\\b(STR|REPLACE|SUBSTRING|LEFT|RIGHT|LTRIM|RTRIM|TRIM|LOWER|UPPER|SPLIT)(?=\\\\s*\\\\()\", \"name\": \"support.function.string.cypher\" }] }, \"identifiers\": { \"patterns\": [{ \"match\": \"`.+?`\", \"name\": \"variable.other.quoted-identifier.cypher\" }, { \"match\": \"[\\\\p{L}_][\\\\p{L}0-9_]*\", \"name\": \"variable.other.identifier.cypher\" }] }, \"keywords\": { \"patterns\": [{ \"match\": \"(?i)\\\\b(START|MATCH|WHERE|RETURN|UNION|FOREACH|WITH|AS|LIMIT|SKIP|UNWIND|HAS|DISTINCT|OPTIONAL\\\\\\\\s+MATCH|ORDER\\\\s+BY|CALL|YIELD)\\\\b\", \"name\": \"keyword.control.clause.cypher\" }, { \"match\": \"(?i)\\\\b(ELSE|END|THEN|CASE|WHEN)\\\\b\", \"name\": \"keyword.control.case.cypher\" }, { \"match\": \"(?i)\\\\b(FIELDTERMINATOR|USING\\\\s+PERIODIC\\\\s+COMMIT|HEADERS|LOAD\\\\s+CSV|FROM)\\\\b\", \"name\": \"keyword.data.import.cypher\" }, { \"match\": \"(?i)\\\\b(USING\\\\s+INDEX|CREATE\\\\s+INDEX\\\\s+ON|DROP\\\\s+INDEX\\\\s+ON|CREATE\\\\s+CONSTRAINT\\\\s+ON|DROP\\\\s+CONSTRAINT\\\\s+ON)\\\\b\", \"name\": \"keyword.other.indexes.cypher\" }, { \"match\": \"(?i)\\\\b(MERGE|DELETE|SET|REMOVE|ON\\\\s+CREATE|ON\\\\s+MATCH|CREATE\\\\s+UNIQUE|CREATE)\\\\b\", \"name\": \"keyword.data.definition.cypher\" }, { \"match\": \"(?i)\\\\b(DESC|ASC)\\\\b\", \"name\": \"keyword.other.order.cypher\" }, { \"begin\": \"(?i)\\\\b(node|relationship|rel)((:)([\\\\p{L}_-][\\\\p{L}0-9_]*))?(?=\\\\s*\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"support.class.starting-functions-point.cypher\" }, \"2\": { \"name\": \"keyword.control.index-seperator.cypher\" }, \"3\": { \"name\": \"keyword.control.index-seperator.cypher\" }, \"4\": { \"name\": \"support.class.index.cypher\" } }, \"end\": \"\\\\)\", \"name\": \"source.starting-functions.cypher\", \"patterns\": [{ \"match\": \"((?:`.+?`)|(?:[\\\\p{L}_][\\\\p{L}0-9_]*))\", \"name\": \"variable.parameter.relationship-name.cypher\" }, { \"match\": \"(\\\\*)\", \"name\": \"keyword.control.starting-function-params.cypher\" }, { \"include\": \"#comments\" }, { \"include\": \"#numbers\" }, { \"include\": \"#strings\" }] }] }, \"numbers\": { \"patterns\": [{ \"match\": \"\\\\b\\\\d+(\\\\.\\\\d+)?\\\\b\", \"name\": \"constant.numeric.cypher\" }] }, \"operators\": { \"patterns\": [{ \"match\": \"(\\\\+|\\\\-|\\\\/|\\\\*|\\\\%|\\\\?|!)\", \"name\": \"keyword.operator.math.cypher\" }, { \"match\": \"(<=|=>|<>|<|>|=~|=)\", \"name\": \"keyword.operator.compare.cypher\" }, { \"match\": \"(?i)\\\\b(OR|AND|XOR|IS)\\\\b\", \"name\": \"keyword.operator.logical.cypher\" }, { \"match\": \"(?i)\\\\b(IN)\\\\b\", \"name\": \"keyword.operator.in.cypher\" }] }, \"path-patterns\": { \"patterns\": [{ \"match\": \"(<--|-->|--)\", \"name\": \"support.function.relationship-pattern.cypher\" }, { \"begin\": \"(<-|-)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.relationship-pattern-start.cypher\" }, \"2\": { \"name\": \"keyword.operator.relationship-pattern-start.cypher\" } }, \"end\": \"(])(->|-)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.relationship-pattern-end.cypher\" }, \"2\": { \"name\": \"support.function.relationship-pattern-end.cypher\" } }, \"name\": \"path-pattern.cypher\", \"patterns\": [{ \"include\": \"#identifiers\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.relationship-type-start.cypher\" }, \"2\": { \"name\": \"entity.name.class.relationship.type.cypher\" } }, \"match\": \"(:)((?:`.+?`)|(?:[\\\\p{L}_][\\\\p{L}0-9_]*))\", \"name\": \"entity.name.class.relationship-type.cypher\" }, { \"captures\": { \"1\": { \"name\": \"support.type.operator.relationship-type-or.cypher\" }, \"2\": { \"name\": \"entity.name.class.relationship.type-or.cypher\" } }, \"match\": \"(\\\\|)(\\\\s*)((?:`.+?`)|(?:[\\\\p{L}_][\\\\p{L}0-9_]*))\", \"name\": \"entity.name.class.relationship-type-ored.cypher\" }, { \"match\": \"(?:\\\\?\\\\*|\\\\?|\\\\*)\\\\s*(?:\\\\d+\\\\s*(?:\\\\.\\\\.\\\\s*\\\\d+)?)?\", \"name\": \"support.function.relationship-pattern.quant.cypher\" }, { \"include\": \"#properties_literal\" }] }] }, \"properties_literal\": { \"patterns\": [{ \"begin\": \"{\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.properties_literal.cypher\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.properties_literal.cypher\" } }, \"name\": \"source.cypher\", \"patterns\": [{ \"match\": \":|,\", \"name\": \"keyword.control.properties_literal.seperator.cypher\" }, { \"include\": \"#comments\" }, { \"include\": \"#constants\" }, { \"include\": \"#functions\" }, { \"include\": \"#operators\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#numbers\" }, { \"include\": \"#strings\" }] }] }, \"string_escape\": { \"captures\": { \"2\": { \"name\": \"string.quoted.double.cypher\" } }, \"match\": `(\\\\\\\\\\\\\\\\|\\\\\\\\[tbnrf])|(\\\\\\\\'|\\\\\\\\\")`, \"name\": \"constant.character.escape.cypher\" }, \"strings\": { \"patterns\": [{ \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.cypher\", \"patterns\": [{ \"include\": \"#string_escape\" }] }, { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.cypher\", \"patterns\": [{ \"include\": \"#string_escape\" }] }] } }, \"scopeName\": \"source.cypher\", \"aliases\": [\"cql\"] });\nvar cypher = [\n  lang\n];\n\nexport { cypher as default };\n"],"names":["lang","cypher"],"mappings":"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","x_google_ignoreList":[0]}