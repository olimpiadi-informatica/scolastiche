{"version":3,"mappings":";;+IAAA,MAAMA,GAAuB,CAC3B,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMC,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,iBACN,KAAQ,eACR,OAAU,IAAMA,EAAA,WAAO,iCAA4B,EAAC,GACrD,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,eACN,KAAQ,eACR,OAAU,IAAMA,EAAA,WAAO,+BAA0B,EAAC,wCACnD,EACD,CACE,GAAM,aACN,KAAQ,qBACR,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,+BACjD,EACD,CACE,GAAM,SACN,KAAQ,cACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,iCAC1C,EACD,CACE,GAAM,cACN,KAAQ,cACR,OAAU,IAAMA,EAAA,WAAO,2BAAyB,EAAC,GAClD,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,WACN,KAAQ,WACR,QAAW,CACT,MACD,EACD,OAAU,IAAMA,EAAA,WAAO,wBAAsB,EAAC,mJAC/C,EACD,CACE,GAAM,MACN,KAAQ,WACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,gDAC5C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,YACN,KAAQ,YACR,OAAU,IAAMA,EAAA,WAAO,4BAAuB,EAAC,GAChD,EACD,CACE,GAAM,MACN,KAAQ,aACR,QAAW,CACT,OACD,EACD,OAAU,IAAMA,EAAA,WAAO,mBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,YACN,KAAQ,YACR,OAAU,IAAMA,EAAA,WAAO,4BAAuB,EAAC,GAChD,EACD,CACE,GAAM,QACN,KAAQ,QACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,qCAC5C,EACD,CACE,GAAM,IACN,KAAQ,IACR,OAAU,IAAMA,EAAA,WAAO,oBAAe,EAAC,GACxC,EACD,CACE,GAAM,UACN,KAAQ,UACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,UACN,KAAQ,UACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,8BAC5C,EACD,CACE,GAAM,aACN,KAAQ,aACR,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,GACjD,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,SACN,KAAQ,eACR,QAAW,CACT,cACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,wBAC7C,EACD,CACE,GAAM,cACN,KAAQ,cACR,QAAW,CACT,MACD,EACD,OAAU,IAAMA,EAAA,WAAO,8BAAyB,EAAC,GAClD,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,MACN,KAAQ,MACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,kCAC1C,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,qCAC9C,EACD,CACE,GAAM,SACN,KAAQ,KACR,QAAW,CACT,KACA,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,sBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,IACN,KAAQ,IACR,OAAU,IAAMA,EAAA,WAAO,oBAAe,EAAC,GACxC,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,SACN,KAAQ,aACR,QAAW,CACT,YACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,cACN,KAAQ,cACR,OAAU,IAAMA,EAAA,WAAO,8BAAyB,EAAC,GAClD,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,kCAC3C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,4BAC7C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,4BAC1C,EACD,CACE,GAAM,aACN,KAAQ,aACR,QAAW,CACT,OACD,EACD,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,GACjD,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,+CAC1C,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,qBACN,KAAQ,uBACR,QAAW,CACT,IACA,MACA,KACD,EACD,OAAU,IAAKA,EAAA,IAAC,OAAO,qCAAgC,EAAC,yBACzD,EACD,CACE,GAAM,oBACN,KAAQ,sBACR,QAAW,CACT,MACA,MACA,MACA,MACA,KACD,EACD,OAAU,IAAKA,EAAA,IAAC,OAAO,oCAA+B,EAAC,GACxD,EACD,CACE,GAAM,SACN,KAAQ,KACR,QAAW,CACT,KACA,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,yBAC7C,EACD,CACE,GAAM,aACN,KAAQ,aACR,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,4BACjD,EACD,CACE,GAAM,WACN,KAAQ,WACR,OAAU,IAAMA,EAAA,WAAO,2BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,WACN,KAAQ,WACR,OAAU,IAAMA,EAAA,WAAO,2BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,aACN,KAAQ,qBACR,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,yBACjD,EACD,CACE,GAAM,aACN,KAAQ,qBACR,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,yBACjD,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,aACN,KAAQ,aACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,+BACjD,EACD,CACE,GAAM,aACN,KAAQ,aACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,+BACjD,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,yBAC3C,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,KACN,KAAQ,KACR,OAAU,IAAMA,EAAA,WAAO,qBAAgB,EAAC,GACzC,EACD,CACE,GAAM,UACN,KAAQ,UACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAqB,EAAC,iCAC9C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,+BAC3C,EACD,CACE,GAAM,OACN,KAAQ,YACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,wDAC3C,EACD,CACE,GAAM,aACN,KAAQ,aACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,+BACjD,EACD,CACE,GAAM,UACN,KAAQ,UACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,MACN,KAAQ,gBACR,OAAU,IAAMA,EAAA,WAAO,mBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,yBAC3C,EACD,CACE,GAAM,kBACN,KAAQ,oBACR,OAAU,IAAMA,EAAA,WAAO,kCAA6B,EAAC,4BACtD,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,6CAC3C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,yBAC3C,EACD,CACE,GAAM,KACN,KAAQ,KACR,OAAU,IAAMA,EAAA,WAAO,qBAAgB,EAAC,GACzC,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,yBAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,QAAW,CACT,YACD,EACD,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,aACN,KAAQ,aACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,GACjD,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,4BAC5C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,wBAC5C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,QACN,KAAQ,qBACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,QACN,KAAQ,aACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,OACN,KAAQ,OACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,QACN,KAAQ,QACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,6CAC5C,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,KACA,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,QACN,KAAQ,QACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,sFAC5C,EACD,CACE,GAAM,OACN,KAAQ,SACR,QAAW,CACT,OACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,8BAC7C,EACD,CACE,GAAM,MACN,KAAQ,WACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,yBAC1C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,OACN,KAAQ,WACR,QAAW,CACT,UACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,WACN,KAAQ,WACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,2BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,+BAC5C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,qCAC1C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,SACN,KAAQ,kBACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,WACN,KAAQ,WACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,2BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,4BAC5C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,yCAC1C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,UACN,KAAQ,UACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,cACN,KAAQ,cACR,QAAW,CACT,MACD,EACD,OAAU,IAAMA,EAAA,WAAO,8BAAyB,EAAC,GAClD,EACD,CACE,GAAM,gBACN,KAAQ,gBACR,OAAU,IAAMA,EAAA,WAAO,gCAA2B,EAAC,GACpD,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,mCAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,qCAC1C,EACD,CACE,GAAM,QACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,KACN,KAAQ,aACR,QAAW,CACT,MACA,MACD,EACD,OAAU,IAAMA,EAAA,WAAO,qBAAgB,EAAC,GACzC,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,aACN,KAAQ,aACR,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,GACjD,EACD,CACE,GAAM,aACN,KAAQ,aACR,QAAW,CACT,KACA,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,GACjD,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,QACN,KAAQ,oBACR,QAAW,CACT,UACD,EACD,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,MACN,KAAQ,MACR,QAAW,CACT,MACD,EACD,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,uCAC1C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,aACN,KAAQ,aACR,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,GACjD,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,wBAC1C,EACD,CACE,GAAM,SACN,KAAQ,gBACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,MACN,KAAQ,kBACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,IACN,KAAQ,IACR,OAAU,IAAMA,EAAA,WAAO,oBAAe,EAAC,GACxC,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,OACN,KAAQ,OACR,QAAW,CACT,OACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,QACN,KAAQ,gBACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,+BAC5C,EACD,CACE,GAAM,MACN,KAAQ,0BACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,OACD,EACD,OAAU,IAAMA,EAAA,WAAO,sBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,QACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,qBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,MACN,KAAQ,mBACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,oEAC1C,EACD,CACE,GAAM,OACN,KAAQ,OACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,4CAC3C,EACD,CACE,GAAM,OACN,KAAQ,OACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,yBAC1C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,uBAC3C,EACD,CACE,GAAM,YACN,KAAQ,YACR,QAAW,CACT,QACD,EACD,OAAU,IAAMA,EAAA,WAAO,4BAAuB,EAAC,yBAChD,EACD,CACE,GAAM,cACN,KAAQ,QACR,QAAW,CACT,OACA,KACA,QACA,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,8BAAyB,EAAC,GAClD,EACD,CACE,GAAM,eACN,KAAQ,gBACR,QAAW,CACT,SACD,EACD,OAAU,IAAMA,EAAA,WAAO,+BAA0B,EAAC,yBACnD,EACD,CACE,GAAM,YACN,KAAQ,YACR,OAAU,IAAMA,EAAA,WAAO,4BAAuB,EAAC,GAChD,EACD,CACE,GAAM,WACN,KAAQ,WACR,OAAU,IAAMA,EAAA,WAAO,2BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,MACN,KAAQ,oBACR,QAAW,CACT,mBACD,EACD,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,4BAC1C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,yBAC7C,EACD,CACE,GAAM,SACN,KAAQ,wBACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,aACN,KAAQ,aACR,OAAU,IAAMA,EAAA,WAAO,6BAAwB,EAAC,GACjD,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,0BAC5C,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,MACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,uDAC7C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,iBACN,KAAQ,gBACR,OAAU,IAAMA,EAAA,WAAO,iCAA4B,EAAC,GACrD,EACD,CACE,GAAM,UACN,KAAQ,gBACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,QACN,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,8BAC5C,EACD,CACE,GAAM,YACN,KAAQ,YACR,QAAW,CACT,KACA,QACD,EACD,OAAU,IAAMA,EAAA,WAAO,4BAAuB,EAAC,GAChD,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,yBAC1C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,UACN,KAAQ,uBACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,6CAC9C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,mBAAiB,EAAC,GAC1C,EACD,CACE,GAAM,SACN,KAAQ,SACR,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,0DAC3C,EACD,CACE,GAAM,aACN,KAAQ,aACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,0BAAwB,EAAC,GACjD,EACD,CACE,GAAM,WACN,KAAQ,WACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,2BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,QACN,KAAQ,QACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,IACN,KAAQ,IACR,OAAU,IAAMA,EAAA,WAAO,oBAAe,EAAC,GACxC,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,KACN,KAAQ,eACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,qBAAgB,EAAC,GACzC,EACD,CACE,GAAM,UACN,KAAQ,UACR,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,OACN,KAAQ,aACR,QAAW,CACT,MACA,WACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,gFAC1C,EACD,CACE,GAAM,WACN,KAAQ,WACR,OAAU,IAAMA,EAAA,WAAO,2BAAsB,EAAC,oFAC/C,EACD,CACE,GAAM,QACN,KAAQ,QACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,wBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,OACN,KAAQ,cACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,SACN,KAAQ,SACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,yBAAoB,EAAC,GAC7C,EACD,CACE,GAAM,OACN,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,WACN,KAAQ,WACR,QAAW,CACT,YACA,MACD,EACD,OAAU,IAAMA,EAAA,WAAO,2BAAsB,EAAC,iMAC/C,EACD,CACE,GAAM,UACN,KAAQ,UACR,QAAW,CACT,IACD,EACD,OAAU,IAAMA,EAAA,WAAO,0BAAqB,EAAC,GAC9C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,uBAC1C,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,2BAC1C,EACD,CACE,GAAM,OACN,KAAQ,OACR,QAAW,CACT,KACD,EACD,OAAU,IAAMA,EAAA,WAAO,uBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,YACN,KAAQ,YACR,OAAU,IAAMA,EAAA,WAAO,4BAAuB,EAAC,GAChD,EACD,CACE,GAAM,MACN,KAAQ,MACR,OAAU,IAAMA,EAAA,WAAO,sBAAiB,EAAC,GAC1C,CACH,EACMC,GAAuB,OAAO,YAAYF,GAAqB,IAAKG,GAAM,CAACA,EAAE,GAAIA,EAAE,MAAM,CAAC,CAAC,EAC3FC,GAAwB,OAAO,YAAYJ,GAAqB,QAASG,GAAMA,EAAE,SAAS,IAAKE,GAAM,CAACA,EAAGF,EAAE,MAAM,CAAC,GAAK,CAAE,EAAC,EAC1HG,GAAmB,CACvB,GAAGJ,GACH,GAAGE,EACL,ECzvCMG,GAAiB,MAAOC,GACrBP,EAAA,WAAO,uBAAY,EAAC,IAAC,KAAMQ,GAASA,EAAK,QAAQD,CAAI,CAAC,ECDzDE,GAAoB,CACxB,CACE,GAAM,aACN,YAAe,aACf,KAAQ,OACR,OAAU,IAAMT,EAAA,WAAO,6BAAyB,EAAC,GAClD,EACD,CACE,GAAM,WACN,YAAe,WACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,2BAAuB,EAAC,GAChD,EACD,CACE,GAAM,WACN,YAAe,WACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,2BAAuB,EAAC,GAChD,EACD,CACE,GAAM,oBACN,YAAe,oBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,oCAAgC,EAAC,GACzD,EACD,CACE,GAAM,mBACN,YAAe,mBACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,mCAA+B,EAAC,GACxD,EACD,CACE,GAAM,uBACN,YAAe,uBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uCAAmC,EAAC,GAC5D,EACD,CACE,GAAM,mBACN,YAAe,mBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,gCAA+B,EAAC,GACxD,EACD,CACE,GAAM,YACN,YAAe,YACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,4BAAwB,EAAC,GACjD,EACD,CACE,GAAM,UACN,YAAe,gBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,0BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,eACN,YAAe,qBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,+BAA2B,EAAC,GACpD,EACD,CACE,GAAM,kBACN,YAAe,kBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,kCAA8B,EAAC,GACvD,EACD,CACE,GAAM,mBACN,YAAe,mBACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,mCAA+B,EAAC,GACxD,EACD,CACE,GAAM,cACN,YAAe,cACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,8BAA0B,EAAC,GACnD,EACD,CACE,GAAM,sBACN,YAAe,sBACf,KAAQ,OACR,OAAU,IAAKA,EAAA,IAAC,OAAO,sCAAkC,EAAC,GAC3D,EACD,CACE,GAAM,qBACN,YAAe,qBACf,KAAQ,OACR,OAAU,IAAKA,EAAA,IAAC,OAAO,qCAAiC,EAAC,GAC1D,EACD,CACE,GAAM,4BACN,YAAe,4BACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,4CAAwC,EAAC,GACjE,EACD,CACE,GAAM,eACN,YAAe,eACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,+BAA2B,EAAC,GACpD,EACD,CACE,GAAM,uBACN,YAAe,uBACf,KAAQ,QACR,OAAU,IAAKA,EAAA,IAAC,OAAO,uCAAmC,EAAC,GAC5D,EACD,CACE,GAAM,6BACN,YAAe,6BACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,6CAAyC,EAAC,GAClE,EACD,CACE,GAAM,UACN,YAAe,UACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,0BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,YACN,YAAe,YACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,4BAAwB,EAAC,GACjD,EACD,CACE,GAAM,aACN,YAAe,aACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,6BAAyB,EAAC,GAClD,EACD,CACE,GAAM,iBACN,YAAe,iBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,iCAA6B,EAAC,GACtD,EACD,CACE,GAAM,wBACN,YAAe,wBACf,KAAQ,OACR,OAAU,IAAKA,EAAA,IAAC,OAAO,wCAAoC,EAAC,GAC7D,EACD,CACE,GAAM,yBACN,YAAe,yBACf,KAAQ,QACR,OAAU,IAAKA,EAAA,IAAC,OAAO,yCAAqC,EAAC,GAC9D,EACD,CACE,GAAM,uBACN,YAAe,uBACf,KAAQ,OACR,OAAU,IAAKA,EAAA,IAAC,OAAO,uCAAmC,EAAC,GAC5D,EACD,CACE,GAAM,2BACN,YAAe,2BACf,KAAQ,OACR,OAAU,IAAKA,EAAA,IAAC,OAAO,2CAAuC,EAAC,GAChE,EACD,CACE,GAAM,WACN,YAAe,WACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,2BAAuB,EAAC,GAChD,EACD,CACE,GAAM,YACN,YAAe,YACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,4BAAwB,EAAC,GACjD,EACD,CACE,GAAM,UACN,YAAe,UACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,0BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,YACN,YAAe,YACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,4BAAwB,EAAC,GACjD,EACD,CACE,GAAM,OACN,YAAe,OACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,uBAAmB,EAAC,GAC5C,EACD,CACE,GAAM,eACN,YAAe,eACf,KAAQ,OACR,OAAU,IAAKA,EAAA,IAAC,OAAO,+BAA2B,EAAC,GACpD,EACD,CACE,GAAM,YACN,YAAe,YACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,4BAAwB,EAAC,GACjD,EACD,CACE,GAAM,UACN,YAAe,UACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,0BAAsB,EAAC,GAC/C,EACD,CACE,GAAM,aACN,YAAe,aACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,6BAAyB,EAAC,GAClD,EACD,CACE,GAAM,MACN,YAAe,MACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,sBAAkB,EAAC,GAC3C,EACD,CACE,GAAM,YACN,YAAe,YACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,4BAAwB,EAAC,GACjD,EACD,CACE,GAAM,iBACN,YAAe,iBACf,KAAQ,QACR,OAAU,IAAKA,EAAA,IAAC,OAAO,iCAA6B,EAAC,GACtD,EACD,CACE,GAAM,iBACN,YAAe,iBACf,KAAQ,OACR,OAAU,IAAKA,EAAA,IAAC,OAAO,iCAA6B,EAAC,GACtD,EACD,CACE,GAAM,aACN,YAAe,aACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,6BAAyB,EAAC,GAClD,EACD,CACE,GAAM,cACN,YAAe,cACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,8BAA0B,EAAC,GACnD,EACD,CACE,GAAM,eACN,YAAe,eACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,+BAA2B,EAAC,GACpD,EACD,CACE,GAAM,iBACN,YAAe,iBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,iCAA6B,EAAC,GACtD,EACD,CACE,GAAM,kBACN,YAAe,kBACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,kCAA8B,EAAC,GACvD,EACD,CACE,GAAM,eACN,YAAe,gBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,+BAA2B,EAAC,GACpD,EACD,CACE,GAAM,cACN,YAAe,cACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,8BAA0B,EAAC,GACnD,EACD,CACE,GAAM,SACN,YAAe,SACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,yBAAqB,EAAC,GAC9C,EACD,CACE,GAAM,gBACN,YAAe,gBACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,gCAA4B,EAAC,GACrD,EACD,CACE,GAAM,eACN,YAAe,eACf,KAAQ,OACR,OAAU,IAAMA,EAAA,WAAO,+BAA2B,EAAC,GACpD,EACD,CACE,GAAM,gBACN,YAAe,gBACf,KAAQ,QACR,OAAU,IAAMA,EAAA,WAAO,gCAA4B,EAAC,GACrD,CACH,EACMU,GAAgB,OAAO,YAAYD,GAAkB,IAAKP,GAAM,CAACA,EAAE,GAAIA,EAAE,MAAM,CAAC,CAAC,ECpTvF,IAAIS,GACH,SAAUA,EAAW,CAClBA,EAAUA,EAAU,OAAY,EAAE,EAAI,SACtCA,EAAUA,EAAU,KAAU,CAAC,EAAI,OACnCA,EAAUA,EAAU,OAAY,CAAC,EAAI,SACrCA,EAAUA,EAAU,KAAU,CAAC,EAAI,OACnCA,EAAUA,EAAU,UAAe,CAAC,EAAI,WAC5C,GAAGA,IAAcA,EAAY,GAAG,ECNhC,SAASC,GAAMC,EAAW,CACxB,OAAOC,GAAQD,CAAS,CAC1B,CACA,SAASC,GAAQD,EAAW,CACtB,aAAM,QAAQA,CAAS,EAClBE,GAAWF,CAAS,EAEzB,OAAOA,GAAc,SAChBG,GAASH,CAAS,EAEpBA,CACT,CACA,SAASE,GAAWE,EAAK,CACvB,IAAIC,EAAI,GACR,QAAShB,EAAI,EAAGiB,EAAMF,EAAI,OAAQf,EAAIiB,EAAKjB,IACzCgB,EAAEhB,CAAC,EAAIY,GAAQG,EAAIf,CAAC,CAAC,EAEhB,OAAAgB,CACT,CACA,SAASF,GAASI,EAAK,CACrB,IAAIF,EAAI,GACR,QAASG,KAAOD,EACdF,EAAEG,CAAG,EAAIP,GAAQM,EAAIC,CAAG,CAAC,EAEpB,OAAAH,CACT,CACA,SAASI,GAAaC,KAAWC,EAAS,CAChC,OAAAA,EAAA,QAASC,GAAW,CAC1B,QAASJ,KAAOI,EACPF,EAAAF,CAAG,EAAII,EAAOJ,CAAG,CAC1B,CACD,EACME,CACT,CACA,SAASG,GAASC,EAAM,CAChB,MAAAC,EAAM,CAACD,EAAK,YAAY,GAAG,GAAK,CAACA,EAAK,YAAY,IAAI,EAC5D,OAAIC,IAAQ,EACHD,EACE,CAACC,IAAQD,EAAK,OAAS,EACzBD,GAASC,EAAK,UAAU,EAAGA,EAAK,OAAS,CAAC,CAAC,EAE3CA,EAAK,OAAO,CAACC,EAAM,CAAC,CAE/B,CACA,IAAIC,GAAyB,yCACzBC,GAAc,KAAM,CACtB,OAAO,YAAYC,EAAa,CAC9B,OAAIA,IAAgB,KACX,IAETF,GAAuB,UAAY,EAC5BA,GAAuB,KAAKE,CAAW,EAChD,CACA,OAAO,gBAAgBA,EAAaC,EAAeC,EAAgB,CACjE,OAAOF,EAAY,QAAQF,GAAwB,CAACK,EAAOC,EAAOC,EAAcC,IAAY,CAC1F,IAAIC,EAAUL,EAAe,SAASE,GAASC,EAAc,EAAE,CAAC,EAChE,GAAIE,EAAS,CACX,IAAIC,EAASP,EAAc,UAAUM,EAAQ,MAAOA,EAAQ,GAAG,EACxD,KAAAC,EAAO,CAAC,IAAM,KACVA,IAAO,UAAU,CAAC,EAE7B,OAAQF,EAAS,CACf,IAAK,WACH,OAAOE,EAAO,cAChB,IAAK,SACH,OAAOA,EAAO,cAChB,QACS,OAAAA,CACX,MAEO,QAAAL,CACT,CACD,CACH,CACF,EACA,SAASM,GAAOpC,EAAGqC,EAAG,CACpB,OAAIrC,EAAIqC,EACC,GAELrC,EAAIqC,EACC,EAEF,CACT,CACA,SAASC,GAAUtC,EAAGqC,EAAG,CACnB,GAAArC,IAAM,MAAQqC,IAAM,KACf,SAET,GAAI,CAACrC,EACI,SAET,GAAI,CAACqC,EACI,SAET,IAAIE,EAAOvC,EAAE,OACTwC,EAAOH,EAAE,OACb,GAAIE,IAASC,EAAM,CACjB,QAAS,EAAI,EAAG,EAAID,EAAM,IAAK,CAC7B,IAAIE,EAAML,GAAOpC,EAAE,CAAC,EAAGqC,EAAE,CAAC,CAAC,EAC3B,GAAII,IAAQ,EACH,OAAAA,CAEX,CACO,QACT,CACA,OAAOF,EAAOC,CAChB,CACA,SAASE,GAAgBC,EAAK,CAUxB,MATA,qBAAkB,KAAKA,CAAG,GAG1B,kBAAkB,KAAKA,CAAG,GAG1B,kBAAkB,KAAKA,CAAG,GAG1B,kBAAkB,KAAKA,CAAG,EAIhC,CACA,SAASC,GAAuBC,EAAO,CAC9B,OAAAA,EAAM,QAAQ,0CAA2C,MAAM,CACxE,CACA,IAAIC,GAAW,KAAM,CACnB,YAAYC,EAAI,CACd,KAAK,GAAKA,EACL,eAA4B,GACnC,CACA,IAAI9B,EAAK,CACP,GAAI,KAAK,MAAM,IAAIA,CAAG,EACb,YAAK,MAAM,IAAIA,CAAG,EAErB,MAAA4B,EAAQ,KAAK,GAAG5B,CAAG,EACpB,kBAAM,IAAIA,EAAK4B,CAAK,EAClBA,CACT,CACF,EAGIG,GAAQ,KAAM,CAChB,YAAYC,EAAWC,EAAWC,EAAO,CACvC,KAAK,UAAYF,EACjB,KAAK,UAAYC,EACjB,KAAK,MAAQC,EACb,KAAK,iBAAmB,IAAIL,GACzBM,GAAc,KAAK,MAAM,MAAMA,CAAS,EAE7C,CACA,OAAO,mBAAmB/B,EAAQgC,EAAU,CAC1C,OAAO,KAAK,sBAAsBC,GAAWjC,CAAM,EAAGgC,CAAQ,CAChE,CACA,OAAO,sBAAsBhC,EAAQgC,EAAU,CACtC,OAAAE,GAAwBlC,EAAQgC,CAAQ,CACjD,CACA,aAAc,CACL,YAAK,UAAU,aACxB,CACA,aAAc,CACZ,OAAO,KAAK,SACd,CACA,MAAMG,EAAW,CACf,GAAIA,IAAc,KAChB,OAAO,KAAK,UAEd,MAAMJ,EAAYI,EAAU,UAEtBC,EADuB,KAAK,iBAAiB,IAAIL,CAAS,EACrB,KACxCM,GAAMC,GAA8BH,EAAU,OAAQE,EAAE,YAAY,GAEvE,OAAKD,EAGE,IAAIG,GACTH,EAAc,UACdA,EAAc,WACdA,EAAc,YALP,IAOX,CACF,EACII,GAAa,MAAMC,EAAY,CACjC,YAAYC,EAAQX,EAAW,CAC7B,KAAK,OAASW,EACd,KAAK,UAAYX,CACnB,CACA,OAAO,KAAK7B,EAAMyC,EAAY,CAC5B,UAAWC,KAAQD,EACVzC,EAAA,IAAIuC,GAAYvC,EAAM0C,CAAI,EAE5B,OAAA1C,CACT,CACA,OAAO,QAAQ2C,EAAU,CACvB,IAAI/B,EAAS,KACb,QAASrC,EAAI,EAAGA,EAAIoE,EAAS,OAAQpE,IACnCqC,EAAS,IAAI2B,GAAY3B,EAAQ+B,EAASpE,CAAC,CAAC,EAEvC,OAAAqC,CACT,CACA,KAAKiB,EAAW,CACP,WAAIU,GAAY,KAAMV,CAAS,CACxC,CACA,aAAc,CACZ,IAAIe,EAAO,KACX,MAAMhC,EAAS,GACf,KAAOgC,GACEhC,EAAA,KAAKgC,EAAK,SAAS,EAC1BA,EAAOA,EAAK,OAEd,OAAAhC,EAAO,QAAQ,EACRA,CACT,CACA,UAAW,CACT,OAAO,KAAK,cAAc,KAAK,GAAG,CACpC,CACA,QAAQiC,EAAO,CACb,OAAI,OAASA,EACJ,GAEL,KAAK,SAAW,KACX,GAEF,KAAK,OAAO,QAAQA,CAAK,CAClC,CACA,sBAAsBC,EAAM,CAC1B,MAAMlC,EAAS,GACf,IAAIgC,EAAO,KACJ,KAAAA,GAAQA,IAASE,GACflC,EAAA,KAAKgC,EAAK,SAAS,EAC1BA,EAAOA,EAAK,OAEd,OAAOA,IAASE,EAAOlC,EAAO,QAAY,QAC5C,CACF,EACA,SAASwB,GAA8BH,EAAWc,EAAc,CAC1D,GAAAA,EAAa,SAAW,EACnB,SAET,QAASvC,EAAQ,EAAGA,EAAQuC,EAAa,OAAQvC,IAAS,CACpD,IAAAwC,EAAeD,EAAavC,CAAK,EACjCyC,EAAiB,GACrB,GAAID,IAAiB,IAAK,CACpB,GAAAxC,IAAUuC,EAAa,OAAS,EAC3B,SAEMC,EAAAD,EAAa,EAAEvC,CAAK,EAClByC,EAAA,EACnB,CACA,KAAOhB,GACD,CAAAiB,GAAcjB,EAAU,UAAWe,CAAY,GADnC,CAIhB,GAAIC,EACK,SAEThB,EAAYA,EAAU,MACxB,CACA,GAAI,CAACA,EACI,SAETA,EAAYA,EAAU,MACxB,CACO,QACT,CACA,SAASiB,GAAcrB,EAAWmB,EAAc,CACvC,OAAAA,IAAiBnB,GAAaA,EAAU,WAAWmB,CAAY,GAAKnB,EAAUmB,EAAa,MAAM,IAAM,GAChH,CACA,IAAIX,GAAkB,KAAM,CAC1B,YAAYc,EAAWC,EAAcC,EAAc,CACjD,KAAK,UAAYF,EACjB,KAAK,aAAeC,EACpB,KAAK,aAAeC,CACtB,CACF,EACA,SAAStB,GAAWjC,EAAQ,CAC1B,GAAI,CAACA,EACH,MAAO,GAEL,IAACA,EAAO,UAAY,CAAC,MAAM,QAAQA,EAAO,QAAQ,EACpD,MAAO,GAET,IAAIwD,EAAWxD,EAAO,SAClBc,EAAS,GAAI2C,EAAY,EAC7B,QAAS,EAAI,EAAG/D,EAAM8D,EAAS,OAAQ,EAAI9D,EAAK,IAAK,CAC/C,IAAAgE,EAAQF,EAAS,CAAC,EAClB,IAACE,EAAM,SACT,SAEE,IAAAC,EACA,UAAOD,EAAM,OAAU,SAAU,CACnC,IAAIE,EAASF,EAAM,MACVE,IAAO,QAAQ,QAAS,EAAE,EAC1BA,IAAO,QAAQ,QAAS,EAAE,EAC1BD,EAAAC,EAAO,MAAM,GAAG,CAChB,YAAM,QAAQF,EAAM,KAAK,EAClCC,EAASD,EAAM,MAEfC,EAAS,CAAC,EAAE,EAEd,IAAIN,EAAY,GAChB,GAAI,OAAOK,EAAM,SAAS,WAAc,SAAU,CACpCL,EAAA,EACZ,IAAIR,EAAWa,EAAM,SAAS,UAAU,MAAM,GAAG,EACjD,QAASG,EAAI,EAAGC,EAAOjB,EAAS,OAAQgB,EAAIC,EAAMD,IAEhD,OADchB,EAASgB,CAAC,EACP,CACf,IAAK,SACHR,EAAYA,EAAY,EACxB,MACF,IAAK,OACHA,EAAYA,EAAY,EACxB,MACF,IAAK,YACHA,EAAYA,EAAY,EACxB,MACF,IAAK,gBACHA,EAAYA,EAAY,EACxB,KACJ,CAEJ,CACA,IAAIU,EAAa,KACb,OAAOL,EAAM,SAAS,YAAe,UAAYrC,GAAgBqC,EAAM,SAAS,UAAU,IAC5FK,EAAaL,EAAM,SAAS,YAE9B,IAAIM,EAAa,KACb,OAAON,EAAM,SAAS,YAAe,UAAYrC,GAAgBqC,EAAM,SAAS,UAAU,IAC5FM,EAAaN,EAAM,SAAS,YAE9B,QAASG,EAAI,EAAGC,EAAOH,EAAO,OAAQE,EAAIC,EAAMD,IAAK,CAE/C,IAAAhB,EADSc,EAAOE,CAAC,EAAE,KAAK,EACN,MAAM,GAAG,EAC3BI,EAAQpB,EAASA,EAAS,OAAS,CAAC,EACpCI,EAAe,KACfJ,EAAS,OAAS,IACpBI,EAAeJ,EAAS,MAAM,EAAGA,EAAS,OAAS,CAAC,EACpDI,EAAa,QAAQ,GAEhBnC,EAAA2C,GAAW,EAAI,IAAIS,GACxBD,EACAhB,EACA,EACAI,EACAU,EACAC,CAAA,CAEJ,CACF,CACO,OAAAlD,CACT,CACA,IAAIoD,GAAkB,KAAM,CAC1B,YAAYD,EAAOhB,EAAcvC,EAAO2C,EAAWU,EAAYC,EAAY,CACzE,KAAK,MAAQC,EACb,KAAK,aAAehB,EACpB,KAAK,MAAQvC,EACb,KAAK,UAAY2C,EACjB,KAAK,WAAaU,EAClB,KAAK,WAAaC,CACpB,CACF,EAUA,SAAS9B,GAAwBiC,EAAkBvC,EAAW,CAC3CuC,EAAA,KAAK,CAAC,EAAGnD,IAAM,CAC9B,IAAIvB,EAAIsB,GAAO,EAAE,MAAOC,EAAE,KAAK,EAK/B,OAJIvB,IAAM,IAGVA,EAAIwB,GAAU,EAAE,aAAcD,EAAE,YAAY,EACxCvB,IAAM,GACDA,EAEF,EAAE,MAAQuB,EAAE,MACpB,EACD,IAAIoD,EAAmB,EACnBC,EAAoB,UACpBC,EAAoB,UACxB,KAAOH,EAAiB,QAAU,GAAKA,EAAiB,CAAC,EAAE,QAAU,IAAI,CACnE,IAAAI,EAAmBJ,EAAiB,QACpCI,EAAiB,YAAc,KACjCH,EAAmBG,EAAiB,WAElCA,EAAiB,aAAe,OAClCF,EAAoBE,EAAiB,YAEnCA,EAAiB,aAAe,OAClCD,EAAoBC,EAAiB,WAEzC,CACI,IAAAvC,EAAW,IAAIwC,GAAS5C,CAAS,EACjC6C,EAAW,IAAIlC,GAAgB6B,EAAkBpC,EAAS,MAAMqC,CAAiB,EAAGrC,EAAS,MAAMsC,CAAiB,CAAC,EACrHI,EAAO,IAAIC,GAAiB,IAAIC,GAAqB,EAAG,KAAM,GAAiB,EAAG,CAAC,EAAG,CAAE,GAC5F,QAASnG,EAAI,EAAGiB,EAAMyE,EAAiB,OAAQ1F,EAAIiB,EAAKjB,IAAK,CACvD,IAAAoG,EAAOV,EAAiB1F,CAAC,EAC7BiG,EAAK,OAAO,EAAGG,EAAK,MAAOA,EAAK,aAAcA,EAAK,UAAW7C,EAAS,MAAM6C,EAAK,UAAU,EAAG7C,EAAS,MAAM6C,EAAK,UAAU,CAAC,CAChI,CACA,OAAO,IAAIlD,GAAMK,EAAUyC,EAAUC,CAAI,CAC3C,CACA,IAAIF,GAAW,KAAM,CACnB,YAAY5C,EAAW,CAIjB,GAHJ,KAAK,aAAe,EACpB,KAAK,UAAY,GACZ,eAAmC,cAAO,IAAI,EAC/C,MAAM,QAAQA,CAAS,EAAG,CAC5B,KAAK,UAAY,GACjB,QAASnD,EAAI,EAAGiB,EAAMkC,EAAU,OAAQnD,EAAIiB,EAAKjB,IAC/C,KAAK,UAAUmD,EAAUnD,CAAC,CAAC,EAAIA,EAC/B,KAAK,UAAUA,CAAC,EAAImD,EAAUnD,CAAC,CACjC,MAEA,KAAK,UAAY,EAErB,CACA,MAAMqG,EAAO,CACX,GAAIA,IAAU,KACL,SAETA,EAAQA,EAAM,cACV,IAAAtD,EAAQ,KAAK,UAAUsD,CAAK,EAChC,GAAItD,EACK,OAAAA,EAET,GAAI,KAAK,UACP,MAAM,IAAI,MAAM,gCAAgCsD,CAAK,EAAE,EAEzD,OAAAtD,EAAQ,EAAE,KAAK,aACV,eAAUsD,CAAK,EAAItD,EACnB,eAAUA,CAAK,EAAIsD,EACjBtD,CACT,CACA,aAAc,CACL,YAAK,UAAU,MAAM,CAAC,CAC/B,CACF,EACIuD,GAAoB,OAAO,OAAO,EAAE,EACpCH,GAAuB,MAAMI,EAAsB,CACrD,YAAYC,EAAYhC,EAAcI,EAAWU,EAAYC,EAAY,CACvE,KAAK,WAAaiB,EAClB,KAAK,aAAehC,GAAgB8B,GACpC,KAAK,UAAY1B,EACjB,KAAK,WAAaU,EAClB,KAAK,WAAaC,CACpB,CACA,OAAQ,CACC,WAAIgB,GAAsB,KAAK,WAAY,KAAK,aAAc,KAAK,UAAW,KAAK,WAAY,KAAK,UAAU,CACvH,CACA,OAAO,SAASxF,EAAK,CACnB,IAAIC,EAAI,GACR,QAAShB,EAAI,EAAGiB,EAAMF,EAAI,OAAQf,EAAIiB,EAAKjB,IACzCgB,EAAEhB,CAAC,EAAIe,EAAIf,CAAC,EAAE,MAAM,EAEf,OAAAgB,CACT,CACA,gBAAgBwF,EAAY5B,EAAWU,EAAYC,EAAY,CACzD,KAAK,WAAaiB,EACpB,QAAQ,IAAI,sBAAsB,EAElC,KAAK,WAAaA,EAEhB5B,IAAc,KAChB,KAAK,UAAYA,GAEfU,IAAe,IACjB,KAAK,WAAaA,GAEhBC,IAAe,IACjB,KAAK,WAAaA,EAEtB,CACF,EACIW,GAAmB,MAAMO,EAAkB,CAC7C,YAAYC,EAAWC,EAAwB,GAAIC,EAAY,GAAI,CACjE,KAAK,UAAYF,EACjB,KAAK,UAAYE,EACjB,KAAK,uBAAyBD,CAChC,CACA,OAAO,kBAAkBzG,EAAGqC,EAAG,CACzB,GAAArC,EAAE,aAAeqC,EAAE,WACd,OAAAA,EAAE,WAAarC,EAAE,WAE1B,IAAI2G,EAAe,EACfC,EAAe,EACnB,KACM5G,EAAE,aAAa2G,CAAY,IAAM,KACnCA,IAEEtE,EAAE,aAAauE,CAAY,IAAM,KACnCA,IAEE,EAAAD,GAAgB3G,EAAE,aAAa,QAAU4G,GAAgBvE,EAAE,aAAa,SAPjE,CAUL,MAAAwE,EAAwBxE,EAAE,aAAauE,CAAY,EAAE,OAAS5G,EAAE,aAAa2G,CAAY,EAAE,OACjG,GAAIE,IAA0B,EACrB,OAAAA,EAETF,IACAC,GACF,CACA,OAAOvE,EAAE,aAAa,OAASrC,EAAE,aAAa,MAChD,CACA,MAAMsF,EAAO,CACX,GAAIA,IAAU,GAAI,CACZ,IAAAwB,EAAWxB,EAAM,QAAQ,GAAG,EAC5ByB,EACAC,EAQJ,GAPIF,IAAa,IACRC,EAAAzB,EACA0B,EAAA,KAEAD,EAAAzB,EAAM,UAAU,EAAGwB,CAAQ,EAC3BE,EAAA1B,EAAM,UAAUwB,EAAW,CAAC,GAEjC,KAAK,UAAU,eAAeC,CAAI,EACpC,OAAO,KAAK,UAAUA,CAAI,EAAE,MAAMC,CAAI,CAE1C,CACA,MAAMC,EAAQ,KAAK,uBAAuB,OAAO,KAAK,SAAS,EACzD,OAAAA,EAAA,KAAKV,GAAkB,iBAAiB,EACvCU,CACT,CACA,OAAOX,EAAYhB,EAAOhB,EAAcI,EAAWU,EAAYC,EAAY,CACzE,GAAIC,IAAU,GAAI,CAChB,KAAK,cAAcgB,EAAYhC,EAAcI,EAAWU,EAAYC,CAAU,EAC9E,MACF,CACI,IAAAyB,EAAWxB,EAAM,QAAQ,GAAG,EAC5ByB,EACAC,EACAF,IAAa,IACRC,EAAAzB,EACA0B,EAAA,KAEAD,EAAAzB,EAAM,UAAU,EAAGwB,CAAQ,EAC3BE,EAAA1B,EAAM,UAAUwB,EAAW,CAAC,GAEjC,IAAAI,EACA,KAAK,UAAU,eAAeH,CAAI,EAC5BG,EAAA,KAAK,UAAUH,CAAI,GAEnBG,EAAA,IAAIX,GAAkB,KAAK,UAAU,QAASN,GAAqB,SAAS,KAAK,sBAAsB,CAAC,EAC3G,eAAUc,CAAI,EAAIG,GAEzBA,EAAM,OAAOZ,EAAa,EAAGU,EAAM1C,EAAcI,EAAWU,EAAYC,CAAU,CACpF,CACA,cAAciB,EAAYhC,EAAcI,EAAWU,EAAYC,EAAY,CACzE,GAAIf,IAAiB,KAAM,CACzB,KAAK,UAAU,gBAAgBgC,EAAY5B,EAAWU,EAAYC,CAAU,EAC5E,MACF,CACS,QAAAvF,EAAI,EAAGiB,EAAM,KAAK,uBAAuB,OAAQjB,EAAIiB,EAAKjB,IAAK,CAClE,IAAAoG,EAAO,KAAK,uBAAuBpG,CAAC,EACxC,GAAIwC,GAAU4D,EAAK,aAAc5B,CAAY,IAAM,EAAG,CACpD4B,EAAK,gBAAgBI,EAAY5B,EAAWU,EAAYC,CAAU,EAClE,MACF,CACF,CACIX,IAAc,KAChBA,EAAY,KAAK,UAAU,WAEzBU,IAAe,IACjBA,EAAa,KAAK,UAAU,YAE1BC,IAAe,IACjBA,EAAa,KAAK,UAAU,YAEzB,4BAAuB,KAAK,IAAIY,GAAqBK,EAAYhC,EAAcI,EAAWU,EAAYC,CAAU,CAAC,CACxH,CACF,EAGI8B,EAAuB,MAAMC,CAAsB,CACrD,OAAO,YAAYC,EAAwB,CACzC,OAAOA,EAAuB,SAAS,CAAC,EAAE,SAAS,GAAI,GAAG,CAC5D,CACA,OAAO,MAAMA,EAAwB,CAC7B,MAAAC,EAAaF,EAAsB,cAAcC,CAAsB,EACvEE,EAAYH,EAAsB,aAAaC,CAAsB,EACrE3C,EAAY0C,EAAsB,aAAaC,CAAsB,EACrEjC,EAAagC,EAAsB,cAAcC,CAAsB,EACvEhC,EAAa+B,EAAsB,cAAcC,CAAsB,EAC7E,QAAQ,IAAI,CACV,WAAAC,EACA,UAAAC,EACA,UAAA7C,EACA,WAAAU,EACA,WAAAC,CAAA,CACD,CACH,CACA,OAAO,cAAcgC,EAAwB,CAC3C,OAAQA,EAAyB,OAA+B,CAClE,CACA,OAAO,aAAaA,EAAwB,CAC1C,OAAQA,EAAyB,OAA+B,CAClE,CACA,OAAO,yBAAyBA,EAAwB,CACtD,OAAQA,EAAyB,QAAuC,CAC1E,CACA,OAAO,aAAaA,EAAwB,CAC1C,OAAQA,EAAyB,SAAiC,EACpE,CACA,OAAO,cAAcA,EAAwB,CAC3C,OAAQA,EAAyB,YAAoC,EACvE,CACA,OAAO,cAAcA,EAAwB,CAC3C,OAAQA,EAAyB,cAAsC,EACzE,CAKA,OAAO,IAAIA,EAAwBC,EAAYC,EAAWC,EAA0B9C,EAAWU,EAAYC,EAAY,CACjH,IAAAoC,EAAcL,EAAsB,cAAcC,CAAsB,EACxEK,EAAaN,EAAsB,aAAaC,CAAsB,EACtEM,EAA+BP,EAAsB,yBAAyBC,CAAsB,EAAI,EAAI,EAC5GO,EAAaR,EAAsB,aAAaC,CAAsB,EACtEQ,EAAcT,EAAsB,cAAcC,CAAsB,EACxES,EAAcV,EAAsB,cAAcC,CAAsB,EAC5E,OAAIC,IAAe,IACHG,EAAAH,GAEZC,IAAc,IAChBG,EAAmCH,GAEjCC,IAA6B,OAC/BG,EAA+BH,EAA2B,EAAI,GAE5D9C,IAAc,KACHkD,EAAAlD,GAEXU,IAAe,IACHyC,EAAAzC,GAEZC,IAAe,IACHyC,EAAAzC,IAERoC,GAAe,EAA4BC,GAAc,EAA4BC,GAAgC,GAAoCC,GAAc,GAA6BC,GAAe,GAA6BC,GAAe,MAAgC,CACzS,CACF,EASA,SAASC,GAAeC,EAAUC,EAAa,CAC7C,MAAMC,EAAU,GACVC,EAAYC,GAAaJ,CAAQ,EACnC,IAAAK,EAAQF,EAAU,OACtB,KAAOE,IAAU,MAAM,CACrB,IAAIC,EAAW,EACf,GAAID,EAAM,SAAW,GAAKA,EAAM,OAAO,CAAC,IAAM,IAAK,CACzC,OAAAA,EAAM,OAAO,CAAC,EAAG,CACvB,IAAK,IACQC,EAAA,EACX,MACF,IAAK,IACQA,EAAA,GACX,MACF,QACU,YAAI,oBAAoBD,CAAK,oBAAoB,CAC7D,CACAA,EAAQF,EAAU,MACpB,CACA,IAAII,EAAUC,IAEd,GADAN,EAAQ,KAAK,CAAE,QAAAK,EAAS,SAAAD,CAAU,GAC9BD,IAAU,IACZ,MAEFA,EAAQF,EAAU,MACpB,CACO,OAAAD,EACP,SAASO,GAAe,CACtB,GAAIJ,IAAU,IAAK,CACjBA,EAAQF,EAAU,OAClB,MAAMO,EAAqBD,IAC3B,OAAQE,GAAiB,CAAC,CAACD,GAAsB,CAACA,EAAmBC,CAAY,CACnF,CACA,GAAIN,IAAU,IAAK,CACjBA,EAAQF,EAAU,OAClB,MAAMS,EAAsBC,IAC5B,OAAIR,IAAU,MACZA,EAAQF,EAAU,QAEbS,CACT,CACI,GAAAE,GAAaT,CAAK,EAAG,CACvB,MAAMU,EAAc,GACjB,GACDA,EAAY,KAAKV,CAAK,EACtBA,EAAQF,EAAU,aACXW,GAAaT,CAAK,GAC3B,OAAQM,GAAiBV,EAAYc,EAAaJ,CAAY,CAChE,CACO,WACT,CACA,SAASH,GAAmB,CAC1B,MAAMQ,EAAW,GACjB,IAAIT,EAAUE,IACd,KAAOF,GACLS,EAAS,KAAKT,CAAO,EACrBA,EAAUE,EAAa,EAElB,OAACE,GAAiBK,EAAS,MAAOC,GAAaA,EAASN,CAAY,CAAC,CAC9E,CACA,SAASE,GAAuB,CAC9B,MAAMG,EAAW,GACjB,IAAIT,EAAUC,IACd,KAAOD,IACLS,EAAS,KAAKT,CAAO,EACjBF,IAAU,KAAOA,IAAU,MAFjB,CAGT,GACDA,EAAQF,EAAU,aACXE,IAAU,KAAOA,IAAU,KAItCE,EAAUC,EAAiB,CAC7B,CACO,OAACG,GAAiBK,EAAS,KAAMC,GAAaA,EAASN,CAAY,CAAC,CAC7E,CACF,CACA,SAASG,GAAaT,EAAO,CAC3B,MAAO,CAAC,CAACA,GAAS,CAAC,CAACA,EAAM,MAAM,UAAU,CAC5C,CACA,SAASD,GAAac,EAAO,CAC3B,IAAIC,EAAQ,0CACRrH,EAAQqH,EAAM,KAAKD,CAAK,EACrB,OACL,KAAM,IAAM,CACV,GAAI,CAACpH,EACI,YAEH,MAAAW,EAAMX,EAAM,CAAC,EACX,OAAAA,EAAAqH,EAAM,KAAKD,CAAK,EACjBzG,CACT,EAEJ,CAWA,SAAS2G,GAAkBC,EAAK,CAC1B,OAAOA,EAAI,SAAY,YACzBA,EAAI,QAAQ,CAEhB,CAGA,IAAIC,EAAwB,KAAM,CAChC,YAAYlG,EAAW,CACrB,KAAK,UAAYA,CACnB,CACA,OAAQ,CACN,OAAO,KAAK,SACd,CACF,EACImG,GAAkC,KAAM,CAC1C,YAAYnG,EAAWoG,EAAU,CAC/B,KAAK,UAAYpG,EACjB,KAAK,SAAWoG,CAClB,CACA,OAAQ,CACN,MAAO,GAAG,KAAK,SAAS,IAAI,KAAK,QAAQ,EAC3C,CACF,EACIC,GAA6B,KAAM,CACrC,aAAc,CACZ,KAAK,YAAc,GACd,4BAAyC,IACzC,qBAAkC,GACzC,CACA,IAAI,YAAa,CACf,OAAO,KAAK,WACd,CACA,IAAIC,EAAW,CACP,MAAAzI,EAAMyI,EAAU,QAClB,KAAK,mBAAmB,IAAIzI,CAAG,IAG9B,wBAAmB,IAAIA,CAAG,EAC1B,iBAAY,KAAKyI,CAAS,EACjC,CACF,EACIC,GAA2B,KAAM,CACnC,YAAYC,EAAMC,EAAkB,CAClC,KAAK,KAAOD,EACZ,KAAK,iBAAmBC,EACnB,+BAA4C,IAC5C,kCAA+C,IAC/C,2BAAsB,IAAI,KAAK,gBAAgB,EACpD,KAAK,EAAI,CAAC,IAAIP,EAAsB,KAAK,gBAAgB,CAAC,CAC5D,CACA,cAAe,CACb,MAAMQ,EAAI,KAAK,EACf,KAAK,EAAI,GACH,MAAAC,EAAO,IAAIN,GACjB,UAAWO,KAAOF,EAChBG,GAA6BD,EAAK,KAAK,iBAAkB,KAAK,KAAMD,CAAI,EAE/D,UAAAC,KAAOD,EAAK,WACrB,GAAIC,aAAeV,EAAuB,CACxC,GAAI,KAAK,sBAAsB,IAAIU,EAAI,SAAS,EAC9C,SAEG,2BAAsB,IAAIA,EAAI,SAAS,EACvC,OAAE,KAAKA,CAAG,MACV,CAIL,GAHI,KAAK,sBAAsB,IAAIA,EAAI,SAAS,GAG5C,KAAK,yBAAyB,IAAIA,EAAI,MAAO,GAC/C,SAEF,KAAK,yBAAyB,IAAIA,EAAI,MAAO,GACxC,OAAE,KAAKA,CAAG,CACjB,CAEJ,CACF,EACA,SAASC,GAA6BP,EAAWQ,EAAsBN,EAAMzH,EAAQ,CACnF,MAAMgI,EAAcP,EAAK,OAAOF,EAAU,SAAS,EACnD,GAAI,CAACS,EAAa,CACZ,GAAAT,EAAU,YAAcQ,EAC1B,MAAM,IAAI,MAAM,4BAA4BA,CAAoB,GAAG,EAErE,MACF,CACM,MAAAE,EAAcR,EAAK,OAAOM,CAAoB,EAChDR,aAAqBJ,EACvBe,GAAwC,CAAE,YAAAD,EAAa,YAAAD,CAAY,EAAGhI,CAAM,EAE5EmI,GACEZ,EAAU,SACV,CAAE,YAAAU,EAAa,YAAAD,EAAa,WAAYA,EAAY,UAAW,EAC/DhI,CAAA,EAGJ,MAAMoI,EAAaX,EAAK,WAAWF,EAAU,SAAS,EACtD,GAAIa,EACF,UAAWC,KAAaD,EACtBpI,EAAO,IAAI,IAAImH,EAAsBkB,CAAS,CAAC,CAGrD,CACA,SAASF,GAAkDd,EAAUiB,EAAStI,EAAQ,CACpF,GAAIsI,EAAQ,YAAcA,EAAQ,WAAWjB,CAAQ,EAAG,CAChD,MAAAtD,EAAOuE,EAAQ,WAAWjB,CAAQ,EACxCkB,GAAiC,CAACxE,CAAI,EAAGuE,EAAStI,CAAM,CAC1D,CACF,CACA,SAASkI,GAAwCI,EAAStI,EAAQ,CAC5DsI,EAAQ,YAAY,UAAY,MAAM,QAAQA,EAAQ,YAAY,QAAQ,GAC5EC,GACED,EAAQ,YAAY,SACpB,CAAE,GAAGA,EAAS,WAAYA,EAAQ,YAAY,UAAW,EACzDtI,CAAA,EAGAsI,EAAQ,YAAY,YACtBC,GACE,OAAO,OAAOD,EAAQ,YAAY,UAAU,EAC5C,CAAE,GAAGA,EAAS,WAAYA,EAAQ,YAAY,UAAW,EACzDtI,CAAA,CAGN,CACA,SAASuI,GAAiCzD,EAAOwD,EAAStI,EAAQ,CAChE,UAAW+D,KAAQe,EAAO,CACxB,GAAI9E,EAAO,YAAY,IAAI+D,CAAI,EAC7B,SAEK/D,EAAA,YAAY,IAAI+D,CAAI,EACrB,MAAAyE,EAAoBzE,EAAK,WAAahF,GAAa,CAAI,EAAAuJ,EAAQ,WAAYvE,EAAK,UAAU,EAAIuE,EAAQ,WACxG,MAAM,QAAQvE,EAAK,QAAQ,GACIwE,GAAAxE,EAAK,SAAU,CAAE,GAAGuE,EAAS,WAAYE,GAAqBxI,CAAM,EAEvG,MAAMyI,EAAU1E,EAAK,QACrB,GAAI,CAAC0E,EACH,SAEI,MAAAlB,EAAYmB,GAAaD,CAAO,EACtC,OAAQlB,EAAU,KAAM,CACtB,IAAK,GACHW,GAAwC,CAAE,GAAGI,EAAS,YAAaA,EAAQ,aAAetI,CAAM,EAChG,MACF,IAAK,GACHkI,GAAwCI,EAAStI,CAAM,EACvD,MACF,IAAK,GAC+CmI,GAAAZ,EAAU,SAAU,CAAE,GAAGe,EAAS,WAAYE,GAAqBxI,CAAM,EAC3H,MACF,IAAK,GACL,IAAK,GACH,MAAMgI,EAAcT,EAAU,YAAce,EAAQ,YAAY,UAAYA,EAAQ,YAAcf,EAAU,YAAce,EAAQ,YAAY,UAAYA,EAAQ,YAAc,OAChL,GAAIN,EAAa,CACf,MAAMW,EAAa,CAAE,YAAaL,EAAQ,YAAa,YAAAN,EAAa,WAAYQ,GAC5EjB,EAAU,OAAS,EAC6BY,GAAAZ,EAAU,SAAUoB,EAAY3I,CAAM,EAExFkI,GAAwCS,EAAY3I,CAAM,CAC5D,MAEIuH,EAAU,OAAS,EACrBvH,EAAO,IAAI,IAAIoH,GAAgCG,EAAU,UAAWA,EAAU,QAAQ,CAAC,EAEvFvH,EAAO,IAAI,IAAImH,EAAsBI,EAAU,SAAS,CAAC,EAG7D,KACJ,CACF,CACF,CACA,IAAIqB,GAAgB,KAAM,CACxB,aAAc,CACZ,KAAK,KAAO,CACd,CACF,EACIC,GAAgB,KAAM,CACxB,aAAc,CACZ,KAAK,KAAO,CACd,CACF,EACIC,GAAoB,KAAM,CAC5B,YAAYzB,EAAU,CACpB,KAAK,SAAWA,EAChB,KAAK,KAAO,CACd,CACF,EACI0B,GAAoB,KAAM,CAC5B,YAAY9H,EAAW,CACrB,KAAK,UAAYA,EACjB,KAAK,KAAO,CACd,CACF,EACI+H,GAA8B,KAAM,CACtC,YAAY/H,EAAWoG,EAAU,CAC/B,KAAK,UAAYpG,EACjB,KAAK,SAAWoG,EAChB,KAAK,KAAO,CACd,CACF,EACA,SAASqB,GAAaD,EAAS,CAC7B,GAAIA,IAAY,QACd,OAAO,IAAIG,GACb,GAAWH,IAAY,QACrB,OAAO,IAAII,GAEP,MAAAI,EAAeR,EAAQ,QAAQ,GAAG,EACxC,GAAIQ,IAAiB,GACZ,WAAIF,GAAkBN,CAAO,EACtC,GAAWQ,IAAiB,EAC1B,OAAO,IAAIH,GAAkBL,EAAQ,UAAU,CAAC,CAAC,EAC5C,CACL,MAAMxH,EAAYwH,EAAQ,UAAU,EAAGQ,CAAY,EAC7C5B,EAAWoB,EAAQ,UAAUQ,EAAe,CAAC,EAC5C,WAAID,GAA4B/H,EAAWoG,CAAQ,CAC5D,CACF,CAGA,IAAI6B,GAAsB,UACtBC,GAAuB,WAEvBC,GAAY,GACZC,GAAc,GAOlB,IAAIC,GAAO,KAAM,CACf,YAAYC,EAAWC,EAAI1H,EAAM2H,EAAa,CAC5C,KAAK,UAAYF,EACjB,KAAK,GAAKC,EACV,KAAK,MAAQ1H,GAAQ,KACrB,KAAK,iBAAmBvC,GAAY,YAAY,KAAK,KAAK,EAC1D,KAAK,aAAekK,GAAe,KACnC,KAAK,wBAA0BlK,GAAY,YAAY,KAAK,YAAY,CAC1E,CACA,IAAI,WAAY,CACd,MAAMmK,EAAW,KAAK,UAAY,GAAGvK,GAAS,KAAK,UAAU,QAAQ,CAAC,IAAI,KAAK,UAAU,IAAI,GAAK,UAC3F,SAAG,KAAK,YAAY,IAAI,IAAI,KAAK,EAAE,MAAMuK,CAAQ,EAC1D,CACA,QAAQC,EAAUjK,EAAgB,CAC5B,OAAC,KAAK,kBAAoB,KAAK,QAAU,MAAQiK,IAAa,MAAQjK,IAAmB,KACpF,KAAK,MAEPH,GAAY,gBAAgB,KAAK,MAAOoK,EAAUjK,CAAc,CACzE,CACA,eAAeiK,EAAUjK,EAAgB,CACvC,MAAI,CAAC,KAAK,yBAA2B,KAAK,eAAiB,KAClD,KAAK,aAEPH,GAAY,gBAAgB,KAAK,aAAcoK,EAAUjK,CAAc,CAChF,CACF,EACIkK,GAAc,cAAcN,EAAK,CACnC,YAAYC,EAAWC,EAAI1H,EAAM2H,EAAaI,EAA8B,CACpE,MAAAN,EAAWC,EAAI1H,EAAM2H,CAAW,EACtC,KAAK,6BAA+BI,CACtC,CACA,SAAU,CACV,CACA,gBAAgBC,EAASC,EAAK,CACtB,UAAI,MAAM,gBAAgB,CAClC,CACA,QAAQD,EAASE,EAAgB,CACzB,UAAI,MAAM,gBAAgB,CAClC,CACA,UAAUF,EAASE,EAAgBC,EAAQC,EAAQ,CAC3C,UAAI,MAAM,gBAAgB,CAClC,CACF,EACIC,GAAY,cAAcb,EAAK,CACjC,YAAYC,EAAWC,EAAI1H,EAAMnC,EAAOyK,EAAU,CAC1C,MAAAb,EAAWC,EAAI1H,EAAM,IAAI,EAC/B,KAAK,OAAS,IAAIuI,EAAa1K,EAAO,KAAK,EAAE,EAC7C,KAAK,SAAWyK,EAChB,KAAK,wBAA0B,IACjC,CACA,SAAU,CACJ,KAAK,0BACP,KAAK,wBAAwB,UAC7B,KAAK,wBAA0B,KAEnC,CACA,IAAI,kBAAmB,CACd,SAAG,KAAK,OAAO,MAAM,EAC9B,CACA,gBAAgBN,EAASC,EAAK,CACxBA,EAAA,KAAK,KAAK,MAAM,CACtB,CACA,QAAQD,EAASE,EAAgB,CAC/B,OAAO,KAAK,2BAA2BF,CAAO,EAAE,QAAQA,CAAO,CACjE,CACA,UAAUA,EAASE,EAAgBC,EAAQC,EAAQ,CACjD,OAAO,KAAK,2BAA2BJ,CAAO,EAAE,UAAUA,EAASG,EAAQC,CAAM,CACnF,CACA,2BAA2BJ,EAAS,CAC9B,OAAC,KAAK,0BACH,6BAA0B,IAAIQ,GAC9B,qBAAgBR,EAAS,KAAK,uBAAuB,GAErD,KAAK,uBACd,CACF,EACIS,GAAkB,cAAcjB,EAAK,CACvC,YAAYC,EAAWC,EAAI1H,EAAM2H,EAAae,EAAU,CAChD,MAAAjB,EAAWC,EAAI1H,EAAM2H,CAAW,EACtC,KAAK,SAAWe,EAAS,SACzB,KAAK,mBAAqBA,EAAS,mBACnC,KAAK,wBAA0B,IACjC,CACA,SAAU,CACJ,KAAK,0BACP,KAAK,wBAAwB,UAC7B,KAAK,wBAA0B,KAEnC,CACA,gBAAgBV,EAASC,EAAK,CACjB,UAAAU,KAAW,KAAK,SACZX,EAAQ,QAAQW,CAAO,EAC/B,gBAAgBX,EAASC,CAAG,CAErC,CACA,QAAQD,EAASE,EAAgB,CAC/B,OAAO,KAAK,2BAA2BF,CAAO,EAAE,QAAQA,CAAO,CACjE,CACA,UAAUA,EAASE,EAAgBC,EAAQC,EAAQ,CACjD,OAAO,KAAK,2BAA2BJ,CAAO,EAAE,UAAUA,EAASG,EAAQC,CAAM,CACnF,CACA,2BAA2BJ,EAAS,CAC9B,OAAC,KAAK,0BACH,6BAA0B,IAAIQ,GAC9B,qBAAgBR,EAAS,KAAK,uBAAuB,GAErD,KAAK,uBACd,CACF,EACIY,GAAe,cAAcpB,EAAK,CACpC,YAAYC,EAAWC,EAAI1H,EAAM2H,EAAakB,EAAOC,EAAeC,EAAKC,EAAaC,EAAqBP,EAAU,CAC7G,MAAAjB,EAAWC,EAAI1H,EAAM2H,CAAW,EACtC,KAAK,OAAS,IAAIY,EAAaM,EAAO,KAAK,EAAE,EAC7C,KAAK,cAAgBC,EACrB,KAAK,KAAO,IAAIP,EAAaQ,GAAY,IAAU,EAAE,EAChD,0BAAuB,KAAK,KAAK,kBACtC,KAAK,YAAcC,EACnB,KAAK,oBAAsBC,GAAuB,GAClD,KAAK,SAAWP,EAAS,SACzB,KAAK,mBAAqBA,EAAS,mBACnC,KAAK,wBAA0B,IACjC,CACA,SAAU,CACJ,KAAK,0BACP,KAAK,wBAAwB,UAC7B,KAAK,wBAA0B,KAEnC,CACA,IAAI,kBAAmB,CACd,SAAG,KAAK,OAAO,MAAM,EAC9B,CACA,IAAI,gBAAiB,CACZ,SAAG,KAAK,KAAK,MAAM,EAC5B,CACA,iCAAiCb,EAAUjK,EAAgB,CACzD,OAAO,KAAK,KAAK,sBAAsBiK,EAAUjK,CAAc,CACjE,CACA,gBAAgBoK,EAASC,EAAK,CACxBA,EAAA,KAAK,KAAK,MAAM,CACtB,CACA,QAAQD,EAASE,EAAgB,CAC/B,OAAO,KAAK,2BAA2BF,EAASE,CAAc,EAAE,QAAQF,CAAO,CACjF,CACA,UAAUA,EAASE,EAAgBC,EAAQC,EAAQ,CAC1C,YAAK,2BAA2BJ,EAASE,CAAc,EAAE,UAAUF,EAASG,EAAQC,CAAM,CACnG,CACA,2BAA2BJ,EAASE,EAAgB,CAC9C,IAAC,KAAK,wBAAyB,CAC5B,6BAA0B,IAAIM,GACxB,UAAAG,KAAW,KAAK,SACZX,EAAQ,QAAQW,CAAO,EAC/B,gBAAgBX,EAAS,KAAK,uBAAuB,EAExD,KAAK,oBACF,6BAAwB,KAAK,KAAK,KAAK,kBAAoB,KAAK,KAAK,QAAU,KAAK,IAAI,EAExF,6BAAwB,QAAQ,KAAK,KAAK,kBAAoB,KAAK,KAAK,QAAU,KAAK,IAAI,CAEpG,CACI,YAAK,KAAK,oBACR,KAAK,oBACP,KAAK,wBAAwB,UAAU,KAAK,wBAAwB,OAAO,EAAI,EAAGE,CAAc,EAE3F,6BAAwB,UAAU,EAAGA,CAAc,GAGrD,KAAK,uBACd,CACF,EACIgB,GAAiB,cAAc1B,EAAK,CACtC,YAAYC,EAAWC,EAAI1H,EAAM2H,EAAakB,EAAOC,EAAeK,EAAQC,EAAeV,EAAU,CAC7F,MAAAjB,EAAWC,EAAI1H,EAAM2H,CAAW,EACtC,KAAK,OAAS,IAAIY,EAAaM,EAAO,KAAK,EAAE,EAC7C,KAAK,cAAgBC,EACrB,KAAK,cAAgBM,EACrB,KAAK,OAAS,IAAIb,EAAaY,EAAQ5B,EAAW,EAC7C,4BAAyB,KAAK,OAAO,kBAC1C,KAAK,SAAWmB,EAAS,SACzB,KAAK,mBAAqBA,EAAS,mBACnC,KAAK,wBAA0B,KAC/B,KAAK,6BAA+B,IACtC,CACA,SAAU,CACJ,KAAK,0BACP,KAAK,wBAAwB,UAC7B,KAAK,wBAA0B,MAE7B,KAAK,+BACP,KAAK,6BAA6B,UAClC,KAAK,6BAA+B,KAExC,CACA,IAAI,kBAAmB,CACd,SAAG,KAAK,OAAO,MAAM,EAC9B,CACA,IAAI,kBAAmB,CACd,SAAG,KAAK,OAAO,MAAM,EAC9B,CACA,mCAAmCb,EAAUjK,EAAgB,CAC3D,OAAO,KAAK,OAAO,sBAAsBiK,EAAUjK,CAAc,CACnE,CACA,gBAAgBoK,EAASC,EAAK,CACxBA,EAAA,KAAK,KAAK,MAAM,CACtB,CACA,QAAQD,EAASE,EAAgB,CAC/B,OAAO,KAAK,2BAA2BF,CAAO,EAAE,QAAQA,CAAO,CACjE,CACA,UAAUA,EAASE,EAAgBC,EAAQC,EAAQ,CACjD,OAAO,KAAK,2BAA2BJ,CAAO,EAAE,UAAUA,EAASG,EAAQC,CAAM,CACnF,CACA,2BAA2BJ,EAAS,CAC9B,IAAC,KAAK,wBAAyB,CAC5B,6BAA0B,IAAIQ,GACxB,UAAAG,KAAW,KAAK,SACZX,EAAQ,QAAQW,CAAO,EAC/B,gBAAgBX,EAAS,KAAK,uBAAuB,CAE9D,CACA,OAAO,KAAK,uBACd,CACA,aAAaA,EAASE,EAAgB,CACpC,OAAO,KAAK,gCAAgCF,EAASE,CAAc,EAAE,QAAQF,CAAO,CACtF,CACA,eAAeA,EAASE,EAAgBC,EAAQC,EAAQ,CAC/C,YAAK,gCAAgCJ,EAASE,CAAc,EAAE,UAAUF,EAASG,EAAQC,CAAM,CACxG,CACA,gCAAgCJ,EAASE,EAAgB,CACnD,OAAC,KAAK,+BACH,kCAA+B,IAAIM,GACnC,kCAA6B,KAAK,KAAK,OAAO,kBAAoB,KAAK,OAAO,QAAU,KAAK,MAAM,GAEtG,KAAK,OAAO,mBACd,KAAK,6BAA6B,UAAU,EAAGN,GAAkC,GAAQ,EAEpF,KAAK,4BACd,CACF,EACImB,GAAc,MAAMC,CAAa,CACnC,OAAO,kBAAkBC,EAAQ9B,EAAWzH,EAAM2H,EAAaI,EAA8B,CACpF,OAAAwB,EAAO,aAAc7B,GACnB,IAAII,GAAYL,EAAWC,EAAI1H,EAAM2H,EAAaI,CAA4B,CACtF,CACH,CACA,OAAO,kBAAkByB,EAAMD,EAAQE,EAAY,CAC7C,OAACD,EAAK,IACDD,EAAA,aAAc7B,GAAO,CAE1B,GADA8B,EAAK,GAAK9B,EACN8B,EAAK,MACP,OAAO,IAAInB,GACTmB,EAAK,wBACLA,EAAK,GACLA,EAAK,KACLA,EAAK,MACLF,EAAa,iBAAiBE,EAAK,SAAUD,EAAQE,CAAU,GAG/D,UAAOD,EAAK,MAAU,IAAa,CACjCA,EAAK,aACPC,EAAaxM,GAAa,CAAI,EAAAwM,EAAYD,EAAK,UAAU,GAE3D,IAAId,EAAWc,EAAK,SACpB,OAAI,OAAOd,EAAa,KAAec,EAAK,UAC1Cd,EAAW,CAAC,CAAE,QAASc,EAAK,OAAS,IAEhC,IAAIf,GACTe,EAAK,wBACLA,EAAK,GACLA,EAAK,KACLA,EAAK,YACLF,EAAa,iBAAiBZ,EAAUa,EAAQE,CAAU,EAE9D,CACA,OAAID,EAAK,MACA,IAAIN,GACTM,EAAK,wBACLA,EAAK,GACLA,EAAK,KACLA,EAAK,YACLA,EAAK,MACLF,EAAa,iBAAiBE,EAAK,eAAiBA,EAAK,SAAUD,EAAQE,CAAU,EACrFD,EAAK,MACLF,EAAa,iBAAiBE,EAAK,eAAiBA,EAAK,SAAUD,EAAQE,CAAU,EACrFH,EAAa,iBAAiBE,EAAK,SAAUD,EAAQE,CAAU,GAG5D,IAAIb,GACTY,EAAK,wBACLA,EAAK,GACLA,EAAK,KACLA,EAAK,YACLA,EAAK,MACLF,EAAa,iBAAiBE,EAAK,eAAiBA,EAAK,SAAUD,EAAQE,CAAU,EACrFD,EAAK,IACLF,EAAa,iBAAiBE,EAAK,aAAeA,EAAK,SAAUD,EAAQE,CAAU,EACnFD,EAAK,oBACLF,EAAa,iBAAiBE,EAAK,SAAUD,EAAQE,CAAU,EACjE,CACD,EAEID,EAAK,EACd,CACA,OAAO,iBAAiBlB,EAAUiB,EAAQE,EAAY,CACpD,IAAI5M,EAAI,GACR,GAAIyL,EAAU,CACZ,IAAIoB,EAAmB,EACvB,UAAWC,KAAarB,EAAU,CAChC,GAAIqB,IAAc,0BAChB,SAEI,MAAAC,EAAmB,SAASD,EAAW,EAAE,EAC3CC,EAAmBF,IACFA,EAAAE,EAEvB,CACA,QAAS/N,EAAI,EAAGA,GAAK6N,EAAkB7N,IACrCgB,EAAEhB,CAAC,EAAI,KAET,UAAW8N,KAAarB,EAAU,CAChC,GAAIqB,IAAc,0BAChB,SAEI,MAAAC,EAAmB,SAASD,EAAW,EAAE,EAC/C,IAAI5B,EAA+B,EAC/BO,EAASqB,CAAS,EAAE,WACtB5B,EAA+BuB,EAAa,kBAAkBhB,EAASqB,CAAS,EAAGJ,EAAQE,CAAU,GAEvG5M,EAAE+M,CAAgB,EAAIN,EAAa,kBAAkBC,EAAQjB,EAASqB,CAAS,EAAE,wBAAyBrB,EAASqB,CAAS,EAAE,KAAMrB,EAASqB,CAAS,EAAE,YAAa5B,CAA4B,CACnM,CACF,CACO,OAAAlL,CACT,CACA,OAAO,iBAAiB6L,EAAUa,EAAQE,EAAY,CACpD,IAAI5M,EAAI,GACR,GAAI6L,EACF,QAAS7M,EAAI,EAAGiB,EAAM4L,EAAS,OAAQ7M,EAAIiB,EAAKjB,IAAK,CAC7C,MAAA8M,EAAUD,EAAS7M,CAAC,EAC1B,IAAIgO,EAAS,GACb,GAAIlB,EAAQ,QAAS,CACb,MAAAlD,EAAYmB,GAAa+B,EAAQ,OAAO,EAC9C,OAAQlD,EAAU,KAAM,CACtB,IAAK,GACL,IAAK,GACHoE,EAASP,EAAa,kBAAkBG,EAAWd,EAAQ,OAAO,EAAGY,EAAQE,CAAU,EACvF,MACF,IAAK,GACC,IAAAK,EAAoBL,EAAWhE,EAAU,QAAQ,EACjDqE,IACFD,EAASP,EAAa,kBAAkBQ,EAAmBP,EAAQE,CAAU,GAG/E,MACF,IAAK,GACL,IAAK,GACH,MAAMM,EAAsBtE,EAAU,UAChCuE,EAAyBvE,EAAU,OAAS,EAAsCA,EAAU,SAAW,KACvGwE,EAAkBV,EAAO,mBAAmBQ,EAAqBN,CAAU,EACjF,GAAIQ,EACF,GAAID,EAAwB,CACtB,IAAAE,EAAuBD,EAAgB,WAAWD,CAAsB,EACxEE,IACFL,EAASP,EAAa,kBAAkBY,EAAsBX,EAAQU,EAAgB,UAAU,EAElG,MAEAJ,EAASP,EAAa,kBAAkBW,EAAgB,WAAW,MAAOV,EAAQU,EAAgB,UAAU,EAIhH,KACJ,OAEAJ,EAASP,EAAa,kBAAkBX,EAASY,EAAQE,CAAU,EAErE,GAAII,IAAW,GAAI,CACX,MAAA5H,EAAOsH,EAAO,QAAQM,CAAM,EAClC,IAAIM,EAAW,GAMf,IALIlI,aAAgBwG,IAAmBxG,aAAgB2G,IAAgB3G,aAAgBiH,KACjFjH,EAAK,oBAAsBA,EAAK,SAAS,SAAW,IAC3CkI,EAAA,IAGXA,EACF,SAEFtN,EAAE,KAAKgN,CAAM,CACf,CACF,CAEK,OACL,SAAUhN,EACV,oBAAqB6L,EAAWA,EAAS,OAAS,KAAO7L,EAAE,OAE/D,CACF,EACI0L,EAAe,MAAM6B,EAAc,CACrC,YAAYC,EAAcR,EAAQ,CAChC,GAAIQ,EAAc,CAChB,MAAMvN,EAAMuN,EAAa,OACzB,IAAIC,EAAgB,EAChBC,EAAS,GACTC,EAAY,GAChB,QAASC,EAAM,EAAGA,EAAM3N,EAAK2N,IAE3B,GADWJ,EAAa,OAAOI,CAAG,IACvB,MACLA,EAAM,EAAI3N,EAAK,CACjB,MAAM4N,EAASL,EAAa,OAAOI,EAAM,CAAC,EACtCC,IAAW,KACbH,EAAO,KAAKF,EAAa,UAAUC,EAAeG,CAAG,CAAC,EACtDF,EAAO,KAAK,kBAAkB,EAC9BD,EAAgBG,EAAM,IACbC,IAAW,KAAOA,IAAW,OAC1BF,EAAA,IAEdC,GACF,CAGJ,KAAK,UAAYD,EACbF,IAAkB,EACpB,KAAK,OAASD,GAEdE,EAAO,KAAKF,EAAa,UAAUC,EAAexN,CAAG,CAAC,EACjD,YAASyN,EAAO,KAAK,EAAE,EAC9B,MAEA,KAAK,UAAY,GACjB,KAAK,OAASF,EAEZ,KAAK,UACF,kBAAe,KAAK,oBAEzB,KAAK,aAAe,KAEtB,KAAK,OAASR,EACd,KAAK,kBAAoBzC,GAAoB,KAAK,KAAK,MAAM,CAC/D,CACA,OAAQ,CACN,OAAO,IAAIgD,GAAc,KAAK,OAAQ,KAAK,MAAM,CACnD,CACA,UAAUO,EAAW,CACf,KAAK,SAAWA,IAGpB,KAAK,OAASA,EACV,KAAK,YACF,kBAAe,KAAK,qBAE7B,CACA,sBAAsB9C,EAAUjK,EAAgB,CAC9C,IAAIgN,EAAiBhN,EAAe,IAAKK,GAChC4J,EAAS,UAAU5J,EAAQ,MAAOA,EAAQ,GAAG,CACrD,EACD,OAAAoJ,GAAqB,UAAY,EAC1B,KAAK,OAAO,QAAQA,GAAsB,CAACxJ,EAAOgN,IAChDlM,GAAuBiM,EAAe,SAASC,EAAI,EAAE,CAAC,GAAK,EAAE,CACrE,CACH,CACA,mBAAoB,CAClB,IAAIC,EAAe,GACfC,EAAe,GACfC,EAAe,GACfC,EAAe,GACfR,EAAK3N,EAAKoO,EAAIR,EACb,IAAAD,EAAM,EAAG3N,EAAM,KAAK,OAAO,OAAQ2N,EAAM3N,EAAK2N,IAC5CS,EAAA,KAAK,OAAO,OAAOT,CAAG,EAC3BK,EAAaL,CAAG,EAAIS,EACpBH,EAAaN,CAAG,EAAIS,EACpBF,EAAaP,CAAG,EAAIS,EACpBD,EAAaR,CAAG,EAAIS,EAChBA,IAAO,MACLT,EAAM,EAAI3N,IACZ4N,EAAS,KAAK,OAAO,OAAOD,EAAM,CAAC,EAC/BC,IAAW,KACAI,EAAAL,EAAM,CAAC,EAAI,IACXM,EAAAN,EAAM,CAAC,EAAI,IACXO,EAAAP,EAAM,CAAC,EAAI,IACXQ,EAAAR,EAAM,CAAC,EAAI,KACfC,IAAW,KACPI,EAAAL,EAAM,CAAC,EAAI,IACXM,EAAAN,EAAM,CAAC,EAAI,IACXO,EAAAP,EAAM,CAAC,EAAI,IACXQ,EAAAR,EAAM,CAAC,EAAI,MAEXK,EAAAL,EAAM,CAAC,EAAIC,EACXK,EAAAN,EAAM,CAAC,EAAIC,EACXM,EAAAP,EAAM,CAAC,EAAIC,EACXO,EAAAR,EAAM,CAAC,EAAIC,GAE1BD,KAIC,OACL,MAAOK,EAAa,KAAK,EAAE,EAC3B,MAAOC,EAAa,KAAK,EAAE,EAC3B,MAAOC,EAAa,KAAK,EAAE,EAC3B,MAAOC,EAAa,KAAK,EAAE,EAE/B,CACA,eAAe9C,EAAQC,EAAQ,CAC7B,MAAI,CAAC,KAAK,WAAa,CAAC,KAAK,aACpB,KAAK,OAEVD,EACEC,EACK,KAAK,aAAa,MAElB,KAAK,aAAa,MAGvBA,EACK,KAAK,aAAa,MAElB,KAAK,aAAa,KAG/B,CACF,EACII,GAAmB,KAAM,CAC3B,aAAc,CACZ,KAAK,OAAS,GACd,KAAK,YAAc,GACnB,KAAK,QAAU,KACf,KAAK,aAAe,CAClB,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KAEX,CACA,SAAU,CACR,KAAK,eAAe,CACtB,CACA,gBAAiB,CACX,KAAK,UACP,KAAK,QAAQ,UACb,KAAK,QAAU,MAEb,KAAK,aAAa,QACf,kBAAa,MAAM,UACxB,KAAK,aAAa,MAAQ,MAExB,KAAK,aAAa,QACf,kBAAa,MAAM,UACxB,KAAK,aAAa,MAAQ,MAExB,KAAK,aAAa,QACf,kBAAa,MAAM,UACxB,KAAK,aAAa,MAAQ,MAExB,KAAK,aAAa,QACf,kBAAa,MAAM,UACxB,KAAK,aAAa,MAAQ,KAE9B,CACA,KAAKtI,EAAM,CACJ,YAAO,KAAKA,CAAI,EAChB,iBAAc,KAAK,aAAeA,EAAK,SAC9C,CACA,QAAQA,EAAM,CACP,YAAO,QAAQA,CAAI,EACnB,iBAAc,KAAK,aAAeA,EAAK,SAC9C,CACA,QAAS,CACP,OAAO,KAAK,OAAO,MACrB,CACA,UAAUpC,EAAO6M,EAAW,CACtB,KAAK,OAAO7M,CAAK,EAAE,SAAW6M,IAChC,KAAK,eAAe,EACpB,KAAK,OAAO7M,CAAK,EAAE,UAAU6M,CAAS,EAE1C,CACA,QAAQQ,EAAS,CACX,IAAC,KAAK,QAAS,CACjB,IAAIC,EAAU,KAAK,OAAO,IAAKC,GAAMA,EAAE,MAAM,EAC7C,KAAK,QAAU,IAAIC,GAAaH,EAASC,EAAS,KAAK,OAAO,IAAKC,GAAMA,EAAE,MAAM,CAAC,CACpF,CACA,OAAO,KAAK,OACd,CACA,UAAUF,EAAShD,EAAQC,EAAQ,CAC7B,OAAC,KAAK,YAGJD,EACEC,GACG,KAAK,aAAa,QACrB,KAAK,aAAa,MAAQ,KAAK,gBAAgB+C,EAAShD,EAAQC,CAAM,GAEjE,KAAK,aAAa,QAEpB,KAAK,aAAa,QACrB,KAAK,aAAa,MAAQ,KAAK,gBAAgB+C,EAAShD,EAAQC,CAAM,GAEjE,KAAK,aAAa,OAGvBA,GACG,KAAK,aAAa,QACrB,KAAK,aAAa,MAAQ,KAAK,gBAAgB+C,EAAShD,EAAQC,CAAM,GAEjE,KAAK,aAAa,QAEpB,KAAK,aAAa,QACrB,KAAK,aAAa,MAAQ,KAAK,gBAAgB+C,EAAShD,EAAQC,CAAM,GAEjE,KAAK,aAAa,OAxBtB,KAAK,QAAQ+C,CAAO,CA4B/B,CACA,gBAAgBA,EAAShD,EAAQC,EAAQ,CACnC,IAAAgD,EAAU,KAAK,OAAO,IAAKC,GAAMA,EAAE,eAAelD,EAAQC,CAAM,CAAC,EAC9D,WAAIkD,GAAaH,EAASC,EAAS,KAAK,OAAO,IAAKC,GAAMA,EAAE,MAAM,CAAC,CAC5E,CACF,EACIC,GAAe,KAAM,CACvB,YAAYH,EAASC,EAASpI,EAAO,CACnC,KAAK,QAAUoI,EACf,KAAK,MAAQpI,EACR,aAAUmI,EAAQ,kBAAkBC,CAAO,CAClD,CACA,SAAU,CACJ,OAAO,KAAK,QAAQ,SAAY,YAClC,KAAK,QAAQ,SAEjB,CACA,UAAW,CACT,MAAMvO,EAAI,GACD,QAAAhB,EAAI,EAAGiB,EAAM,KAAK,MAAM,OAAQjB,EAAIiB,EAAKjB,IAC9CgB,EAAA,KAAK,QAAU,KAAK,MAAMhB,CAAC,EAAI,KAAO,KAAK,QAAQA,CAAC,CAAC,EAElD,OAAAgB,EAAE,KAAK;AAAA,CAAI,CACpB,CACA,kBAAkB0O,EAAQC,EAAeC,EAAS,CAChD,MAAMvN,EAAS,KAAK,QAAQ,kBAAkBqN,EAAQC,EAAeC,CAAO,EAC5E,OAAKvN,EAGE,CACL,OAAQ,KAAK,MAAMA,EAAO,KAAK,EAC/B,eAAgBA,EAAO,gBAJhB,IAMX,CACF,EAGIwN,GAAuB,KAAM,CAC/B,YAAYrI,EAAYC,EAAW,CACjC,KAAK,WAAaD,EAClB,KAAK,UAAYC,CACnB,CACF,EACIqI,GAAgC,MAAMA,EAA8B,CACtE,YAAYC,EAAmBC,EAAmB,CAChD,KAAK,yBAA2B,IAAIhN,GAAUM,GAAc,CACpD,MAAAkE,EAAa,KAAK,iBAAiBlE,CAAS,EAC5C2M,EAAoB,KAAK,qBAAqB3M,CAAS,EACtD,WAAIuM,GAAqBrI,EAAYyI,CAAiB,EAC9D,EACD,KAAK,mBAAqB,IAAIJ,GAAqBE,EAAmB,GACjE,+BAA4B,IAAIG,GAAa,OAAO,QAAQF,GAAqB,CAAE,EAAC,CAC3F,CACA,sBAAuB,CACrB,OAAO,KAAK,kBACd,CACA,wBAAwB1M,EAAW,CACjC,OAAIA,IAAc,KACTwM,GAA8B,qBAEhC,KAAK,yBAAyB,IAAIxM,CAAS,CACpD,CAKA,iBAAiBkC,EAAO,CACtB,OAAO,KAAK,0BAA0B,MAAMA,CAAK,GAAK,CACxD,CACA,qBAAqBlC,EAAW,CAC9B,MAAM6M,EAAI7M,EAAU,MAAMwM,GAA8B,0BAA0B,EAClF,GAAI,CAACK,EACI,SAED,OAAAA,EAAE,CAAC,EAAG,CACZ,IAAK,UACI,SACT,IAAK,SACI,SACT,IAAK,QACI,SACT,IAAK,gBACI,QACX,CACM,UAAI,MAAM,2CAA2C,CAC7D,CACF,EACAL,GAA8B,qBAAuB,IAAID,GAAqB,EAAG,CAAC,EAClFC,GAA8B,2BAA6B,4CAC3D,IAAIM,GAA+BN,GAC/BI,GAAe,KAAM,CACvB,YAAYG,EAAQ,CACd,GAAAA,EAAO,SAAW,EACpB,KAAK,OAAS,KACd,KAAK,aAAe,SACf,CACA,YAAS,IAAI,IAAIA,CAAM,EAC5B,MAAMC,EAAgBD,EAAO,IAC3B,CAAC,CAAC/M,EAAWP,CAAK,IAAMD,GAAuBQ,CAAS,GAE1DgN,EAAc,KAAK,EACnBA,EAAc,QAAQ,EACtB,KAAK,aAAe,IAAI,OACtB,MAAMA,EAAc,KAAK,KAAK,CAAC,YAC/B,GAEJ,CACF,CACA,MAAM9K,EAAO,CACP,IAAC,KAAK,aACD,OAET,MAAM2K,EAAI3K,EAAM,MAAM,KAAK,YAAY,EACvC,GAAK2K,EAGL,OAAO,KAAK,OAAO,IAAIA,EAAE,CAAC,CAAC,CAC7B,CACF,EASII,GAAuB,KAAM,CAC/B,YAAYC,EAAOC,EAAc,CAC/B,KAAK,MAAQD,EACb,KAAK,aAAeC,CACtB,CACF,EACA,SAASC,GAAgBvE,EAASH,EAAU2E,EAAaC,EAASJ,EAAOK,EAAYC,EAAsBC,EAAW,CAC9G,MAAAC,EAAahF,EAAS,QAAQ,OACpC,IAAIiF,EAAO,GACPC,EAAiB,GACrB,GAAIJ,EAAsB,CACxB,MAAMK,EAAmBC,GACvBjF,EACAH,EACA2E,EACAC,EACAJ,EACAK,CAAA,EAEFL,EAAQW,EAAiB,MACzBP,EAAUO,EAAiB,QAC3BR,EAAcQ,EAAiB,YAC/BD,EAAiBC,EAAiB,cACpC,CACM,MAAAE,EAAY,KAAK,MACvB,KAAO,CAACJ,GAAM,CACZ,GAAIF,IAAc,GACI,KAAK,MAAQM,EACfN,EACT,WAAIR,GAAqBC,EAAO,EAAI,EAGtCc,GACX,CACO,WAAIf,GAAqBC,EAAO,EAAK,EAC5C,SAASc,GAAW,CAOlB,MAAMtQ,EAAIuQ,GACRpF,EACAH,EACA2E,EACAC,EACAJ,EACAU,CAAA,EAEF,GAAI,CAAClQ,EAAG,CACK6P,EAAA,QAAQL,EAAOQ,CAAU,EAC7BC,EAAA,GACP,MACF,CACA,MAAMlP,EAAiBf,EAAE,eACnBwQ,EAAgBxQ,EAAE,cAClByQ,EAAc1P,GAAkBA,EAAe,OAAS,EAAIA,EAAe,CAAC,EAAE,IAAM6O,EAAU,GACpG,GAAIY,IAAkB/F,GAAW,CACzB,MAAAiG,EAAalB,EAAM,QAAQrE,CAAO,EAMxC0E,EAAW,QAAQL,EAAOzO,EAAe,CAAC,EAAE,KAAK,EACzCyO,IAAM,0BAA0BA,EAAM,cAAc,EAC5DmB,EACExF,EACAH,EACA2E,EACAH,EACAK,EACAa,EAAW,YACX3P,CAAA,EAEF8O,EAAW,QAAQL,EAAOzO,EAAe,CAAC,EAAE,GAAG,EAC/C,MAAM6P,EAASpB,EAGf,GAFAA,EAAQA,EAAM,OACdU,EAAiBU,EAAO,eACpB,CAACH,GAAeG,EAAO,gBAAkBhB,EAAS,CAM5CJ,EAAAoB,EACGf,EAAA,QAAQL,EAAOQ,CAAU,EAC7BC,EAAA,GACP,MACF,MACK,CACC,MAAAY,EAAQ1F,EAAQ,QAAQqF,CAAa,EAC3CX,EAAW,QAAQL,EAAOzO,EAAe,CAAC,EAAE,KAAK,EACjD,MAAM+P,EAAatB,EACblN,EAAYuO,EAAM,QAAQ7F,EAAS,QAASjK,CAAc,EAC1DgQ,EAAiBvB,EAAM,sBAAsB,eACjDlN,EACA6I,CAAA,EAWF,GATAqE,EAAQA,EAAM,KACZgB,EACAZ,EACAM,EACAnP,EAAe,CAAC,EAAE,MAAQiP,EAC1B,KACAe,EACAA,CAAA,EAEEF,aAAiB9E,GAAc,CACjC,MAAMiF,EAAaH,EAMnBF,EACExF,EACAH,EACA2E,EACAH,EACAK,EACAmB,EAAW,cACXjQ,CAAA,EAEF8O,EAAW,QAAQL,EAAOzO,EAAe,CAAC,EAAE,GAAG,EAC9BmP,EAAAnP,EAAe,CAAC,EAAE,IACnC,MAAM+J,EAAckG,EAAW,eAC7BhG,EAAS,QACTjK,CAAA,EAEIkQ,EAAwBF,EAAe,eAC3CjG,EACAK,CAAA,EAWF,GATQqE,IAAM,0BAA0ByB,CAAqB,EACzDD,EAAW,uBACbxB,EAAQA,EAAM,YACZwB,EAAW,iCACThG,EAAS,QACTjK,CACF,IAGA,CAAC0P,GAAeK,EAAW,cAActB,CAAK,EAAG,CAMnDA,EAAQA,EAAM,MACHK,EAAA,QAAQL,EAAOQ,CAAU,EAC7BC,EAAA,GACP,MACF,UACSY,aAAiBxE,GAAgB,CAC1C,MAAM2E,EAAaH,EAInBF,EACExF,EACAH,EACA2E,EACAH,EACAK,EACAmB,EAAW,cACXjQ,CAAA,EAEF8O,EAAW,QAAQL,EAAOzO,EAAe,CAAC,EAAE,GAAG,EAC9BmP,EAAAnP,EAAe,CAAC,EAAE,IACnC,MAAM+J,EAAckG,EAAW,eAC7BhG,EAAS,QACTjK,CAAA,EAEIkQ,EAAwBF,EAAe,eAC3CjG,EACAK,CAAA,EAWF,GATQqE,IAAM,0BAA0ByB,CAAqB,EACzDD,EAAW,yBACbxB,EAAQA,EAAM,YACZwB,EAAW,mCACThG,EAAS,QACTjK,CACF,IAGA,CAAC0P,GAAeK,EAAW,cAActB,CAAK,EAAG,CAMnDA,EAAQA,EAAM,MACHK,EAAA,QAAQL,EAAOQ,CAAU,EAC7BC,EAAA,GACP,MACF,UAQAU,EACExF,EACAH,EACA2E,EACAH,EACAK,EAXmBgB,EAYN,SACb9P,CAAA,EAEF8O,EAAW,QAAQL,EAAOzO,EAAe,CAAC,EAAE,GAAG,EAC/CyO,EAAQA,EAAM,MACV,CAACiB,EAAa,CAMhBjB,EAAQA,EAAM,UACHK,EAAA,QAAQL,EAAOQ,CAAU,EAC7BC,EAAA,GACP,MACF,CAEJ,CACIlP,EAAe,CAAC,EAAE,IAAM6O,IAChBA,EAAA7O,EAAe,CAAC,EAAE,IACd4O,EAAA,GAElB,CACF,CACA,SAASS,GAAsBjF,EAASH,EAAU2E,EAAaC,EAASJ,EAAOK,EAAY,CACrF,IAAAK,EAAiBV,EAAM,qBAAuB,EAAI,GACtD,MAAM0B,EAAa,GACnB,QAASC,EAAO3B,EAAO2B,EAAMA,EAAOA,EAAK,MAAO,CACxC,MAAAC,EAAWD,EAAK,QAAQhG,CAAO,EACjCiG,aAAoB/E,IACtB6E,EAAW,KAAK,CACd,KAAME,EACN,MAAOD,CAAA,CACR,CAEL,CACS,QAAAE,EAAYH,EAAW,IAAI,EAAGG,EAAWA,EAAYH,EAAW,MAAO,CAC9E,KAAM,CAAE,YAAAI,EAAa,YAAAC,CAAY,EAAIC,GAAuBH,EAAU,KAAMlG,EAASkG,EAAU,MAAM,QAAS1B,EAAaC,IAAYM,CAAc,EAC/IlQ,EAAIsR,EAAY,kBAAkBtG,EAAU4E,EAAS2B,CAAW,EAKtE,GAAIvR,EAAG,CAEL,GADsBA,EAAE,SACF0K,GAAa,CACzB8E,EAAA6B,EAAU,MAAM,MACxB,KACF,CACIrR,EAAE,gBAAkBA,EAAE,eAAe,SACvC6P,EAAW,QAAQwB,EAAU,MAAOrR,EAAE,eAAe,CAAC,EAAE,KAAK,EAC9C2Q,EAAAxF,EAASH,EAAU2E,EAAa0B,EAAU,MAAOxB,EAAYwB,EAAU,KAAK,cAAerR,EAAE,cAAc,EAC1H6P,EAAW,QAAQwB,EAAU,MAAOrR,EAAE,eAAe,CAAC,EAAE,GAAG,EAC1CkQ,EAAAlQ,EAAE,eAAe,CAAC,EAAE,IACjCA,EAAE,eAAe,CAAC,EAAE,IAAM4P,IAClBA,EAAA5P,EAAE,eAAe,CAAC,EAAE,IAChB2P,EAAA,IAElB,KACK,CAIGH,EAAA6B,EAAU,MAAM,MACxB,KACF,CACF,CACA,MAAO,CAAE,MAAA7B,EAAO,QAAAI,EAAS,eAAAM,EAAgB,YAAAP,CAAY,CACvD,CACA,SAASY,GAAsBpF,EAASH,EAAU2E,EAAaC,EAASJ,EAAOU,EAAgB,CAC7F,MAAMuB,EAAcC,GAAUvG,EAASH,EAAU2E,EAAaC,EAASJ,EAAOU,CAAc,EACtFzG,EAAa0B,EAAQ,gBACvB,GAAA1B,EAAW,SAAW,EACjB,OAAAgI,EAEH,MAAAE,EAAkBC,GAAgBnI,EAAY0B,EAASH,EAAU2E,EAAaC,EAASJ,EAAOU,CAAc,EAClH,GAAI,CAACyB,EACI,OAAAF,EAET,GAAI,CAACA,EACI,OAAAE,EAET,MAAME,EAAmBJ,EAAY,eAAe,CAAC,EAAE,MACjDK,EAAuBH,EAAgB,eAAe,CAAC,EAAE,MAC/D,OAAIG,EAAuBD,GAAoBF,EAAgB,eAAiBG,IAAyBD,EAChGF,EAEFF,CACT,CACA,SAASC,GAAUvG,EAASH,EAAU2E,EAAaC,EAASJ,EAAOU,EAAgB,CAC3E,MAAA9K,EAAOoK,EAAM,QAAQrE,CAAO,EAC5B,CAAE,YAAAmG,EAAa,YAAAC,CAAgB,EAAAQ,GAAkB3M,EAAM+F,EAASqE,EAAM,QAASG,EAAaC,IAAYM,CAAc,EACtHlQ,EAAIsR,EAAY,kBAAkBtG,EAAU4E,EAAS2B,CAAW,EACtE,OAAIvR,EACK,CACL,eAAgBA,EAAE,eAClB,cAAeA,EAAE,QAGd,IACT,CACA,SAAS4R,GAAgBnI,EAAY0B,EAASH,EAAU2E,EAAaC,EAASJ,EAAOU,EAAgB,CACnG,IAAI8B,EAAkB,OAAO,UACzBC,EAA0B,KAC1BC,EACAC,EAA0B,EACxB,MAAAjO,EAASsL,EAAM,sBAAsB,cAAc,EACzD,QAASxQ,EAAI,EAAGiB,EAAMwJ,EAAW,OAAQzK,EAAIiB,EAAKjB,IAAK,CAC/C,MAAA0K,EAAYD,EAAWzK,CAAC,EAC9B,GAAI,CAAC0K,EAAU,QAAQxF,CAAM,EAC3B,SAEF,MAAMkB,EAAO+F,EAAQ,QAAQzB,EAAU,MAAM,EACvC,CAAE,YAAA4H,EAAa,YAAAC,CAAgB,EAAAQ,GAAkB3M,EAAM+F,EAAS,KAAMwE,EAAaC,IAAYM,CAAc,EAC7GuB,EAAcH,EAAY,kBAAkBtG,EAAU4E,EAAS2B,CAAW,EAChF,GAAI,CAACE,EACH,SAMF,MAAMW,EAAcX,EAAY,eAAe,CAAC,EAAE,MAClD,GAAI,EAAAW,GAAeJ,KAGDA,EAAAI,EAClBH,EAA0BR,EAAY,eACtCS,EAAkBT,EAAY,OAC9BU,EAA0BzI,EAAU,SAChCsI,IAAoBpC,GACtB,KAEJ,CACA,OAAIqC,EACK,CACL,cAAeE,IAA4B,GAC3C,eAAgBF,EAChB,cAAeC,CAAA,EAGZ,IACT,CACA,SAASH,GAAkB3M,EAAM+F,EAASE,EAAgBC,EAAQC,EAAQ,CAOjE,OAAE,YADWnG,EAAK,UAAU+F,EAASE,EAAgBC,EAAQC,CAAM,EACpD,YAAa,EACrC,CACA,SAASiG,GAAuBpM,EAAM+F,EAASE,EAAgBC,EAAQC,EAAQ,CAOtE,OAAE,YADWnG,EAAK,eAAe+F,EAASE,EAAgBC,EAAQC,CAAM,EACzD,YAAa,EACrC,CAWA,SAASoF,EAAexF,EAASH,EAAU2E,EAAaH,EAAOK,EAAYpE,EAAU1K,EAAgB,CAC/F,GAAA0K,EAAS,SAAW,EACtB,OAEF,MAAM4G,EAAkBrH,EAAS,QAC3B/K,EAAM,KAAK,IAAIwL,EAAS,OAAQ1K,EAAe,MAAM,EACrDuR,EAAa,GACbC,EAASxR,EAAe,CAAC,EAAE,IACjC,QAAS/B,EAAI,EAAGA,EAAIiB,EAAKjB,IAAK,CACtB,MAAAwT,EAAc/G,EAASzM,CAAC,EAC9B,GAAIwT,IAAgB,KAClB,SAEI,MAAAC,EAAe1R,EAAe/B,CAAC,EACjC,GAAAyT,EAAa,SAAW,EAC1B,SAEE,GAAAA,EAAa,MAAQF,EACvB,MAEK,KAAAD,EAAW,OAAS,GAAKA,EAAWA,EAAW,OAAS,CAAC,EAAE,QAAUG,EAAa,OACvF5C,EAAW,kBAAkByC,EAAWA,EAAW,OAAS,CAAC,EAAE,OAAQA,EAAWA,EAAW,OAAS,CAAC,EAAE,MAAM,EAC/GA,EAAW,IAAI,EAOjB,GALIA,EAAW,OAAS,EACXzC,EAAA,kBAAkByC,EAAWA,EAAW,OAAS,CAAC,EAAE,OAAQG,EAAa,KAAK,EAE9E5C,EAAA,QAAQL,EAAOiD,EAAa,KAAK,EAE1CD,EAAY,6BAA8B,CAC5C,MAAMlQ,EAAYkQ,EAAY,QAAQH,EAAiBtR,CAAc,EAC/DgQ,EAAiBvB,EAAM,sBAAsB,eAAelN,EAAW6I,CAAO,EAC9EL,EAAc0H,EAAY,eAAeH,EAAiBtR,CAAc,EACxEkQ,EAAwBF,EAAe,eAAejG,EAAaK,CAAO,EAC1EuH,EAAalD,EAAM,KAAKgD,EAAY,6BAA8BC,EAAa,MAAO,GAAI,GAAO,KAAM1B,EAAgBE,CAAqB,EAC5I0B,EAAaxH,EAAQ,iBAAiBkH,EAAgB,UAAU,EAAGI,EAAa,GAAG,CAAC,EAC1F/C,GACEvE,EACAwH,EACAhD,GAAe8C,EAAa,QAAU,EACtCA,EAAa,MACbC,EACA7C,EACA,GAEA,GAEFvH,GAAkBqK,CAAU,EAC5B,QACF,CACA,MAAMC,EAAuBJ,EAAY,QAAQH,EAAiBtR,CAAc,EAChF,GAAI6R,IAAyB,KAAM,CAEjC,MAAMC,GADOP,EAAW,OAAS,EAAIA,EAAWA,EAAW,OAAS,CAAC,EAAE,OAAS9C,EAAM,uBACnD,eAAeoD,EAAsBzH,CAAO,EAC/EmH,EAAW,KAAK,IAAIQ,GAAkBD,EAAuBJ,EAAa,GAAG,CAAC,CAChF,CACF,CACO,KAAAH,EAAW,OAAS,GACzBzC,EAAW,kBAAkByC,EAAWA,EAAW,OAAS,CAAC,EAAE,OAAQA,EAAWA,EAAW,OAAS,CAAC,EAAE,MAAM,EAC/GA,EAAW,IAAI,CAEnB,CACA,IAAIQ,GAAoB,KAAM,CAC5B,YAAY5O,EAAQ6O,EAAQ,CAC1B,KAAK,OAAS7O,EACd,KAAK,OAAS6O,CAChB,CACF,EAGA,SAASC,GAAc1Q,EAAW6I,EAAS8H,EAAiBjE,EAAmBkE,EAAYC,EAA0BC,EAAmB9E,EAAS,CAC/I,OAAO,IAAI+E,GACT/Q,EACA6I,EACA8H,EACAjE,EACAkE,EACAC,EACAC,EACA9E,CAAA,CAEJ,CACA,SAASgF,GAAkBjS,EAAQ6F,EAAU9B,EAAMmO,EAAmBpI,EAAS,CACvE,MAAAjD,EAAWjB,GAAeC,EAAUsM,EAAW,EAC/CxG,EAASR,GAAY,kBAAkBpH,EAAMmO,EAAmBpI,EAAQ,UAAU,EACxF,UAAW1D,KAAWS,EACpB7G,EAAO,KAAK,CACV,cAAe6F,EACf,QAASO,EAAQ,QACjB,OAAAuF,EACA,QAAA7B,EACA,SAAU1D,EAAQ,SACnB,CAEL,CACA,SAAS+L,GAAYC,EAAYvP,EAAQ,CACnC,GAAAA,EAAO,OAASuP,EAAW,OACtB,SAET,IAAIC,EAAY,EACT,OAAAD,EAAW,MAAOE,GAAe,CACtC,QAAS,EAAID,EAAW,EAAIxP,EAAO,OAAQ,IACzC,GAAI0P,GAAkB1P,EAAO,CAAC,EAAGyP,CAAU,EACzC,OAAAD,EAAY,EAAI,EACT,GAGJ,SACR,CACH,CACA,SAASE,GAAkBC,EAAevR,EAAW,CACnD,GAAI,CAACuR,EACI,SAET,GAAIA,IAAkBvR,EACb,SAET,MAAMrC,EAAMqC,EAAU,OACf,OAAAuR,EAAc,OAAS5T,GAAO4T,EAAc,OAAO,EAAG5T,CAAG,IAAMqC,GAAauR,EAAc5T,CAAG,IAAM,GAC5G,CACA,IAAIoT,GAAU,KAAM,CAClB,YAAYS,EAAgB3I,EAAS8H,EAAiBjE,EAAmBkE,EAAYC,EAA0BC,EAAmBW,EAAU,CAgB1I,GAfA,KAAK,eAAiBD,EACtB,KAAK,yBAA2BX,EAChC,KAAK,SAAWY,EAChB,KAAK,8BAAgC,IAAI3E,GACvC6D,EACAjE,CAAA,EAEF,KAAK,QAAU,GACf,KAAK,YAAc,EACd,kBAAe,CAAC,IAAI,EACzB,KAAK,kBAAoB,GACzB,KAAK,mBAAqBoE,EACrB,cAAWY,GAAY7I,EAAS,IAAI,EACzC,KAAK,YAAc,KACnB,KAAK,mBAAqB,GACtB+H,EACF,UAAWhM,KAAY,OAAO,KAAKgM,CAAU,EAAG,CACxC,MAAAhL,EAAWjB,GAAeC,EAAUsM,EAAW,EACrD,UAAW/L,KAAWS,EACpB,KAAK,mBAAmB,KAAK,CAC3B,QAAST,EAAQ,QACjB,KAAMyL,EAAWhM,CAAQ,EAC1B,CAEL,CAEJ,CACA,IAAI,eAAgB,CAClB,OAAO,KAAK,kBACd,CACA,SAAU,CACG,UAAA9B,KAAQ,KAAK,aAClBA,GACFA,EAAK,QAAQ,CAGnB,CACA,kBAAkB9E,EAAS,CAClB,YAAK,SAAS,kBAAkBA,CAAO,CAChD,CACA,iBAAiBA,EAAS,CACjB,YAAK,SAAS,iBAAiBA,CAAO,CAC/C,CACA,oBAAoBkE,EAAO,CAClB,YAAK,8BAA8B,wBAAwBA,CAAK,CACzE,CACA,oBAAqB,CACnB,MAAM4O,EAAoB,CACxB,OAASa,GACHA,IAAe,KAAK,eACf,KAAK,SAEP,KAAK,mBAAmBA,CAAU,EAE3C,WAAaA,GACJ,KAAK,mBAAmB,WAAWA,CAAU,CACtD,EAEI5S,EAAS,GACTiB,EAAY,KAAK,eACjB6I,EAAUiI,EAAkB,OAAO9Q,CAAS,EAClD,GAAI6I,EAAS,CACX,MAAM+I,EAAgB/I,EAAQ,WAC9B,GAAI+I,EACF,QAASC,KAAcD,EACrBZ,GACEjS,EACA8S,EACAD,EAAcC,CAAU,EACxB,KACAhJ,CAAA,EAIN,MAAMiJ,EAAsB,KAAK,mBAAmB,WAAW9R,CAAS,EACpE8R,GACkBA,EAAA,QAASC,GAAuB,CAC5C,MAAAC,EAAmB,KAAK,mBAAmBD,CAAkB,EACnE,GAAIC,EAAkB,CACpB,MAAMpN,EAAWoN,EAAiB,kBAC9BpN,GACFoM,GACEjS,EACA6F,EACAoN,EACA,KACAA,CAAA,CAGN,EACD,CAEL,CACA,OAAAjT,EAAO,KAAK,CAACkT,EAAIC,IAAOD,EAAG,SAAWC,EAAG,QAAQ,EAC1CnT,CACT,CACA,eAAgB,CACV,YAAK,cAAgB,OAClB,iBAAc,KAAK,sBAEnB,KAAK,WACd,CACA,aAAaoT,EAAS,CACd,MAAA5J,EAAK,EAAE,KAAK,YACZxJ,EAASoT,EAAyB5J,CAAG,EACtC,yBAAaA,CAAE,EAAIxJ,EACjBA,CACT,CACA,QAAQ2L,EAAQ,CACd,OAAO,KAAK,aAA4BA,CAAO,CACjD,CACA,mBAAmB1K,EAAWsK,EAAY,CACpC,QAAK,kBAAkBtK,CAAS,EAC3B,YAAK,kBAAkBA,CAAS,EACzC,GAAW,KAAK,mBAAoB,CAClC,MAAMoS,EAAqB,KAAK,mBAAmB,OAAOpS,CAAS,EACnE,GAAIoS,EACG,8BAAkBpS,CAAS,EAAI0R,GAClCU,EACA9H,GAAcA,EAAW,OAEpB,KAAK,kBAAkBtK,CAAS,CAE3C,CAEF,CACA,aAAa0I,EAAU2J,EAAW5E,EAAY,EAAG,CAC/C,MAAM,EAAI,KAAK,UAAU/E,EAAU2J,EAAW,GAAO5E,CAAS,EACvD,OACL,OAAQ,EAAE,WAAW,UAAU,EAAE,UAAW,EAAE,UAAU,EACxD,UAAW,EAAE,UACb,aAAc,EAAE,aAEpB,CACA,cAAc/E,EAAU2J,EAAW5E,EAAY,EAAG,CAChD,MAAM,EAAI,KAAK,UAAU/E,EAAU2J,EAAW,GAAM5E,CAAS,EACtD,OACL,OAAQ,EAAE,WAAW,gBAAgB,EAAE,UAAW,EAAE,UAAU,EAC9D,UAAW,EAAE,UACb,aAAc,EAAE,aAEpB,CACA,UAAU/E,EAAU2J,EAAWC,EAAkB7E,EAAW,CACtD,KAAK,UAAY,KACnB,KAAK,QAAUvD,GAAY,kBACzB,KAAK,SAAS,WAAW,MACzB,KACA,KAAK,SAAS,YAEhB,KAAK,cAAc,GAEjB,IAAAmD,EACJ,GAAI,CAACgF,GAAaA,IAAcE,GAAe,KAAM,CACrClF,EAAA,GACR,MAAAmF,EAAqB,KAAK,8BAA8B,qBAAqB,EAC7EC,EAAe,KAAK,cAAc,YAAY,EAC9CC,EAAkB3O,EAAqB,IAC3C,EACAyO,EAAmB,WACnBA,EAAmB,UACnB,KACAC,EAAa,UACbA,EAAa,aACbA,EAAa,cAETE,EAAgB,KAAK,QAAQ,KAAK,OAAO,EAAE,QAC/C,KACA,MAEE,IAAAC,EACAD,EACFC,EAAYC,EAAqB,6BAC/BF,EACAD,EACA,MAGFE,EAAYC,EAAqB,WAC/B,UACAH,CAAA,EAGJL,EAAY,IAAIE,GACd,KACA,KAAK,QACL,GACA,GACA,GACA,KACAK,EACAA,CAAA,CACF,MAEcvF,EAAA,GACdgF,EAAU,MAAM,EAElB3J,EAAWA,EAAW;AAAA,EAChB,MAAAoK,EAAe,KAAK,iBAAiBpK,CAAQ,EAC7CgF,EAAaoF,EAAa,QAAQ,OAClCvF,EAAa,IAAIwF,GACrBT,EACA5J,EACA,KAAK,mBACL,KAAK,0BAEDhL,EAAI0P,GACR,KACA0F,EACAzF,EACA,EACAgF,EACA9E,EACA,GACAE,CAAA,EAEF,OAAAzH,GAAkB8M,CAAY,EACvB,CACL,WAAApF,EACA,WAAAH,EACA,UAAW7P,EAAE,MACb,aAAcA,EAAE,aAEpB,CACF,EACA,SAASgU,GAAY7I,EAAS5H,EAAM,CAClC,OAAA4H,EAAUzL,GAAMyL,CAAO,EACfA,EAAA,WAAaA,EAAQ,YAAc,GAC3CA,EAAQ,WAAW,MAAQ,CACzB,wBAAyBA,EAAQ,wBACjC,SAAUA,EAAQ,SAClB,KAAMA,EAAQ,WAEhBA,EAAQ,WAAW,MAAQ5H,GAAQ4H,EAAQ,WAAW,MAC/CA,CACT,CACA,IAAIgK,EAAuB,MAAMG,CAAsB,CASrD,YAAYrS,EAAQP,EAAW6S,EAAiB,CAC9C,KAAK,OAAStS,EACd,KAAK,UAAYP,EACjB,KAAK,gBAAkB6S,CACzB,CACA,OAAO,cAAcC,EAAgBvE,EAAuB,CAC1D,IAAIwE,EAAUD,EACVtS,EAAasS,GAAgB,WAAa,KAC9C,UAAWE,KAASzE,EAClB/N,EAAaH,GAAW,KAAKG,EAAYwS,EAAM,UAAU,EACzDD,EAAU,IAAIH,EAAsBG,EAASvS,EAAYwS,EAAM,sBAAsB,EAEhF,OAAAD,CACT,CACA,OAAO,WAAWnT,EAAWiT,EAAiB,CACrC,WAAID,EAAsB,KAAM,IAAIvS,GAAW,KAAMT,CAAS,EAAGiT,CAAe,CACzF,CACA,OAAO,6BAA6BjT,EAAWiT,EAAiBpK,EAAS,CACjE,MAAAwK,EAAkBxK,EAAQ,oBAAoB7I,CAAS,EACvDI,EAAY,IAAIK,GAAW,KAAMT,CAAS,EAC1CsT,EAAYzK,EAAQ,cAAc,WAAWzI,CAAS,EACtDmT,EAA0BP,EAAsB,gBACpDC,EACAI,EACAC,CAAA,EAEF,OAAO,IAAIN,EAAsB,KAAM5S,EAAWmT,CAAuB,CAC3E,CACA,IAAI,WAAY,CACd,OAAO,KAAK,UAAU,SACxB,CACA,UAAW,CACT,OAAO,KAAK,gBAAgB,KAAK,GAAG,CACtC,CACA,OAAOvS,EAAO,CACL,OAAAgS,EAAsB,OAAO,KAAMhS,CAAK,CACjD,CACA,OAAO,OAAOpE,EAAGqC,EAAG,CACf,GAIG,GAHArC,IAAMqC,GAGN,CAACrC,GAAK,CAACqC,EACF,SAKT,GAHI,CAACrC,GAAK,CAACqC,GAGPrC,EAAE,YAAcqC,EAAE,WAAarC,EAAE,kBAAoBqC,EAAE,gBAClD,SAETrC,EAAIA,EAAE,OACNqC,EAAIA,EAAE,MACC,UACX,CACA,OAAO,gBAAgBuU,EAAyBC,EAAsBC,EAAiB,CACrF,IAAIpS,EAAY,GACZU,EAAa,EACbC,EAAa,EACjB,OAAIyR,IAAoB,OACtBpS,EAAYoS,EAAgB,UAC5B1R,EAAa0R,EAAgB,aAC7BzR,EAAayR,EAAgB,cAExB3P,EAAqB,IAC1ByP,EACAC,EAAqB,WACrBA,EAAqB,UACrB,KACAnS,EACAU,EACAC,CAAA,CAEJ,CACA,eAAe7B,EAAWyI,EAAS,CACjC,GAAIzI,IAAc,KACT,YAET,GAAIA,EAAU,QAAQ,GAAG,IAAM,GAC7B,OAAO4S,EAAsB,gBAAgB,KAAM5S,EAAWyI,CAAO,EAEjE,MAAAjH,EAASxB,EAAU,MAAM,IAAI,EACnC,IAAIrB,EAAS,KACb,UAAWmD,KAASN,EAClB7C,EAASiU,EAAsB,gBAAgBjU,EAAQmD,EAAO2G,CAAO,EAEhE,OAAA9J,CACT,CACA,OAAO,gBAAgBhB,EAAQiC,EAAW6I,EAAS,CAC3C,MAAA8K,EAAc9K,EAAQ,oBAAoB7I,CAAS,EACnD4T,EAAU7V,EAAO,UAAU,KAAKiC,CAAS,EACzC6T,EAAwBhL,EAAQ,cAAc,WAAW+K,CAAO,EAChEE,EAAWd,EAAsB,gBACrCjV,EAAO,gBACP4V,EACAE,CAAA,EAEF,OAAO,IAAIb,EAAsBjV,EAAQ6V,EAASE,CAAQ,CAC5D,CACA,eAAgB,CACP,YAAK,UAAU,aACxB,CACA,sBAAsB7S,EAAM,CAC1B,MAAMlC,EAAS,GACf,IAAIgV,EAAO,KACJ,KAAAA,GAAQA,IAAS9S,GACtBlC,EAAO,KAAK,CACV,uBAAwBgV,EAAK,gBAC7B,WAAYA,EAAK,UAAU,sBAAsBA,EAAK,QAAQ,WAAa,IAAI,EAChF,EACDA,EAAOA,EAAK,OAEd,OAAOA,IAAS9S,EAAOlC,EAAO,QAAY,QAC5C,CACF,EACIiV,GAAkB,MAAMA,CAAgB,CAY1C,YAAYrT,EAAQ+J,EAAQuJ,EAAUC,EAAWC,EAAsBC,EAAS3F,EAAgBE,EAAuB,CACrH,KAAK,OAAShO,EACd,KAAK,OAAS+J,EACd,KAAK,qBAAuByJ,EAC5B,KAAK,QAAUC,EACf,KAAK,eAAiB3F,EACtB,KAAK,sBAAwBE,EAC7B,KAAK,mBAAqB,OAC1B,KAAK,MAAQ,KAAK,OAAS,KAAK,OAAO,MAAQ,EAAI,EACnD,KAAK,UAAYsF,EACjB,KAAK,WAAaC,CACpB,CACA,OAAOlT,EAAO,CACZ,OAAIA,IAAU,KACL,GAEFgT,EAAgB,QAAQ,KAAMhT,CAAK,CAC5C,CACA,OAAO,QAAQpE,EAAGqC,EAAG,CACnB,OAAIrC,IAAMqC,EACD,GAEJ,KAAK,kBAAkBrC,EAAGqC,CAAC,EAGzB4T,EAAqB,OAAOjW,EAAE,sBAAuBqC,EAAE,qBAAqB,EAF1E,EAGX,CAIA,OAAO,kBAAkBrC,EAAGqC,EAAG,CAC1B,GAIG,GAHArC,IAAMqC,GAGN,CAACrC,GAAK,CAACqC,EACF,SAKL,GAHA,CAACrC,GAAK,CAACqC,GAGPrC,EAAE,QAAUqC,EAAE,OAASrC,EAAE,SAAWqC,EAAE,QAAUrC,EAAE,UAAYqC,EAAE,QAC3D,SAETrC,EAAIA,EAAE,OACNqC,EAAIA,EAAE,MACC,UACX,CACA,OAAQ,CACC,WACT,CACA,OAAO,OAAOoV,EAAI,CAChB,KAAOA,GACLA,EAAG,UAAY,GACfA,EAAG,WAAa,GAChBA,EAAKA,EAAG,MAEZ,CACA,OAAQ,CACNL,EAAgB,OAAO,IAAI,CAC7B,CACA,KAAM,CACJ,OAAO,KAAK,MACd,CACA,SAAU,CACR,OAAI,KAAK,OACA,KAAK,OAEP,IACT,CACA,KAAKtJ,EAAQuJ,EAAUC,EAAWC,EAAsBC,EAAS3F,EAAgBE,EAAuB,CACtG,OAAO,IAAIqF,EACT,KACAtJ,EACAuJ,EACAC,EACAC,EACAC,EACA3F,EACAE,CAAA,CAEJ,CACA,aAAc,CACZ,OAAO,KAAK,SACd,CACA,cAAe,CACb,OAAO,KAAK,UACd,CACA,QAAQ9F,EAAS,CACR,OAAAA,EAAQ,QAAQ,KAAK,MAAM,CACpC,CACA,UAAW,CACT,MAAMnL,EAAI,GACL,yBAAaA,EAAG,CAAC,EACf,IAAMA,EAAE,KAAK,GAAG,EAAI,GAC7B,CACA,aAAa2B,EAAKiV,EAAU,CAC1B,OAAI,KAAK,SACPA,EAAW,KAAK,OAAO,aAAajV,EAAKiV,CAAQ,GAEnDjV,EAAIiV,GAAU,EAAI,IAAI,KAAK,MAAM,KAAK,KAAK,gBAAgB,SAAU,MAAK,KAAK,uBAAuB,UAAU,IACzGA,CACT,CACA,0BAA0BC,EAAuB,CAC3C,YAAK,wBAA0BA,EAC1B,KAEF,KAAK,OAAO,KACjB,KAAK,OACL,KAAK,UACL,KAAK,WACL,KAAK,qBACL,KAAK,QACL,KAAK,eACLA,CAAA,CAEJ,CACA,YAAYH,EAAS,CACf,YAAK,UAAYA,EACZ,KAEF,IAAIJ,EACT,KAAK,OACL,KAAK,OACL,KAAK,UACL,KAAK,WACL,KAAK,qBACLI,EACA,KAAK,eACL,KAAK,sBAET,CAEA,cAAcpT,EAAO,CACnB,IAAIqT,EAAK,KACT,KAAOA,GAAMA,EAAG,YAAcrT,EAAM,WAAW,CACzC,GAAAqT,EAAG,SAAWrT,EAAM,OACf,SAETqT,EAAKA,EAAG,MACV,CACO,QACT,CACA,mBAAoB,CACX,OACL,OAAuB,KAAK,OAC5B,qBAAsB,KAAK,qBAC3B,QAAS,KAAK,QACd,eAAgB,KAAK,gBAAgB,sBAAsB,KAAK,QAAQ,gBAAkB,IAAI,GAAK,CAAC,EACpG,sBAAuB,KAAK,uBAAuB,sBAAsB,KAAK,cAAc,GAAK,CAAC,EAEtG,CACA,OAAO,UAAUN,EAAMX,EAAO,CAC5B,MAAMF,EAAiBL,EAAqB,cAAckB,GAAM,gBAAkB,KAAMX,EAAM,cAAc,EAC5G,OAAO,IAAIY,EACTD,EACiBX,EAAM,OACvBA,EAAM,UAAY,GAClBA,EAAM,WAAa,GACnBA,EAAM,qBACNA,EAAM,QACNF,EACAL,EAAqB,cAAcK,EAAgBE,EAAM,qBAAqB,EAElF,CACF,EAEAY,GAAgB,KAAO,IAAIA,GACzB,KACA,EACA,EACA,EACA,GACA,KACA,KACA,IACF,EACA,IAAIzB,GAAiByB,GACjBQ,GAA2B,KAAM,CACnC,YAAYC,EAAuBC,EAAyB,CAC1D,KAAK,SAAW,GAChB,KAAK,sBAAwBD,EAAsB,QAChD7P,GACKA,IAAa,KACf,KAAK,SAAW,GACT,IAEFD,GAAeC,EAAUsM,EAAW,EAAE,IAAKrE,GAAMA,EAAE,OAAO,CACnE,EAEF,KAAK,wBAA0B6H,EAAwB,QACpD9P,GAAaD,GAAeC,EAAUsM,EAAW,EAAE,IAAKrE,GAAMA,EAAE,OAAO,EAE5E,CACA,IAAI,eAAgB,CAClB,OAAO,KAAK,UAAY,KAAK,wBAAwB,SAAW,CAClE,CACA,IAAI,cAAe,CACjB,OAAO,KAAK,sBAAsB,SAAW,GAAK,CAAC,KAAK,QAC1D,CACA,MAAMjL,EAAQ,CACD,UAAA+S,KAAY,KAAK,wBACtB,GAAAA,EAAS/S,CAAM,EACV,SAGA,UAAAgT,KAAY,KAAK,sBACtB,GAAAA,EAAShT,CAAM,EACV,SAGX,OAAO,KAAK,QACd,CACF,EACImR,GAAa,KAAM,CACrB,YAAYT,EAAkB5J,EAAUmM,EAAoBhE,EAA0B,CACpF,KAAK,yBAA2BA,EAChC,KAAK,kBAAoByB,EACzB,KAAK,oBAAsBuC,EAIzB,KAAK,UAAY,KAEnB,KAAK,QAAU,GACf,KAAK,cAAgB,GACrB,KAAK,mBAAqB,CAC5B,CACA,QAAQ3H,EAAO4H,EAAU,CAClB,uBAAkB5H,EAAM,sBAAuB4H,CAAQ,CAC9D,CACA,kBAAkBC,EAAYD,EAAU,CAClC,QAAK,oBAAsBA,EAC7B,OAEF,GAAI,KAAK,kBAAmB,CACtB,IAAAhB,EAAWiB,GAAY,iBAAmB,EAC1C3Q,EAA2B,GAI/B,GAHI,KAAK,0BAA0B,gBACNA,EAAA,IAEzB,KAAK,oBAAoB,OAAS,GAAK,KAAK,0BAA4B,CAAC,KAAK,yBAAyB,eAAiB,CAAC,KAAK,yBAAyB,aAAc,CACvK,MAAM4Q,EAAUD,GAAY,cAAc,GAAK,GACpC,UAAA5Q,KAAa,KAAK,oBACvBA,EAAU,QAAQ6Q,CAAO,IAC3BlB,EAAW/P,EAAqB,IAC9B+P,EACA,EACoB3P,EAAU,KAC9B,KACA,GACA,EACA,IAIF,KAAK,2BACoBC,EAAA,KAAK,yBAAyB,MAAM4Q,CAAO,EAE1E,CAYI,GAXA5Q,IACF0P,EAAW/P,EAAqB,IAC9B+P,EACA,EACA,EACA1P,EACA,GACA,EACA,IAGA,KAAK,cAAc,OAAS,GAAK,KAAK,cAAc,KAAK,cAAc,OAAS,CAAC,IAAM0P,EAAU,CACnG,KAAK,mBAAqBgB,EAC1B,MACF,CACK,mBAAc,KAAK,KAAK,kBAAkB,EAC1C,mBAAc,KAAKhB,CAAQ,EAChC,KAAK,mBAAqBgB,EAC1B,MACF,CACA,MAAMlT,EAASmT,GAAY,cAAc,GAAK,GAC9C,KAAK,QAAQ,KAAK,CAChB,WAAY,KAAK,mBACjB,SAAAD,EAEA,OAAAlT,CAAA,CACD,EACD,KAAK,mBAAqBkT,CAC5B,CACA,UAAU5H,EAAOQ,EAAY,CAC3B,OAAI,KAAK,QAAQ,OAAS,GAAK,KAAK,QAAQ,KAAK,QAAQ,OAAS,CAAC,EAAE,aAAeA,EAAa,GAC/F,KAAK,QAAQ,MAEX,KAAK,QAAQ,SAAW,IAC1B,KAAK,mBAAqB,GACrB,aAAQR,EAAOQ,CAAU,EAC9B,KAAK,QAAQ,KAAK,QAAQ,OAAS,CAAC,EAAE,WAAa,GAE9C,KAAK,OACd,CACA,gBAAgBR,EAAOQ,EAAY,CAC7B,KAAK,cAAc,OAAS,GAAK,KAAK,cAAc,KAAK,cAAc,OAAS,CAAC,IAAMA,EAAa,IACtG,KAAK,cAAc,MACnB,KAAK,cAAc,OAEjB,KAAK,cAAc,SAAW,IAChC,KAAK,mBAAqB,GACrB,aAAQR,EAAOQ,CAAU,EAC9B,KAAK,cAAc,KAAK,cAAc,OAAS,CAAC,EAAI,GAEtD,MAAM3O,EAAS,IAAI,YAAY,KAAK,cAAc,MAAM,EAC/C,QAAArC,EAAI,EAAGiB,EAAM,KAAK,cAAc,OAAQjB,EAAIiB,EAAKjB,IACxDqC,EAAOrC,CAAC,EAAI,KAAK,cAAcA,CAAC,EAE3B,OAAAqC,CACT,CACF,EAGIkW,GAAe,KAAM,CACvB,YAAYC,EAAOzD,EAAU,CAC3B,KAAK,SAAWA,EACX,mBAAgC,IAChC,sBAAmC,IACnC,4BAAyC,IAC9C,KAAK,OAASyD,CAChB,CACA,SAAU,CACR,UAAWrM,KAAW,KAAK,UAAU,SACnCA,EAAQ,QAAQ,CAEpB,CACA,SAASqM,EAAO,CACd,KAAK,OAASA,CAChB,CACA,aAAc,CACL,YAAK,OAAO,aACrB,CAIA,WAAWrM,EAASiJ,EAAqB,CACvC,KAAK,aAAa,IAAIjJ,EAAQ,UAAWA,CAAO,EAC5CiJ,GACF,KAAK,mBAAmB,IAAIjJ,EAAQ,UAAWiJ,CAAmB,CAEtE,CAIA,OAAO9R,EAAW,CACT,YAAK,aAAa,IAAIA,CAAS,CACxC,CAIA,WAAWmV,EAAa,CACf,YAAK,mBAAmB,IAAIA,CAAW,CAChD,CAIA,aAAc,CACL,YAAK,OAAO,aACrB,CAIA,WAAW/U,EAAW,CACb,YAAK,OAAO,MAAMA,CAAS,CACpC,CAIA,oBAAoBJ,EAAW2Q,EAAiBjE,EAAmBkE,EAAYC,EAA0B,CACvG,GAAI,CAAC,KAAK,UAAU,IAAI7Q,CAAS,EAAG,CAClC,IAAIoV,EAAa,KAAK,aAAa,IAAIpV,CAAS,EAChD,GAAI,CAACoV,EACI,YAEJ,eAAU,IAAIpV,EAAW0Q,GAC5B1Q,EACAoV,EACAzE,EACAjE,EACAkE,EACAC,EACA,KACA,KAAK,SACN,CACH,CACO,YAAK,UAAU,IAAI7Q,CAAS,CACrC,CACF,EAGIqV,GAAW,KAAM,CACnB,YAAY/I,EAAS,CACnB,KAAK,SAAWA,EAChB,KAAK,cAAgB,IAAI2I,GACvBrV,GAAM,mBAAmB0M,EAAQ,MAAOA,EAAQ,QAAQ,EACxDA,EAAQ,SAEL,6BAA0C,GACjD,CACA,SAAU,CACR,KAAK,cAAc,SACrB,CAIA,SAAS4I,EAAOjV,EAAU,CACxB,KAAK,cAAc,SAASL,GAAM,mBAAmBsV,EAAOjV,CAAQ,CAAC,CACvE,CAIA,aAAc,CACL,YAAK,cAAc,aAC5B,CAKA,iCAAiCwG,EAAkBkK,EAAiBjE,EAAmB,CACrF,OAAO,KAAK,6BAA6BjG,EAAkBkK,EAAiB,CAAE,kBAAAjE,EAAmB,CACnG,CAKA,6BAA6BjG,EAAkBkK,EAAiB2E,EAAe,CAC7E,OAAO,KAAK,aACV7O,EACAkK,EACA2E,EAAc,kBACdA,EAAc,WACd,IAAId,GACFc,EAAc,0BAA4B,CAAC,EAC3CA,EAAc,4BAA8B,CAAC,CAC/C,EAEJ,CAIA,YAAY7O,EAAkB,CAC5B,OAAO,KAAK,aAAaA,EAAkB,EAAG,KAAM,KAAM,IAAI,CAChE,CACA,aAAaA,EAAkBkK,EAAiBjE,EAAmBkE,EAAYC,EAA0B,CACvG,MAAM0E,EAAsB,IAAIhP,GAAyB,KAAK,cAAeE,CAAgB,EACtF,KAAA8O,EAAoB,EAAE,OAAS,GAChBA,EAAA,EAAE,IAAKC,GAAY,KAAK,mBAAmBA,EAAQ,SAAS,CAAC,EACjFD,EAAoB,aAAa,EAEnC,OAAO,KAAK,qBACV9O,EACAkK,EACAjE,EACAkE,EACAC,CAAA,CAEJ,CACA,mBAAmB7Q,EAAW,CACvB,KAAK,oBAAoB,IAAIA,CAAS,IACzC,KAAK,qBAAqBA,CAAS,EAC9B,yBAAoB,IAAIA,EAAW,EAAI,EAEhD,CACA,qBAAqBA,EAAW,CAC9B,MAAM6I,EAAU,KAAK,SAAS,YAAY7I,CAAS,EACnD,GAAI6I,EAAS,CACL,MAAA1B,EAAa,OAAO,KAAK,SAAS,eAAkB,WAAa,KAAK,SAAS,cAAcnH,CAAS,EAAI,OAC3G,mBAAc,WAAW6I,EAAS1B,CAAU,CACnD,CACF,CAIA,WAAWiO,EAAYjO,EAAa,GAAIwJ,EAAkB,EAAGjE,EAAoB,KAAM,CAChF,0BAAc,WAAW0I,EAAYjO,CAAU,EAC7C,KAAK,qBAAqBiO,EAAW,UAAWzE,EAAiBjE,CAAiB,CAC3F,CAIA,qBAAqB1M,EAAW2Q,EAAkB,EAAGjE,EAAoB,KAAMkE,EAAa,KAAMC,EAA2B,KAAM,CACjI,OAAO,KAAK,cAAc,oBACxB7Q,EACA2Q,EACAjE,EACAkE,EACAC,CAAA,CAEJ,CACF,EACI4E,GAAUlD,GAAe,MCr5FD,IAAM,CAChC,GAAI,CACF,IAAI,OAAO,OAAO,CACnB,MAAW,CACV,MAAO,EACR,CACD,MAAO,EACT,GAAK,GACiB,IAAM,CAC1B,GAAI,CACF,IAAI,OAAO,GAAI,GAAG,CACnB,MAAW,CACV,MAAO,EACR,CACD,MAAO,EACT,GAAK,EACL,IAAImD,GAAwB,sBAExBC,GAAsB,OAAO,yCAC7BC,GAAiB,OAAO,sCAAsCD,EAAmB,GACjFE,GAAoB,OAAO,6CAmDZ,IAAI,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAanC,QAAQ,OAAQ,EAAE,EAAG,KAAK,EA0E5B,IAAIC,GAAsB,CACxB,cACA,wBACA,8BACA,0BACA,yBACA,yBACA,WACF,EAAE,KAAK,GAAG,EACgB,IAAI,OAAO,OAAO;AAAA;AAAA,qBAEvBA,EAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUtC,QAAQ,OAAQ,EAAE,EAAG,KAAK,EAiDhB,IAAI,OAAO,OAAO;AAAA,EAC5BD,EAAiB;AAAA;AAAA;AAAA;AAAA,EAIjB,QAAQ,OAAQ,EAAE,EAAG,KAAK,EAgCf,IAAI,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAS3BA,EAAiB;AAAA;AAAA,WAEVH,EAAqB;AAAA;AAAA;AAAA,EAG9B,QAAQ,OAAQ,EAAE,EAAG,KAAK,EA2K5B,IAAIK,GAAiB,OAAO,gCACA,IAAI,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAajCA,EAAc;AAAA;AAAA,EAEzB,QAAQ,OAAQ,EAAE,EAAG,KAAK,EA+D5B,IAAIC,GAAoB,OAAO,oCAClB,IAAI,OAAO,OAAO;AAAA,EAC7BA,EAAiB;AAAA,sBACGJ,EAAc;AAAA;AAAA;AAAA;AAAA,EAIlC,QAAQ,OAAQ,EAAE,EAAG,KAAK,EAsN5B,IAAIK,GAA0B,gBACjB,IAAI,OAAO,OAAO;AAAA;AAAA;AAAA,WAGpBP,EAAqB;AAAA;AAAA,sBAEVO,EAAuB;AAAA;AAAA;AAAA,EAG3C,QAAQ,OAAQ,EAAE,EAAG,KAAK,ECr3B5B,MAAMC,UAAmB,KAAM,CAC3B,YAAYC,EAAS,CACjB,MAAMA,CAAO,EACb,KAAK,KAAO,YACf,CACL,CAEA,SAASC,IAAa,CAClB,MAAO,WACX,CACA,SAASC,IAAsB,CAC3B,OAAO,OAAO,YAAgB,IAAc,YAAY,MAAQ,KAAK,KACzE,CACA,MAAMC,GAAU,CAACC,EAAGC,IAAaD,GAAMC,EAAYD,EAAIC,GAAaA,EACpE,eAAeC,GAAKC,EAAM,CACtB,IAAIC,EACAC,EACJ,MAAMC,EAAU,GAChB,SAASC,EAA2BC,EAAK,CACrCH,EAASG,EACTF,EAAQ,OAAS,IAAI,WAAWE,CAAG,EACnCF,EAAQ,QAAU,IAAI,YAAYE,CAAG,CACxC,CACD,SAASC,EAAuBC,EAAMC,EAAKC,EAAK,CAC5CN,EAAQ,OAAO,WAAWI,EAAMC,EAAKA,EAAMC,CAAG,CACjD,CACD,SAASC,EAA0BC,EAAM,CACrC,GAAI,CACA,OAAAV,EAAW,KAAMU,EAAOT,EAAO,WAAa,QAAW,EAAE,EACzDE,EAA2BH,EAAW,MAAM,EACrC,CACV,MACK,CAAG,CACZ,CACD,SAASW,EAAwBC,EAAe,CAC5C,MAAMC,EAAUX,EAAQ,OAAO,OAC/BU,EAAgBA,IAAkB,EAClC,MAAME,EAAcrB,KACpB,GAAImB,EAAgBE,EAChB,MAAO,GACX,QAASC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAC9C,IAAIC,EAAoBH,GAAW,EAAI,GAAME,GAC7CC,EAAoB,KAAK,IAAIA,EAAmBJ,EAAgB,SAAS,EACzE,MAAMK,EAAU,KAAK,IAAIH,EAAanB,GAAQ,KAAK,IAAIiB,EAAeI,CAAiB,EAAG,KAAK,CAAC,EAEhG,GADoBP,EAA0BQ,CAAO,EAEjD,MAAO,EACd,CACD,MAAO,EACV,CACD,MAAMC,EAAc,OAAO,YAAe,IAAc,IAAI,YAAY,MAAM,EAAI,OAClF,SAASC,EAAkBC,EAAa3Z,EAAK4Z,EAAiB,KAAM,CAChE,MAAMC,EAAS7Z,EAAM4Z,EACrB,IAAIE,EAAS9Z,EACb,KAAO2Z,EAAYG,CAAM,GAAK,EAAEA,GAAUD,IACtC,EAAEC,EACN,GAAIA,EAAS9Z,EAAM,IAAM2Z,EAAY,QAAUF,EAC3C,OAAOA,EAAY,OAAOE,EAAY,SAAS3Z,EAAK8Z,CAAM,CAAC,EAE/D,IAAIjS,EAAM,GACV,KAAO7H,EAAM8Z,GAAQ,CACjB,IAAIC,EAAKJ,EAAY3Z,GAAK,EAC1B,GAAI,EAAE+Z,EAAK,KAAM,CACblS,GAAO,OAAO,aAAakS,CAAE,EAC7B,QACH,CACD,MAAMC,EAAKL,EAAY3Z,GAAK,EAAI,GAChC,IAAK+Z,EAAK,OAAS,IAAK,CACpBlS,GAAO,OAAO,cAAekS,EAAK,KAAO,EAAKC,CAAE,EAChD,QACH,CACD,MAAMC,EAAKN,EAAY3Z,GAAK,EAAI,GAUhC,IATK+Z,EAAK,OAAS,IACfA,GAAOA,EAAK,KAAO,GAAOC,GAAM,EAAKC,EAGrCF,GAAOA,EAAK,IAAM,GACXC,GAAM,GACNC,GAAM,EACNN,EAAY3Z,GAAK,EAAI,GAE5B+Z,EAAK,MACLlS,GAAO,OAAO,aAAakS,CAAE,MAE5B,CACD,MAAMpM,EAAKoM,EAAK,MAChBlS,GAAO,OAAO,aAAa,MAAS8F,GAAM,GAAK,MAASA,EAAK,IAAK,CACrE,CACJ,CACD,OAAO9F,CACV,CACD,SAASqS,EAAaC,EAAKP,EAAgB,CACvC,OAAOO,EAAMT,EAAkBjB,EAAQ,OAAQ0B,EAAKP,CAAc,EAAI,EACzE,CACD,MAAMQ,EAAgB,CAClB,mBAAoBnC,GACpB,sBAAuBW,EACvB,uBAAwBM,EACxB,SAAU,IAAM,CACxB,EACI,eAAemB,GAAa,CAKxB,MAAMC,EAAU,MAAMhC,EAJT,CACT,IAAK8B,EACL,uBAAwBA,CACpC,CACuC,EAC/B7B,EAAa+B,EAAQ,OACrB5B,EAA2BH,EAAW,MAAM,EAC5C,OAAO,OAAOE,EAAS6B,CAAO,EAC9B7B,EAAQ,aAAeyB,CAC1B,CACD,aAAMG,EAAU,EACT5B,CACX,CAKA,IAAI8B,EAAc,KAElB,SAASC,GAAmBD,EAAa,CACrC,MAAM,IAAIzC,EAAWyC,EAAY,aAAaA,EAAY,iBAAkB,EAAC,CACjF,CACA,MAAME,EAAU,CACZ,OAAO,gBAAgB5S,EAAK,CACxB,IAAIlH,EAAS,EACb,QAASrC,EAAI,EAAGiB,EAAMsI,EAAI,OAAQvJ,EAAIiB,EAAKjB,IAAK,CAC5C,MAAMoc,EAAW7S,EAAI,WAAWvJ,CAAC,EACjC,IAAIqc,EAAYD,EACZE,EAAmB,GACvB,GAAIF,GAAY,OAAUA,GAAY,OAE9Bpc,EAAI,EAAIiB,EAAK,CACb,MAAMsb,EAAehT,EAAI,WAAWvJ,EAAI,CAAC,EACrCuc,GAAgB,OAAUA,GAAgB,QAE1CF,GAAeD,EAAW,OAAW,IAAM,MAAYG,EAAe,MACtED,EAAmB,GAE1B,CAEDD,GAAa,IACbha,GAAU,EACLga,GAAa,KAClBha,GAAU,EACLga,GAAa,MAClBha,GAAU,EAEVA,GAAU,EACVia,GACAtc,GACP,CACD,OAAOqC,CACV,CACD,YACA,WACA,WACA,UACA,kBACA,kBACA,YAAYkH,EAAK,CACb,MAAMiT,EAAcjT,EAAI,OAClBkT,EAAaN,GAAU,gBAAgB5S,CAAG,EAC1CmT,EAAyBD,IAAeD,EACxCG,EAAoBD,EAAwB,IAAI,YAAYF,EAAc,CAAC,EAAI,KACjFE,IACAC,EAAkBH,CAAW,EAAIC,GACrC,MAAMG,EAAoBF,EAAwB,IAAI,YAAYD,EAAa,CAAC,EAAI,KAChFC,IACAE,EAAkBH,CAAU,EAAID,GACpC,MAAMK,EAAY,IAAI,WAAWJ,CAAU,EAC3C,IAAIK,EAAK,EACT,QAASC,EAAM,EAAGA,EAAMP,EAAaO,IAAO,CACxC,MAAMX,EAAW7S,EAAI,WAAWwT,CAAG,EACnC,IAAIC,EAAYZ,EACZE,EAAmB,GACvB,GAAIF,GAAY,OAAUA,GAAY,OAE9BW,EAAM,EAAIP,EAAa,CACvB,MAAMD,EAAehT,EAAI,WAAWwT,EAAM,CAAC,EACvCR,GAAgB,OAAUA,GAAgB,QAE1CS,GAAeZ,EAAW,OAAW,IAAM,MAAYG,EAAe,MACtED,EAAmB,GAE1B,CAEDI,IACAC,EAAkBI,CAAG,EAAID,EACrBR,IACAK,EAAkBI,EAAM,CAAC,EAAID,GAC7BE,GAAa,IACbJ,EAAkBE,EAAK,CAAC,EAAIC,EAEvBC,GAAa,MAClBJ,EAAkBE,EAAK,CAAC,EAAIC,EAC5BH,EAAkBE,EAAK,CAAC,EAAIC,GAEvBC,GAAa,OAClBJ,EAAkBE,EAAK,CAAC,EAAIC,EAC5BH,EAAkBE,EAAK,CAAC,EAAIC,EAC5BH,EAAkBE,EAAK,CAAC,EAAIC,IAG5BH,EAAkBE,EAAK,CAAC,EAAIC,EAC5BH,EAAkBE,EAAK,CAAC,EAAIC,EAC5BH,EAAkBE,EAAK,CAAC,EAAIC,EAC5BH,EAAkBE,EAAK,CAAC,EAAIC,IAGhCC,GAAa,IACbH,EAAUC,GAAI,EAAIE,EAEbA,GAAa,MAClBH,EAAUC,GAAI,EAAI,KAAeE,EAAY,QAAwC,EACrFH,EAAUC,GAAI,EAAI,KAAeE,EAAY,MAAwC,GAEhFA,GAAa,OAClBH,EAAUC,GAAI,EAAI,KAAeE,EAAY,SAAwC,GACrFH,EAAUC,GAAI,EAAI,KAAeE,EAAY,QAAwC,EACrFH,EAAUC,GAAI,EAAI,KAAeE,EAAY,MAAwC,IAGrFH,EAAUC,GAAI,EAAI,KAAeE,EAAY,WAAwC,GACrFH,EAAUC,GAAI,EAAI,KAAeE,EAAY,UAAwC,GACrFH,EAAUC,GAAI,EAAI,KAAeE,EAAY,QAAwC,EACrFH,EAAUC,GAAI,EAAI,KAAeE,EAAY,MAAwC,GAErFV,GACAS,GACP,CACD,KAAK,YAAcP,EACnB,KAAK,WAAaC,EAClB,KAAK,WAAalT,EAClB,KAAK,UAAYsT,EACjB,KAAK,kBAAoBF,EACzB,KAAK,kBAAoBC,CAC5B,CACD,aAAaX,EAAa,CACtB,MAAM5Z,EAAS4Z,EAAY,QAAQ,KAAK,UAAU,EAClD,OAAAA,EAAY,OAAO,IAAI,KAAK,UAAW5Z,CAAM,EACtCA,CACV,CACL,CACA,MAAM4a,CAAW,CACb,OAAO,QAAU,EACjB,OAAO,WAAa,EACpB,OAAO,gBAAkB,GACzB,GAAM,EAAEA,EAAW,QACnB,aACA,QACA,YACA,WACA,kBACA,kBACA,IACA,YAAY1T,EAAK,CACb,GAAI,CAAC0S,EACD,MAAM,IAAIzC,EAAW,6BAA6B,EACtD,KAAK,aAAeyC,EACpB,KAAK,QAAU1S,EACf,MAAM2T,EAAY,IAAIf,GAAU5S,CAAG,EACnC,KAAK,YAAc2T,EAAU,YAC7B,KAAK,WAAaA,EAAU,WAC5B,KAAK,kBAAoBA,EAAU,kBACnC,KAAK,kBAAoBA,EAAU,kBAC/B,KAAK,WAAa,KAAS,CAACD,EAAW,iBAClCA,EAAW,aACZA,EAAW,WAAahB,EAAY,QAAQ,GAAK,GACrDgB,EAAW,gBAAkB,GAC7BhB,EAAY,OAAO,IAAIiB,EAAU,UAAWD,EAAW,UAAU,EACjE,KAAK,IAAMA,EAAW,YAGtB,KAAK,IAAMC,EAAU,aAAajB,CAAW,CAEpD,CACD,yBAAyBkB,EAAY,CACjC,OAAI,KAAK,kBACDA,EAAa,EACN,EACPA,EAAa,KAAK,WACX,KAAK,YACT,KAAK,kBAAkBA,CAAU,EAErCA,CACV,CACD,yBAAyBC,EAAa,CAClC,OAAI,KAAK,kBACDA,EAAc,EACP,EACPA,EAAc,KAAK,YACZ,KAAK,WACT,KAAK,kBAAkBA,CAAW,EAEtCA,CACV,CACD,SAAU,CACF,KAAK,MAAQH,EAAW,WACxBA,EAAW,gBAAkB,GAE7B,KAAK,aAAa,MAAM,KAAK,GAAG,CACvC,CACL,CACA,MAAMI,EAAY,CACd,aACA,KACA,YAAYxQ,EAAU,CAClB,GAAI,CAACoP,EACD,MAAM,IAAIzC,EAAW,6BAA6B,EACtD,MAAM8D,EAAa,GACbC,EAAY,GAClB,QAASvd,EAAI,EAAGiB,EAAM4L,EAAS,OAAQ7M,EAAIiB,EAAKjB,IAAK,CACjD,MAAMkd,EAAY,IAAIf,GAAUtP,EAAS7M,CAAC,CAAC,EAC3Csd,EAAWtd,CAAC,EAAIkd,EAAU,aAAajB,CAAW,EAClDsB,EAAUvd,CAAC,EAAIkd,EAAU,UAC5B,CACD,MAAMM,EAAavB,EAAY,QAAQ,EAAIpP,EAAS,MAAM,EAC1DoP,EAAY,QAAQ,IAAIqB,EAAYE,EAAa,CAAC,EAClD,MAAMC,EAAYxB,EAAY,QAAQ,EAAIpP,EAAS,MAAM,EACzDoP,EAAY,QAAQ,IAAIsB,EAAWE,EAAY,CAAC,EAChD,MAAMC,EAAazB,EAAY,kBAAkBuB,EAAYC,EAAW5Q,EAAS,MAAM,EACvF,QAAS7M,EAAI,EAAGiB,EAAM4L,EAAS,OAAQ7M,EAAIiB,EAAKjB,IAC5Cic,EAAY,MAAMqB,EAAWtd,CAAC,CAAC,EACnCic,EAAY,MAAMwB,CAAS,EAC3BxB,EAAY,MAAMuB,CAAU,EACxBE,IAAe,GACfxB,GAAmBD,CAAW,EAClC,KAAK,aAAeA,EACpB,KAAK,KAAOyB,CACf,CACD,SAAU,CACN,KAAK,aAAa,gBAAgB,KAAK,IAAI,CAC9C,CACD,kBAAkBhO,EAAQC,EAAegO,EAAK,CAE1C,IAAI/N,EAAU,EAMd,GALI,OAAO+N,GAAQ,WAGf/N,EAAU+N,GAEV,OAAOjO,GAAW,SAAU,CAC5BA,EAAS,IAAIuN,EAAWvN,CAAM,EAC9B,MAAMrN,EAAS,KAAK,mBAAmBqN,EAAQC,EAAe,GAAOC,CAAO,EAC5E,OAAAF,EAAO,QAAO,EACPrN,CACV,CACD,OAAO,KAAK,mBAAmBqN,EAAQC,EAAe,GAAOC,CAAO,CACvE,CACD,mBAAmBF,EAAQC,EAAeiO,EAAWhO,EAAS,CAC1D,MAAMqM,EAAc,KAAK,aAKnB4B,EAAY5B,EAAY,yBAAyB,KAAK,KAAMvM,EAAO,GAAIA,EAAO,IAAKA,EAAO,WAAYA,EAAO,yBAAyBC,CAAa,EAAGC,CAAO,EACnK,GAAIiO,IAAc,EAEd,OAAO,KAEX,MAAMC,EAAU7B,EAAY,QAC5B,IAAI8B,EAASF,EAAY,EACzB,MAAM5b,EAAQ6b,EAAQC,GAAQ,EACxBC,EAAQF,EAAQC,GAAQ,EACxBhc,EAAiB,GACvB,QAAS/B,EAAI,EAAGA,EAAIge,EAAOhe,IAAK,CAC5B,MAAMie,EAAMvO,EAAO,yBAAyBoO,EAAQC,GAAQ,CAAC,EACvD7Q,EAAMwC,EAAO,yBAAyBoO,EAAQC,GAAQ,CAAC,EAC7Dhc,EAAe/B,CAAC,EAAI,CAChB,MAAOie,EACP,IAAA/Q,EACA,OAAQA,EAAM+Q,CAC9B,CACS,CACD,MAAO,CACH,MAAAhc,EACA,eAAAF,CACZ,CACK,CACL,CACA,SAASmc,GAA4BC,EAAe,CAChD,OAAQ,OAAOA,EAAc,cAAiB,UAClD,CACA,SAASC,GAAqBD,EAAe,CACzC,OAAQ,OAAOA,EAAc,SAAY,UAC7C,CACA,SAASE,GAAoBF,EAAe,CACxC,OAAQ,OAAOA,EAAc,KAAS,GAC1C,CACA,SAASG,GAAWH,EAAe,CAC/B,OAAQ,OAAO,SAAa,KAAeA,aAAyB,QACxE,CACA,SAASI,GAAcC,EAAM,CACzB,OAAQ,OAAO,YAAgB,MAAgBA,aAAgB,aAAe,YAAY,OAAOA,CAAI,IAE7F,OAAO,OAAW,KAAe,OAAO,WAAWA,CAAI,GACvD,OAAO,kBAAsB,KAAeA,aAAgB,mBAC5D,OAAO,YAAgB,KAAeA,aAAgB,WAClE,CACA,IAAIC,GACJ,SAASC,GAAS9O,EAAS,CACvB,GAAI6O,GACA,OAAOA,GACX,eAAeE,GAAQ,CACnB1C,EAAc,MAAMlC,GAAK,MAAO1Z,GAAS,CACrC,IAAIue,EAAWhP,EACf,OAAAgP,EAAW,MAAMA,EACb,OAAOA,GAAa,aACpBA,EAAW,MAAMA,EAASve,CAAI,GAC9B,OAAOue,GAAa,aACpBA,EAAW,MAAMA,EAASve,CAAI,GAC9B6d,GAA4BU,CAAQ,EACpCA,EAAW,MAAMA,EAAS,aAAave,CAAI,EAEtC+d,GAAqBQ,CAAQ,EAClCA,EAAW,MAAMA,EAAS,QAAQve,CAAI,GAGlCge,GAAoBO,CAAQ,IAC5BA,EAAWA,EAAS,MACpBN,GAAWM,CAAQ,EACf,OAAO,YAAY,sBAAyB,WAC5CA,EAAW,MAAMC,GAA6BD,CAAQ,EAAEve,CAAI,EAE5Due,EAAW,MAAME,GAAgCF,CAAQ,EAAEve,CAAI,EAE9Dke,GAAcK,CAAQ,EAC3BA,EAAW,MAAMG,GAAuBH,CAAQ,EAAEve,CAAI,EAIjDue,aAAoB,YAAY,OACrCA,EAAW,MAAMG,GAAuBH,CAAQ,EAAEve,CAAI,EAEjD,YAAaue,GAAYA,EAAS,mBAAmB,YAAY,SACtEA,EAAW,MAAMG,GAAuBH,EAAS,OAAO,EAAEve,CAAI,IAGlE,aAAcue,IACdA,EAAWA,EAAS,UACpB,YAAaA,IACbA,EAAWA,EAAS,SACjBA,CACnB,CAAS,CACJ,CACD,OAAAH,GAAcE,EAAK,EACZF,EACX,CACA,SAASM,GAAuBP,EAAM,CAClC,OAAOQ,GAAgB,YAAY,YAAYR,EAAMQ,CAAY,CACrE,CACA,SAASH,GAA6BL,EAAM,CACxC,OAAOQ,GAAgB,YAAY,qBAAqBR,EAAMQ,CAAY,CAC9E,CACA,SAASF,GAAgCN,EAAM,CAC3C,MAAO,OAAOQ,GAAiB,CAC3B,MAAMC,EAAc,MAAMT,EAAK,cAC/B,OAAO,YAAY,YAAYS,EAAaD,CAAY,CAChE,CACA,CAWA,eAAeE,GAAqBtP,EAAS,CACzC,OAAIA,GACA,MAAM8O,GAAS9O,CAAO,EACnB,CACH,cAAc/C,EAAU,CACpB,OAAO,IAAIwQ,GAAYxQ,CAAQ,CAClC,EACD,aAAasS,EAAG,CACZ,OAAO,IAAIlC,EAAWkC,CAAC,CAC1B,CACT,CACA,CAQA,SAASC,GAAWC,EAAMC,EAAiB,GAAO,CAC9C,MAAMC,EAAQF,EAAK,MAAM,UAAU,EACnC,IAAIpd,EAAQ,EACZ,MAAMud,EAAQ,GACd,QAASxf,EAAI,EAAGA,EAAIuf,EAAM,OAAQvf,GAAK,EAAG,CACtC,MAAMyf,EAAOH,EACPC,EAAMvf,CAAC,GAAKuf,EAAMvf,EAAI,CAAC,GAAK,IAC5Buf,EAAMvf,CAAC,EACbwf,EAAM,KAAK,CAACC,EAAMxd,CAAK,CAAC,EACxBA,GAASsd,EAAMvf,CAAC,EAAE,OAClBiC,GAASsd,EAAMvf,EAAI,CAAC,GAAG,QAAU,CACpC,CACD,OAAOwf,CACX,CAMA,SAASE,GAAYC,EAAM,CACvB,MAAO,CAACA,GAAQ,CAAC,YAAa,MAAO,OAAQ,OAAO,EAAE,SAASA,CAAI,CACvE,CAMA,SAASC,GAAcD,EAAM,CACzB,OAAOA,IAAS,QAAUD,GAAYC,CAAI,CAC9C,CAMA,SAASE,GAAYrH,EAAO,CACxB,OAAOA,IAAU,MACrB,CAMA,SAASsH,GAAetH,EAAO,CAC3B,OAAOqH,GAAYrH,CAAK,CAC5B,CAMA,SAASuH,GAAe5N,EAAM6N,EAAW,CACrC,GAAI,CAACA,EACD,OAAO7N,EACXA,EAAK,aAAe,GACpBA,EAAK,WAAW,QAAU,GACtB,OAAOA,EAAK,WAAW,OAAU,WACjCA,EAAK,WAAW,MAAQA,EAAK,WAAW,MAAM,MAAM,MAAM,GACzD,MAAM,QAAQA,EAAK,WAAW,KAAK,IACpCA,EAAK,WAAW,MAAQ,IAC5B,MAAM8N,EAAU,MAAM,QAAQD,CAAS,EAAIA,EAAYA,EAAU,MAAM,MAAM,EAC7E,UAAWE,KAAKD,EACRC,GAAK,CAAC/N,EAAK,WAAW,MAAM,SAAS+N,CAAC,GACtC/N,EAAK,WAAW,MAAM,KAAK+N,CAAC,EAEpC,OAAO/N,CACX,CAMA,SAASgO,GAAW5X,EAAO6X,EAAS,CAChC,IAAIC,EAAa,EACjB,MAAMC,EAAS,GACf,UAAWvC,KAAUqC,EACbrC,EAASsC,GACTC,EAAO,KAAK,CACR,GAAG/X,EACH,QAASA,EAAM,QAAQ,MAAM8X,EAAYtC,CAAM,EAC/C,OAAQxV,EAAM,OAAS8X,CACvC,CAAa,EAELA,EAAatC,EAEjB,OAAIsC,EAAa9X,EAAM,QAAQ,QAC3B+X,EAAO,KAAK,CACR,GAAG/X,EACH,QAASA,EAAM,QAAQ,MAAM8X,CAAU,EACvC,OAAQ9X,EAAM,OAAS8X,CACnC,CAAS,EAEEC,CACX,CAIA,SAASC,GAAYD,EAAQE,EAAa,CACtC,MAAMC,EAAS,MACV,KAAKD,aAAuB,IAAMA,EAAc,IAAI,IAAIA,CAAW,CAAC,EACpE,KAAK,CAACtgB,EAAGqC,IAAMrC,EAAIqC,CAAC,EACzB,OAAKke,EAAO,OAELH,EAAO,IAAKb,GACRA,EAAK,QAASlX,GAAU,CAC3B,MAAMmY,EAAqBD,EACtB,OAAOzgB,GAAKuI,EAAM,OAASvI,GAAKA,EAAIuI,EAAM,OAASA,EAAM,QAAQ,MAAM,EACvE,IAAIvI,GAAKA,EAAIuI,EAAM,MAAM,EACzB,KAAK,CAACrI,EAAGqC,IAAMrC,EAAIqC,CAAC,EACzB,OAAKme,EAAmB,OAEjBP,GAAW5X,EAAOmY,CAAkB,EADhCnY,CAEvB,CAAS,CACJ,EAXU+X,CAYf,CAIA,eAAeK,GAAgBC,EAAG,CAC9B,OAAO,QAAQ,QAAQ,OAAOA,GAAM,WAAaA,EAAG,EAAGA,CAAC,EAAE,KAAK5f,GAAKA,EAAE,SAAWA,CAAC,CACtF,CACA,SAAS6f,GAAyBrI,EAAO5I,EAAS,CAC9C,MAAMkR,EAAe,OAAOtI,GAAU,SAAW,CAAE,EAAG,CAAE,GAAGA,EAAM,mBAC3DuI,EAAY,OAAOvI,GAAU,SAAWA,EAAQA,EAAM,KAC5D,SAAW,CAACrX,EAAK4B,CAAK,IAAK,OAAO,QAAQ6M,GAAS,mBAAqB,EAAE,EAClE,OAAO7M,GAAU,SACjB+d,EAAa3f,CAAG,EAAI4B,EACf5B,IAAQ4f,GACb,OAAO,OAAOD,EAAc/d,CAAK,EAEzC,OAAO+d,CACX,CACA,SAASE,EAAuB3a,EAAOya,EAAc,CACjD,OAAKza,IAEEya,IAAeza,GAAO,YAAa,IAAKA,EACnD,CACA,SAAS4a,GAAoB1Y,EAAO,CAChC,MAAM2Y,EAAS,GACf,OAAI3Y,EAAM,QACN2Y,EAAO,MAAQ3Y,EAAM,OACrBA,EAAM,UACN2Y,EAAO,kBAAkB,EAAI3Y,EAAM,SACnCA,EAAM,YACFA,EAAM,UAAY9H,EAAU,SAC5BygB,EAAO,YAAY,EAAI,UACvB3Y,EAAM,UAAY9H,EAAU,OAC5BygB,EAAO,aAAa,EAAI,QACxB3Y,EAAM,UAAY9H,EAAU,YAC5BygB,EAAO,iBAAiB,EAAI,cAE7BA,CACX,CACA,SAASC,GAAoB5Y,EAAO,CAChC,OAAO,OAAO,QAAQA,CAAK,EAAE,IAAI,CAAC,CAACpH,EAAK4B,CAAK,IAAM,GAAG5B,CAAG,IAAI4B,CAAK,EAAE,EAAE,KAAK,GAAG,CAClF,CAMA,SAASqe,GAAwB/B,EAAM,CACnC,MAAMG,EAAQJ,GAAWC,EAAM,EAAI,EAAE,IAAI,CAAC,CAACI,CAAI,IAAMA,CAAI,EACzD,SAAS4B,EAAWpf,EAAO,CACvB,GAAIA,IAAUod,EAAK,OACf,MAAO,CACH,KAAMG,EAAM,OAAS,EACrB,UAAWA,EAAMA,EAAM,OAAS,CAAC,EAAE,MACnD,EAEQ,IAAI8B,EAAYrf,EACZwd,EAAO,EACX,UAAWzT,KAAYwT,EAAO,CAC1B,GAAI8B,EAAYtV,EAAS,OACrB,MACJsV,GAAatV,EAAS,OACtByT,GACH,CACD,MAAO,CAAE,KAAAA,EAAM,UAAA6B,EAClB,CACD,SAASC,EAAW9B,EAAM6B,EAAW,CACjC,IAAIrf,EAAQ,EACZ,QAASjC,EAAI,EAAGA,EAAIyf,EAAMzf,IACtBiC,GAASud,EAAMxf,CAAC,EAAE,OACtB,OAAAiC,GAASqf,EACFrf,CACV,CACD,MAAO,CACH,MAAAud,EACA,WAAA6B,EACA,WAAAE,CACR,CACA,CAKA,SAASC,IAAyB,CAC9B,MAAMC,EAAM,IAAI,QAChB,SAASC,EAAWC,EAAO,CACvB,GAAI,CAACF,EAAI,IAAIE,EAAM,IAAI,EAAG,CAEtB,IAASC,EAAT,SAA2BhB,EAAG,CAC1B,GAAI,OAAOA,GAAM,SAAU,CACvB,GAAIA,EAAI,GAAKA,EAAIe,EAAM,OAAO,OAC1B,MAAM,IAAInI,EAAW,8BAA8BoH,CAAC,kBAAkBe,EAAM,OAAO,MAAM,EAAE,EAC/F,MAAO,CACH,GAAGE,EAAU,WAAWjB,CAAC,EACzB,OAAQA,CAChC,CACiB,KACI,CACD,MAAMnB,EAAOoC,EAAU,MAAMjB,EAAE,IAAI,EACnC,GAAInB,IAAS,OACT,MAAM,IAAIjG,EAAW,+BAA+B,KAAK,UAAUoH,CAAC,CAAC,mBAAmBiB,EAAU,MAAM,MAAM,EAAE,EACpH,GAAIjB,EAAE,UAAY,GAAKA,EAAE,UAAYnB,EAAK,OACtC,MAAM,IAAIjG,EAAW,+BAA+B,KAAK,UAAUoH,CAAC,CAAC,UAAUA,EAAE,IAAI,YAAYnB,EAAK,MAAM,EAAE,EAClH,MAAO,CACH,GAAGmB,EACH,OAAQiB,EAAU,WAAWjB,EAAE,KAAMA,EAAE,SAAS,CACxE,CACiB,CACJ,EArBD,MAAMiB,EAAYT,GAAwBO,EAAM,MAAM,EAsBhDG,GAAeH,EAAM,QAAQ,aAAe,CAAE,GAC/C,IAAKI,IAAO,CACb,GAAGA,EACH,MAAOH,EAAkBG,EAAE,KAAK,EAChC,IAAKH,EAAkBG,EAAE,GAAG,CAC/B,EAAC,EACFC,GAAoBF,CAAW,EAC/BL,EAAI,IAAIE,EAAM,KAAM,CAChB,YAAAG,EACA,UAAAD,EACA,OAAQF,EAAM,MAC9B,CAAa,CACJ,CACD,OAAOF,EAAI,IAAIE,EAAM,IAAI,CAC5B,CACD,MAAO,CACH,KAAM,oBACN,OAAOrB,EAAQ,CACX,GAAI,CAAC,KAAK,QAAQ,aAAa,OAC3B,OAEJ,MAAME,EADMkB,EAAW,IAAI,EACH,YAAY,QAAQK,GAAK,CAACA,EAAE,MAAM,OAAQA,EAAE,IAAI,MAAM,CAAC,EAE/E,OADiBxB,GAAYD,EAAQE,CAAW,CAEnD,EACD,KAAKyB,EAAQ,CACT,GAAI,CAAC,KAAK,QAAQ,aAAa,OAC3B,OACJ,MAAMC,EAAMR,EAAW,IAAI,EACrBlC,EAAQ,MAAM,KAAKyC,EAAO,QAAQ,EAAE,OAAOjiB,GAAKA,EAAE,OAAS,WAAaA,EAAE,UAAY,MAAM,EAClG,GAAIwf,EAAM,SAAW0C,EAAI,UAAU,MAAM,OACrC,MAAM,IAAI1I,EAAW,oCAAoCgG,EAAM,MAAM,uDAAuD0C,EAAI,UAAU,MAAM,MAAM,iCAAiC,EAC3L,SAASC,EAAiB1C,EAAM2C,EAAOlV,EAAKmV,EAAY,CACpD,MAAMC,EAAS9C,EAAMC,CAAI,EACzB,IAAI8C,EAAO,GACPC,EAAa,GACbpK,EAAW,GAOf,GANIgK,IAAU,IACVI,EAAa,GACbtV,IAAQ,IACRkL,EAAW,GACXlL,IAAQ,OAAO,oBACfkL,EAAWkK,EAAO,SAAS,QAC3BE,IAAe,IAAMpK,IAAa,GAClC,QAASpY,EAAI,EAAGA,EAAIsiB,EAAO,SAAS,OAAQtiB,IACxCuiB,GAAQE,GAAYH,EAAO,SAAStiB,CAAC,CAAC,EAClCwiB,IAAe,IAAMD,EAAK,SAAWH,IACrCI,EAAaxiB,EAAI,GACjBoY,IAAa,IAAMmK,EAAK,SAAWrV,IACnCkL,EAAWpY,EAAI,GAG3B,GAAIwiB,IAAe,GACf,MAAM,IAAIhJ,EAAW,6CAA6C,KAAK,UAAU6I,EAAW,KAAK,CAAC,EAAE,EACxG,GAAIjK,IAAa,GACb,MAAM,IAAIoB,EAAW,2CAA2C,KAAK,UAAU6I,EAAW,GAAG,CAAC,EAAE,EACpG,MAAMK,EAAWJ,EAAO,SAAS,MAAME,EAAYpK,CAAQ,EAE3D,GAAI,CAACiK,EAAW,YAAcK,EAAS,SAAWJ,EAAO,SAAS,OAC9DK,EAAgBL,EAAQD,EAAY,MAAM,UAGrC,CAACA,EAAW,YAAcK,EAAS,SAAW,GAAKA,EAAS,CAAC,EAAE,OAAS,UAC7EC,EAAgBD,EAAS,CAAC,EAAGL,EAAY,OAAO,MAG/C,CACD,MAAMO,EAAU,CACZ,KAAM,UACN,QAAS,OACT,WAAY,CAAE,EACd,SAAAF,CACxB,EACoBC,EAAgBC,EAASP,EAAY,SAAS,EAC9CC,EAAO,SAAS,OAAOE,EAAYE,EAAS,OAAQE,CAAO,CAC9D,CACJ,CACD,SAASC,EAAUpD,EAAM4C,EAAY,CACjC7C,EAAMC,CAAI,EAAIkD,EAAgBnD,EAAMC,CAAI,EAAG4C,EAAY,MAAM,CAChE,CACD,SAASM,EAAgBhL,EAAI0K,EAAYS,EAAM,CAC3C,MAAMC,EAAaV,EAAW,YAAc,GACtCW,EAAYX,EAAW,YAAcriB,GAAKA,GAChD,OAAA2X,EAAG,QAAU0K,EAAW,SAAW,OACnC1K,EAAG,WAAa,CACZ,GAAGA,EAAG,WACN,GAAGoL,EACH,MAAOpL,EAAG,WAAW,KACzC,EACoB0K,EAAW,YAAY,OACvBtC,GAAepI,EAAI0K,EAAW,WAAW,KAAK,EAClD1K,EAAKqL,EAAUrL,EAAImL,CAAI,GAAKnL,EACrBA,CACV,CACD,MAAMsL,EAAc,GAEdxC,EAASyB,EAAI,YAAY,KAAK,CAAChiB,EAAGqC,IAAMA,EAAE,MAAM,OAASrC,EAAE,MAAM,MAAM,EAC7E,UAAWmiB,KAAc5B,EAAQ,CAC7B,KAAM,CAAE,MAAA2B,EAAO,IAAAlV,CAAK,EAAGmV,EACvB,GAAID,EAAM,OAASlV,EAAI,KACnBiV,EAAiBC,EAAM,KAAMA,EAAM,UAAWlV,EAAI,UAAWmV,CAAU,UAElED,EAAM,KAAOlV,EAAI,KAAM,CAC5BiV,EAAiBC,EAAM,KAAMA,EAAM,UAAW,OAAO,kBAAmBC,CAAU,EAClF,QAASriB,EAAIoiB,EAAM,KAAO,EAAGpiB,EAAIkN,EAAI,KAAMlN,IACvCijB,EAAY,QAAQ,IAAMJ,EAAU7iB,EAAGqiB,CAAU,CAAC,EACtDF,EAAiBjV,EAAI,KAAM,EAAGA,EAAI,UAAWmV,CAAU,CAC1D,CACJ,CACDY,EAAY,QAAQjjB,GAAKA,EAAG,EAC/B,CACT,CACA,CACA,SAASgiB,GAAoBkB,EAAO,CAChC,QAASljB,EAAI,EAAGA,EAAIkjB,EAAM,OAAQljB,IAAK,CACnC,MAAMmjB,EAAMD,EAAMljB,CAAC,EACnB,GAAImjB,EAAI,MAAM,OAASA,EAAI,IAAI,OAC3B,MAAM,IAAI3J,EAAW,6BAA6B,KAAK,UAAU2J,EAAI,KAAK,CAAC,MAAM,KAAK,UAAUA,EAAI,GAAG,CAAC,EAAE,EAC9G,QAAS/d,EAAIpF,EAAI,EAAGoF,EAAI8d,EAAM,OAAQ9d,IAAK,CACvC,MAAMge,EAAMF,EAAM9d,CAAC,EACbie,EAAmBF,EAAI,MAAM,OAASC,EAAI,MAAM,QAAUA,EAAI,MAAM,OAASD,EAAI,IAAI,OACrFG,EAAiBH,EAAI,MAAM,OAASC,EAAI,IAAI,QAAUA,EAAI,IAAI,OAASD,EAAI,IAAI,OAC/EI,EAAmBH,EAAI,MAAM,OAASD,EAAI,MAAM,QAAUA,EAAI,MAAM,OAASC,EAAI,IAAI,OACrFI,EAAiBJ,EAAI,MAAM,OAASD,EAAI,IAAI,QAAUA,EAAI,IAAI,OAASC,EAAI,IAAI,OACrF,GAAIC,GAAoBC,GAAkBC,GAAoBC,EAAgB,CAG1E,GAFIF,GAAkBA,GAElBC,GAAoBC,EACpB,SACJ,MAAM,IAAIhK,EAAW,eAAe,KAAK,UAAU2J,EAAI,KAAK,CAAC,QAAQ,KAAK,UAAUC,EAAI,KAAK,CAAC,aAAa,CAC9G,CACJ,CACJ,CACL,CACA,SAASX,GAAY9K,EAAI,CACrB,OAAIA,EAAG,OAAS,OACLA,EAAG,MACVA,EAAG,OAAS,UACLA,EAAG,SAAS,IAAI8K,EAAW,EAAE,KAAK,EAAE,EACxC,EACX,CAEA,MAAMgB,GAAsB,CACRjC,GAAwB,CAC5C,EACA,SAASkC,GAAgB9T,EAAS,CAC9B,MAAO,CACH,GAAGA,EAAQ,cAAgB,CAAE,EAC7B,GAAG6T,EACX,CACA,CAOA,MAAME,EAAa,CACf,OACA,KACA,MAIA,OAAO,QAAQhE,EAAMnH,EAAO,CACxB,OAAO,IAAImL,GAAa5K,GAAS4G,EAAMnH,CAAK,CAC/C,CACD,YAAYoL,EAAQjE,EAAMnH,EAAO,CAC7B,KAAK,OAASoL,EACd,KAAK,KAAOjE,EACZ,KAAK,MAAQnH,CAChB,CACD,IAAI,QAAS,CACT,OAAOqL,GAAU,KAAK,MAAM,CAC/B,CACD,QAAS,CACL,MAAO,CACH,KAAM,KAAK,KACX,MAAO,KAAK,MACZ,OAAQ,KAAK,MACzB,CACK,CACL,CACA,SAASA,GAAUrT,EAAO,CACtB,MAAMtL,EAAS,GACT4e,EAAU,IAAI,IACpB,SAASC,EAAUvT,EAAO,CACtB,GAAIsT,EAAQ,IAAItT,CAAK,EACjB,OACJsT,EAAQ,IAAItT,CAAK,EACjB,MAAMrM,EAAOqM,GAAO,gBAAgB,UAChCrM,GACAe,EAAO,KAAKf,CAAI,EAChBqM,EAAM,QACNuT,EAAUvT,EAAM,MAAM,CAC7B,CACD,OAAAuT,EAAUvT,CAAK,EACRtL,CACX,CACA,SAAS8e,GAAgBC,EAAO,CAC5B,GAAI,EAAEA,aAAiBN,IACnB,MAAM,IAAInK,EAAW,uBAAuB,EAEhD,OAAOyK,EAAM,MACjB,CAGA,IAAIC,EAAc,CAChB,QACA,MACA,QACA,SACA,OACA,UACA,OACA,QACA,cACA,YACA,cACA,eACA,aACA,gBACA,aACA,aACF,EAGIpC,GAAc,CAChB,EAAG,OACH,EAAG,MACH,EAAG,SACH,EAAG,YACH,EAAG,UACH,EAAG,eACL,EAGA,SAASqC,GAAaphB,EAAOqhB,EAAU,CACrC,MAAMC,EAAathB,EAAM,QAAQ,QAASqhB,CAAQ,EAClD,GAAIC,IAAe,GAAI,CACrB,MAAMC,EAAYvhB,EAAM,QAAQ,IAAKshB,CAAU,EAC/C,MAAO,CACL,SAAUthB,EAAM,UAAUshB,EAAa,EAAGC,CAAS,EAAE,MAAM,GAAG,EAC9D,cAAeD,EACf,SAAUC,EAAY,CAC5B,CACG,CACD,MAAO,CACL,SAAUvhB,EAAM,MACpB,CACA,CACA,SAASwhB,GAAWC,EAAUviB,EAAO,CACnC,IAAI8b,EAAS,EACb,MAAM0G,EAAYD,EAASviB,EAAQ8b,GAAQ,EAC3C,IAAI1X,EACJ,GAAIoe,IAAc,IAAK,CACrB,MAAMC,EAAM,CACVF,EAASviB,EAAQ8b,GAAQ,EACzByG,EAASviB,EAAQ8b,GAAQ,EACzByG,EAASviB,EAAQ8b,CAAM,CAC7B,EAAM,IAAKlE,GAAM,OAAO,SAASA,CAAC,CAAC,EAC3B6K,EAAI,SAAW,GAAK,CAACA,EAAI,KAAM7K,GAAM,OAAO,MAAMA,CAAC,CAAC,IACtDxT,EAAQ,CACN,KAAM,MACN,IAAAqe,CACR,EAEA,SAAaD,IAAc,IAAK,CAC5B,MAAME,EAAa,OAAO,SAASH,EAASviB,EAAQ8b,CAAM,CAAC,EACtD,OAAO,MAAM4G,CAAU,IAC1Bte,EAAQ,CAAE,KAAM,QAAS,MAAO,OAAOse,CAAU,GAEpD,CACD,MAAO,CAAC5G,EAAQ1X,CAAK,CACvB,CACA,SAASue,GAAcJ,EAAU,CAC/B,MAAMK,EAAW,GACjB,QAAS7kB,EAAI,EAAGA,EAAIwkB,EAAS,OAAQxkB,IAAK,CACxC,MAAMqf,EAAOmF,EAASxkB,CAAC,EACjB8kB,EAAU,OAAO,SAASzF,CAAI,EACpC,GAAI,QAAO,MAAMyF,CAAO,EAExB,GAAIA,IAAY,EACdD,EAAS,KAAK,CAAE,KAAM,UAAY,WACzBC,GAAW,EACDhD,GAAYgD,CAAO,GAEpCD,EAAS,KAAK,CACZ,KAAM,gBACN,MAAO/C,GAAYgD,CAAO,CACpC,CAAS,UAEMA,GAAW,GAAI,CACxB,MAAMzC,EAAaP,GAAYgD,EAAU,EAAE,EACvCzC,GACFwC,EAAS,KAAK,CACZ,KAAM,kBACN,MAAOxC,CACjB,CAAS,CAET,SAAeyC,GAAW,GACpBD,EAAS,KAAK,CACZ,KAAM,qBACN,MAAO,CAAE,KAAM,QAAS,KAAMX,EAAYY,EAAU,EAAE,CAAG,CACjE,CAAO,UACQA,IAAY,GAAI,CACzB,KAAM,CAAC/G,EAAQ1X,CAAK,EAAIke,GAAWC,EAAUxkB,CAAC,EAC1CqG,GACFwe,EAAS,KAAK,CACZ,KAAM,qBACN,MAAOxe,CACjB,CAAS,EAEHrG,GAAK+d,CACX,SAAe+G,IAAY,GACrBD,EAAS,KAAK,CACZ,KAAM,sBACd,CAAO,UACQC,GAAW,GACpBD,EAAS,KAAK,CACZ,KAAM,qBACN,MAAO,CAAE,KAAM,QAAS,KAAMX,EAAYY,EAAU,EAAE,CAAG,CACjE,CAAO,UACQA,IAAY,GAAI,CACzB,KAAM,CAAC/G,EAAQ1X,CAAK,EAAIke,GAAWC,EAAUxkB,CAAC,EAC1CqG,GACFwe,EAAS,KAAK,CACZ,KAAM,qBACN,MAAOxe,CACjB,CAAS,EAEHrG,GAAK+d,CACX,MAAe+G,IAAY,GACrBD,EAAS,KAAK,CACZ,KAAM,sBACd,CAAO,EACQC,GAAW,IAAMA,GAAW,GACrCD,EAAS,KAAK,CACZ,KAAM,qBACN,MAAO,CAAE,KAAM,QAAS,KAAMX,EAAYY,EAAU,GAAK,CAAC,CAAG,CACrE,CAAO,EACQA,GAAW,KAAOA,GAAW,KACtCD,EAAS,KAAK,CACZ,KAAM,qBACN,MAAO,CAAE,KAAM,QAAS,KAAMX,EAAYY,EAAU,IAAM,CAAC,CAAG,CACtE,CAAO,CAEJ,CACD,OAAOD,CACT,CACA,SAASE,IAA2B,CAClC,IAAIzf,EAAa,KACbC,EAAa,KACbyf,EAA+B,IAAI,IACvC,MAAO,CACL,MAAMjiB,EAAO,CACX,MAAMud,EAAS,GACf,IAAI8D,EAAW,EACf,EAAG,CACD,MAAMa,EAAad,GAAaphB,EAAOqhB,CAAQ,EACzC7B,EAAO0C,EAAW,SAAWliB,EAAM,UAAUqhB,EAAUa,EAAW,aAAa,EAAIliB,EAAM,UAAUqhB,CAAQ,EASjH,GARI7B,EAAK,OAAS,GAChBjC,EAAO,KAAK,CACV,MAAOiC,EACP,WAAAjd,EACA,WAAAC,EACA,YAAa,IAAI,IAAIyf,CAAY,CAC7C,CAAW,EAECC,EAAW,SAAU,CACvB,MAAMJ,EAAWD,GAAcK,EAAW,QAAQ,EAClD,UAAWC,KAAcL,EACnBK,EAAW,OAAS,YACtB5f,EAAa,KACbC,EAAa,KACbyf,EAAa,MAAK,GACTE,EAAW,OAAS,uBAC7B5f,EAAa,KACJ4f,EAAW,OAAS,uBAC7B3f,EAAa,KACJ2f,EAAW,OAAS,mBAC7BF,EAAa,OAAOE,EAAW,KAAK,EAGxC,UAAWA,KAAcL,EACnBK,EAAW,OAAS,qBACtB5f,EAAa4f,EAAW,MACfA,EAAW,OAAS,qBAC7B3f,EAAa2f,EAAW,MACfA,EAAW,OAAS,iBAC7BF,EAAa,IAAIE,EAAW,KAAK,CAGtC,CACDd,EAAWa,EAAW,QAC9B,OAAeb,EAAWrhB,EAAM,QAC1B,OAAOud,CACR,CACL,CACA,CAGA,IAAI6E,GAAwB,CAC1B,MAAO,UACP,IAAK,UACL,MAAO,UACP,OAAQ,UACR,KAAM,UACN,QAAS,UACT,KAAM,UACN,MAAO,UACP,YAAa,UACb,UAAW,UACX,YAAa,UACb,aAAc,UACd,WAAY,UACZ,cAAe,UACf,WAAY,UACZ,YAAa,SACf,EACA,SAASC,GAAmBC,EAAiBF,GAAuB,CAClE,SAASG,EAAWnhB,EAAM,CACxB,OAAOkhB,EAAelhB,CAAI,CAC3B,CACD,SAASohB,EAASb,EAAK,CACrB,MAAO,IAAIA,EAAI,IAAK7K,GAAM,KAAK,IAAI,EAAG,KAAK,IAAIA,EAAG,GAAG,CAAC,EAAE,SAAS,EAAE,EAAE,SAAS,EAAG,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,EAChG,CACD,IAAI2L,EACJ,SAASC,GAAgB,CACvB,GAAID,EACF,OAAOA,EAETA,EAAa,GACb,QAASxlB,EAAI,EAAGA,EAAIkkB,EAAY,OAAQlkB,IACtCwlB,EAAW,KAAKF,EAAWpB,EAAYlkB,CAAC,CAAC,CAAC,EAE5C,IAAI0lB,EAAS,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,GAAG,EACvC,QAAS1kB,EAAI,EAAGA,EAAI,EAAGA,IACrB,QAAS2kB,EAAI,EAAGA,EAAI,EAAGA,IACrB,QAASpjB,EAAI,EAAGA,EAAI,EAAGA,IACrBijB,EAAW,KAAKD,EAAS,CAACG,EAAO1kB,CAAC,EAAG0kB,EAAOC,CAAC,EAAGD,EAAOnjB,CAAC,CAAC,CAAC,CAAC,EAIjE,IAAIqjB,EAAQ,EACZ,QAAS5lB,EAAI,EAAGA,EAAI,GAAIA,IAAK4lB,GAAS,GACpCJ,EAAW,KAAKD,EAAS,CAACK,EAAOA,EAAOA,CAAK,CAAC,CAAC,EAEjD,OAAOJ,CACR,CACD,SAASK,EAAW5jB,EAAO,CACzB,OAAOwjB,EAAa,EAAGxjB,CAAK,CAC7B,CACD,SAASc,EAAMsD,EAAO,CACpB,OAAQA,EAAM,KAAI,CAChB,IAAK,QACH,OAAOif,EAAWjf,EAAM,IAAI,EAC9B,IAAK,MACH,OAAOkf,EAASlf,EAAM,GAAG,EAC3B,IAAK,QACH,OAAOwf,EAAWxf,EAAM,KAAK,CAChC,CACF,CACD,MAAO,CACL,MAAAtD,CACJ,CACA,CAEA,SAAS+iB,GAAsBtN,EAAOuN,EAAcnW,EAAS,CACzD,MAAMoW,EAAoBnF,GAAyBrI,EAAO5I,CAAO,EAC3D4P,EAAQJ,GAAW2G,CAAY,EAC/BE,EAAeb,GAAmB,OAAO,YAAYlB,EAAY,IAAI/f,GAAQ,CAC/EA,EACAqU,EAAM,SAAS,gBAAgBrU,EAAK,CAAC,EAAE,YAAa,IAAGA,EAAK,UAAU,CAAC,CAAC,EAAE,CAC7E,EAAC,CAAC,EACG+hB,EAASnB,KACf,OAAOvF,EAAM,IAAIC,GAAQyG,EAAO,MAAMzG,EAAK,CAAC,CAAC,EAAE,IAAKlX,GAAU,CAC1D,IAAIlC,EACA8f,EACA5d,EAAM,YAAY,IAAI,SAAS,GAC/BlC,EAAQkC,EAAM,WAAa0d,EAAa,MAAM1d,EAAM,UAAU,EAAIiQ,EAAM,GACxE2N,EAAU5d,EAAM,WAAa0d,EAAa,MAAM1d,EAAM,UAAU,EAAIiQ,EAAM,KAG1EnS,EAAQkC,EAAM,WAAa0d,EAAa,MAAM1d,EAAM,UAAU,EAAIiQ,EAAM,GACxE2N,EAAU5d,EAAM,WAAa0d,EAAa,MAAM1d,EAAM,UAAU,EAAI,QAExElC,EAAQ2a,EAAuB3a,EAAO2f,CAAiB,EACvDG,EAAUnF,EAAuBmF,EAASH,CAAiB,EACvDzd,EAAM,YAAY,IAAI,KAAK,IAC3BlC,EAAQ+f,GAAS/f,CAAK,GAC1B,IAAIzB,EAAYnE,EAAU,KAC1B,OAAI8H,EAAM,YAAY,IAAI,MAAM,IAC5B3D,GAAanE,EAAU,MACvB8H,EAAM,YAAY,IAAI,QAAQ,IAC9B3D,GAAanE,EAAU,QACvB8H,EAAM,YAAY,IAAI,WAAW,IACjC3D,GAAanE,EAAU,WACpB,CACH,QAAS8H,EAAM,MACf,OAAQkX,EAAK,CAAC,EACd,MAAApZ,EACA,QAAA8f,EACA,UAAAvhB,CACZ,CACK,EAAC,CACN,CAIA,SAASwhB,GAAS/f,EAAO,CACrB,MAAMggB,EAAWhgB,EAAM,MAAM,4CAA4C,EACzE,GAAIggB,EACA,GAAIA,EAAS,CAAC,EAAG,CAEb,MAAMC,EAAQ,KACT,MAAM,OAAO,SAASD,EAAS,CAAC,EAAG,EAAE,EAAI,CAAC,EAC1C,SAAS,EAAE,EACX,SAAS,EAAG,GAAG,EACpB,MAAO,IAAIA,EAAS,CAAC,CAAC,GAAGA,EAAS,CAAC,CAAC,GAAGC,CAAK,EAC/C,KACI,QAAID,EAAS,CAAC,EAER,IAAIA,EAAS,CAAC,CAAC,GAAGA,EAAS,CAAC,CAAC,KAI7B,IAAI,MACN,KAAKA,EAAS,CAAC,CAAC,EAChB,IAAIxM,GAAK,GAAGA,CAAC,GAAGA,CAAC,EAAE,EACnB,KAAK,EAAE,CAAC,KAGrB,MAAM0M,EAAclgB,EAAM,MAAM,+BAA+B,EAC/D,OAAIkgB,EACO,OAAOA,EAAY,CAAC,CAAC,QACzBlgB,CACX,CAQA,SAASmgB,GAAiBC,EAAUpH,EAAMzP,EAAU,GAAI,CACpD,KAAM,CAAE,KAAA+P,EAAO,OAAQ,MAAOoB,EAAY0F,EAAS,kBAAkB,CAAC,CAAI,EAAG7W,EAC7E,GAAI8P,GAAYC,CAAI,GAAKE,GAAYkB,CAAS,EAC1C,OAAO3B,GAAWC,CAAI,EAAE,IAAII,GAAQ,CAAC,CAAE,QAASA,EAAK,CAAC,EAAG,OAAQA,EAAK,CAAC,CAAC,CAAE,CAAC,EAC/E,KAAM,CAAE,MAAAjH,EAAO,SAAAjV,CAAQ,EAAKkjB,EAAS,SAAS1F,CAAS,EACvD,GAAIpB,IAAS,OACT,OAAOmG,GAAsBtN,EAAO6G,EAAMzP,CAAO,EACrD,MAAM8W,EAAWD,EAAS,YAAY9G,CAAI,EAC1C,GAAI/P,EAAQ,aAAc,CACtB,GAAIA,EAAQ,aAAa,OAAS8W,EAAS,KACvC,MAAM,IAAIlN,EAAW,2BAA2B5J,EAAQ,aAAa,IAAI,wCAAwC8W,EAAS,IAAI,GAAG,EAErI,GAAI9W,EAAQ,aAAa,QAAUmR,EAC/B,MAAM,IAAIvH,EAAW,wBAAwB5J,EAAQ,aAAa,KAAK,qCAAqCmR,CAAS,GAAG,CAE/H,CACD,OAAO4F,GAAkBtH,EAAMqH,EAAUlO,EAAOjV,EAAUqM,CAAO,CACrE,CACA,SAASgX,GAAoBH,EAAUpH,EAAMzP,EAAU,GAAI,CACvD,KAAM,CAAE,KAAA+P,EAAO,OAAQ,MAAOoB,EAAY0F,EAAS,kBAAkB,CAAC,CAAI,EAAG7W,EAC7E,GAAI8P,GAAYC,CAAI,GAAKE,GAAYkB,CAAS,EAC1C,MAAM,IAAIvH,EAAW,4CAA4C,EACrE,GAAImG,IAAS,OACT,MAAM,IAAInG,EAAW,2CAA2C,EACpE,KAAM,CAAE,MAAAhB,EAAO,SAAAjV,CAAQ,EAAKkjB,EAAS,SAAS1F,CAAS,EACjD2F,EAAWD,EAAS,YAAY9G,CAAI,EAC1C,OAAO,IAAIgE,GAAakD,GAAmBxH,EAAMqH,EAAUlO,EAAOjV,EAAUqM,CAAO,EAAE,WAAY8W,EAAS,KAAMlO,EAAM,IAAI,CAC9H,CACA,SAASmO,GAAkBtH,EAAMlT,EAASqM,EAAOjV,EAAUqM,EAAS,CAChE,OAAOiX,GAAmBxH,EAAMlT,EAASqM,EAAOjV,EAAUqM,CAAO,EAAE,MACvE,CACA,SAASiX,GAAmBxH,EAAMlT,EAASqM,EAAOjV,EAAUqM,EAAS,CACjE,MAAMoW,EAAoBnF,GAAyBrI,EAAO5I,CAAO,EAC3D,CAAE,sBAAAkX,EAAwB,EAAG,kBAAAC,EAAoB,GAAG,EAAMnX,EAC1D4P,EAAQJ,GAAWC,CAAI,EAC7B,IAAI2H,EAAapX,EAAQ,aACnBoU,GAAgBpU,EAAQ,YAAY,EACpCA,EAAQ,oBAAsB,KAC1BiX,GAAmBjX,EAAQ,mBAAoBzD,EAASqM,EAAOjV,EAAU,CACvE,GAAGqM,EACH,aAAc,OACd,mBAAoB,MACvB,GAAE,WACDmJ,GACNkO,EAAS,GACb,MAAMC,EAAQ,GACd,QAASlnB,EAAI,EAAGiB,EAAMue,EAAM,OAAQxf,EAAIiB,EAAKjB,IAAK,CAC9C,KAAM,CAACyf,EAAM0H,CAAU,EAAI3H,EAAMxf,CAAC,EAClC,GAAIyf,IAAS,GAAI,CACbwH,EAAS,GACTC,EAAM,KAAK,EAAE,EACb,QACH,CAED,GAAIJ,EAAwB,GAAKrH,EAAK,QAAUqH,EAAuB,CACnEG,EAAS,GACTC,EAAM,KAAK,CAAC,CACJ,QAASzH,EACT,OAAQ0H,EACR,MAAO,GACP,UAAW,CACd,EAAC,EACN,QACH,CACD,IAAIC,EACAC,EACAC,EACA1X,EAAQ,qBACRwX,EAAmBjb,EAAQ,aAAasT,EAAMuH,CAAU,EACxDK,EAAmBD,EAAiB,OACpCE,EAAwB,GAE5B,MAAMjlB,EAAS8J,EAAQ,cAAcsT,EAAMuH,EAAYD,CAAiB,EAClEQ,EAAellB,EAAO,OAAO,OAAS,EAC5C,QAAS+C,EAAI,EAAGA,EAAImiB,EAAcniB,IAAK,CACnC,MAAMod,EAAangB,EAAO,OAAO,EAAI+C,CAAC,EAChCoiB,EAAiBpiB,EAAI,EAAImiB,EAAellB,EAAO,OAAO,EAAI+C,EAAI,CAAC,EAAIqa,EAAK,OAC9E,GAAI+C,IAAegF,EACf,SACJ,MAAMpQ,GAAW/U,EAAO,OAAO,EAAI+C,EAAI,CAAC,EAClCiB,GAAQ2a,EAAuBzd,EAAS8D,EAAqB,cAAc+P,EAAQ,CAAC,EAAG4O,CAAiB,EACxGphB,GAAYyC,EAAqB,aAAa+P,EAAQ,EACtD7O,GAAQ,CACV,QAASkX,EAAK,UAAU+C,EAAYgF,CAAc,EAClD,OAAQL,EAAa3E,EACrB,MAAAnc,GACA,UAAAzB,EAChB,EACY,GAAIgL,EAAQ,mBAAoB,CAC5B,MAAM6X,GAAyB,GAC/B,GAAI7X,EAAQ,qBAAuB,YAC/B,UAAW8X,KAAWlP,EAAM,SAAU,CAClC,IAAImP,EACJ,OAAQ,OAAOD,EAAQ,MAAK,CACxB,IAAK,SACDC,EAAYD,EAAQ,MAAM,MAAM,GAAG,EAAE,IAAIliB,IAASA,GAAM,KAAI,CAAE,EAC9D,MACJ,IAAK,SACDmiB,EAAYD,EAAQ,MACpB,MACJ,QACI,QACP,CACDD,GAAuB,KAAK,CACxB,SAAUC,EACV,UAAWC,EAAU,IAAIzf,IAAYA,GAAS,MAAM,GAAG,CAAC,CACpF,CAAyB,CACJ,CAELK,GAAM,YAAc,GACpB,IAAIwV,GAAS,EACb,KAAOyE,EAAazE,GAASyJ,GAAgB,CACzC,MAAMI,EAAkBP,EAAiBC,CAAqB,EACxDO,EAAsBpI,EAAK,UAAUmI,EAAgB,WAAYA,EAAgB,QAAQ,EAC/F7J,IAAU8J,EAAoB,OAC9Btf,GAAM,YAAY,KAAK,CACnB,QAASsf,EACT,OAAQjY,EAAQ,qBAAuB,YACjCkY,GAA2BF,EAAgB,MAAM,EACjDG,GAAuBN,GAAwBG,EAAgB,MAAM,CACnG,CAAqB,EACDN,GAAyB,CAC5B,CACJ,CACDL,EAAO,KAAK1e,EAAK,CACpB,CACD2e,EAAM,KAAKD,CAAM,EACjBA,EAAS,GACTD,EAAa3kB,EAAO,SACvB,CACD,MAAO,CACH,OAAQ6kB,EACR,WAAAF,CACR,CACA,CACA,SAASc,GAA2B5iB,EAAQ,CACxC,OAAOA,EAAO,IAAIM,IAAU,CAAE,UAAWA,CAAO,EAAC,CACrD,CACA,SAASuiB,GAAuBC,EAAgB9iB,EAAQ,CACpD,MAAM7C,EAAS,GACf,QAASrC,EAAI,EAAGiB,EAAMiE,EAAO,OAAQlF,EAAIiB,EAAKjB,IAAK,CAC/C,MAAMwF,EAAQN,EAAOlF,CAAC,EACtBqC,EAAOrC,CAAC,EAAI,CACR,UAAWwF,EACX,aAAcyiB,GAAkBD,EAAgBxiB,EAAON,EAAO,MAAM,EAAGlF,CAAC,CAAC,CACrF,CACK,CACD,OAAOqC,CACX,CACA,SAAS6lB,GAAWhgB,EAAU1C,EAAO,CACjC,OAAO0C,IAAa1C,GACZA,EAAM,UAAU,EAAG0C,EAAS,MAAM,IAAMA,GAAY1C,EAAM0C,EAAS,MAAM,IAAM,GAC3F,CACA,SAASigB,GAAQR,EAAWniB,EAAOhB,EAAc,CAC7C,GAAI,CAAC0jB,GAAWP,EAAUA,EAAU,OAAS,CAAC,EAAGniB,CAAK,EAClD,MAAO,GACX,IAAI4iB,EAAsBT,EAAU,OAAS,EACzCU,EAAc7jB,EAAa,OAAS,EACxC,KAAO4jB,GAAuB,GAAKC,GAAe,GAC1CH,GAAWP,EAAUS,CAAmB,EAAG5jB,EAAa6jB,CAAW,CAAC,IACpED,GAAuB,GAC3BC,GAAe,EAEnB,OAAID,IAAwB,EAGhC,CACA,SAASH,GAAkBR,EAAwBjiB,EAAOhB,EAAc,CACpE,MAAMnC,EAAS,GACf,SAAW,CAAE,UAAAslB,EAAW,SAAA5iB,CAAQ,IAAM0iB,EAClC,UAAWa,KAAkBX,EACzB,GAAIQ,GAAQG,EAAgB9iB,EAAOhB,CAAY,EAAG,CAC9CnC,EAAO,KAAK0C,CAAQ,EACpB,KACH,CAGT,OAAO1C,CACX,CAKA,SAASkmB,GAAuB9B,EAAUpH,EAAMzP,EAAS,CACrD,MAAM4Y,EAAS,OACV,QAAQ5Y,EAAQ,MAAM,EACtB,OAAO5P,GAAKA,EAAE,CAAC,CAAC,EAChB,IAAIA,IAAM,CAAE,MAAOA,EAAE,CAAC,EAAG,MAAOA,EAAE,CAAC,CAAC,EAAG,EACtCsgB,EAASmI,GAAuB,GAAGD,EAAO,IAAIE,GAAKlC,GAAiBC,EAAUpH,EAAM,CACtF,GAAGzP,EACH,MAAO8Y,EAAE,KACZ,EAAC,CAAC,EAkBH,OAjBqBpI,EAAO,CAAC,EACxB,IAAI,CAACb,EAAMkJ,IAAYlJ,EACvB,IAAI,CAACmJ,EAAQC,IAAa,CAC3B,MAAMC,EAAc,CAChB,QAASF,EAAO,QAChB,SAAU,CAAE,EACZ,OAAQA,EAAO,MAC3B,EACQ,MAAI,uBAAwBhZ,GAAWA,EAAQ,qBAC3CkZ,EAAY,YAAcF,EAAO,aAErCtI,EAAO,QAAQ,CAACoI,EAAGK,IAAa,CAC5B,KAAM,CAAE,QAASC,EAAG,YAAaC,EAAI,OAAQC,EAAK,GAAGhI,CAAM,EAAKwH,EAAEC,CAAO,EAAEE,CAAQ,EACnFC,EAAY,SAASN,EAAOO,CAAQ,EAAE,KAAK,EAAI7H,CAC3D,CAAS,EACM4H,CACV,EAAC,CAEN,CAcA,SAASL,MAA0BD,EAAQ,CACvC,MAAMW,EAAYX,EAAO,IAAI,IAAM,CAAE,GAC/BxK,EAAQwK,EAAO,OACrB,QAASxoB,EAAI,EAAGA,EAAIwoB,EAAO,CAAC,EAAE,OAAQxoB,IAAK,CACvC,MAAMwf,EAAQgJ,EAAO,IAAIE,GAAKA,EAAE1oB,CAAC,CAAC,EAC5BopB,EAAWD,EAAU,IAAI,IAAM,CAAE,GACvCA,EAAU,QAAQ,CAACT,EAAG1oB,IAAM0oB,EAAE,KAAKU,EAASppB,CAAC,CAAC,CAAC,EAC/C,MAAMqpB,EAAU7J,EAAM,IAAI,IAAM,CAAC,EAC3B/I,EAAU+I,EAAM,IAAI8J,GAAKA,EAAE,CAAC,CAAC,EACnC,KAAO7S,EAAQ,MAAMiS,GAAKA,CAAC,GAAG,CAC1B,MAAMa,EAAY,KAAK,IAAI,GAAG9S,EAAQ,IAAIiS,GAAKA,EAAE,QAAQ,MAAM,CAAC,EAChE,QAASc,EAAI,EAAGA,EAAIxL,EAAOwL,IAAK,CAC5B,MAAMjhB,EAAQkO,EAAQ+S,CAAC,EACnBjhB,EAAM,QAAQ,SAAWghB,GACzBH,EAASI,CAAC,EAAE,KAAKjhB,CAAK,EACtB8gB,EAAQG,CAAC,GAAK,EACd/S,EAAQ+S,CAAC,EAAIhK,EAAMgK,CAAC,EAAEH,EAAQG,CAAC,CAAC,IAGhCJ,EAASI,CAAC,EAAE,KAAK,CACb,GAAGjhB,EACH,QAASA,EAAM,QAAQ,MAAM,EAAGghB,CAAS,CACjE,CAAqB,EACD9S,EAAQ+S,CAAC,EAAI,CACT,GAAGjhB,EACH,QAASA,EAAM,QAAQ,MAAMghB,CAAS,EACtC,OAAQhhB,EAAM,OAASghB,CAC/C,EAEa,CACJ,CACJ,CACD,OAAOJ,CACX,CAOA,SAASM,GAAahD,EAAUpH,EAAMzP,EAAS,CAC3C,IAAI8Z,EACAC,EACArJ,EACAS,EACAnK,EACJ,GAAI,WAAYhH,EAAS,CACrB,KAAM,CAAE,aAAAga,EAAe,QAAS,kBAAAC,EAAoB,UAAU,EAAMja,EAC9D4Y,EAAS,OACV,QAAQ5Y,EAAQ,MAAM,EACtB,OAAO5P,GAAKA,EAAE,CAAC,CAAC,EAChB,IAAIA,IAAM,CAAE,MAAOA,EAAE,CAAC,EAAG,MAAOA,EAAE,CAAC,CAAC,EAAG,EACvC,KAAK,CAACE,EAAGqC,IAAMrC,EAAE,QAAU0pB,EAAe,GAAKrnB,EAAE,QAAUqnB,EAAe,EAAI,CAAC,EACpF,GAAIpB,EAAO,SAAW,EAClB,MAAM,IAAIhP,EAAW,mCAAmC,EAC5D,MAAMsQ,EAAcvB,GAAuB9B,EAAUpH,EAAMzP,CAAO,EAClE,GAAIga,GAAgB,CAACpB,EAAO,KAAKE,GAAKA,EAAE,QAAUkB,CAAY,EAC1D,MAAM,IAAIpQ,EAAW,yDAAyDoQ,CAAY,IAAI,EAClG,MAAMG,EAAYvB,EAAO,IAAIE,GAAKjC,EAAS,SAASiC,EAAE,KAAK,CAAC,EACtDsB,EAAcxB,EAAO,IAAIE,GAAKA,EAAE,KAAK,EAC3CpI,EAASwJ,EACJ,IAAIrK,GAAQA,EAAK,IAAIlX,GAAS0hB,GAAW1hB,EAAOyhB,EAAaH,EAAmBD,CAAY,CAAC,CAAC,EACnG,MAAMM,EAAyB1B,EAAO,IAAIE,GAAK7H,GAAyB6H,EAAE,MAAO9Y,CAAO,CAAC,EACzF+Z,EAAKnB,EAAO,IAAI,CAACE,EAAGhnB,KAASA,IAAQ,GAAKkoB,EACpC,GACA,GAAGC,EAAoBnB,EAAE,KAAK,MAAQ1H,EAAuB+I,EAAUroB,CAAG,EAAE,GAAIwoB,EAAuBxoB,CAAG,CAAC,GAAK,UAAU,EAAE,KAAK,GAAG,EAC1IgoB,EAAKlB,EAAO,IAAI,CAACE,EAAGhnB,KAASA,IAAQ,GAAKkoB,EACpC,GACA,GAAGC,EAAoBnB,EAAE,KAAK,SAAW1H,EAAuB+I,EAAUroB,CAAG,EAAE,GAAIwoB,EAAuBxoB,CAAG,CAAC,GAAK,UAAU,EAAE,KAAK,GAAG,EAC7Iqf,EAAY,gBAAgBgJ,EAAU,IAAIrB,GAAKA,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,GAChE9R,EAAYgT,EAAe,OAAY,CAACD,EAAID,CAAE,EAAE,KAAK,GAAG,CAC3D,SACQ,UAAW9Z,EAAS,CACzB,MAAMoW,EAAoBnF,GAAyBjR,EAAQ,MAAOA,CAAO,EACzE0Q,EAASkG,GAAiBC,EAAUpH,EAAMzP,CAAO,EACjD,MAAMua,EAAS1D,EAAS,SAAS7W,EAAQ,KAAK,EAC9C8Z,EAAK1I,EAAuBmJ,EAAO,GAAInE,CAAiB,EACxD2D,EAAK3I,EAAuBmJ,EAAO,GAAInE,CAAiB,EACxDjF,EAAYoJ,EAAO,IACtB,KAEG,OAAM,IAAI3Q,EAAW,8DAA8D,EAEvF,MAAO,CACH,OAAA8G,EACA,GAAAqJ,EACA,GAAAD,EACA,UAAA3I,EACA,UAAAnK,CACR,CACA,CACA,SAASqT,GAAWG,EAAQC,EAAeR,EAAmBD,EAAc,CACxE,MAAMrhB,EAAQ,CACV,QAAS6hB,EAAO,QAChB,YAAaA,EAAO,YACpB,OAAQA,EAAO,MACvB,EACUlJ,EAASmJ,EAAc,IAAI3B,GAAKzH,GAAoBmJ,EAAO,SAAS1B,CAAC,CAAC,CAAC,EAEvE4B,EAAY,IAAI,IAAIpJ,EAAO,QAAQwH,GAAK,OAAO,KAAKA,CAAC,CAAC,CAAC,EACvD6B,EAAerJ,EAAO,OAAO,CAACsJ,EAAKC,EAAK/oB,IAAQ,CAClD,UAAWP,KAAOmpB,EAAW,CACzB,MAAMvnB,EAAQ0nB,EAAItpB,CAAG,GAAK,UAC1B,GAAIO,IAAQ,GAAKkoB,EACbY,EAAIrpB,CAAG,EAAI4B,MAEV,CACD,MAAM2nB,EAAUvpB,IAAQ,QAAU,GAAKA,IAAQ,mBAAqB,MAAQ,IAAIA,CAAG,GAC7EwpB,EAASd,EAAoBQ,EAAc3oB,CAAG,GAAKP,IAAQ,QAAU,GAAKupB,GAC5EF,EAAIrpB,CAAG,EACPqpB,EAAIrpB,CAAG,GAAK,IAAIwpB,CAAM,IAAI5nB,CAAK,GAE/BynB,EAAIrpB,CAAG,EAAI,GAAGwpB,CAAM,IAAI5nB,CAAK,EACpC,CACJ,CACD,OAAOynB,CACV,EAAE,CAAE,GACL,OAAAjiB,EAAM,UAAYqhB,EACZzI,GAAoBoJ,CAAY,EAChC,OAAO,OAAOA,CAAY,EAAE,KAAK,GAAG,EACnChiB,CACX,CAEA,SAASqiB,GAAWnE,EAAUpH,EAAMzP,EAASib,EAAqB,CAC9D,KAAM,CAAE,EACR,QAAAjb,EACA,WAAY,CAACkb,EAAOC,IAAaH,GAAWnE,EAAUqE,EAAOC,CAAQ,EACrE,aAAc,CAACD,EAAOC,IAAatB,GAAahD,EAAUqE,EAAOC,CAAQ,CAC7E,EAAG,CACC,IAAI3hB,EAAQiW,EACZ,UAAW2L,KAAetH,GAAgB9T,CAAO,EAC7CxG,EAAQ4hB,EAAY,YAAY,KAAKH,EAAoBzhB,EAAOwG,CAAO,GAAKxG,EAChF,GAAI,CAAE,OAAAkX,EAAQ,GAAAqJ,EAAI,GAAAD,EAAI,UAAA3I,EAAW,UAAAnK,CAAY,EAAG6S,GAAahD,EAAUrd,EAAOwG,CAAO,EACrF,KAAM,CAAE,iBAAAqb,EAAmB,EAAO,EAAGrb,EACjCqb,IAAqB,GACrB3K,EAAS4K,GAAsB5K,CAAM,EAChC2K,IAAqB,UAC1B3K,EAAS6K,GAAsB7K,CAAM,GACzC,MAAM8K,EAAgB,CAClB,GAAGP,EACH,IAAI,QAAS,CACT,OAAOzhB,CACV,CACT,EACI,UAAW4hB,KAAetH,GAAgB9T,CAAO,EAC7C0Q,EAAS0K,EAAY,QAAQ,KAAKI,EAAe9K,CAAM,GAAKA,EAChE,OAAO+K,GAAa/K,EAAQ,CACxB,GAAG1Q,EACH,GAAA+Z,EACA,GAAAD,EACA,UAAA3I,EACA,UAAAnK,CACH,EAAEwU,CAAa,CACpB,CACA,SAASC,GAAa/K,EAAQ1Q,EAASib,EAAoB,CACvD,MAAMS,EAAe5H,GAAgB9T,CAAO,EACtC4P,EAAQ,GACRvZ,EAAO,CACT,KAAM,OACN,SAAU,CAAE,CACpB,EACU,CAAE,UAAAslB,EAAY,SAAY,EAAG3b,EACnC,IAAI4b,EAAU,CACV,KAAM,UACN,QAAS,MACT,WAAY,CACR,MAAO,SAAS5b,EAAQ,WAAa,EAAE,GACvC,MAAOA,EAAQ,WAAa,oBAAoBA,EAAQ,EAAE,UAAUA,EAAQ,EAAE,GAC9E,SAAU,IACV,GAAG,OAAO,YAAY,MAAM,KAAK,OAAO,QAAQA,EAAQ,MAAQ,EAAE,CAAC,EAC9D,OAAO,CAAC,CAACzO,CAAG,IAAM,CAACA,EAAI,WAAW,GAAG,CAAC,CAAC,CAC/C,EACD,SAAU,CAAE,CACpB,EACQsqB,EAAW,CACX,KAAM,UACN,QAAS,OACT,WAAY,CAAE,EACd,SAAUjM,CAClB,EACI,MAAMkM,EAAY,GACZ/gB,EAAU,CACZ,GAAGkgB,EACH,UAAAU,EACA,eAAAxL,GACA,IAAI,QAAS,CACT,OAAO8K,EAAmB,MAC7B,EACD,IAAI,QAAS,CACT,OAAOvK,CACV,EACD,IAAI,SAAU,CACV,OAAO1Q,CACV,EACD,IAAI,MAAO,CACP,OAAO3J,CACV,EACD,IAAI,KAAM,CACN,OAAOulB,CACV,EACD,IAAI,MAAO,CACP,OAAOC,CACV,EACD,IAAI,OAAQ,CACR,OAAOC,CACV,CACT,EAwCI,GAvCApL,EAAO,QAAQ,CAACb,EAAM/d,IAAQ,CACtBA,IACI6pB,IAAc,SACdtlB,EAAK,SAAS,KAAK,CAAE,KAAM,UAAW,QAAS,KAAM,WAAY,CAAE,EAAE,SAAU,EAAI,GAC9EslB,IAAc,WACnB/L,EAAM,KAAK,CAAE,KAAM,OAAQ,MAAO;AAAA,CAAI,CAAE,GAEhD,IAAImM,EAAW,CACX,KAAM,UACN,QAAS,OACT,WAAY,CAAE,MAAO,MAAQ,EAC7B,SAAU,CAAE,CACxB,EACYC,EAAM,EACV,UAAWrjB,KAASkX,EAAM,CACtB,IAAIoM,EAAY,CACZ,KAAM,UACN,QAAS,OACT,WAAY,CAAE,EACd,SAAU,CAAC,CAAE,KAAM,OAAQ,MAAOtjB,EAAM,QAAS,CACjE,EACY,MAAMujB,EAAQvjB,EAAM,WAAa4Y,GAAoBF,GAAoB1Y,CAAK,CAAC,EAC3EujB,IACAD,EAAU,WAAW,MAAQC,GACjC,UAAWd,KAAeM,EACtBO,EAAYb,GAAa,MAAM,KAAKrgB,EAASkhB,EAAWnqB,EAAM,EAAGkqB,EAAKD,CAAQ,GAAKE,EACnFN,IAAc,SACdtlB,EAAK,SAAS,KAAK4lB,CAAS,EACvBN,IAAc,WACnBI,EAAS,SAAS,KAAKE,CAAS,EACpCD,GAAOrjB,EAAM,QAAQ,MACxB,CACD,GAAIgjB,IAAc,UAAW,CACzB,UAAWP,KAAeM,EACtBK,EAAWX,GAAa,MAAM,KAAKrgB,EAASghB,EAAUjqB,EAAM,CAAC,GAAKiqB,EACtED,EAAU,KAAKC,CAAQ,EACvBnM,EAAM,KAAKmM,CAAQ,CACtB,CACT,CAAK,EACGJ,IAAc,UAAW,CACzB,UAAWP,KAAeM,EACtBG,EAAWT,GAAa,MAAM,KAAKrgB,EAAS8gB,CAAQ,GAAKA,EAC7DD,EAAQ,SAAS,KAAKC,CAAQ,EAC9B,UAAWT,KAAeM,EACtBE,EAAUR,GAAa,KAAK,KAAKrgB,EAAS6gB,CAAO,GAAKA,EAC1DvlB,EAAK,SAAS,KAAKulB,CAAO,CAC7B,CACD,IAAInpB,EAAS4D,EACb,UAAW+kB,KAAeM,EACtBjpB,EAAS2oB,GAAa,MAAM,KAAKrgB,EAAStI,CAAM,GAAKA,EACzD,OAAOA,CACX,CACA,SAAS6oB,GAAsB5K,EAAQ,CACnC,OAAOA,EAAO,IAAKb,GAAS,CACxB,MAAMsM,EAAU,GAChB,IAAIC,EAAiB,GACjBC,EAAc,EAClB,OAAAxM,EAAK,QAAQ,CAAClX,EAAO7G,IAAQ,CAEzB,MAAMwqB,EAAa,EADC3jB,EAAM,WAAaA,EAAM,UAAY9H,EAAU,WAE/DyrB,GAAc3jB,EAAM,QAAQ,MAAM,OAAO,GAAKkX,EAAK/d,EAAM,CAAC,GACrDuqB,IACDA,EAAc1jB,EAAM,QACxByjB,GAAkBzjB,EAAM,SAGpByjB,GACIE,EACAH,EAAQ,KAAK,CACT,GAAGxjB,EACH,OAAQ0jB,EACR,QAASD,EAAiBzjB,EAAM,OAC5D,CAAyB,EAGDwjB,EAAQ,KAAK,CACT,QAASC,EACT,OAAQC,CACX,EAAE1jB,CAAK,EAEZ0jB,EAAc,EACdD,EAAiB,IAGjBD,EAAQ,KAAKxjB,CAAK,CAGtC,CAAS,EACMwjB,CACf,CAAK,CACL,CACA,SAASZ,GAAsB7K,EAAQ,CACnC,OAAOA,EAAO,IAAKb,GACRA,EAAK,QAASlX,GAAU,CAC3B,GAAIA,EAAM,QAAQ,MAAM,OAAO,EAC3B,OAAOA,EAEX,MAAMvG,EAAQuG,EAAM,QAAQ,MAAM,mBAAmB,EACrD,GAAI,CAACvG,EACD,OAAOuG,EACX,KAAM,CAAG,CAAA4jB,EAASC,EAASC,CAAQ,EAAIrqB,EACvC,GAAI,CAACmqB,GAAW,CAACE,EACb,OAAO9jB,EACX,MAAM+jB,EAAW,CAAC,CACV,GAAG/jB,EACH,OAAQA,EAAM,OAAS4jB,EAAQ,OAC/B,QAAAC,CACpB,CAAiB,EACL,OAAID,GACAG,EAAS,QAAQ,CACb,QAASH,EACT,OAAQ5jB,EAAM,MAClC,CAAiB,EAED8jB,GACAC,EAAS,KAAK,CACV,QAASD,EACT,OAAQ9jB,EAAM,OAAS4jB,EAAQ,OAASC,EAAQ,MACpE,CAAiB,EAEEE,CACnB,CAAS,CACJ,CACL,CAOA,MAAMC,GAAmB,CACvB,OACA,OACA,WACA,UACA,KACA,MACA,UACA,QACA,QACA,KACA,QACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,QACA,KACF,EAQA,MAAMC,EAAO,CAOX,YAAYC,EAAUC,EAAQC,EAAO,CACnC,KAAK,SAAWF,EAChB,KAAK,OAASC,EACVC,IACF,KAAK,MAAQA,EAEhB,CACH,CAGAH,GAAO,UAAU,SAAW,GAE5BA,GAAO,UAAU,OAAS,GAE1BA,GAAO,UAAU,MAAQ,KAazB,SAASI,GAAMC,EAAaF,EAAO,CAEjC,MAAMF,EAAW,GAEXC,EAAS,GACf,IAAIzqB,EAAQ,GAEZ,KAAO,EAAEA,EAAQ4qB,EAAY,QAC3B,OAAO,OAAOJ,EAAUI,EAAY5qB,CAAK,EAAE,QAAQ,EACnD,OAAO,OAAOyqB,EAAQG,EAAY5qB,CAAK,EAAE,MAAM,EAGjD,OAAO,IAAIuqB,GAAOC,EAAUC,EAAQC,CAAK,CAC3C,CAMA,SAASG,GAAU/pB,EAAO,CACxB,OAAOA,EAAM,YAAa,CAC5B,CAEA,MAAMgqB,CAAK,CAMT,YAAYN,EAAUO,EAAW,CAE/B,KAAK,SAAWP,EAEhB,KAAK,UAAYO,CAClB,CACH,CAGAD,EAAK,UAAU,MAAQ,KACvBA,EAAK,UAAU,QAAU,GACzBA,EAAK,UAAU,WAAa,GAC5BA,EAAK,UAAU,kBAAoB,GACnCA,EAAK,UAAU,OAAS,GACxBA,EAAK,UAAU,eAAiB,GAChCA,EAAK,UAAU,eAAiB,GAChCA,EAAK,UAAU,sBAAwB,GACvCA,EAAK,UAAU,gBAAkB,GACjCA,EAAK,UAAU,QAAU,GAEzB,IAAIE,GAAS,EAEb,MAAMC,EAAUC,EAAS,EACnBC,EAAaD,EAAS,EACtBE,GAAoBF,EAAS,EAC7BG,EAASH,EAAS,EAClBI,EAAiBJ,EAAS,EAC1BK,EAAiBL,EAAS,EAC1BM,EAAwBN,EAAS,EAEvC,SAASA,GAAY,CACnB,MAAO,IAAK,EAAEF,EAChB,CAEA,IAAIS,GAAqB,OAAO,OAAO,CACrC,UAAW,KACX,QAASR,EACT,WAAYE,EACZ,sBAAuBK,EACvB,eAAgBD,EAChB,OAAQF,EACR,kBAAmBD,GACnB,eAAgBE,CAClB,CAAC,EAID,MAAMI,GAAS,OAAO,KAAKD,EAAK,EAEhC,MAAME,WAAoBb,CAAK,CAQ7B,YAAYN,EAAUO,EAAWa,EAAMlB,EAAO,CAC5C,IAAI1qB,EAAQ,GAMZ,GAJA,MAAMwqB,EAAUO,CAAS,EAEzBc,GAAK,KAAM,QAASnB,CAAK,EAErB,OAAOkB,GAAS,SAClB,KAAO,EAAE5rB,EAAQ0rB,GAAO,QAAQ,CAC9B,MAAMI,EAAQJ,GAAO1rB,CAAK,EAC1B6rB,GAAK,KAAMH,GAAO1rB,CAAK,GAAI4rB,EAAOH,GAAMK,CAAK,KAAOL,GAAMK,CAAK,CAAC,CACjE,CAEJ,CACH,CAEAH,GAAY,UAAU,QAAU,GAOhC,SAASE,GAAKzd,EAAQlP,EAAK4B,EAAO,CAC5BA,IAEFsN,EAAOlP,CAAG,EAAI4B,EAElB,CAiBA,MAAMirB,GAAQ,CAAE,EAAC,eAMjB,SAASC,EAAOC,EAAY,CAE1B,MAAMzB,EAAW,GAEXC,EAAS,GAEf,IAAIyB,EAEJ,IAAKA,KAAQD,EAAW,WACtB,GAAIF,GAAM,KAAKE,EAAW,WAAYC,CAAI,EAAG,CAC3C,MAAMprB,EAAQmrB,EAAW,WAAWC,CAAI,EAClC9tB,EAAO,IAAIutB,GACfO,EACAD,EAAW,UAAUA,EAAW,YAAc,GAAIC,CAAI,EACtDprB,EACAmrB,EAAW,KACnB,EAGQA,EAAW,iBACXA,EAAW,gBAAgB,SAASC,CAAI,IAExC9tB,EAAK,gBAAkB,IAGzBosB,EAAS0B,CAAI,EAAI9tB,EAEjBqsB,EAAOI,GAAUqB,CAAI,CAAC,EAAIA,EAC1BzB,EAAOI,GAAUzsB,EAAK,SAAS,CAAC,EAAI8tB,CACrC,CAGH,OAAO,IAAI3B,GAAOC,EAAUC,EAAQwB,EAAW,KAAK,CACtD,CAEA,MAAME,GAAQH,EAAO,CACnB,MAAO,QACP,UAAUjF,EAAGmF,EAAM,CACjB,MAAO,SAAWA,EAAK,MAAM,CAAC,EAAE,YAAa,CAC9C,EACD,WAAY,CACV,aAAc,KACd,aAAc,KACd,UAAW,KACX,UAAW,KACX,UAAW,KACX,WAAY,KACZ,UAAW,IACZ,CACH,CAAC,EAEKE,GAAMJ,EAAO,CACjB,MAAO,MACP,UAAUjF,EAAGmF,EAAM,CACjB,MAAO,OAASA,EAAK,MAAM,CAAC,EAAE,YAAa,CAC5C,EACD,WAAY,CAAC,QAAS,KAAM,QAAS,KAAM,SAAU,IAAI,CAC3D,CAAC,EAOD,SAASG,GAAuBC,EAAYvB,EAAW,CACrD,OAAOA,KAAauB,EAAaA,EAAWvB,CAAS,EAAIA,CAC3D,CAOA,SAASwB,GAAyBD,EAAY9B,EAAU,CACtD,OAAO6B,GAAuBC,EAAY9B,EAAS,YAAW,CAAE,CAClE,CAEA,MAAMgC,GAAQR,EAAO,CACnB,MAAO,QACP,WAAY,CAAC,WAAY,aAAa,EACtC,UAAWO,GACX,WAAY,CAAC,MAAO,KAAM,WAAY,IAAI,CAC5C,CAAC,EAEKE,GAAOT,EAAO,CAClB,UAAUjF,EAAGmF,EAAM,CACjB,OAAOA,IAAS,OAASA,EAAO,QAAUA,EAAK,MAAM,CAAC,EAAE,YAAa,CACtE,EACD,WAAY,CACV,qBAAsB,KACtB,WAAYf,EACZ,iBAAkB,KAClB,SAAUA,EACV,YAAaA,EACb,aAAcE,EACd,aAAcA,EACd,YAAaA,EACb,aAAcC,EACd,YAAa,KACb,gBAAiBA,EACjB,YAAa,KACb,aAAcH,EACd,eAAgBG,EAChB,iBAAkB,KAClB,aAAcH,EACd,WAAYG,EACZ,YAAaH,EACb,aAAc,KACd,WAAYA,EACZ,YAAa,KACb,iBAAkB,KAClB,UAAW,KACX,eAAgBG,EAChB,UAAWD,EACX,SAAU,KACV,UAAWF,EACX,cAAeA,EACf,oBAAqBA,EACrB,gBAAiB,KACjB,SAAUG,EACV,gBAAiB,KACjB,aAAcD,EACd,YAAaF,EACb,aAAcA,EACd,aAAc,KACd,aAAcA,EACd,oBAAqBG,EACrB,aAAcD,EACd,aAAcA,EACd,YAAaA,EACb,aAAcF,EACd,YAAaE,EACb,SAAU,KACV,aAAcA,EACd,aAAcA,EACd,aAAcA,EACd,cAAe,KACf,KAAM,IACP,CACH,CAAC,EAEKqB,GAASV,EAAO,CACpB,MAAO,OACP,WAAY,CACV,cAAe,iBACf,UAAW,QACX,QAAS,MACT,UAAW,YACZ,EACD,UAAWO,GACX,gBAAiB,CAAC,UAAW,WAAY,QAAS,UAAU,EAC5D,WAAY,CAEV,KAAM,KACN,OAAQhB,EACR,cAAeD,EACf,UAAWA,EACX,OAAQ,KACR,MAAO,KACP,gBAAiBL,EACjB,oBAAqBA,EACrB,eAAgBA,EAChB,IAAK,KACL,GAAI,KACJ,MAAOA,EACP,eAAgB,KAChB,aAAcK,EACd,UAAWL,EACX,SAAUA,EACV,SAAUK,EACV,QAAS,KACT,QAAS,KACT,QAASL,EACT,KAAM,KACN,UAAWK,EACX,KAAMD,EACN,QAAS,KACT,QAAS,KACT,gBAAiBF,EACjB,SAAUF,EACV,aAAcK,EACd,OAAQD,EAASE,EACjB,YAAa,KACb,KAAM,KACN,SAAU,KACV,SAAU,KACV,QAASN,EACT,MAAOA,EACP,IAAK,KACL,QAAS,KACT,SAAUA,EACV,SAAUG,GACV,UAAWD,EACX,QAAS,KACT,aAAc,KACd,cAAe,KACf,KAAM,KACN,WAAY,KACZ,YAAa,KACb,WAAY,KACZ,eAAgBF,EAChB,WAAY,KACZ,QAASK,EACT,OAAQD,EACR,OAAQJ,EACR,KAAMI,EACN,KAAM,KACN,SAAU,KACV,QAASC,EACT,UAAWA,EACX,GAAI,KACJ,WAAY,KACZ,YAAa,KACb,MAAOL,EACP,UAAW,KACX,UAAW,KACX,GAAI,KACJ,MAAOA,EACP,OAAQ,KACR,SAAUK,EACV,QAASA,EACT,UAAWL,EACX,SAAUK,EACV,KAAM,KACN,MAAO,KACP,KAAM,KACN,SAAU,KACV,KAAM,KACN,QAAS,KACT,KAAML,EACN,IAAKI,EACL,SAAU,KACV,IAAK,KACL,UAAWA,EACX,MAAO,KACP,OAAQ,KACR,IAAK,KACL,UAAWA,EACX,SAAUJ,EACV,MAAOA,EACP,KAAM,KACN,MAAO,KACP,SAAUA,EACV,WAAYA,EACZ,QAAS,KACT,aAAc,KACd,WAAY,KACZ,cAAe,KACf,cAAe,KACf,eAAgB,KAChB,eAAgB,KAChB,OAAQ,KACR,SAAU,KACV,UAAW,KACX,iBAAkB,KAClB,SAAU,KACV,QAAS,KACT,QAAS,KACT,cAAe,KACf,cAAe,KACf,kBAAmB,KACnB,OAAQ,KACR,YAAa,KACb,MAAO,KACP,WAAY,KACZ,OAAQ,KACR,UAAW,KACX,YAAa,KACb,WAAY,KACZ,YAAa,KACb,WAAY,KACZ,YAAa,KACb,OAAQ,KACR,iBAAkB,KAClB,UAAW,KACX,QAAS,KACT,QAAS,KACT,QAAS,KACT,WAAY,KACZ,aAAc,KACd,QAAS,KACT,UAAW,KACX,UAAW,KACX,WAAY,KACZ,QAAS,KACT,iBAAkB,KAClB,OAAQ,KACR,aAAc,KACd,iBAAkB,KAClB,UAAW,KACX,YAAa,KACb,UAAW,KACX,eAAgB,KAChB,YAAa,KACb,aAAc,KACd,aAAc,KACd,YAAa,KACb,WAAY,KACZ,YAAa,KACb,UAAW,KACX,UAAW,KACX,SAAU,KACV,WAAY,KACZ,WAAY,KACZ,QAAS,KACT,QAAS,KACT,OAAQ,KACR,UAAW,KACX,WAAY,KACZ,WAAY,KACZ,aAAc,KACd,mBAAoB,KACpB,QAAS,KACT,SAAU,KACV,SAAU,KACV,YAAa,KACb,0BAA2B,KAC3B,SAAU,KACV,UAAW,KACX,SAAU,KACV,aAAc,KACd,UAAW,KACX,UAAW,KACX,SAAU,KACV,UAAW,KACX,aAAc,KACd,SAAU,KACV,qBAAsB,KACtB,SAAU,KACV,eAAgB,KAChB,UAAW,KACX,QAAS,KACT,KAAMA,EACN,QAASI,EACT,QAAS,KACT,KAAMC,EACN,YAAa,KACb,YAAaL,EACb,QAAS,KACT,cAAe,KACf,oBAAqB,KACrB,OAAQ,KACR,QAAS,KACT,SAAUA,EACV,eAAgB,KAChB,IAAKK,EACL,SAAUL,EACV,SAAUA,EACV,KAAMI,EACN,QAASA,EACT,QAASC,EACT,MAAO,KACP,OAAQL,EACR,SAAUA,EACV,SAAUA,EACV,yBAA0BA,EAC1B,eAAgB,KAChB,MAAO,KACP,KAAMI,EACN,MAAO,KACP,KAAM,KACN,KAAMA,EACN,WAAYF,EACZ,IAAK,KACL,OAAQ,KACR,QAAS,KACT,OAAQ,KACR,MAAOE,EACP,KAAM,KACN,MAAO,KACP,SAAUA,EACV,OAAQ,KACR,MAAO,KACP,UAAW,KACX,KAAM,KACN,cAAeJ,EACf,OAAQ,KACR,MAAOE,EACP,MAAOE,EACP,KAAM,KAIN,MAAO,KACP,MAAO,KACP,QAASC,EACT,KAAM,KACN,WAAY,KACZ,QAAS,KACT,OAAQD,EACR,YAAa,KACb,aAAcA,EACd,YAAa,KACb,YAAa,KACb,KAAM,KACN,QAAS,KACT,QAAS,KACT,MAAO,KACP,KAAM,KACN,SAAU,KACV,SAAU,KACV,MAAO,KACP,QAASJ,EACT,QAASA,EACT,MAAO,KACP,KAAM,KACN,MAAO,KACP,YAAa,KACb,OAAQI,EACR,WAAYA,EACZ,KAAM,KACN,SAAU,KACV,OAAQ,KACR,aAAcA,EACd,YAAaA,EACb,SAAUJ,EACV,OAAQA,EACR,QAASA,EACT,OAAQA,EACR,OAAQ,KACR,QAAS,KACT,OAAQ,KACR,IAAK,KACL,YAAaI,EACb,MAAO,KACP,OAAQ,KACR,UAAWF,EACX,QAAS,KACT,QAAS,KACT,KAAM,KACN,UAAWE,EACX,UAAW,KACX,QAAS,KACT,OAAQ,KACR,MAAO,KACP,OAAQA,EAGR,kBAAmB,KACnB,YAAa,KACb,SAAU,KACV,wBAAyBJ,EACzB,sBAAuBA,EACvB,OAAQ,KACR,SAAU,KACV,QAASI,EACT,SAAU,KACV,aAAc,IACf,CACH,CAAC,EAEKsB,GAAQX,EAAO,CACnB,MAAO,MACP,WAAY,CACV,aAAc,gBACd,kBAAmB,qBACnB,WAAY,cACZ,cAAe,iBACf,UAAW,aACX,UAAW,QACX,SAAU,YACV,SAAU,YACV,mBAAoB,sBACpB,0BAA2B,8BAC3B,aAAc,gBACd,eAAgB,kBAChB,YAAa,cACb,SAAU,WACV,iBAAkB,oBAClB,iBAAkB,oBAClB,YAAa,eACb,SAAU,YACV,WAAY,cACZ,aAAc,gBACd,WAAY,cACZ,SAAU,YACV,eAAgB,mBAChB,YAAa,eACb,UAAW,aACX,YAAa,eACb,WAAY,cACZ,UAAW,aACX,2BAA4B,+BAC5B,yBAA0B,6BAC1B,SAAU,WACV,UAAW,cACX,aAAc,iBACd,aAAc,iBACd,eAAgB,kBAChB,cAAe,iBACf,cAAe,iBACf,UAAW,aACX,UAAW,aACX,YAAa,eACb,QAAS,WACT,YAAa,gBACb,aAAc,iBACd,QAAS,WACT,QAAS,WACT,QAAS,WACT,SAAU,YACV,MAAO,SACP,UAAW,cACX,WAAY,eACZ,QAAS,UACT,WAAY,aACZ,aAAc,eACd,cAAe,gBACf,QAAS,UACT,SAAU,WACV,UAAW,YACX,iBAAkB,mBAClB,SAAU,WACV,QAAS,UACT,QAAS,UACT,OAAQ,SACR,YAAa,cACb,MAAO,QACP,WAAY,aACZ,OAAQ,SACR,UAAW,YACX,YAAa,cACb,WAAY,aACZ,YAAa,cACb,WAAY,aACZ,YAAa,cACb,OAAQ,SACR,iBAAkB,mBAClB,UAAW,YACX,MAAO,QACP,QAAS,UACT,QAAS,UACT,QAAS,UACT,UAAW,YACX,WAAY,aACZ,aAAc,eACd,QAAS,UACT,UAAW,YACX,UAAW,YACX,WAAY,aACZ,QAAS,UACT,OAAQ,SACR,aAAc,eACd,iBAAkB,mBAClB,YAAa,cACb,UAAW,YACX,YAAa,cACb,aAAc,eACd,aAAc,eACd,YAAa,cACb,WAAY,aACZ,YAAa,cACb,UAAW,YACX,aAAc,eACd,UAAW,YACX,SAAU,WACV,WAAY,aACZ,WAAY,aACZ,QAAS,UACT,QAAS,UACT,OAAQ,SACR,UAAW,YACX,WAAY,aACZ,WAAY,aACZ,aAAc,eACd,SAAU,WACV,QAAS,UACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,UAAW,YACX,SAAU,WACV,OAAQ,SACR,UAAW,YACX,UAAW,YACX,SAAU,WACV,UAAW,YACX,aAAc,eACd,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,UAAW,YACX,OAAQ,SACR,iBAAkB,oBAClB,kBAAmB,qBACnB,WAAY,cACZ,QAAS,WACT,cAAe,iBACf,eAAgB,iBAChB,gBAAiB,mBACjB,eAAgB,kBAChB,UAAW,aACX,YAAa,eACb,sBAAuB,yBACvB,uBAAwB,0BACxB,gBAAiB,mBACjB,iBAAkB,oBAClB,cAAe,iBACf,eAAgB,kBAChB,iBAAkB,oBAClB,cAAe,iBACf,YAAa,eACb,SAAU,WACV,WAAY,cACZ,eAAgB,kBAChB,cAAe,iBACf,gBAAiB,mBACjB,OAAQ,SACR,kBAAmB,qBACnB,mBAAoB,sBACpB,YAAa,eACb,aAAc,gBACd,WAAY,eACZ,YAAa,eACb,SAAU,YACV,aAAc,gBACd,cAAe,iBACf,aAAc,gBACd,SAAU,aACV,YAAa,gBACb,YAAa,gBACb,YAAa,eACb,YAAa,eACb,QAAS,WAET,cAAe,gBACf,cAAe,eAChB,EACD,UAAWK,GACX,WAAY,CACV,MAAOb,EACP,aAAcH,EACd,WAAY,KACZ,SAAU,KACV,kBAAmB,KACnB,WAAYA,EACZ,UAAWA,EACX,WAAY,KACZ,OAAQA,EACR,cAAe,KACf,cAAe,KACf,QAASA,EACT,UAAW,KACX,cAAe,KACf,cAAe,KACf,YAAa,KACb,KAAM,KACN,MAAO,KACP,KAAMA,EACN,GAAI,KACJ,SAAU,KACV,UAAWA,EACX,UAAWC,EACX,KAAM,KACN,SAAU,KACV,cAAe,KACf,SAAU,KACV,MAAO,KACP,mBAAoB,KACpB,0BAA2B,KAC3B,aAAc,KACd,eAAgB,KAChB,QAAS,KACT,kBAAmB,KACnB,iBAAkB,KAClB,YAAa,KACb,OAAQ,KACR,GAAI,KACJ,GAAI,KACJ,EAAG,KACH,SAAU,KACV,cAAe,KACf,QAASD,EACT,gBAAiBA,EACjB,UAAW,KACX,QAAS,KACT,IAAK,KACL,QAASA,EACT,iBAAkB,KAClB,SAAUJ,EACV,GAAI,KACJ,GAAI,KACJ,SAAU,KACV,SAAU,KACV,UAAWI,EACX,iBAAkB,KAClB,IAAK,KACL,MAAO,KACP,SAAUA,EACV,0BAA2B,KAC3B,KAAM,KACN,YAAaA,EACb,SAAU,KACV,OAAQ,KACR,UAAW,KACX,YAAa,KACb,WAAY,KACZ,aAAc,KACd,UAAW,KACX,eAAgB,KAChB,WAAY,KACZ,SAAU,KACV,eAAgB,KAChB,YAAa,KACb,UAAW,KACX,YAAa,KACb,WAAY,KACZ,OAAQ,KACR,GAAI,KACJ,KAAM,KACN,GAAI,KACJ,GAAI,KACJ,GAAIE,EACJ,GAAIA,EACJ,UAAWA,EACX,2BAA4B,KAC5B,yBAA0B,KAC1B,SAAU,KACV,kBAAmB,KACnB,cAAe,KACf,QAAS,KACT,QAASF,EACT,kBAAmB,KACnB,WAAY,KACZ,OAAQ,KACR,KAAM,KACN,SAAU,KACV,UAAWA,EACX,aAAcA,EACd,aAAcA,EACd,GAAI,KACJ,YAAaA,EACb,eAAgB,KAChB,kBAAmB,KACnB,GAAI,KACJ,IAAK,KACL,UAAWA,EACX,EAAGA,EACH,GAAIA,EACJ,GAAIA,EACJ,GAAIA,EACJ,GAAIA,EACJ,aAAcG,EACd,iBAAkB,KAClB,UAAW,KACX,WAAY,KACZ,SAAU,KACV,QAAS,KACT,KAAM,KACN,aAAc,KACd,cAAe,KACf,cAAe,KACf,kBAAmBH,EACnB,MAAO,KACP,UAAW,KACX,UAAW,KACX,YAAa,KACb,aAAc,KACd,YAAa,KACb,YAAa,KACb,KAAM,KACN,iBAAkB,KAClB,UAAW,KACX,aAAc,KACd,IAAK,KACL,MAAO,KACP,uBAAwB,KACxB,sBAAuB,KACvB,UAAWA,EACX,UAAW,KACX,OAAQ,KACR,IAAK,KACL,KAAM,KACN,KAAM,KACN,QAAS,KACT,YAAa,KACb,aAAc,KACd,QAAS,KACT,QAAS,KACT,QAAS,KACT,SAAU,KACV,MAAO,KACP,UAAW,KACX,WAAY,KACZ,WAAY,KACZ,SAAU,KACV,OAAQ,KACR,QAAS,KACT,WAAY,KACZ,aAAc,KACd,cAAe,KACf,QAAS,KACT,SAAU,KACV,UAAW,KACX,iBAAkB,KAClB,SAAU,KACV,QAAS,KACT,QAAS,KACT,OAAQ,KACR,YAAa,KACb,MAAO,KACP,WAAY,KACZ,OAAQ,KACR,UAAW,KACX,YAAa,KACb,WAAY,KACZ,YAAa,KACb,WAAY,KACZ,YAAa,KACb,OAAQ,KACR,iBAAkB,KAClB,UAAW,KACX,MAAO,KACP,QAAS,KACT,QAAS,KACT,QAAS,KACT,UAAW,KACX,WAAY,KACZ,aAAc,KACd,QAAS,KACT,UAAW,KACX,UAAW,KACX,WAAY,KACZ,QAAS,KACT,OAAQ,KACR,aAAc,KACd,iBAAkB,KAClB,YAAa,KACb,UAAW,KACX,YAAa,KACb,aAAc,KACd,aAAc,KACd,YAAa,KACb,WAAY,KACZ,YAAa,KACb,UAAW,KACX,aAAc,KACd,UAAW,KACX,SAAU,KACV,WAAY,KACZ,WAAY,KACZ,QAAS,KACT,QAAS,KACT,OAAQ,KACR,UAAW,KACX,WAAY,KACZ,WAAY,KACZ,aAAc,KACd,SAAU,KACV,QAAS,KACT,SAAU,KACV,SAAU,KACV,SAAU,KACV,UAAW,KACX,SAAU,KACV,OAAQ,KACR,UAAW,KACX,UAAW,KACX,SAAU,KACV,UAAW,KACX,aAAc,KACd,SAAU,KACV,SAAU,KACV,eAAgB,KAChB,UAAW,KACX,OAAQ,KACR,QAAS,KACT,SAAU,KACV,MAAO,KACP,OAAQ,KACR,YAAa,KACb,OAAQ,KACR,SAAU,KACV,QAAS,KACT,iBAAkBA,EAClB,kBAAmBA,EACnB,WAAY,KACZ,QAAS,KACT,KAAM,KACN,WAAYA,EACZ,oBAAqB,KACrB,iBAAkB,KAClB,aAAc,KACd,MAAO,KACP,KAAMC,EACN,MAAO,KACP,cAAe,KACf,cAAe,KACf,OAAQ,KACR,UAAWD,EACX,UAAWA,EACX,UAAWA,EACX,cAAe,KACf,oBAAqB,KACrB,eAAgB,KAChB,UAAW,KACX,SAAUG,EACV,EAAG,KACH,OAAQ,KACR,eAAgB,KAChB,KAAM,KACN,KAAM,KACN,IAAKA,EACL,IAAKA,EACL,gBAAiB,KACjB,YAAa,KACb,UAAW,KACX,mBAAoBA,EACpB,iBAAkBA,EAClB,cAAeA,EACf,gBAAiBA,EACjB,SAAU,KACV,QAAS,KACT,OAAQ,KACR,OAAQ,KACR,GAAI,KACJ,GAAI,KACJ,MAAO,KACP,KAAM,KACN,eAAgB,KAChB,KAAM,KACN,MAAO,KACP,aAAc,KACd,iBAAkBH,EAClB,iBAAkBA,EAClB,aAAc,KACd,QAAS,KACT,YAAa,KACb,aAAc,KACd,MAAO,KACP,MAAO,KACP,YAAa,KACb,UAAW,KACX,YAAa,KACb,sBAAuBA,EACvB,uBAAwBA,EACxB,OAAQ,KACR,OAAQ,KACR,gBAAiBG,EACjB,iBAAkB,KAClB,cAAe,KACf,eAAgB,KAChB,iBAAkBH,EAClB,cAAeA,EACf,YAAa,KACb,MAAO,KACP,aAAcA,EACd,aAAc,KACd,oBAAqB,KACrB,WAAY,KACZ,cAAe,KACf,qBAAsB,KACtB,eAAgBG,EAChB,SAAUH,EACV,YAAa,KACb,OAAQ,KACR,QAASA,EACT,QAASA,EACT,WAAY,KACZ,eAAgB,KAChB,cAAe,KACf,WAAY,KACZ,cAAe,KACf,MAAO,KACP,kBAAmB,KACnB,KAAM,KACN,OAAQG,EACR,GAAI,KACJ,UAAW,KACX,gBAAiB,KACjB,GAAI,KACJ,GAAI,KACJ,kBAAmBH,EACnB,mBAAoBA,EACpB,QAAS,KACT,YAAa,KACb,aAAc,KACd,WAAYA,EACZ,OAAQ,KACR,YAAaA,EACb,cAAeA,EACf,aAAc,KACd,SAAUA,EACV,aAAcA,EACd,QAAS,KACT,SAAUA,EACV,YAAaA,EACb,YAAaA,EACb,QAAS,KACT,WAAY,KACZ,WAAY,KACZ,MAAO,KACP,OAAQ,KACR,YAAa,KACb,YAAa,KACb,EAAG,KACH,GAAI,KACJ,GAAI,KACJ,iBAAkB,KAClB,QAASA,EACT,EAAG,KACH,GAAI,KACJ,GAAI,KACJ,iBAAkB,KAClB,EAAG,KACH,WAAY,IACb,CACH,CAAC,EAOKuB,GAAQ,kBACRC,GAAO,UACPC,GAAM,SAOZ,SAASC,GAAKC,EAAQlsB,EAAO,CAC3B,MAAM2pB,EAASI,GAAU/pB,CAAK,EAC9B,IAAIorB,EAAOprB,EACPmsB,EAAOnC,EAEX,GAAIL,KAAUuC,EAAO,OACnB,OAAOA,EAAO,SAASA,EAAO,OAAOvC,CAAM,CAAC,EAG9C,GAAIA,EAAO,OAAS,GAAKA,EAAO,MAAM,EAAG,CAAC,IAAM,QAAUmC,GAAM,KAAK9rB,CAAK,EAAG,CAE3E,GAAIA,EAAM,OAAO,CAAC,IAAM,IAAK,CAE3B,MAAMosB,EAAOpsB,EAAM,MAAM,CAAC,EAAE,QAAQ+rB,GAAMM,EAAS,EACnDjB,EAAO,OAASgB,EAAK,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAK,MAAM,CAAC,CACjE,KAAW,CAEL,MAAMA,EAAOpsB,EAAM,MAAM,CAAC,EAE1B,GAAI,CAAC+rB,GAAK,KAAKK,CAAI,EAAG,CACpB,IAAIE,EAASF,EAAK,QAAQJ,GAAKO,EAAK,EAEhCD,EAAO,OAAO,CAAC,IAAM,MACvBA,EAAS,IAAMA,GAGjBtsB,EAAQ,OAASssB,CAClB,CACF,CAEDH,EAAOtB,EACR,CAED,OAAO,IAAIsB,EAAKf,EAAMprB,CAAK,CAC7B,CAMA,SAASusB,GAAMC,EAAI,CACjB,MAAO,IAAMA,EAAG,YAAa,CAC/B,CAMA,SAASH,GAAUG,EAAI,CACrB,OAAOA,EAAG,OAAO,CAAC,EAAE,YAAa,CACnC,CAOA,MAAMC,GAAS5C,GAAM,CAACyB,GAAKD,GAAOK,GAAOC,GAAMC,EAAM,EAAG,MAAM,EACxDc,GAAM7C,GAAM,CAACyB,GAAKD,GAAOK,GAAOC,GAAME,EAAK,EAAG,KAAK,EAmDnDc,GAAQ,CAAE,EAAC,eAcjB,SAASC,GAAOxuB,EAAKyO,EAAS,CAC5B,MAAM7K,EAAW6K,GAAW,GA8B5B,SAASggB,EAAI7sB,KAAU8sB,EAAY,CAEjC,IAAI5sB,EAAK2sB,EAAI,QACb,MAAME,EAAWF,EAAI,SAErB,GAAI7sB,GAAS2sB,GAAM,KAAK3sB,EAAO5B,CAAG,EAAG,CAEnC,MAAM0K,EAAK,OAAO9I,EAAM5B,CAAG,CAAC,EAE5B8B,EAAKysB,GAAM,KAAKI,EAAUjkB,CAAE,EAAIikB,EAASjkB,CAAE,EAAI+jB,EAAI,OACpD,CAED,GAAI3sB,EACF,OAAOA,EAAG,KAAK,KAAMF,EAAO,GAAG8sB,CAAU,CAE5C,CAED,OAAAD,EAAI,SAAW7qB,EAAS,UAAY,GACpC6qB,EAAI,QAAU7qB,EAAS,QACvB6qB,EAAI,QAAU7qB,EAAS,QAGhB6qB,CACT,CAwBA,SAASG,GAAKhtB,EAAO6M,EAAS,CAM5B,GALA7M,EAAQA,EAAM,QACZ6M,EAAQ,OAASogB,GAAuBpgB,EAAQ,MAAM,EAAI,YAC1DqgB,CACJ,EAEMrgB,EAAQ,QAAUA,EAAQ,WAC5B,OAAO7M,EAGT,OACEA,EAEG,QAAQ,kCAAmCmtB,CAAS,EAGpD,QAEC,6DACAD,CACD,EAQL,SAASC,EAAUC,EAAMluB,EAAOmuB,EAAK,CACnC,OAAOxgB,EAAQ,QACZugB,EAAK,WAAW,CAAC,EAAI,OAAU,KAC9BA,EAAK,WAAW,CAAC,EACjB,MACA,MACFC,EAAI,WAAWnuB,EAAQ,CAAC,EACxB2N,CACD,CACF,CAOD,SAASqgB,EAAM3O,EAAWrf,EAAOmuB,EAAK,CACpC,OAAOxgB,EAAQ,OACb0R,EAAU,WAAW,CAAC,EACtB8O,EAAI,WAAWnuB,EAAQ,CAAC,EACxB2N,CACD,CACF,CACH,CAMA,SAASogB,GAAuBK,EAAQ,CAEtC,MAAMC,EAAS,GACf,IAAIruB,EAAQ,GAEZ,KAAO,EAAEA,EAAQouB,EAAO,QACtBC,EAAO,KAAKD,EAAOpuB,CAAK,EAAE,QAAQ,sBAAuB,MAAM,CAAC,EAGlE,OAAO,IAAI,OAAO,MAAQquB,EAAO,KAAK,GAAG,EAAI,IAAK,GAAG,CACvD,CAUA,SAASC,GAAclR,EAAMmR,EAAMC,EAAM,CACvC,MAAM1tB,EAAQ,MAAQsc,EAAK,SAAS,EAAE,EAAE,cACxC,OAAOoR,GAAQD,GAAQ,CAAC,aAAa,KAAK,OAAO,aAAaA,CAAI,CAAC,EAC/DztB,EACAA,EAAQ,GACd,CAUA,SAAS2tB,GAAUrR,EAAMmR,EAAMC,EAAM,CACnC,MAAM1tB,EAAQ,KAAO,OAAOsc,CAAI,EAChC,OAAOoR,GAAQD,GAAQ,CAAC,KAAK,KAAK,OAAO,aAAaA,CAAI,CAAC,EACvDztB,EACAA,EAAQ,GACd,CAOA,MAAM4tB,GAA0B,CAC9B,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,MACF,EAOMC,GAAyB,CAC7B,KAAM,IACN,MAAO,IACP,KAAM,IACN,MAAO,IACP,OAAQ,IACR,IAAK,IACL,OAAQ,IACR,KAAM,IACN,IAAK,IACL,KAAM,IACN,KAAM,IACN,MAAO,IACP,IAAK,I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","names":["bundledLanguagesInfo","__vitePreload","bundledLanguagesBase","i","bundledLanguagesAlias","a","bundledLanguages","getWasmInlined","info","wasm","bundledThemesInfo","bundledThemes","FontStyle","clone","something","doClone","cloneArray","cloneObj","arr","r","len","obj","key","mergeObjects","target","sources","source","basename","path","idx","CAPTURING_REGEX_SOURCE","RegexSource","regexSource","captureSource","captureIndices","match","index","commandIndex","command","capture","result","strcmp","b","strArrCmp","len1","len2","res","isValidHexColor","hex","escapeRegExpCharacters","value","CachedFn","fn","Theme","_colorMap","_defaults","_root","scopeName","colorMap","parseTheme","resolveParsedThemeRules","scopePath","effectiveRule","v","_scopePathMatchesParentScopes","StyleAttributes","ScopeStack","_ScopeStack","parent","scopeNames","name","segments","item","other","base","parentScopes","scopePattern","scopeMustMatch","_matchesScope","fontStyle","foregroundId","backgroundId","settings","resultLen","entry","scopes","_scope","j","lenJ","foreground","background","scope","ParsedThemeRule","parsedThemeRules","defaultFontStyle","defaultForeground","defaultBackground","incomingDefaults","ColorMap","defaults","root","ThemeTrieElement","ThemeTrieElementRule","rule","color","emptyParentScopes","_ThemeTrieElementRule","scopeDepth","_ThemeTrieElement","_mainRule","rulesWithParentScopes","_children","aParentIndex","bParentIndex","parentScopeLengthDiff","dotIndex","head","tail","rules","child","EncodedTokenMetadata","_EncodedTokenMetadata","encodedTokenAttributes","languageId","tokenType","containsBalancedBrackets","_languageId","_tokenType","_containsBalancedBracketsBit","_fontStyle","_foreground","_background","createMatchers","selector","matchesName","results","tokenizer","newTokenizer","token","priority","matcher","parseConjunction","parseOperand","expressionToNegate","matcherInput","expressionInParents","parseInnerExpression","isIdentifier","identifiers","matchers","matcher2","input","regex","disposeOnigString","str","TopLevelRuleReference","TopLevelRepositoryRuleReference","ruleName","ExternalReferenceCollector","reference","ScopeDependencyProcessor","repo","initialScopeName","q","deps","dep","collectReferencesOfReference","baseGrammarScopeName","selfGrammar","baseGrammar","collectExternalReferencesInTopLevelRule","collectExternalReferencesInTopLevelRepositoryRule","injections","injection","context","collectExternalReferencesInRules","patternRepository","include","parseInclude","newContext","BaseReference","SelfReference","RelativeReference","TopLevelReference","TopLevelRepositoryReference","indexOfSharp","HAS_BACK_REFERENCES","BACK_REFERENCING_END","endRuleId","whileRuleId","Rule","$location","id","contentName","location","lineText","CaptureRule","retokenizeCapturedWithRuleId","grammar","out","endRegexSource","allowA","allowG","MatchRule","captures","RegExpSource","RegExpSourceList","IncludeOnlyRule","patterns","pattern","BeginEndRule","begin","beginCaptures","end","endCaptures","applyEndPatternLast","BeginWhileRule","_while","whileCaptures","RuleFactory","_RuleFactory","helper","desc","repository","maximumCaptureId","captureId","numericCaptureId","ruleId","localIncludedRule","externalGrammarName","externalGrammarInclude","externalGrammar","externalIncludedRule","skipRule","_RegExpSource","regExpSource","lastPushedPos","output","hasAnchor","pos","nextCh","newSource","capturedValues","g1","A0_G0_result","A0_G1_result","A1_G0_result","A1_G1_result","ch","onigLib","regExps","e","CompiledRule","string","startPosition","options","BasicScopeAttributes","_BasicScopeAttributesProvider","initialLanguageId","embeddedLanguages","standardTokenType","ScopeMatcher","m","BasicScopeAttributesProvider","values","escapedScopes","TokenizeStringResult","stack","stoppedEarly","_tokenizeString","isFirstLine","linePos","lineTokens","checkWhileConditions","timeLimit","lineLength","STOP","anchorPosition","whileCheckResult","_checkWhileConditions","startTime","scanNext","matchRuleOrInjections","matchedRuleId","hasAdvanced","poppedRule","handleCaptures","popped","_rule","beforePush","nameScopesList","pushedRule","contentNameScopesList","whileRules","node","nodeRule","whileRule","ruleScanner","findOptions","prepareRuleWhileSearch","matchResult","matchRule","injectionResult","matchInjections","matchResultScore","injectionResultScore","prepareRuleSearch","bestMatchRating","bestMatchCaptureIndices","bestMatchRuleId","bestMatchResultPriority","matchRating","lineTextContent","localStack","maxEnd","captureRule","captureIndex","stackClone","onigSubStr","captureRuleScopeName","captureRuleScopesList","LocalStackElement","endPos","createGrammar","initialLanguage","tokenTypes","balancedBracketSelectors","grammarRepository","Grammar","collectInjections","ruleFactoryHelper","nameMatcher","identifers","lastIndex","identifier","scopesAreMatching","thisScopeName","_rootScopeName","_onigLib","initGrammar","scopeName2","rawInjections","expression","injectionScopeNames","injectionScopeName","injectionGrammar","i1","i2","factory","rawIncludedGrammar","prevState","emitBinaryTokens","StateStackImpl","rawDefaultMetadata","defaultStyle","defaultMetadata","rootScopeName","scopeList","AttributedScopeStack","onigLineText","LineTokens","_AttributedScopeStack","tokenAttributes","namesScopeList","current","frame","rawRootMetadata","rootStyle","resolvedTokenAttributes","existingTokenAttributes","basicScopeAttributes","styleAttributes","rawMetadata","newPath","scopeThemeMatchResult","metadata","self","_StateStackImpl","enterPos","anchorPos","beginRuleCapturedEOL","endRule","el","outIndex","contentNameScopeStack","BalancedBracketSelectors","balancedBracketScopes","unbalancedBracketScopes","excluder","includer","tokenTypeOverrides","endIndex","scopesList","scopes2","SyncRegistry","theme","targetScope","rawGrammar","Registry","configuration","dependencyProcessor","request","INITIAL","doublePunctuatorChars","namedCapturingDelim","capturingDelim","noncapturingDelim","stringPropertyNames","baseQuantifier","subroutinePattern","incompatibleEscapeChars","ShikiError","message","getHeapMax","_emscripten_get_now","alignUp","x","multiple","main","init","wasmMemory","buffer","binding","updateGlobalBufferAndViews","buf","_emscripten_memcpy_big","dest","src","num","emscripten_realloc_buffer","size","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","newSize","UTF8Decoder","UTF8ArrayToString","heapOrArray","maxBytesToRead","endIdx","endPtr","u0","u1","u2","UTF8ToString","ptr","asmLibraryArg","createWasm","exports","onigBinding","throwLastOnigError","UtfString","charCode","codepoint","wasSurrogatePair","nextCharCode","utf16Length","utf8Length","computeIndicesMapping","utf16OffsetToUtf8","utf8OffsetToUtf16","utf8Value","i8","i16","codePoint","OnigString","utfString","utf8Offset","utf16Offset","OnigScanner","strPtrsArr","strLenArr","strPtrsPtr","strLenPtr","scannerPtr","arg","debugCall","resultPtr","HEAPU32","offset","count","beg","isInstantiatorOptionsObject","dataOrOptions","isInstantiatorModule","isDataOptionsObject","isResponse","isArrayBuffer","data","initPromise","loadWasm","_load","instance","_makeResponseStreamingLoader","_makeResponseNonStreamingLoader","_makeArrayBufferLoader","importObject","arrayBuffer","createWasmOnigEngine","s","splitLines","code","preserveEnding","parts","lines","line","isPlainLang","lang","isSpecialLang","isNoneTheme","isSpecialTheme","addClassToHast","className","targets","c","splitToken","offsets","lastOffset","tokens","splitTokens","breakpoints","sorted","breakpointsInToken","normalizeGetter","p","resolveColorReplacements","replacements","themeName","applyColorReplacements","getTokenStyleObject","styles","stringifyTokenStyle","createPositionConverter","indexToPos","character","posToIndex","transformerDecorations","map","getContext","shiki","normalizePosition","converter","decorations","d","verifyIntersections","codeEl","ctx","applyLineSection","start","decoration","lineEl","text","startIndex","stringify$2","children","applyDecoration","wrapper","applyLine","type","properties","transform","lineApplies","items","foo","bar","isFooHasBarStart","isFooHasBarEnd","isBarHasFooStart","isBarHasFooEnd","builtInTransformers","getTransformers","GrammarState","_stack","getScopes","visited","pushScope","getGrammarStack","state","namedColors","findSequence","position","nextEscape","nextClose","parseColor","sequence","colorMode","rgb","colorIndex","parseSequence","commands","codeInt","createAnsiSequenceParser","decorations2","findResult","styleToken","defaultNamedColorsMap","createColorPalette","namedColorsMap","namedColor","rgbColor","colorTable","getColorTable","levels","g","level","tableColor","tokenizeAnsiWithTheme","fileContents","colorReplacements","colorPalette","parser","bgColor","dimColor","hexMatch","alpha","cssVarMatch","codeToTokensBase","internal","_grammar","tokenizeWithTheme","getLastGrammarState","_tokenizeWithTheme","tokenizeMaxLineLength","tokenizeTimeLimit","stateStack","actual","final","lineOffset","resultWithScopes","tokensWithScopes","tokensWithScopesIndex","tokensLength","nextStartIndex","themeSettingsSelectors","setting","selectors","tokenWithScopes","tokenWithScopesText","explainThemeScopesNameOnly","explainThemeScopesFull","themeSelectors","explainThemeScope","matchesOne","matches","selectorParentIndex","parentIndex","selectorPieces","codeToTokensWithThemes","themes","syncThemesTokenization","t","lineIdx","_token","tokenIdx","mergedToken","themeIdx","_","__","___","outThemes","outLines","indexes","l","minLength","n","codeToTokens","bg","fg","defaultColor","cssVariablePrefix","themeTokens","themeRegs","themesOrder","mergeToken","themeColorReplacements","_theme","merged","variantsOrder","styleKeys","mergedStyles","acc","cur","keyName","varKey","codeToHast","transformerContext","_code","_options","transformer","mergeWhitespaces","mergeWhitespaceTokens","splitWhitespaceTokens","contextSource","tokensToHast","transformers","structure","preNode","codeNode","lineNodes","lineNode","col","tokenNode","style","newLine","carryOnContent","firstOffset","couldMerge","leading","content","trailing","expanded","htmlVoidElements","Schema","property","normal","space","merge","definitions","normalize","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","types","checks","DefinedInfo","mask","mark","check","own$3","create","definition","prop","xlink","xml","caseSensitiveTransform","attributes","caseInsensitiveTransform","xmlns","aria","html$3","svg$1","valid","dash","cap","find","schema","Type","rest","camelcase","dashes","kebab","$0","html$2","svg","own$2","zwitch","one","parameters","handlers","core","charactersToExpression","basic","surrogate","pair","all","subset","groups","toHexadecimal","next","omit","toDecimal","characterEntitiesLegacy","characterEntitiesHtml4","dangerous","own$1","characters","toNamed","formatSmart","numeric","named","decimal","stringifyEntities","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","comment","_1","_2","encode","doctype","_3","ccount","stringify$1","stringify","re","whitespace","thing","empty","siblingAfter","siblings","siblingBefore","emptyChildren$1","sibling","includeWhitespace","own","omission","closing","body$1","headOrColgroupOrCaption","dd","dt","html$1","li","optgroup","option","rubyElement","tbody$1","cells","tfoot","thead","tr","opening","body","colgroup","html","tbody","seen","previous","constants","element","selfClosing","last","serializeAttributes","serializeAttribute","y","quote","textEntitySubset","raw","handle","invalid","unknown","node_","emptyOptions","emptyCharacterReferences","emptyChildren","toHtml","tree","options_","alternative","codeToHtml","VSCODE_FALLBACK_EDITOR_FG","VSCODE_FALLBACK_EDITOR_BG","RESOLVED_KEY","normalizeTheme","rawTheme","globalSetting","replacementCount","replacementMap","getReplacementColor","replaceFg","replaceBg","replacement","resolveLangs","langs","resolveThemes","Registry$1","_resolver","_themes","_langs","_alias","textmateTheme","resolved","embeddedLazilyBy","grammarConfig","alias","langsGraphArray","missingLangs","dependents","embeddedLang","Resolver","engine","langIdOrAlias","scopeParts","subScopeName","instancesCount","createShikiInternalSync","isDisposed","resolver","_registry","_lastTheme","getLanguage","ensureNotDisposed","_lang","getTheme","setTheme","getLoadedThemes","getLoadedLanguages","loadLanguageSync","loadLanguage","loadThemeSync","loadTheme","dispose","_defaultWasmLoader","createShikiInternal","createHighlighterCore","createdBundledHighlighter","arg1","arg2","arg3","createHighlighter","resolveLang","bundle","resolveTheme","u","o","h"],"ignoreList":[0,1,2,3,4,5,6,7,8],"sources":["../../../node_modules/shiki/dist/langs.mjs","../../../node_modules/shiki/dist/chunks/wasm-dynamic.mjs","../../../node_modules/shiki/dist/themes.mjs","../../../node_modules/@shikijs/core/dist/types.mjs","../../../node_modules/@shikijs/vscode-textmate/dist/index.mjs","../../../node_modules/regex/dist/regex.mjs","../../../node_modules/@shikijs/core/dist/index.mjs","../../../node_modules/shiki/dist/bundle-full.mjs","../../../node_modules/@olinfo/react-components/dist/highlight-UOJF2D5K.js"],"sourcesContent":["const bundledLanguagesInfo = [\n  {\n    \"id\": \"abap\",\n    \"name\": \"ABAP\",\n    \"import\": () => import('./langs/abap.mjs')\n  },\n  {\n    \"id\": \"actionscript-3\",\n    \"name\": \"ActionScript\",\n    \"import\": () => import('./langs/actionscript-3.mjs')\n  },\n  {\n    \"id\": \"ada\",\n    \"name\": \"Ada\",\n    \"import\": () => import('./langs/ada.mjs')\n  },\n  {\n    \"id\": \"angular-html\",\n    \"name\": \"Angular HTML\",\n    \"import\": () => import('./langs/angular-html.mjs')\n  },\n  {\n    \"id\": \"angular-ts\",\n    \"name\": \"Angular TypeScript\",\n    \"import\": () => import('./langs/angular-ts.mjs')\n  },\n  {\n    \"id\": \"apache\",\n    \"name\": \"Apache Conf\",\n    \"import\": () => import('./langs/apache.mjs')\n  },\n  {\n    \"id\": \"apex\",\n    \"name\": \"Apex\",\n    \"import\": () => import('./langs/apex.mjs')\n  },\n  {\n    \"id\": \"apl\",\n    \"name\": \"APL\",\n    \"import\": () => import('./langs/apl.mjs')\n  },\n  {\n    \"id\": \"applescript\",\n    \"name\": \"AppleScript\",\n    \"import\": () => import('./langs/applescript.mjs')\n  },\n  {\n    \"id\": \"ara\",\n    \"name\": \"Ara\",\n    \"import\": () => import('./langs/ara.mjs')\n  },\n  {\n    \"id\": \"asciidoc\",\n    \"name\": \"AsciiDoc\",\n    \"aliases\": [\n      \"adoc\"\n    ],\n    \"import\": () => import('./langs/asciidoc.mjs')\n  },\n  {\n    \"id\": \"asm\",\n    \"name\": \"Assembly\",\n    \"import\": () => import('./langs/asm.mjs')\n  },\n  {\n    \"id\": \"astro\",\n    \"name\": \"Astro\",\n    \"import\": () => import('./langs/astro.mjs')\n  },\n  {\n    \"id\": \"awk\",\n    \"name\": \"AWK\",\n    \"import\": () => import('./langs/awk.mjs')\n  },\n  {\n    \"id\": \"ballerina\",\n    \"name\": \"Ballerina\",\n    \"import\": () => import('./langs/ballerina.mjs')\n  },\n  {\n    \"id\": \"bat\",\n    \"name\": \"Batch File\",\n    \"aliases\": [\n      \"batch\"\n    ],\n    \"import\": () => import('./langs/bat.mjs')\n  },\n  {\n    \"id\": \"beancount\",\n    \"name\": \"Beancount\",\n    \"import\": () => import('./langs/beancount.mjs')\n  },\n  {\n    \"id\": \"berry\",\n    \"name\": \"Berry\",\n    \"aliases\": [\n      \"be\"\n    ],\n    \"import\": () => import('./langs/berry.mjs')\n  },\n  {\n    \"id\": \"bibtex\",\n    \"name\": \"BibTeX\",\n    \"import\": () => import('./langs/bibtex.mjs')\n  },\n  {\n    \"id\": \"bicep\",\n    \"name\": \"Bicep\",\n    \"import\": () => import('./langs/bicep.mjs')\n  },\n  {\n    \"id\": \"blade\",\n    \"name\": \"Blade\",\n    \"import\": () => import('./langs/blade.mjs')\n  },\n  {\n    \"id\": \"c\",\n    \"name\": \"C\",\n    \"import\": () => import('./langs/c.mjs')\n  },\n  {\n    \"id\": \"cadence\",\n    \"name\": \"Cadence\",\n    \"aliases\": [\n      \"cdc\"\n    ],\n    \"import\": () => import('./langs/cadence.mjs')\n  },\n  {\n    \"id\": \"clarity\",\n    \"name\": \"Clarity\",\n    \"import\": () => import('./langs/clarity.mjs')\n  },\n  {\n    \"id\": \"clojure\",\n    \"name\": \"Clojure\",\n    \"aliases\": [\n      \"clj\"\n    ],\n    \"import\": () => import('./langs/clojure.mjs')\n  },\n  {\n    \"id\": \"cmake\",\n    \"name\": \"CMake\",\n    \"import\": () => import('./langs/cmake.mjs')\n  },\n  {\n    \"id\": \"cobol\",\n    \"name\": \"COBOL\",\n    \"import\": () => import('./langs/cobol.mjs')\n  },\n  {\n    \"id\": \"codeowners\",\n    \"name\": \"CODEOWNERS\",\n    \"import\": () => import('./langs/codeowners.mjs')\n  },\n  {\n    \"id\": \"codeql\",\n    \"name\": \"CodeQL\",\n    \"aliases\": [\n      \"ql\"\n    ],\n    \"import\": () => import('./langs/codeql.mjs')\n  },\n  {\n    \"id\": \"coffee\",\n    \"name\": \"CoffeeScript\",\n    \"aliases\": [\n      \"coffeescript\"\n    ],\n    \"import\": () => import('./langs/coffee.mjs')\n  },\n  {\n    \"id\": \"common-lisp\",\n    \"name\": \"Common Lisp\",\n    \"aliases\": [\n      \"lisp\"\n    ],\n    \"import\": () => import('./langs/common-lisp.mjs')\n  },\n  {\n    \"id\": \"coq\",\n    \"name\": \"Coq\",\n    \"import\": () => import('./langs/coq.mjs')\n  },\n  {\n    \"id\": \"cpp\",\n    \"name\": \"C++\",\n    \"aliases\": [\n      \"c++\"\n    ],\n    \"import\": () => import('./langs/cpp.mjs')\n  },\n  {\n    \"id\": \"crystal\",\n    \"name\": \"Crystal\",\n    \"import\": () => import('./langs/crystal.mjs')\n  },\n  {\n    \"id\": \"csharp\",\n    \"name\": \"C#\",\n    \"aliases\": [\n      \"c#\",\n      \"cs\"\n    ],\n    \"import\": () => import('./langs/csharp.mjs')\n  },\n  {\n    \"id\": \"css\",\n    \"name\": \"CSS\",\n    \"import\": () => import('./langs/css.mjs')\n  },\n  {\n    \"id\": \"csv\",\n    \"name\": \"CSV\",\n    \"import\": () => import('./langs/csv.mjs')\n  },\n  {\n    \"id\": \"cue\",\n    \"name\": \"CUE\",\n    \"import\": () => import('./langs/cue.mjs')\n  },\n  {\n    \"id\": \"cypher\",\n    \"name\": \"Cypher\",\n    \"aliases\": [\n      \"cql\"\n    ],\n    \"import\": () => import('./langs/cypher.mjs')\n  },\n  {\n    \"id\": \"d\",\n    \"name\": \"D\",\n    \"import\": () => import('./langs/d.mjs')\n  },\n  {\n    \"id\": \"dart\",\n    \"name\": \"Dart\",\n    \"import\": () => import('./langs/dart.mjs')\n  },\n  {\n    \"id\": \"dax\",\n    \"name\": \"DAX\",\n    \"import\": () => import('./langs/dax.mjs')\n  },\n  {\n    \"id\": \"desktop\",\n    \"name\": \"Desktop\",\n    \"import\": () => import('./langs/desktop.mjs')\n  },\n  {\n    \"id\": \"diff\",\n    \"name\": \"Diff\",\n    \"import\": () => import('./langs/diff.mjs')\n  },\n  {\n    \"id\": \"docker\",\n    \"name\": \"Dockerfile\",\n    \"aliases\": [\n      \"dockerfile\"\n    ],\n    \"import\": () => import('./langs/docker.mjs')\n  },\n  {\n    \"id\": \"dotenv\",\n    \"name\": \"dotEnv\",\n    \"import\": () => import('./langs/dotenv.mjs')\n  },\n  {\n    \"id\": \"dream-maker\",\n    \"name\": \"Dream Maker\",\n    \"import\": () => import('./langs/dream-maker.mjs')\n  },\n  {\n    \"id\": \"edge\",\n    \"name\": \"Edge\",\n    \"import\": () => import('./langs/edge.mjs')\n  },\n  {\n    \"id\": \"elixir\",\n    \"name\": \"Elixir\",\n    \"import\": () => import('./langs/elixir.mjs')\n  },\n  {\n    \"id\": \"elm\",\n    \"name\": \"Elm\",\n    \"import\": () => import('./langs/elm.mjs')\n  },\n  {\n    \"id\": \"emacs-lisp\",\n    \"name\": \"Emacs Lisp\",\n    \"aliases\": [\n      \"elisp\"\n    ],\n    \"import\": () => import('./langs/emacs-lisp.mjs')\n  },\n  {\n    \"id\": \"erb\",\n    \"name\": \"ERB\",\n    \"import\": () => import('./langs/erb.mjs')\n  },\n  {\n    \"id\": \"erlang\",\n    \"name\": \"Erlang\",\n    \"aliases\": [\n      \"erl\"\n    ],\n    \"import\": () => import('./langs/erlang.mjs')\n  },\n  {\n    \"id\": \"fennel\",\n    \"name\": \"Fennel\",\n    \"import\": () => import('./langs/fennel.mjs')\n  },\n  {\n    \"id\": \"fish\",\n    \"name\": \"Fish\",\n    \"import\": () => import('./langs/fish.mjs')\n  },\n  {\n    \"id\": \"fluent\",\n    \"name\": \"Fluent\",\n    \"aliases\": [\n      \"ftl\"\n    ],\n    \"import\": () => import('./langs/fluent.mjs')\n  },\n  {\n    \"id\": \"fortran-fixed-form\",\n    \"name\": \"Fortran (Fixed Form)\",\n    \"aliases\": [\n      \"f\",\n      \"for\",\n      \"f77\"\n    ],\n    \"import\": () => import('./langs/fortran-fixed-form.mjs')\n  },\n  {\n    \"id\": \"fortran-free-form\",\n    \"name\": \"Fortran (Free Form)\",\n    \"aliases\": [\n      \"f90\",\n      \"f95\",\n      \"f03\",\n      \"f08\",\n      \"f18\"\n    ],\n    \"import\": () => import('./langs/fortran-free-form.mjs')\n  },\n  {\n    \"id\": \"fsharp\",\n    \"name\": \"F#\",\n    \"aliases\": [\n      \"f#\",\n      \"fs\"\n    ],\n    \"import\": () => import('./langs/fsharp.mjs')\n  },\n  {\n    \"id\": \"gdresource\",\n    \"name\": \"GDResource\",\n    \"import\": () => import('./langs/gdresource.mjs')\n  },\n  {\n    \"id\": \"gdscript\",\n    \"name\": \"GDScript\",\n    \"import\": () => import('./langs/gdscript.mjs')\n  },\n  {\n    \"id\": \"gdshader\",\n    \"name\": \"GDShader\",\n    \"import\": () => import('./langs/gdshader.mjs')\n  },\n  {\n    \"id\": \"genie\",\n    \"name\": \"Genie\",\n    \"import\": () => import('./langs/genie.mjs')\n  },\n  {\n    \"id\": \"gherkin\",\n    \"name\": \"Gherkin\",\n    \"import\": () => import('./langs/gherkin.mjs')\n  },\n  {\n    \"id\": \"git-commit\",\n    \"name\": \"Git Commit Message\",\n    \"import\": () => import('./langs/git-commit.mjs')\n  },\n  {\n    \"id\": \"git-rebase\",\n    \"name\": \"Git Rebase Message\",\n    \"import\": () => import('./langs/git-rebase.mjs')\n  },\n  {\n    \"id\": \"gleam\",\n    \"name\": \"Gleam\",\n    \"import\": () => import('./langs/gleam.mjs')\n  },\n  {\n    \"id\": \"glimmer-js\",\n    \"name\": \"Glimmer JS\",\n    \"aliases\": [\n      \"gjs\"\n    ],\n    \"import\": () => import('./langs/glimmer-js.mjs')\n  },\n  {\n    \"id\": \"glimmer-ts\",\n    \"name\": \"Glimmer TS\",\n    \"aliases\": [\n      \"gts\"\n    ],\n    \"import\": () => import('./langs/glimmer-ts.mjs')\n  },\n  {\n    \"id\": \"glsl\",\n    \"name\": \"GLSL\",\n    \"import\": () => import('./langs/glsl.mjs')\n  },\n  {\n    \"id\": \"gnuplot\",\n    \"name\": \"Gnuplot\",\n    \"import\": () => import('./langs/gnuplot.mjs')\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Go\",\n    \"import\": () => import('./langs/go.mjs')\n  },\n  {\n    \"id\": \"graphql\",\n    \"name\": \"GraphQL\",\n    \"aliases\": [\n      \"gql\"\n    ],\n    \"import\": () => import('./langs/graphql.mjs')\n  },\n  {\n    \"id\": \"groovy\",\n    \"name\": \"Groovy\",\n    \"import\": () => import('./langs/groovy.mjs')\n  },\n  {\n    \"id\": \"hack\",\n    \"name\": \"Hack\",\n    \"import\": () => import('./langs/hack.mjs')\n  },\n  {\n    \"id\": \"haml\",\n    \"name\": \"Ruby Haml\",\n    \"import\": () => import('./langs/haml.mjs')\n  },\n  {\n    \"id\": \"handlebars\",\n    \"name\": \"Handlebars\",\n    \"aliases\": [\n      \"hbs\"\n    ],\n    \"import\": () => import('./langs/handlebars.mjs')\n  },\n  {\n    \"id\": \"haskell\",\n    \"name\": \"Haskell\",\n    \"aliases\": [\n      \"hs\"\n    ],\n    \"import\": () => import('./langs/haskell.mjs')\n  },\n  {\n    \"id\": \"haxe\",\n    \"name\": \"Haxe\",\n    \"import\": () => import('./langs/haxe.mjs')\n  },\n  {\n    \"id\": \"hcl\",\n    \"name\": \"HashiCorp HCL\",\n    \"import\": () => import('./langs/hcl.mjs')\n  },\n  {\n    \"id\": \"hjson\",\n    \"name\": \"Hjson\",\n    \"import\": () => import('./langs/hjson.mjs')\n  },\n  {\n    \"id\": \"hlsl\",\n    \"name\": \"HLSL\",\n    \"import\": () => import('./langs/hlsl.mjs')\n  },\n  {\n    \"id\": \"html\",\n    \"name\": \"HTML\",\n    \"import\": () => import('./langs/html.mjs')\n  },\n  {\n    \"id\": \"html-derivative\",\n    \"name\": \"HTML (Derivative)\",\n    \"import\": () => import('./langs/html-derivative.mjs')\n  },\n  {\n    \"id\": \"http\",\n    \"name\": \"HTTP\",\n    \"import\": () => import('./langs/http.mjs')\n  },\n  {\n    \"id\": \"hxml\",\n    \"name\": \"HXML\",\n    \"import\": () => import('./langs/hxml.mjs')\n  },\n  {\n    \"id\": \"hy\",\n    \"name\": \"Hy\",\n    \"import\": () => import('./langs/hy.mjs')\n  },\n  {\n    \"id\": \"imba\",\n    \"name\": \"Imba\",\n    \"import\": () => import('./langs/imba.mjs')\n  },\n  {\n    \"id\": \"ini\",\n    \"name\": \"INI\",\n    \"aliases\": [\n      \"properties\"\n    ],\n    \"import\": () => import('./langs/ini.mjs')\n  },\n  {\n    \"id\": \"java\",\n    \"name\": \"Java\",\n    \"import\": () => import('./langs/java.mjs')\n  },\n  {\n    \"id\": \"javascript\",\n    \"name\": \"JavaScript\",\n    \"aliases\": [\n      \"js\"\n    ],\n    \"import\": () => import('./langs/javascript.mjs')\n  },\n  {\n    \"id\": \"jinja\",\n    \"name\": \"Jinja\",\n    \"import\": () => import('./langs/jinja.mjs')\n  },\n  {\n    \"id\": \"jison\",\n    \"name\": \"Jison\",\n    \"import\": () => import('./langs/jison.mjs')\n  },\n  {\n    \"id\": \"json\",\n    \"name\": \"JSON\",\n    \"import\": () => import('./langs/json.mjs')\n  },\n  {\n    \"id\": \"json5\",\n    \"name\": \"JSON5\",\n    \"import\": () => import('./langs/json5.mjs')\n  },\n  {\n    \"id\": \"jsonc\",\n    \"name\": \"JSON with Comments\",\n    \"import\": () => import('./langs/jsonc.mjs')\n  },\n  {\n    \"id\": \"jsonl\",\n    \"name\": \"JSON Lines\",\n    \"import\": () => import('./langs/jsonl.mjs')\n  },\n  {\n    \"id\": \"jsonnet\",\n    \"name\": \"Jsonnet\",\n    \"import\": () => import('./langs/jsonnet.mjs')\n  },\n  {\n    \"id\": \"jssm\",\n    \"name\": \"JSSM\",\n    \"aliases\": [\n      \"fsl\"\n    ],\n    \"import\": () => import('./langs/jssm.mjs')\n  },\n  {\n    \"id\": \"jsx\",\n    \"name\": \"JSX\",\n    \"import\": () => import('./langs/jsx.mjs')\n  },\n  {\n    \"id\": \"julia\",\n    \"name\": \"Julia\",\n    \"aliases\": [\n      \"jl\"\n    ],\n    \"import\": () => import('./langs/julia.mjs')\n  },\n  {\n    \"id\": \"kotlin\",\n    \"name\": \"Kotlin\",\n    \"aliases\": [\n      \"kt\",\n      \"kts\"\n    ],\n    \"import\": () => import('./langs/kotlin.mjs')\n  },\n  {\n    \"id\": \"kusto\",\n    \"name\": \"Kusto\",\n    \"aliases\": [\n      \"kql\"\n    ],\n    \"import\": () => import('./langs/kusto.mjs')\n  },\n  {\n    \"id\": \"latex\",\n    \"name\": \"LaTeX\",\n    \"import\": () => import('./langs/latex.mjs')\n  },\n  {\n    \"id\": \"lean\",\n    \"name\": \"Lean 4\",\n    \"aliases\": [\n      \"lean4\"\n    ],\n    \"import\": () => import('./langs/lean.mjs')\n  },\n  {\n    \"id\": \"less\",\n    \"name\": \"Less\",\n    \"import\": () => import('./langs/less.mjs')\n  },\n  {\n    \"id\": \"liquid\",\n    \"name\": \"Liquid\",\n    \"import\": () => import('./langs/liquid.mjs')\n  },\n  {\n    \"id\": \"log\",\n    \"name\": \"Log file\",\n    \"import\": () => import('./langs/log.mjs')\n  },\n  {\n    \"id\": \"logo\",\n    \"name\": \"Logo\",\n    \"import\": () => import('./langs/logo.mjs')\n  },\n  {\n    \"id\": \"lua\",\n    \"name\": \"Lua\",\n    \"import\": () => import('./langs/lua.mjs')\n  },\n  {\n    \"id\": \"luau\",\n    \"name\": \"Luau\",\n    \"import\": () => import('./langs/luau.mjs')\n  },\n  {\n    \"id\": \"make\",\n    \"name\": \"Makefile\",\n    \"aliases\": [\n      \"makefile\"\n    ],\n    \"import\": () => import('./langs/make.mjs')\n  },\n  {\n    \"id\": \"markdown\",\n    \"name\": \"Markdown\",\n    \"aliases\": [\n      \"md\"\n    ],\n    \"import\": () => import('./langs/markdown.mjs')\n  },\n  {\n    \"id\": \"marko\",\n    \"name\": \"Marko\",\n    \"import\": () => import('./langs/marko.mjs')\n  },\n  {\n    \"id\": \"matlab\",\n    \"name\": \"MATLAB\",\n    \"import\": () => import('./langs/matlab.mjs')\n  },\n  {\n    \"id\": \"mdc\",\n    \"name\": \"MDC\",\n    \"import\": () => import('./langs/mdc.mjs')\n  },\n  {\n    \"id\": \"mdx\",\n    \"name\": \"MDX\",\n    \"import\": () => import('./langs/mdx.mjs')\n  },\n  {\n    \"id\": \"mermaid\",\n    \"name\": \"Mermaid\",\n    \"import\": () => import('./langs/mermaid.mjs')\n  },\n  {\n    \"id\": \"mojo\",\n    \"name\": \"Mojo\",\n    \"import\": () => import('./langs/mojo.mjs')\n  },\n  {\n    \"id\": \"move\",\n    \"name\": \"Move\",\n    \"import\": () => import('./langs/move.mjs')\n  },\n  {\n    \"id\": \"narrat\",\n    \"name\": \"Narrat Language\",\n    \"aliases\": [\n      \"nar\"\n    ],\n    \"import\": () => import('./langs/narrat.mjs')\n  },\n  {\n    \"id\": \"nextflow\",\n    \"name\": \"Nextflow\",\n    \"aliases\": [\n      \"nf\"\n    ],\n    \"import\": () => import('./langs/nextflow.mjs')\n  },\n  {\n    \"id\": \"nginx\",\n    \"name\": \"Nginx\",\n    \"import\": () => import('./langs/nginx.mjs')\n  },\n  {\n    \"id\": \"nim\",\n    \"name\": \"Nim\",\n    \"import\": () => import('./langs/nim.mjs')\n  },\n  {\n    \"id\": \"nix\",\n    \"name\": \"Nix\",\n    \"import\": () => import('./langs/nix.mjs')\n  },\n  {\n    \"id\": \"nushell\",\n    \"name\": \"nushell\",\n    \"aliases\": [\n      \"nu\"\n    ],\n    \"import\": () => import('./langs/nushell.mjs')\n  },\n  {\n    \"id\": \"objective-c\",\n    \"name\": \"Objective-C\",\n    \"aliases\": [\n      \"objc\"\n    ],\n    \"import\": () => import('./langs/objective-c.mjs')\n  },\n  {\n    \"id\": \"objective-cpp\",\n    \"name\": \"Objective-C++\",\n    \"import\": () => import('./langs/objective-cpp.mjs')\n  },\n  {\n    \"id\": \"ocaml\",\n    \"name\": \"OCaml\",\n    \"import\": () => import('./langs/ocaml.mjs')\n  },\n  {\n    \"id\": \"pascal\",\n    \"name\": \"Pascal\",\n    \"import\": () => import('./langs/pascal.mjs')\n  },\n  {\n    \"id\": \"perl\",\n    \"name\": \"Perl\",\n    \"import\": () => import('./langs/perl.mjs')\n  },\n  {\n    \"id\": \"php\",\n    \"name\": \"PHP\",\n    \"import\": () => import('./langs/php.mjs')\n  },\n  {\n    \"id\": \"plsql\",\n    \"name\": \"PL/SQL\",\n    \"import\": () => import('./langs/plsql.mjs')\n  },\n  {\n    \"id\": \"po\",\n    \"name\": \"Gettext PO\",\n    \"aliases\": [\n      \"pot\",\n      \"potx\"\n    ],\n    \"import\": () => import('./langs/po.mjs')\n  },\n  {\n    \"id\": \"postcss\",\n    \"name\": \"PostCSS\",\n    \"import\": () => import('./langs/postcss.mjs')\n  },\n  {\n    \"id\": \"powerquery\",\n    \"name\": \"PowerQuery\",\n    \"import\": () => import('./langs/powerquery.mjs')\n  },\n  {\n    \"id\": \"powershell\",\n    \"name\": \"PowerShell\",\n    \"aliases\": [\n      \"ps\",\n      \"ps1\"\n    ],\n    \"import\": () => import('./langs/powershell.mjs')\n  },\n  {\n    \"id\": \"prisma\",\n    \"name\": \"Prisma\",\n    \"import\": () => import('./langs/prisma.mjs')\n  },\n  {\n    \"id\": \"prolog\",\n    \"name\": \"Prolog\",\n    \"import\": () => import('./langs/prolog.mjs')\n  },\n  {\n    \"id\": \"proto\",\n    \"name\": \"Protocol Buffer 3\",\n    \"aliases\": [\n      \"protobuf\"\n    ],\n    \"import\": () => import('./langs/proto.mjs')\n  },\n  {\n    \"id\": \"pug\",\n    \"name\": \"Pug\",\n    \"aliases\": [\n      \"jade\"\n    ],\n    \"import\": () => import('./langs/pug.mjs')\n  },\n  {\n    \"id\": \"puppet\",\n    \"name\": \"Puppet\",\n    \"import\": () => import('./langs/puppet.mjs')\n  },\n  {\n    \"id\": \"purescript\",\n    \"name\": \"PureScript\",\n    \"import\": () => import('./langs/purescript.mjs')\n  },\n  {\n    \"id\": \"python\",\n    \"name\": \"Python\",\n    \"aliases\": [\n      \"py\"\n    ],\n    \"import\": () => import('./langs/python.mjs')\n  },\n  {\n    \"id\": \"qml\",\n    \"name\": \"QML\",\n    \"import\": () => import('./langs/qml.mjs')\n  },\n  {\n    \"id\": \"qmldir\",\n    \"name\": \"QML Directory\",\n    \"import\": () => import('./langs/qmldir.mjs')\n  },\n  {\n    \"id\": \"qss\",\n    \"name\": \"Qt Style Sheets\",\n    \"import\": () => import('./langs/qss.mjs')\n  },\n  {\n    \"id\": \"r\",\n    \"name\": \"R\",\n    \"import\": () => import('./langs/r.mjs')\n  },\n  {\n    \"id\": \"racket\",\n    \"name\": \"Racket\",\n    \"import\": () => import('./langs/racket.mjs')\n  },\n  {\n    \"id\": \"raku\",\n    \"name\": \"Raku\",\n    \"aliases\": [\n      \"perl6\"\n    ],\n    \"import\": () => import('./langs/raku.mjs')\n  },\n  {\n    \"id\": \"razor\",\n    \"name\": \"ASP.NET Razor\",\n    \"import\": () => import('./langs/razor.mjs')\n  },\n  {\n    \"id\": \"reg\",\n    \"name\": \"Windows Registry Script\",\n    \"import\": () => import('./langs/reg.mjs')\n  },\n  {\n    \"id\": \"regexp\",\n    \"name\": \"RegExp\",\n    \"aliases\": [\n      \"regex\"\n    ],\n    \"import\": () => import('./langs/regexp.mjs')\n  },\n  {\n    \"id\": \"rel\",\n    \"name\": \"Rel\",\n    \"import\": () => import('./langs/rel.mjs')\n  },\n  {\n    \"id\": \"riscv\",\n    \"name\": \"RISC-V\",\n    \"import\": () => import('./langs/riscv.mjs')\n  },\n  {\n    \"id\": \"rst\",\n    \"name\": \"reStructuredText\",\n    \"import\": () => import('./langs/rst.mjs')\n  },\n  {\n    \"id\": \"ruby\",\n    \"name\": \"Ruby\",\n    \"aliases\": [\n      \"rb\"\n    ],\n    \"import\": () => import('./langs/ruby.mjs')\n  },\n  {\n    \"id\": \"rust\",\n    \"name\": \"Rust\",\n    \"aliases\": [\n      \"rs\"\n    ],\n    \"import\": () => import('./langs/rust.mjs')\n  },\n  {\n    \"id\": \"sas\",\n    \"name\": \"SAS\",\n    \"import\": () => import('./langs/sas.mjs')\n  },\n  {\n    \"id\": \"sass\",\n    \"name\": \"Sass\",\n    \"import\": () => import('./langs/sass.mjs')\n  },\n  {\n    \"id\": \"scala\",\n    \"name\": \"Scala\",\n    \"import\": () => import('./langs/scala.mjs')\n  },\n  {\n    \"id\": \"scheme\",\n    \"name\": \"Scheme\",\n    \"import\": () => import('./langs/scheme.mjs')\n  },\n  {\n    \"id\": \"scss\",\n    \"name\": \"SCSS\",\n    \"import\": () => import('./langs/scss.mjs')\n  },\n  {\n    \"id\": \"shaderlab\",\n    \"name\": \"ShaderLab\",\n    \"aliases\": [\n      \"shader\"\n    ],\n    \"import\": () => import('./langs/shaderlab.mjs')\n  },\n  {\n    \"id\": \"shellscript\",\n    \"name\": \"Shell\",\n    \"aliases\": [\n      \"bash\",\n      \"sh\",\n      \"shell\",\n      \"zsh\"\n    ],\n    \"import\": () => import('./langs/shellscript.mjs')\n  },\n  {\n    \"id\": \"shellsession\",\n    \"name\": \"Shell Session\",\n    \"aliases\": [\n      \"console\"\n    ],\n    \"import\": () => import('./langs/shellsession.mjs')\n  },\n  {\n    \"id\": \"smalltalk\",\n    \"name\": \"Smalltalk\",\n    \"import\": () => import('./langs/smalltalk.mjs')\n  },\n  {\n    \"id\": \"solidity\",\n    \"name\": \"Solidity\",\n    \"import\": () => import('./langs/solidity.mjs')\n  },\n  {\n    \"id\": \"soy\",\n    \"name\": \"Closure Templates\",\n    \"aliases\": [\n      \"closure-templates\"\n    ],\n    \"import\": () => import('./langs/soy.mjs')\n  },\n  {\n    \"id\": \"sparql\",\n    \"name\": \"SPARQL\",\n    \"import\": () => import('./langs/sparql.mjs')\n  },\n  {\n    \"id\": \"splunk\",\n    \"name\": \"Splunk Query Language\",\n    \"aliases\": [\n      \"spl\"\n    ],\n    \"import\": () => import('./langs/splunk.mjs')\n  },\n  {\n    \"id\": \"sql\",\n    \"name\": \"SQL\",\n    \"import\": () => import('./langs/sql.mjs')\n  },\n  {\n    \"id\": \"ssh-config\",\n    \"name\": \"SSH Config\",\n    \"import\": () => import('./langs/ssh-config.mjs')\n  },\n  {\n    \"id\": \"stata\",\n    \"name\": \"Stata\",\n    \"import\": () => import('./langs/stata.mjs')\n  },\n  {\n    \"id\": \"stylus\",\n    \"name\": \"Stylus\",\n    \"aliases\": [\n      \"styl\"\n    ],\n    \"import\": () => import('./langs/stylus.mjs')\n  },\n  {\n    \"id\": \"svelte\",\n    \"name\": \"Svelte\",\n    \"import\": () => import('./langs/svelte.mjs')\n  },\n  {\n    \"id\": \"swift\",\n    \"name\": \"Swift\",\n    \"import\": () => import('./langs/swift.mjs')\n  },\n  {\n    \"id\": \"system-verilog\",\n    \"name\": \"SystemVerilog\",\n    \"import\": () => import('./langs/system-verilog.mjs')\n  },\n  {\n    \"id\": \"systemd\",\n    \"name\": \"Systemd Units\",\n    \"import\": () => import('./langs/systemd.mjs')\n  },\n  {\n    \"id\": \"tasl\",\n    \"name\": \"Tasl\",\n    \"import\": () => import('./langs/tasl.mjs')\n  },\n  {\n    \"id\": \"tcl\",\n    \"name\": \"Tcl\",\n    \"import\": () => import('./langs/tcl.mjs')\n  },\n  {\n    \"id\": \"templ\",\n    \"name\": \"Templ\",\n    \"import\": () => import('./langs/templ.mjs')\n  },\n  {\n    \"id\": \"terraform\",\n    \"name\": \"Terraform\",\n    \"aliases\": [\n      \"tf\",\n      \"tfvars\"\n    ],\n    \"import\": () => import('./langs/terraform.mjs')\n  },\n  {\n    \"id\": \"tex\",\n    \"name\": \"TeX\",\n    \"import\": () => import('./langs/tex.mjs')\n  },\n  {\n    \"id\": \"toml\",\n    \"name\": \"TOML\",\n    \"import\": () => import('./langs/toml.mjs')\n  },\n  {\n    \"id\": \"ts-tags\",\n    \"name\": \"TypeScript with Tags\",\n    \"aliases\": [\n      \"lit\"\n    ],\n    \"import\": () => import('./langs/ts-tags.mjs')\n  },\n  {\n    \"id\": \"tsv\",\n    \"name\": \"TSV\",\n    \"import\": () => import('./langs/tsv.mjs')\n  },\n  {\n    \"id\": \"tsx\",\n    \"name\": \"TSX\",\n    \"import\": () => import('./langs/tsx.mjs')\n  },\n  {\n    \"id\": \"turtle\",\n    \"name\": \"Turtle\",\n    \"import\": () => import('./langs/turtle.mjs')\n  },\n  {\n    \"id\": \"twig\",\n    \"name\": \"Twig\",\n    \"import\": () => import('./langs/twig.mjs')\n  },\n  {\n    \"id\": \"typescript\",\n    \"name\": \"TypeScript\",\n    \"aliases\": [\n      \"ts\"\n    ],\n    \"import\": () => import('./langs/typescript.mjs')\n  },\n  {\n    \"id\": \"typespec\",\n    \"name\": \"TypeSpec\",\n    \"aliases\": [\n      \"tsp\"\n    ],\n    \"import\": () => import('./langs/typespec.mjs')\n  },\n  {\n    \"id\": \"typst\",\n    \"name\": \"Typst\",\n    \"aliases\": [\n      \"typ\"\n    ],\n    \"import\": () => import('./langs/typst.mjs')\n  },\n  {\n    \"id\": \"v\",\n    \"name\": \"V\",\n    \"import\": () => import('./langs/v.mjs')\n  },\n  {\n    \"id\": \"vala\",\n    \"name\": \"Vala\",\n    \"import\": () => import('./langs/vala.mjs')\n  },\n  {\n    \"id\": \"vb\",\n    \"name\": \"Visual Basic\",\n    \"aliases\": [\n      \"cmd\"\n    ],\n    \"import\": () => import('./langs/vb.mjs')\n  },\n  {\n    \"id\": \"verilog\",\n    \"name\": \"Verilog\",\n    \"import\": () => import('./langs/verilog.mjs')\n  },\n  {\n    \"id\": \"vhdl\",\n    \"name\": \"VHDL\",\n    \"import\": () => import('./langs/vhdl.mjs')\n  },\n  {\n    \"id\": \"viml\",\n    \"name\": \"Vim Script\",\n    \"aliases\": [\n      \"vim\",\n      \"vimscript\"\n    ],\n    \"import\": () => import('./langs/viml.mjs')\n  },\n  {\n    \"id\": \"vue\",\n    \"name\": \"Vue\",\n    \"import\": () => import('./langs/vue.mjs')\n  },\n  {\n    \"id\": \"vue-html\",\n    \"name\": \"Vue HTML\",\n    \"import\": () => import('./langs/vue-html.mjs')\n  },\n  {\n    \"id\": \"vyper\",\n    \"name\": \"Vyper\",\n    \"aliases\": [\n      \"vy\"\n    ],\n    \"import\": () => import('./langs/vyper.mjs')\n  },\n  {\n    \"id\": \"wasm\",\n    \"name\": \"WebAssembly\",\n    \"import\": () => import('./langs/wasm.mjs')\n  },\n  {\n    \"id\": \"wenyan\",\n    \"name\": \"Wenyan\",\n    \"aliases\": [\n      \"\\u6587\\u8A00\"\n    ],\n    \"import\": () => import('./langs/wenyan.mjs')\n  },\n  {\n    \"id\": \"wgsl\",\n    \"name\": \"WGSL\",\n    \"import\": () => import('./langs/wgsl.mjs')\n  },\n  {\n    \"id\": \"wikitext\",\n    \"name\": \"Wikitext\",\n    \"aliases\": [\n      \"mediawiki\",\n      \"wiki\"\n    ],\n    \"import\": () => import('./langs/wikitext.mjs')\n  },\n  {\n    \"id\": \"wolfram\",\n    \"name\": \"Wolfram\",\n    \"aliases\": [\n      \"wl\"\n    ],\n    \"import\": () => import('./langs/wolfram.mjs')\n  },\n  {\n    \"id\": \"xml\",\n    \"name\": \"XML\",\n    \"import\": () => import('./langs/xml.mjs')\n  },\n  {\n    \"id\": \"xsl\",\n    \"name\": \"XSL\",\n    \"import\": () => import('./langs/xsl.mjs')\n  },\n  {\n    \"id\": \"yaml\",\n    \"name\": \"YAML\",\n    \"aliases\": [\n      \"yml\"\n    ],\n    \"import\": () => import('./langs/yaml.mjs')\n  },\n  {\n    \"id\": \"zenscript\",\n    \"name\": \"ZenScript\",\n    \"import\": () => import('./langs/zenscript.mjs')\n  },\n  {\n    \"id\": \"zig\",\n    \"name\": \"Zig\",\n    \"import\": () => import('./langs/zig.mjs')\n  }\n];\nconst bundledLanguagesBase = Object.fromEntries(bundledLanguagesInfo.map((i) => [i.id, i.import]));\nconst bundledLanguagesAlias = Object.fromEntries(bundledLanguagesInfo.flatMap((i) => i.aliases?.map((a) => [a, i.import]) || []));\nconst bundledLanguages = {\n  ...bundledLanguagesBase,\n  ...bundledLanguagesAlias\n};\n\nexport { bundledLanguages, bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo };\n","const getWasmInlined = async (info) => {\n  return import('shiki/wasm').then((wasm) => wasm.default(info));\n};\n\nexport { getWasmInlined as g };\n","const bundledThemesInfo = [\n  {\n    \"id\": \"andromeeda\",\n    \"displayName\": \"Andromeeda\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/andromeeda.mjs')\n  },\n  {\n    \"id\": \"aurora-x\",\n    \"displayName\": \"Aurora X\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/aurora-x.mjs')\n  },\n  {\n    \"id\": \"ayu-dark\",\n    \"displayName\": \"Ayu Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/ayu-dark.mjs')\n  },\n  {\n    \"id\": \"catppuccin-frappe\",\n    \"displayName\": \"Catppuccin Frapp\\xE9\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-frappe.mjs')\n  },\n  {\n    \"id\": \"catppuccin-latte\",\n    \"displayName\": \"Catppuccin Latte\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/catppuccin-latte.mjs')\n  },\n  {\n    \"id\": \"catppuccin-macchiato\",\n    \"displayName\": \"Catppuccin Macchiato\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-macchiato.mjs')\n  },\n  {\n    \"id\": \"catppuccin-mocha\",\n    \"displayName\": \"Catppuccin Mocha\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-mocha.mjs')\n  },\n  {\n    \"id\": \"dark-plus\",\n    \"displayName\": \"Dark Plus\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dark-plus.mjs')\n  },\n  {\n    \"id\": \"dracula\",\n    \"displayName\": \"Dracula Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dracula.mjs')\n  },\n  {\n    \"id\": \"dracula-soft\",\n    \"displayName\": \"Dracula Theme Soft\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dracula-soft.mjs')\n  },\n  {\n    \"id\": \"everforest-dark\",\n    \"displayName\": \"Everforest Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/everforest-dark.mjs')\n  },\n  {\n    \"id\": \"everforest-light\",\n    \"displayName\": \"Everforest Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/everforest-light.mjs')\n  },\n  {\n    \"id\": \"github-dark\",\n    \"displayName\": \"GitHub Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark.mjs')\n  },\n  {\n    \"id\": \"github-dark-default\",\n    \"displayName\": \"GitHub Dark Default\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-default.mjs')\n  },\n  {\n    \"id\": \"github-dark-dimmed\",\n    \"displayName\": \"GitHub Dark Dimmed\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-dimmed.mjs')\n  },\n  {\n    \"id\": \"github-dark-high-contrast\",\n    \"displayName\": \"GitHub Dark High Contrast\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-high-contrast.mjs')\n  },\n  {\n    \"id\": \"github-light\",\n    \"displayName\": \"GitHub Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light.mjs')\n  },\n  {\n    \"id\": \"github-light-default\",\n    \"displayName\": \"GitHub Light Default\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light-default.mjs')\n  },\n  {\n    \"id\": \"github-light-high-contrast\",\n    \"displayName\": \"GitHub Light High Contrast\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light-high-contrast.mjs')\n  },\n  {\n    \"id\": \"houston\",\n    \"displayName\": \"Houston\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/houston.mjs')\n  },\n  {\n    \"id\": \"laserwave\",\n    \"displayName\": \"LaserWave\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/laserwave.mjs')\n  },\n  {\n    \"id\": \"light-plus\",\n    \"displayName\": \"Light Plus\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/light-plus.mjs')\n  },\n  {\n    \"id\": \"material-theme\",\n    \"displayName\": \"Material Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme.mjs')\n  },\n  {\n    \"id\": \"material-theme-darker\",\n    \"displayName\": \"Material Theme Darker\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-darker.mjs')\n  },\n  {\n    \"id\": \"material-theme-lighter\",\n    \"displayName\": \"Material Theme Lighter\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/material-theme-lighter.mjs')\n  },\n  {\n    \"id\": \"material-theme-ocean\",\n    \"displayName\": \"Material Theme Ocean\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-ocean.mjs')\n  },\n  {\n    \"id\": \"material-theme-palenight\",\n    \"displayName\": \"Material Theme Palenight\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-palenight.mjs')\n  },\n  {\n    \"id\": \"min-dark\",\n    \"displayName\": \"Min Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/min-dark.mjs')\n  },\n  {\n    \"id\": \"min-light\",\n    \"displayName\": \"Min Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/min-light.mjs')\n  },\n  {\n    \"id\": \"monokai\",\n    \"displayName\": \"Monokai\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/monokai.mjs')\n  },\n  {\n    \"id\": \"night-owl\",\n    \"displayName\": \"Night Owl\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/night-owl.mjs')\n  },\n  {\n    \"id\": \"nord\",\n    \"displayName\": \"Nord\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/nord.mjs')\n  },\n  {\n    \"id\": \"one-dark-pro\",\n    \"displayName\": \"One Dark Pro\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/one-dark-pro.mjs')\n  },\n  {\n    \"id\": \"one-light\",\n    \"displayName\": \"One Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/one-light.mjs')\n  },\n  {\n    \"id\": \"plastic\",\n    \"displayName\": \"Plastic\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/plastic.mjs')\n  },\n  {\n    \"id\": \"poimandres\",\n    \"displayName\": \"Poimandres\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/poimandres.mjs')\n  },\n  {\n    \"id\": \"red\",\n    \"displayName\": \"Red\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/red.mjs')\n  },\n  {\n    \"id\": \"rose-pine\",\n    \"displayName\": \"Ros\\xE9 Pine\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/rose-pine.mjs')\n  },\n  {\n    \"id\": \"rose-pine-dawn\",\n    \"displayName\": \"Ros\\xE9 Pine Dawn\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/rose-pine-dawn.mjs')\n  },\n  {\n    \"id\": \"rose-pine-moon\",\n    \"displayName\": \"Ros\\xE9 Pine Moon\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/rose-pine-moon.mjs')\n  },\n  {\n    \"id\": \"slack-dark\",\n    \"displayName\": \"Slack Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/slack-dark.mjs')\n  },\n  {\n    \"id\": \"slack-ochin\",\n    \"displayName\": \"Slack Ochin\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/slack-ochin.mjs')\n  },\n  {\n    \"id\": \"snazzy-light\",\n    \"displayName\": \"Snazzy Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/snazzy-light.mjs')\n  },\n  {\n    \"id\": \"solarized-dark\",\n    \"displayName\": \"Solarized Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/solarized-dark.mjs')\n  },\n  {\n    \"id\": \"solarized-light\",\n    \"displayName\": \"Solarized Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/solarized-light.mjs')\n  },\n  {\n    \"id\": \"synthwave-84\",\n    \"displayName\": \"Synthwave '84\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/synthwave-84.mjs')\n  },\n  {\n    \"id\": \"tokyo-night\",\n    \"displayName\": \"Tokyo Night\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/tokyo-night.mjs')\n  },\n  {\n    \"id\": \"vesper\",\n    \"displayName\": \"Vesper\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vesper.mjs')\n  },\n  {\n    \"id\": \"vitesse-black\",\n    \"displayName\": \"Vitesse Black\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vitesse-black.mjs')\n  },\n  {\n    \"id\": \"vitesse-dark\",\n    \"displayName\": \"Vitesse Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vitesse-dark.mjs')\n  },\n  {\n    \"id\": \"vitesse-light\",\n    \"displayName\": \"Vitesse Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/vitesse-light.mjs')\n  }\n];\nconst bundledThemes = Object.fromEntries(bundledThemesInfo.map((i) => [i.id, i.import]));\n\nexport { bundledThemes, bundledThemesInfo };\n","var FontStyle;\n(function (FontStyle) {\n    FontStyle[FontStyle[\"NotSet\"] = -1] = \"NotSet\";\n    FontStyle[FontStyle[\"None\"] = 0] = \"None\";\n    FontStyle[FontStyle[\"Italic\"] = 1] = \"Italic\";\n    FontStyle[FontStyle[\"Bold\"] = 2] = \"Bold\";\n    FontStyle[FontStyle[\"Underline\"] = 4] = \"Underline\";\n})(FontStyle || (FontStyle = {}));\n\nexport { FontStyle };\n","// src/utils.ts\nfunction clone(something) {\n  return doClone(something);\n}\nfunction doClone(something) {\n  if (Array.isArray(something)) {\n    return cloneArray(something);\n  }\n  if (typeof something === \"object\") {\n    return cloneObj(something);\n  }\n  return something;\n}\nfunction cloneArray(arr) {\n  let r = [];\n  for (let i = 0, len = arr.length; i < len; i++) {\n    r[i] = doClone(arr[i]);\n  }\n  return r;\n}\nfunction cloneObj(obj) {\n  let r = {};\n  for (let key in obj) {\n    r[key] = doClone(obj[key]);\n  }\n  return r;\n}\nfunction mergeObjects(target, ...sources) {\n  sources.forEach((source) => {\n    for (let key in source) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n}\nfunction basename(path) {\n  const idx = ~path.lastIndexOf(\"/\") || ~path.lastIndexOf(\"\\\\\");\n  if (idx === 0) {\n    return path;\n  } else if (~idx === path.length - 1) {\n    return basename(path.substring(0, path.length - 1));\n  } else {\n    return path.substr(~idx + 1);\n  }\n}\nvar CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nvar RegexSource = class {\n  static hasCaptures(regexSource) {\n    if (regexSource === null) {\n      return false;\n    }\n    CAPTURING_REGEX_SOURCE.lastIndex = 0;\n    return CAPTURING_REGEX_SOURCE.test(regexSource);\n  }\n  static replaceCaptures(regexSource, captureSource, captureIndices) {\n    return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n      let capture = captureIndices[parseInt(index || commandIndex, 10)];\n      if (capture) {\n        let result = captureSource.substring(capture.start, capture.end);\n        while (result[0] === \".\") {\n          result = result.substring(1);\n        }\n        switch (command) {\n          case \"downcase\":\n            return result.toLowerCase();\n          case \"upcase\":\n            return result.toUpperCase();\n          default:\n            return result;\n        }\n      } else {\n        return match;\n      }\n    });\n  }\n};\nfunction strcmp(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\nfunction strArrCmp(a, b) {\n  if (a === null && b === null) {\n    return 0;\n  }\n  if (!a) {\n    return -1;\n  }\n  if (!b) {\n    return 1;\n  }\n  let len1 = a.length;\n  let len2 = b.length;\n  if (len1 === len2) {\n    for (let i = 0; i < len1; i++) {\n      let res = strcmp(a[i], b[i]);\n      if (res !== 0) {\n        return res;\n      }\n    }\n    return 0;\n  }\n  return len1 - len2;\n}\nfunction isValidHexColor(hex) {\n  if (/^#[0-9a-f]{6}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{8}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{3}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{4}$/i.test(hex)) {\n    return true;\n  }\n  return false;\n}\nfunction escapeRegExpCharacters(value) {\n  return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, \"\\\\$&\");\n}\nvar CachedFn = class {\n  constructor(fn) {\n    this.fn = fn;\n    this.cache = /* @__PURE__ */ new Map();\n  }\n  get(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n    const value = this.fn(key);\n    this.cache.set(key, value);\n    return value;\n  }\n};\n\n// src/theme.ts\nvar Theme = class {\n  constructor(_colorMap, _defaults, _root) {\n    this._colorMap = _colorMap;\n    this._defaults = _defaults;\n    this._root = _root;\n    this._cachedMatchRoot = new CachedFn(\n      (scopeName) => this._root.match(scopeName)\n    );\n  }\n  static createFromRawTheme(source, colorMap) {\n    return this.createFromParsedTheme(parseTheme(source), colorMap);\n  }\n  static createFromParsedTheme(source, colorMap) {\n    return resolveParsedThemeRules(source, colorMap);\n  }\n  getColorMap() {\n    return this._colorMap.getColorMap();\n  }\n  getDefaults() {\n    return this._defaults;\n  }\n  match(scopePath) {\n    if (scopePath === null) {\n      return this._defaults;\n    }\n    const scopeName = scopePath.scopeName;\n    const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n    const effectiveRule = matchingTrieElements.find(\n      (v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes)\n    );\n    if (!effectiveRule) {\n      return null;\n    }\n    return new StyleAttributes(\n      effectiveRule.fontStyle,\n      effectiveRule.foreground,\n      effectiveRule.background\n    );\n  }\n};\nvar ScopeStack = class _ScopeStack {\n  constructor(parent, scopeName) {\n    this.parent = parent;\n    this.scopeName = scopeName;\n  }\n  static push(path, scopeNames) {\n    for (const name of scopeNames) {\n      path = new _ScopeStack(path, name);\n    }\n    return path;\n  }\n  static from(...segments) {\n    let result = null;\n    for (let i = 0; i < segments.length; i++) {\n      result = new _ScopeStack(result, segments[i]);\n    }\n    return result;\n  }\n  push(scopeName) {\n    return new _ScopeStack(this, scopeName);\n  }\n  getSegments() {\n    let item = this;\n    const result = [];\n    while (item) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    result.reverse();\n    return result;\n  }\n  toString() {\n    return this.getSegments().join(\" \");\n  }\n  extends(other) {\n    if (this === other) {\n      return true;\n    }\n    if (this.parent === null) {\n      return false;\n    }\n    return this.parent.extends(other);\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let item = this;\n    while (item && item !== base) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    return item === base ? result.reverse() : void 0;\n  }\n};\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n  if (parentScopes.length === 0) {\n    return true;\n  }\n  for (let index = 0; index < parentScopes.length; index++) {\n    let scopePattern = parentScopes[index];\n    let scopeMustMatch = false;\n    if (scopePattern === \">\") {\n      if (index === parentScopes.length - 1) {\n        return false;\n      }\n      scopePattern = parentScopes[++index];\n      scopeMustMatch = true;\n    }\n    while (scopePath) {\n      if (_matchesScope(scopePath.scopeName, scopePattern)) {\n        break;\n      }\n      if (scopeMustMatch) {\n        return false;\n      }\n      scopePath = scopePath.parent;\n    }\n    if (!scopePath) {\n      return false;\n    }\n    scopePath = scopePath.parent;\n  }\n  return true;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n  return scopePattern === scopeName || scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === \".\";\n}\nvar StyleAttributes = class {\n  constructor(fontStyle, foregroundId, backgroundId) {\n    this.fontStyle = fontStyle;\n    this.foregroundId = foregroundId;\n    this.backgroundId = backgroundId;\n  }\n};\nfunction parseTheme(source) {\n  if (!source) {\n    return [];\n  }\n  if (!source.settings || !Array.isArray(source.settings)) {\n    return [];\n  }\n  let settings = source.settings;\n  let result = [], resultLen = 0;\n  for (let i = 0, len = settings.length; i < len; i++) {\n    let entry = settings[i];\n    if (!entry.settings) {\n      continue;\n    }\n    let scopes;\n    if (typeof entry.scope === \"string\") {\n      let _scope = entry.scope;\n      _scope = _scope.replace(/^[,]+/, \"\");\n      _scope = _scope.replace(/[,]+$/, \"\");\n      scopes = _scope.split(\",\");\n    } else if (Array.isArray(entry.scope)) {\n      scopes = entry.scope;\n    } else {\n      scopes = [\"\"];\n    }\n    let fontStyle = -1 /* NotSet */;\n    if (typeof entry.settings.fontStyle === \"string\") {\n      fontStyle = 0 /* None */;\n      let segments = entry.settings.fontStyle.split(\" \");\n      for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n        let segment = segments[j];\n        switch (segment) {\n          case \"italic\":\n            fontStyle = fontStyle | 1 /* Italic */;\n            break;\n          case \"bold\":\n            fontStyle = fontStyle | 2 /* Bold */;\n            break;\n          case \"underline\":\n            fontStyle = fontStyle | 4 /* Underline */;\n            break;\n          case \"strikethrough\":\n            fontStyle = fontStyle | 8 /* Strikethrough */;\n            break;\n        }\n      }\n    }\n    let foreground = null;\n    if (typeof entry.settings.foreground === \"string\" && isValidHexColor(entry.settings.foreground)) {\n      foreground = entry.settings.foreground;\n    }\n    let background = null;\n    if (typeof entry.settings.background === \"string\" && isValidHexColor(entry.settings.background)) {\n      background = entry.settings.background;\n    }\n    for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n      let _scope = scopes[j].trim();\n      let segments = _scope.split(\" \");\n      let scope = segments[segments.length - 1];\n      let parentScopes = null;\n      if (segments.length > 1) {\n        parentScopes = segments.slice(0, segments.length - 1);\n        parentScopes.reverse();\n      }\n      result[resultLen++] = new ParsedThemeRule(\n        scope,\n        parentScopes,\n        i,\n        fontStyle,\n        foreground,\n        background\n      );\n    }\n  }\n  return result;\n}\nvar ParsedThemeRule = class {\n  constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n    this.scope = scope;\n    this.parentScopes = parentScopes;\n    this.index = index;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n};\nvar FontStyle = /* @__PURE__ */ ((FontStyle2) => {\n  FontStyle2[FontStyle2[\"NotSet\"] = -1] = \"NotSet\";\n  FontStyle2[FontStyle2[\"None\"] = 0] = \"None\";\n  FontStyle2[FontStyle2[\"Italic\"] = 1] = \"Italic\";\n  FontStyle2[FontStyle2[\"Bold\"] = 2] = \"Bold\";\n  FontStyle2[FontStyle2[\"Underline\"] = 4] = \"Underline\";\n  FontStyle2[FontStyle2[\"Strikethrough\"] = 8] = \"Strikethrough\";\n  return FontStyle2;\n})(FontStyle || {});\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n  parsedThemeRules.sort((a, b) => {\n    let r = strcmp(a.scope, b.scope);\n    if (r !== 0) {\n      return r;\n    }\n    r = strArrCmp(a.parentScopes, b.parentScopes);\n    if (r !== 0) {\n      return r;\n    }\n    return a.index - b.index;\n  });\n  let defaultFontStyle = 0 /* None */;\n  let defaultForeground = \"#000000\";\n  let defaultBackground = \"#ffffff\";\n  while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === \"\") {\n    let incomingDefaults = parsedThemeRules.shift();\n    if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\n      defaultFontStyle = incomingDefaults.fontStyle;\n    }\n    if (incomingDefaults.foreground !== null) {\n      defaultForeground = incomingDefaults.foreground;\n    }\n    if (incomingDefaults.background !== null) {\n      defaultBackground = incomingDefaults.background;\n    }\n  }\n  let colorMap = new ColorMap(_colorMap);\n  let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n  let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\n  for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n    let rule = parsedThemeRules[i];\n    root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n  }\n  return new Theme(colorMap, defaults, root);\n}\nvar ColorMap = class {\n  constructor(_colorMap) {\n    this._lastColorId = 0;\n    this._id2color = [];\n    this._color2id = /* @__PURE__ */ Object.create(null);\n    if (Array.isArray(_colorMap)) {\n      this._isFrozen = true;\n      for (let i = 0, len = _colorMap.length; i < len; i++) {\n        this._color2id[_colorMap[i]] = i;\n        this._id2color[i] = _colorMap[i];\n      }\n    } else {\n      this._isFrozen = false;\n    }\n  }\n  getId(color) {\n    if (color === null) {\n      return 0;\n    }\n    color = color.toUpperCase();\n    let value = this._color2id[color];\n    if (value) {\n      return value;\n    }\n    if (this._isFrozen) {\n      throw new Error(`Missing color in color map - ${color}`);\n    }\n    value = ++this._lastColorId;\n    this._color2id[color] = value;\n    this._id2color[value] = color;\n    return value;\n  }\n  getColorMap() {\n    return this._id2color.slice(0);\n  }\n};\nvar emptyParentScopes = Object.freeze([]);\nvar ThemeTrieElementRule = class _ThemeTrieElementRule {\n  constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    this.scopeDepth = scopeDepth;\n    this.parentScopes = parentScopes || emptyParentScopes;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n  clone() {\n    return new _ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n  }\n  static cloneArr(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      r[i] = arr[i].clone();\n    }\n    return r;\n  }\n  acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n    if (this.scopeDepth > scopeDepth) {\n      console.log(\"how did this happen?\");\n    } else {\n      this.scopeDepth = scopeDepth;\n    }\n    if (fontStyle !== -1 /* NotSet */) {\n      this.fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      this.foreground = foreground;\n    }\n    if (background !== 0) {\n      this.background = background;\n    }\n  }\n};\nvar ThemeTrieElement = class _ThemeTrieElement {\n  constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n    this._mainRule = _mainRule;\n    this._children = _children;\n    this._rulesWithParentScopes = rulesWithParentScopes;\n  }\n  static _cmpBySpecificity(a, b) {\n    if (a.scopeDepth !== b.scopeDepth) {\n      return b.scopeDepth - a.scopeDepth;\n    }\n    let aParentIndex = 0;\n    let bParentIndex = 0;\n    while (true) {\n      if (a.parentScopes[aParentIndex] === \">\") {\n        aParentIndex++;\n      }\n      if (b.parentScopes[bParentIndex] === \">\") {\n        bParentIndex++;\n      }\n      if (aParentIndex >= a.parentScopes.length || bParentIndex >= b.parentScopes.length) {\n        break;\n      }\n      const parentScopeLengthDiff = b.parentScopes[bParentIndex].length - a.parentScopes[aParentIndex].length;\n      if (parentScopeLengthDiff !== 0) {\n        return parentScopeLengthDiff;\n      }\n      aParentIndex++;\n      bParentIndex++;\n    }\n    return b.parentScopes.length - a.parentScopes.length;\n  }\n  match(scope) {\n    if (scope !== \"\") {\n      let dotIndex = scope.indexOf(\".\");\n      let head;\n      let tail;\n      if (dotIndex === -1) {\n        head = scope;\n        tail = \"\";\n      } else {\n        head = scope.substring(0, dotIndex);\n        tail = scope.substring(dotIndex + 1);\n      }\n      if (this._children.hasOwnProperty(head)) {\n        return this._children[head].match(tail);\n      }\n    }\n    const rules = this._rulesWithParentScopes.concat(this._mainRule);\n    rules.sort(_ThemeTrieElement._cmpBySpecificity);\n    return rules;\n  }\n  insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n    if (scope === \"\") {\n      this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n      return;\n    }\n    let dotIndex = scope.indexOf(\".\");\n    let head;\n    let tail;\n    if (dotIndex === -1) {\n      head = scope;\n      tail = \"\";\n    } else {\n      head = scope.substring(0, dotIndex);\n      tail = scope.substring(dotIndex + 1);\n    }\n    let child;\n    if (this._children.hasOwnProperty(head)) {\n      child = this._children[head];\n    } else {\n      child = new _ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n      this._children[head] = child;\n    }\n    child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n  }\n  _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    if (parentScopes === null) {\n      this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n      return;\n    }\n    for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n      let rule = this._rulesWithParentScopes[i];\n      if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n        rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n        return;\n      }\n    }\n    if (fontStyle === -1 /* NotSet */) {\n      fontStyle = this._mainRule.fontStyle;\n    }\n    if (foreground === 0) {\n      foreground = this._mainRule.foreground;\n    }\n    if (background === 0) {\n      background = this._mainRule.background;\n    }\n    this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n  }\n};\n\n// src/encodedTokenAttributes.ts\nvar EncodedTokenMetadata = class _EncodedTokenMetadata {\n  static toBinaryStr(encodedTokenAttributes) {\n    return encodedTokenAttributes.toString(2).padStart(32, \"0\");\n  }\n  static print(encodedTokenAttributes) {\n    const languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);\n    const tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);\n    const fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);\n    const foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);\n    const background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);\n    console.log({\n      languageId,\n      tokenType,\n      fontStyle,\n      foreground,\n      background\n    });\n  }\n  static getLanguageId(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 255 /* LANGUAGEID_MASK */) >>> 0 /* LANGUAGEID_OFFSET */;\n  }\n  static getTokenType(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 768 /* TOKEN_TYPE_MASK */) >>> 8 /* TOKEN_TYPE_OFFSET */;\n  }\n  static containsBalancedBrackets(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 1024 /* BALANCED_BRACKETS_MASK */) !== 0;\n  }\n  static getFontStyle(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 30720 /* FONT_STYLE_MASK */) >>> 11 /* FONT_STYLE_OFFSET */;\n  }\n  static getForeground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 16744448 /* FOREGROUND_MASK */) >>> 15 /* FOREGROUND_OFFSET */;\n  }\n  static getBackground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 4278190080 /* BACKGROUND_MASK */) >>> 24 /* BACKGROUND_OFFSET */;\n  }\n  /**\n   * Updates the fields in `metadata`.\n   * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n   */\n  static set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n    let _languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);\n    let _tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);\n    let _containsBalancedBracketsBit = _EncodedTokenMetadata.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n    let _fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);\n    let _foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);\n    let _background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);\n    if (languageId !== 0) {\n      _languageId = languageId;\n    }\n    if (tokenType !== 8 /* NotSet */) {\n      _tokenType = fromOptionalTokenType(tokenType);\n    }\n    if (containsBalancedBrackets !== null) {\n      _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n    }\n    if (fontStyle !== -1 /* NotSet */) {\n      _fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      _foreground = foreground;\n    }\n    if (background !== 0) {\n      _background = background;\n    }\n    return (_languageId << 0 /* LANGUAGEID_OFFSET */ | _tokenType << 8 /* TOKEN_TYPE_OFFSET */ | _containsBalancedBracketsBit << 10 /* BALANCED_BRACKETS_OFFSET */ | _fontStyle << 11 /* FONT_STYLE_OFFSET */ | _foreground << 15 /* FOREGROUND_OFFSET */ | _background << 24 /* BACKGROUND_OFFSET */) >>> 0;\n  }\n};\nfunction toOptionalTokenType(standardType) {\n  return standardType;\n}\nfunction fromOptionalTokenType(standardType) {\n  return standardType;\n}\n\n// src/matcher.ts\nfunction createMatchers(selector, matchesName) {\n  const results = [];\n  const tokenizer = newTokenizer(selector);\n  let token = tokenizer.next();\n  while (token !== null) {\n    let priority = 0;\n    if (token.length === 2 && token.charAt(1) === \":\") {\n      switch (token.charAt(0)) {\n        case \"R\":\n          priority = 1;\n          break;\n        case \"L\":\n          priority = -1;\n          break;\n        default:\n          console.log(`Unknown priority ${token} in scope selector`);\n      }\n      token = tokenizer.next();\n    }\n    let matcher = parseConjunction();\n    results.push({ matcher, priority });\n    if (token !== \",\") {\n      break;\n    }\n    token = tokenizer.next();\n  }\n  return results;\n  function parseOperand() {\n    if (token === \"-\") {\n      token = tokenizer.next();\n      const expressionToNegate = parseOperand();\n      return (matcherInput) => !!expressionToNegate && !expressionToNegate(matcherInput);\n    }\n    if (token === \"(\") {\n      token = tokenizer.next();\n      const expressionInParents = parseInnerExpression();\n      if (token === \")\") {\n        token = tokenizer.next();\n      }\n      return expressionInParents;\n    }\n    if (isIdentifier(token)) {\n      const identifiers = [];\n      do {\n        identifiers.push(token);\n        token = tokenizer.next();\n      } while (isIdentifier(token));\n      return (matcherInput) => matchesName(identifiers, matcherInput);\n    }\n    return null;\n  }\n  function parseConjunction() {\n    const matchers = [];\n    let matcher = parseOperand();\n    while (matcher) {\n      matchers.push(matcher);\n      matcher = parseOperand();\n    }\n    return (matcherInput) => matchers.every((matcher2) => matcher2(matcherInput));\n  }\n  function parseInnerExpression() {\n    const matchers = [];\n    let matcher = parseConjunction();\n    while (matcher) {\n      matchers.push(matcher);\n      if (token === \"|\" || token === \",\") {\n        do {\n          token = tokenizer.next();\n        } while (token === \"|\" || token === \",\");\n      } else {\n        break;\n      }\n      matcher = parseConjunction();\n    }\n    return (matcherInput) => matchers.some((matcher2) => matcher2(matcherInput));\n  }\n}\nfunction isIdentifier(token) {\n  return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n  let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n  let match = regex.exec(input);\n  return {\n    next: () => {\n      if (!match) {\n        return null;\n      }\n      const res = match[0];\n      match = regex.exec(input);\n      return res;\n    }\n  };\n}\n\n// src/onigLib.ts\nvar FindOption = /* @__PURE__ */ ((FindOption2) => {\n  FindOption2[FindOption2[\"None\"] = 0] = \"None\";\n  FindOption2[FindOption2[\"NotBeginString\"] = 1] = \"NotBeginString\";\n  FindOption2[FindOption2[\"NotEndString\"] = 2] = \"NotEndString\";\n  FindOption2[FindOption2[\"NotBeginPosition\"] = 4] = \"NotBeginPosition\";\n  FindOption2[FindOption2[\"DebugCall\"] = 8] = \"DebugCall\";\n  return FindOption2;\n})(FindOption || {});\nfunction disposeOnigString(str) {\n  if (typeof str.dispose === \"function\") {\n    str.dispose();\n  }\n}\n\n// src/grammar/grammarDependencies.ts\nvar TopLevelRuleReference = class {\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n  }\n  toKey() {\n    return this.scopeName;\n  }\n};\nvar TopLevelRepositoryRuleReference = class {\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n  }\n  toKey() {\n    return `${this.scopeName}#${this.ruleName}`;\n  }\n};\nvar ExternalReferenceCollector = class {\n  constructor() {\n    this._references = [];\n    this._seenReferenceKeys = /* @__PURE__ */ new Set();\n    this.visitedRule = /* @__PURE__ */ new Set();\n  }\n  get references() {\n    return this._references;\n  }\n  add(reference) {\n    const key = reference.toKey();\n    if (this._seenReferenceKeys.has(key)) {\n      return;\n    }\n    this._seenReferenceKeys.add(key);\n    this._references.push(reference);\n  }\n};\nvar ScopeDependencyProcessor = class {\n  constructor(repo, initialScopeName) {\n    this.repo = repo;\n    this.initialScopeName = initialScopeName;\n    this.seenFullScopeRequests = /* @__PURE__ */ new Set();\n    this.seenPartialScopeRequests = /* @__PURE__ */ new Set();\n    this.seenFullScopeRequests.add(this.initialScopeName);\n    this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n  }\n  processQueue() {\n    const q = this.Q;\n    this.Q = [];\n    const deps = new ExternalReferenceCollector();\n    for (const dep of q) {\n      collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n    }\n    for (const dep of deps.references) {\n      if (dep instanceof TopLevelRuleReference) {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          continue;\n        }\n        this.seenFullScopeRequests.add(dep.scopeName);\n        this.Q.push(dep);\n      } else {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          continue;\n        }\n        if (this.seenPartialScopeRequests.has(dep.toKey())) {\n          continue;\n        }\n        this.seenPartialScopeRequests.add(dep.toKey());\n        this.Q.push(dep);\n      }\n    }\n  }\n};\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n  const selfGrammar = repo.lookup(reference.scopeName);\n  if (!selfGrammar) {\n    if (reference.scopeName === baseGrammarScopeName) {\n      throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n    }\n    return;\n  }\n  const baseGrammar = repo.lookup(baseGrammarScopeName);\n  if (reference instanceof TopLevelRuleReference) {\n    collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n  } else {\n    collectExternalReferencesInTopLevelRepositoryRule(\n      reference.ruleName,\n      { baseGrammar, selfGrammar, repository: selfGrammar.repository },\n      result\n    );\n  }\n  const injections = repo.injections(reference.scopeName);\n  if (injections) {\n    for (const injection of injections) {\n      result.add(new TopLevelRuleReference(injection));\n    }\n  }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n  if (context.repository && context.repository[ruleName]) {\n    const rule = context.repository[ruleName];\n    collectExternalReferencesInRules([rule], context, result);\n  }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n  if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n    collectExternalReferencesInRules(\n      context.selfGrammar.patterns,\n      { ...context, repository: context.selfGrammar.repository },\n      result\n    );\n  }\n  if (context.selfGrammar.injections) {\n    collectExternalReferencesInRules(\n      Object.values(context.selfGrammar.injections),\n      { ...context, repository: context.selfGrammar.repository },\n      result\n    );\n  }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n  for (const rule of rules) {\n    if (result.visitedRule.has(rule)) {\n      continue;\n    }\n    result.visitedRule.add(rule);\n    const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;\n    if (Array.isArray(rule.patterns)) {\n      collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n    }\n    const include = rule.include;\n    if (!include) {\n      continue;\n    }\n    const reference = parseInclude(include);\n    switch (reference.kind) {\n      case 0 /* Base */:\n        collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n        break;\n      case 1 /* Self */:\n        collectExternalReferencesInTopLevelRule(context, result);\n        break;\n      case 2 /* RelativeReference */:\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n        break;\n      case 3 /* TopLevelReference */:\n      case 4 /* TopLevelRepositoryReference */:\n        const selfGrammar = reference.scopeName === context.selfGrammar.scopeName ? context.selfGrammar : reference.scopeName === context.baseGrammar.scopeName ? context.baseGrammar : void 0;\n        if (selfGrammar) {\n          const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n          if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n            collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n          } else {\n            collectExternalReferencesInTopLevelRule(newContext, result);\n          }\n        } else {\n          if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n            result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n          } else {\n            result.add(new TopLevelRuleReference(reference.scopeName));\n          }\n        }\n        break;\n    }\n  }\n}\nvar BaseReference = class {\n  constructor() {\n    this.kind = 0 /* Base */;\n  }\n};\nvar SelfReference = class {\n  constructor() {\n    this.kind = 1 /* Self */;\n  }\n};\nvar RelativeReference = class {\n  constructor(ruleName) {\n    this.ruleName = ruleName;\n    this.kind = 2 /* RelativeReference */;\n  }\n};\nvar TopLevelReference = class {\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n    this.kind = 3 /* TopLevelReference */;\n  }\n};\nvar TopLevelRepositoryReference = class {\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n    this.kind = 4 /* TopLevelRepositoryReference */;\n  }\n};\nfunction parseInclude(include) {\n  if (include === \"$base\") {\n    return new BaseReference();\n  } else if (include === \"$self\") {\n    return new SelfReference();\n  }\n  const indexOfSharp = include.indexOf(\"#\");\n  if (indexOfSharp === -1) {\n    return new TopLevelReference(include);\n  } else if (indexOfSharp === 0) {\n    return new RelativeReference(include.substring(1));\n  } else {\n    const scopeName = include.substring(0, indexOfSharp);\n    const ruleName = include.substring(indexOfSharp + 1);\n    return new TopLevelRepositoryReference(scopeName, ruleName);\n  }\n}\n\n// src/rule.ts\nvar HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nvar BACK_REFERENCING_END = /\\\\(\\d+)/g;\nvar ruleIdSymbol = Symbol(\"RuleId\");\nvar endRuleId = -1;\nvar whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n  return id;\n}\nfunction ruleIdToNumber(id) {\n  return id;\n}\nvar Rule = class {\n  constructor($location, id, name, contentName) {\n    this.$location = $location;\n    this.id = id;\n    this._name = name || null;\n    this._nameIsCapturing = RegexSource.hasCaptures(this._name);\n    this._contentName = contentName || null;\n    this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);\n  }\n  get debugName() {\n    const location = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : \"unknown\";\n    return `${this.constructor.name}#${this.id} @ ${location}`;\n  }\n  getName(lineText, captureIndices) {\n    if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n      return this._name;\n    }\n    return RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n  }\n  getContentName(lineText, captureIndices) {\n    if (!this._contentNameIsCapturing || this._contentName === null) {\n      return this._contentName;\n    }\n    return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n  }\n};\nvar CaptureRule = class extends Rule {\n  constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n    super($location, id, name, contentName);\n    this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n  }\n  dispose() {\n  }\n  collectPatterns(grammar, out) {\n    throw new Error(\"Not supported!\");\n  }\n  compile(grammar, endRegexSource) {\n    throw new Error(\"Not supported!\");\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    throw new Error(\"Not supported!\");\n  }\n};\nvar MatchRule = class extends Rule {\n  constructor($location, id, name, match, captures) {\n    super($location, id, name, null);\n    this._match = new RegExpSource(match, this.id);\n    this.captures = captures;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugMatchRegExp() {\n    return `${this._match.source}`;\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._match);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar IncludeOnlyRule = class extends Rule {\n  constructor($location, id, name, contentName, patterns) {\n    super($location, id, name, contentName);\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  collectPatterns(grammar, out) {\n    for (const pattern of this.patterns) {\n      const rule = grammar.getRule(pattern);\n      rule.collectPatterns(grammar, out);\n    }\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar BeginEndRule = class extends Rule {\n  constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this._end = new RegExpSource(end ? end : \"\\uFFFF\", -1);\n    this.endHasBackReferences = this._end.hasBackReferences;\n    this.endCaptures = endCaptures;\n    this.applyEndPatternLast = applyEndPatternLast || false;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugEndRegExp() {\n    return `${this._end.source}`;\n  }\n  getEndWithResolvedBackReferences(lineText, captureIndices) {\n    return this._end.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n      } else {\n        this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n      }\n    }\n    if (this._end.hasBackReferences) {\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n      } else {\n        this._cachedCompiledPatterns.setSource(0, endRegexSource);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar BeginWhileRule = class extends Rule {\n  constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this.whileCaptures = whileCaptures;\n    this._while = new RegExpSource(_while, whileRuleId);\n    this.whileHasBackReferences = this._while.hasBackReferences;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n    this._cachedCompiledWhilePatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n    if (this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns.dispose();\n      this._cachedCompiledWhilePatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugWhileRegExp() {\n    return `${this._while.source}`;\n  }\n  getWhileWithResolvedBackReferences(lineText, captureIndices) {\n    return this._while.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n  compileWhile(grammar, endRegexSource) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns = new RegExpSourceList();\n      this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n    }\n    if (this._while.hasBackReferences) {\n      this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : \"\\uFFFF\");\n    }\n    return this._cachedCompiledWhilePatterns;\n  }\n};\nvar RuleFactory = class _RuleFactory {\n  static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n    return helper.registerRule((id) => {\n      return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n    });\n  }\n  static getCompiledRuleId(desc, helper, repository) {\n    if (!desc.id) {\n      helper.registerRule((id) => {\n        desc.id = id;\n        if (desc.match) {\n          return new MatchRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.match,\n            _RuleFactory._compileCaptures(desc.captures, helper, repository)\n          );\n        }\n        if (typeof desc.begin === \"undefined\") {\n          if (desc.repository) {\n            repository = mergeObjects({}, repository, desc.repository);\n          }\n          let patterns = desc.patterns;\n          if (typeof patterns === \"undefined\" && desc.include) {\n            patterns = [{ include: desc.include }];\n          }\n          return new IncludeOnlyRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.contentName,\n            _RuleFactory._compilePatterns(patterns, helper, repository)\n          );\n        }\n        if (desc.while) {\n          return new BeginWhileRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.contentName,\n            desc.begin,\n            _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository),\n            desc.while,\n            _RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository),\n            _RuleFactory._compilePatterns(desc.patterns, helper, repository)\n          );\n        }\n        return new BeginEndRule(\n          desc.$vscodeTextmateLocation,\n          desc.id,\n          desc.name,\n          desc.contentName,\n          desc.begin,\n          _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository),\n          desc.end,\n          _RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository),\n          desc.applyEndPatternLast,\n          _RuleFactory._compilePatterns(desc.patterns, helper, repository)\n        );\n      });\n    }\n    return desc.id;\n  }\n  static _compileCaptures(captures, helper, repository) {\n    let r = [];\n    if (captures) {\n      let maximumCaptureId = 0;\n      for (const captureId in captures) {\n        if (captureId === \"$vscodeTextmateLocation\") {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        if (numericCaptureId > maximumCaptureId) {\n          maximumCaptureId = numericCaptureId;\n        }\n      }\n      for (let i = 0; i <= maximumCaptureId; i++) {\n        r[i] = null;\n      }\n      for (const captureId in captures) {\n        if (captureId === \"$vscodeTextmateLocation\") {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        let retokenizeCapturedWithRuleId = 0;\n        if (captures[captureId].patterns) {\n          retokenizeCapturedWithRuleId = _RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n        }\n        r[numericCaptureId] = _RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n      }\n    }\n    return r;\n  }\n  static _compilePatterns(patterns, helper, repository) {\n    let r = [];\n    if (patterns) {\n      for (let i = 0, len = patterns.length; i < len; i++) {\n        const pattern = patterns[i];\n        let ruleId = -1;\n        if (pattern.include) {\n          const reference = parseInclude(pattern.include);\n          switch (reference.kind) {\n            case 0 /* Base */:\n            case 1 /* Self */:\n              ruleId = _RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n              break;\n            case 2 /* RelativeReference */:\n              let localIncludedRule = repository[reference.ruleName];\n              if (localIncludedRule) {\n                ruleId = _RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n              } else {\n              }\n              break;\n            case 3 /* TopLevelReference */:\n            case 4 /* TopLevelRepositoryReference */:\n              const externalGrammarName = reference.scopeName;\n              const externalGrammarInclude = reference.kind === 4 /* TopLevelRepositoryReference */ ? reference.ruleName : null;\n              const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n              if (externalGrammar) {\n                if (externalGrammarInclude) {\n                  let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                  if (externalIncludedRule) {\n                    ruleId = _RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                  } else {\n                  }\n                } else {\n                  ruleId = _RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                }\n              } else {\n              }\n              break;\n          }\n        } else {\n          ruleId = _RuleFactory.getCompiledRuleId(pattern, helper, repository);\n        }\n        if (ruleId !== -1) {\n          const rule = helper.getRule(ruleId);\n          let skipRule = false;\n          if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n            if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n              skipRule = true;\n            }\n          }\n          if (skipRule) {\n            continue;\n          }\n          r.push(ruleId);\n        }\n      }\n    }\n    return {\n      patterns: r,\n      hasMissingPatterns: (patterns ? patterns.length : 0) !== r.length\n    };\n  }\n};\nvar RegExpSource = class _RegExpSource {\n  constructor(regExpSource, ruleId) {\n    if (regExpSource) {\n      const len = regExpSource.length;\n      let lastPushedPos = 0;\n      let output = [];\n      let hasAnchor = false;\n      for (let pos = 0; pos < len; pos++) {\n        const ch = regExpSource.charAt(pos);\n        if (ch === \"\\\\\") {\n          if (pos + 1 < len) {\n            const nextCh = regExpSource.charAt(pos + 1);\n            if (nextCh === \"z\") {\n              output.push(regExpSource.substring(lastPushedPos, pos));\n              output.push(\"$(?!\\\\n)(?<!\\\\n)\");\n              lastPushedPos = pos + 2;\n            } else if (nextCh === \"A\" || nextCh === \"G\") {\n              hasAnchor = true;\n            }\n            pos++;\n          }\n        }\n      }\n      this.hasAnchor = hasAnchor;\n      if (lastPushedPos === 0) {\n        this.source = regExpSource;\n      } else {\n        output.push(regExpSource.substring(lastPushedPos, len));\n        this.source = output.join(\"\");\n      }\n    } else {\n      this.hasAnchor = false;\n      this.source = regExpSource;\n    }\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    } else {\n      this._anchorCache = null;\n    }\n    this.ruleId = ruleId;\n    this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n  }\n  clone() {\n    return new _RegExpSource(this.source, this.ruleId);\n  }\n  setSource(newSource) {\n    if (this.source === newSource) {\n      return;\n    }\n    this.source = newSource;\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    }\n  }\n  resolveBackReferences(lineText, captureIndices) {\n    let capturedValues = captureIndices.map((capture) => {\n      return lineText.substring(capture.start, capture.end);\n    });\n    BACK_REFERENCING_END.lastIndex = 0;\n    return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n      return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || \"\");\n    });\n  }\n  _buildAnchorCache() {\n    let A0_G0_result = [];\n    let A0_G1_result = [];\n    let A1_G0_result = [];\n    let A1_G1_result = [];\n    let pos, len, ch, nextCh;\n    for (pos = 0, len = this.source.length; pos < len; pos++) {\n      ch = this.source.charAt(pos);\n      A0_G0_result[pos] = ch;\n      A0_G1_result[pos] = ch;\n      A1_G0_result[pos] = ch;\n      A1_G1_result[pos] = ch;\n      if (ch === \"\\\\\") {\n        if (pos + 1 < len) {\n          nextCh = this.source.charAt(pos + 1);\n          if (nextCh === \"A\") {\n            A0_G0_result[pos + 1] = \"\\uFFFF\";\n            A0_G1_result[pos + 1] = \"\\uFFFF\";\n            A1_G0_result[pos + 1] = \"A\";\n            A1_G1_result[pos + 1] = \"A\";\n          } else if (nextCh === \"G\") {\n            A0_G0_result[pos + 1] = \"\\uFFFF\";\n            A0_G1_result[pos + 1] = \"G\";\n            A1_G0_result[pos + 1] = \"\\uFFFF\";\n            A1_G1_result[pos + 1] = \"G\";\n          } else {\n            A0_G0_result[pos + 1] = nextCh;\n            A0_G1_result[pos + 1] = nextCh;\n            A1_G0_result[pos + 1] = nextCh;\n            A1_G1_result[pos + 1] = nextCh;\n          }\n          pos++;\n        }\n      }\n    }\n    return {\n      A0_G0: A0_G0_result.join(\"\"),\n      A0_G1: A0_G1_result.join(\"\"),\n      A1_G0: A1_G0_result.join(\"\"),\n      A1_G1: A1_G1_result.join(\"\")\n    };\n  }\n  resolveAnchors(allowA, allowG) {\n    if (!this.hasAnchor || !this._anchorCache) {\n      return this.source;\n    }\n    if (allowA) {\n      if (allowG) {\n        return this._anchorCache.A1_G1;\n      } else {\n        return this._anchorCache.A1_G0;\n      }\n    } else {\n      if (allowG) {\n        return this._anchorCache.A0_G1;\n      } else {\n        return this._anchorCache.A0_G0;\n      }\n    }\n  }\n};\nvar RegExpSourceList = class {\n  constructor() {\n    this._items = [];\n    this._hasAnchors = false;\n    this._cached = null;\n    this._anchorCache = {\n      A0_G0: null,\n      A0_G1: null,\n      A1_G0: null,\n      A1_G1: null\n    };\n  }\n  dispose() {\n    this._disposeCaches();\n  }\n  _disposeCaches() {\n    if (this._cached) {\n      this._cached.dispose();\n      this._cached = null;\n    }\n    if (this._anchorCache.A0_G0) {\n      this._anchorCache.A0_G0.dispose();\n      this._anchorCache.A0_G0 = null;\n    }\n    if (this._anchorCache.A0_G1) {\n      this._anchorCache.A0_G1.dispose();\n      this._anchorCache.A0_G1 = null;\n    }\n    if (this._anchorCache.A1_G0) {\n      this._anchorCache.A1_G0.dispose();\n      this._anchorCache.A1_G0 = null;\n    }\n    if (this._anchorCache.A1_G1) {\n      this._anchorCache.A1_G1.dispose();\n      this._anchorCache.A1_G1 = null;\n    }\n  }\n  push(item) {\n    this._items.push(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  unshift(item) {\n    this._items.unshift(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  length() {\n    return this._items.length;\n  }\n  setSource(index, newSource) {\n    if (this._items[index].source !== newSource) {\n      this._disposeCaches();\n      this._items[index].setSource(newSource);\n    }\n  }\n  compile(onigLib) {\n    if (!this._cached) {\n      let regExps = this._items.map((e) => e.source);\n      this._cached = new CompiledRule(onigLib, regExps, this._items.map((e) => e.ruleId));\n    }\n    return this._cached;\n  }\n  compileAG(onigLib, allowA, allowG) {\n    if (!this._hasAnchors) {\n      return this.compile(onigLib);\n    } else {\n      if (allowA) {\n        if (allowG) {\n          if (!this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G1;\n        } else {\n          if (!this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G0;\n        }\n      } else {\n        if (allowG) {\n          if (!this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G1;\n        } else {\n          if (!this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G0;\n        }\n      }\n    }\n  }\n  _resolveAnchors(onigLib, allowA, allowG) {\n    let regExps = this._items.map((e) => e.resolveAnchors(allowA, allowG));\n    return new CompiledRule(onigLib, regExps, this._items.map((e) => e.ruleId));\n  }\n};\nvar CompiledRule = class {\n  constructor(onigLib, regExps, rules) {\n    this.regExps = regExps;\n    this.rules = rules;\n    this.scanner = onigLib.createOnigScanner(regExps);\n  }\n  dispose() {\n    if (typeof this.scanner.dispose === \"function\") {\n      this.scanner.dispose();\n    }\n  }\n  toString() {\n    const r = [];\n    for (let i = 0, len = this.rules.length; i < len; i++) {\n      r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n    }\n    return r.join(\"\\n\");\n  }\n  findNextMatchSync(string, startPosition, options) {\n    const result = this.scanner.findNextMatchSync(string, startPosition, options);\n    if (!result) {\n      return null;\n    }\n    return {\n      ruleId: this.rules[result.index],\n      captureIndices: result.captureIndices\n    };\n  }\n};\n\n// src/grammar/basicScopesAttributeProvider.ts\nvar BasicScopeAttributes = class {\n  constructor(languageId, tokenType) {\n    this.languageId = languageId;\n    this.tokenType = tokenType;\n  }\n};\nvar _BasicScopeAttributesProvider = class _BasicScopeAttributesProvider {\n  constructor(initialLanguageId, embeddedLanguages) {\n    this._getBasicScopeAttributes = new CachedFn((scopeName) => {\n      const languageId = this._scopeToLanguage(scopeName);\n      const standardTokenType = this._toStandardTokenType(scopeName);\n      return new BasicScopeAttributes(languageId, standardTokenType);\n    });\n    this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* NotSet */);\n    this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n  }\n  getDefaultAttributes() {\n    return this._defaultAttributes;\n  }\n  getBasicScopeAttributes(scopeName) {\n    if (scopeName === null) {\n      return _BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n    }\n    return this._getBasicScopeAttributes.get(scopeName);\n  }\n  /**\n   * Given a produced TM scope, return the language that token describes or null if unknown.\n   * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n   */\n  _scopeToLanguage(scope) {\n    return this._embeddedLanguagesMatcher.match(scope) || 0;\n  }\n  _toStandardTokenType(scopeName) {\n    const m = scopeName.match(_BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n    if (!m) {\n      return 8 /* NotSet */;\n    }\n    switch (m[1]) {\n      case \"comment\":\n        return 1 /* Comment */;\n      case \"string\":\n        return 2 /* String */;\n      case \"regex\":\n        return 3 /* RegEx */;\n      case \"meta.embedded\":\n        return 0 /* Other */;\n    }\n    throw new Error(\"Unexpected match for standard token type!\");\n  }\n};\n_BasicScopeAttributesProvider._NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\n_BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\nvar BasicScopeAttributesProvider = _BasicScopeAttributesProvider;\nvar ScopeMatcher = class {\n  constructor(values) {\n    if (values.length === 0) {\n      this.values = null;\n      this.scopesRegExp = null;\n    } else {\n      this.values = new Map(values);\n      const escapedScopes = values.map(\n        ([scopeName, value]) => escapeRegExpCharacters(scopeName)\n      );\n      escapedScopes.sort();\n      escapedScopes.reverse();\n      this.scopesRegExp = new RegExp(\n        `^((${escapedScopes.join(\")|(\")}))($|\\\\.)`,\n        \"\"\n      );\n    }\n  }\n  match(scope) {\n    if (!this.scopesRegExp) {\n      return void 0;\n    }\n    const m = scope.match(this.scopesRegExp);\n    if (!m) {\n      return void 0;\n    }\n    return this.values.get(m[1]);\n  }\n};\n\n// src/debug.ts\nvar DebugFlags = {\n  InDebugMode: typeof process !== \"undefined\" && !!process.env[\"VSCODE_TEXTMATE_DEBUG\"]\n};\nvar UseOnigurumaFindOptions = false;\n\n// src/grammar/tokenizeString.ts\nvar TokenizeStringResult = class {\n  constructor(stack, stoppedEarly) {\n    this.stack = stack;\n    this.stoppedEarly = stoppedEarly;\n  }\n};\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n  const lineLength = lineText.content.length;\n  let STOP = false;\n  let anchorPosition = -1;\n  if (checkWhileConditions) {\n    const whileCheckResult = _checkWhileConditions(\n      grammar,\n      lineText,\n      isFirstLine,\n      linePos,\n      stack,\n      lineTokens\n    );\n    stack = whileCheckResult.stack;\n    linePos = whileCheckResult.linePos;\n    isFirstLine = whileCheckResult.isFirstLine;\n    anchorPosition = whileCheckResult.anchorPosition;\n  }\n  const startTime = Date.now();\n  while (!STOP) {\n    if (timeLimit !== 0) {\n      const elapsedTime = Date.now() - startTime;\n      if (elapsedTime > timeLimit) {\n        return new TokenizeStringResult(stack, true);\n      }\n    }\n    scanNext();\n  }\n  return new TokenizeStringResult(stack, false);\n  function scanNext() {\n    if (false) {\n      console.log(\"\");\n      console.log(\n        `@@scanNext ${linePos}: |${lineText.content.substr(linePos).replace(/\\n$/, \"\\\\n\")}|`\n      );\n    }\n    const r = matchRuleOrInjections(\n      grammar,\n      lineText,\n      isFirstLine,\n      linePos,\n      stack,\n      anchorPosition\n    );\n    if (!r) {\n      lineTokens.produce(stack, lineLength);\n      STOP = true;\n      return;\n    }\n    const captureIndices = r.captureIndices;\n    const matchedRuleId = r.matchedRuleId;\n    const hasAdvanced = captureIndices && captureIndices.length > 0 ? captureIndices[0].end > linePos : false;\n    if (matchedRuleId === endRuleId) {\n      const poppedRule = stack.getRule(grammar);\n      if (false) {\n        console.log(\n          \"  popping \" + poppedRule.debugName + \" - \" + poppedRule.debugEndRegExp\n        );\n      }\n      lineTokens.produce(stack, captureIndices[0].start);\n      stack = stack.withContentNameScopesList(stack.nameScopesList);\n      handleCaptures(\n        grammar,\n        lineText,\n        isFirstLine,\n        stack,\n        lineTokens,\n        poppedRule.endCaptures,\n        captureIndices\n      );\n      lineTokens.produce(stack, captureIndices[0].end);\n      const popped = stack;\n      stack = stack.parent;\n      anchorPosition = popped.getAnchorPos();\n      if (!hasAdvanced && popped.getEnterPos() === linePos) {\n        if (false) {\n          console.error(\n            \"[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing\"\n          );\n        }\n        stack = popped;\n        lineTokens.produce(stack, lineLength);\n        STOP = true;\n        return;\n      }\n    } else {\n      const _rule = grammar.getRule(matchedRuleId);\n      lineTokens.produce(stack, captureIndices[0].start);\n      const beforePush = stack;\n      const scopeName = _rule.getName(lineText.content, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(\n        scopeName,\n        grammar\n      );\n      stack = stack.push(\n        matchedRuleId,\n        linePos,\n        anchorPosition,\n        captureIndices[0].end === lineLength,\n        null,\n        nameScopesList,\n        nameScopesList\n      );\n      if (_rule instanceof BeginEndRule) {\n        const pushedRule = _rule;\n        if (false) {\n          console.log(\n            \"  pushing \" + pushedRule.debugName + \" - \" + pushedRule.debugBeginRegExp\n          );\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          pushedRule.beginCaptures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(\n          lineText.content,\n          captureIndices\n        );\n        const contentNameScopesList = nameScopesList.pushAttributed(\n          contentName,\n          grammar\n        );\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.endHasBackReferences) {\n          stack = stack.withEndRule(\n            pushedRule.getEndWithResolvedBackReferences(\n              lineText.content,\n              captureIndices\n            )\n          );\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          if (false) {\n            console.error(\n              \"[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"\n            );\n          }\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else if (_rule instanceof BeginWhileRule) {\n        const pushedRule = _rule;\n        if (false) {\n          console.log(\"  pushing \" + pushedRule.debugName);\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          pushedRule.beginCaptures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(\n          lineText.content,\n          captureIndices\n        );\n        const contentNameScopesList = nameScopesList.pushAttributed(\n          contentName,\n          grammar\n        );\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.whileHasBackReferences) {\n          stack = stack.withEndRule(\n            pushedRule.getWhileWithResolvedBackReferences(\n              lineText.content,\n              captureIndices\n            )\n          );\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          if (false) {\n            console.error(\n              \"[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"\n            );\n          }\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else {\n        const matchingRule = _rule;\n        if (false) {\n          console.log(\n            \"  matched \" + matchingRule.debugName + \" - \" + matchingRule.debugMatchRegExp\n          );\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          matchingRule.captures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        stack = stack.pop();\n        if (!hasAdvanced) {\n          if (false) {\n            console.error(\n              \"[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping\"\n            );\n          }\n          stack = stack.safePop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      }\n    }\n    if (captureIndices[0].end > linePos) {\n      linePos = captureIndices[0].end;\n      isFirstLine = false;\n    }\n  }\n}\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n  let anchorPosition = stack.beginRuleCapturedEOL ? 0 : -1;\n  const whileRules = [];\n  for (let node = stack; node; node = node.pop()) {\n    const nodeRule = node.getRule(grammar);\n    if (nodeRule instanceof BeginWhileRule) {\n      whileRules.push({\n        rule: nodeRule,\n        stack: node\n      });\n    }\n  }\n  for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n    const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (false) {\n      console.log(\"  scanning for while rule\");\n      console.log(ruleScanner.toString());\n    }\n    if (r) {\n      const matchedRuleId = r.ruleId;\n      if (matchedRuleId !== whileRuleId) {\n        stack = whileRule.stack.pop();\n        break;\n      }\n      if (r.captureIndices && r.captureIndices.length) {\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n        handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n        anchorPosition = r.captureIndices[0].end;\n        if (r.captureIndices[0].end > linePos) {\n          linePos = r.captureIndices[0].end;\n          isFirstLine = false;\n        }\n      }\n    } else {\n      if (false) {\n        console.log(\"  popping \" + whileRule.rule.debugName + \" - \" + whileRule.rule.debugWhileRegExp);\n      }\n      stack = whileRule.stack.pop();\n      break;\n    }\n  }\n  return { stack, linePos, anchorPosition, isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  const injections = grammar.getInjections();\n  if (injections.length === 0) {\n    return matchResult;\n  }\n  const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  if (!injectionResult) {\n    return matchResult;\n  }\n  if (!matchResult) {\n    return injectionResult;\n  }\n  const matchResultScore = matchResult.captureIndices[0].start;\n  const injectionResultScore = injectionResult.captureIndices[0].start;\n  if (injectionResultScore < matchResultScore || injectionResult.priorityMatch && injectionResultScore === matchResultScore) {\n    return injectionResult;\n  }\n  return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const rule = stack.getRule(grammar);\n  const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n  const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n  if (r) {\n    return {\n      captureIndices: r.captureIndices,\n      matchedRuleId: r.ruleId\n    };\n  }\n  return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  let bestMatchRating = Number.MAX_VALUE;\n  let bestMatchCaptureIndices = null;\n  let bestMatchRuleId;\n  let bestMatchResultPriority = 0;\n  const scopes = stack.contentNameScopesList.getScopeNames();\n  for (let i = 0, len = injections.length; i < len; i++) {\n    const injection = injections[i];\n    if (!injection.matcher(scopes)) {\n      continue;\n    }\n    const rule = grammar.getRule(injection.ruleId);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n    const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (!matchResult) {\n      continue;\n    }\n    if (false) {\n      console.log(`  matched injection: ${injection.debugSelector}`);\n      console.log(ruleScanner.toString());\n    }\n    const matchRating = matchResult.captureIndices[0].start;\n    if (matchRating >= bestMatchRating) {\n      continue;\n    }\n    bestMatchRating = matchRating;\n    bestMatchCaptureIndices = matchResult.captureIndices;\n    bestMatchRuleId = matchResult.ruleId;\n    bestMatchResultPriority = injection.priority;\n    if (bestMatchRating === linePos) {\n      break;\n    }\n  }\n  if (bestMatchCaptureIndices) {\n    return {\n      priorityMatch: bestMatchResultPriority === -1,\n      captureIndices: bestMatchCaptureIndices,\n      matchedRuleId: bestMatchRuleId\n    };\n  }\n  return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  if (UseOnigurumaFindOptions) {\n    const ruleScanner2 = rule.compile(grammar, endRegexSource);\n    const findOptions = getFindOptions(allowA, allowG);\n    return { ruleScanner: ruleScanner2, findOptions };\n  }\n  const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n  return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  if (UseOnigurumaFindOptions) {\n    const ruleScanner2 = rule.compileWhile(grammar, endRegexSource);\n    const findOptions = getFindOptions(allowA, allowG);\n    return { ruleScanner: ruleScanner2, findOptions };\n  }\n  const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n  return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction getFindOptions(allowA, allowG) {\n  let options = 0 /* None */;\n  if (!allowA) {\n    options |= 1 /* NotBeginString */;\n  }\n  if (!allowG) {\n    options |= 4 /* NotBeginPosition */;\n  }\n  return options;\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n  if (captures.length === 0) {\n    return;\n  }\n  const lineTextContent = lineText.content;\n  const len = Math.min(captures.length, captureIndices.length);\n  const localStack = [];\n  const maxEnd = captureIndices[0].end;\n  for (let i = 0; i < len; i++) {\n    const captureRule = captures[i];\n    if (captureRule === null) {\n      continue;\n    }\n    const captureIndex = captureIndices[i];\n    if (captureIndex.length === 0) {\n      continue;\n    }\n    if (captureIndex.start > maxEnd) {\n      break;\n    }\n    while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n      localStack.pop();\n    }\n    if (localStack.length > 0) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n    } else {\n      lineTokens.produce(stack, captureIndex.start);\n    }\n    if (captureRule.retokenizeCapturedWithRuleId) {\n      const scopeName = captureRule.getName(lineTextContent, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n      const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n      const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n      const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n      const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n      _tokenizeString(\n        grammar,\n        onigSubStr,\n        isFirstLine && captureIndex.start === 0,\n        captureIndex.start,\n        stackClone,\n        lineTokens,\n        false,\n        /* no time limit */\n        0\n      );\n      disposeOnigString(onigSubStr);\n      continue;\n    }\n    const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n    if (captureRuleScopeName !== null) {\n      const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n      const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n      localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n    }\n  }\n  while (localStack.length > 0) {\n    lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n    localStack.pop();\n  }\n}\nvar LocalStackElement = class {\n  constructor(scopes, endPos) {\n    this.scopes = scopes;\n    this.endPos = endPos;\n  }\n};\n\n// src/grammar/grammar.ts\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n  return new Grammar(\n    scopeName,\n    grammar,\n    initialLanguage,\n    embeddedLanguages,\n    tokenTypes,\n    balancedBracketSelectors,\n    grammarRepository,\n    onigLib\n  );\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n  const matchers = createMatchers(selector, nameMatcher);\n  const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n  for (const matcher of matchers) {\n    result.push({\n      debugSelector: selector,\n      matcher: matcher.matcher,\n      ruleId,\n      grammar,\n      priority: matcher.priority\n    });\n  }\n}\nfunction nameMatcher(identifers, scopes) {\n  if (scopes.length < identifers.length) {\n    return false;\n  }\n  let lastIndex = 0;\n  return identifers.every((identifier) => {\n    for (let i = lastIndex; i < scopes.length; i++) {\n      if (scopesAreMatching(scopes[i], identifier)) {\n        lastIndex = i + 1;\n        return true;\n      }\n    }\n    return false;\n  });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n  if (!thisScopeName) {\n    return false;\n  }\n  if (thisScopeName === scopeName) {\n    return true;\n  }\n  const len = scopeName.length;\n  return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === \".\";\n}\nvar Grammar = class {\n  constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n    this._rootScopeName = _rootScopeName;\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._onigLib = _onigLib;\n    this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(\n      initialLanguage,\n      embeddedLanguages\n    );\n    this._rootId = -1;\n    this._lastRuleId = 0;\n    this._ruleId2desc = [null];\n    this._includedGrammars = {};\n    this._grammarRepository = grammarRepository;\n    this._grammar = initGrammar(grammar, null);\n    this._injections = null;\n    this._tokenTypeMatchers = [];\n    if (tokenTypes) {\n      for (const selector of Object.keys(tokenTypes)) {\n        const matchers = createMatchers(selector, nameMatcher);\n        for (const matcher of matchers) {\n          this._tokenTypeMatchers.push({\n            matcher: matcher.matcher,\n            type: tokenTypes[selector]\n          });\n        }\n      }\n    }\n  }\n  get themeProvider() {\n    return this._grammarRepository;\n  }\n  dispose() {\n    for (const rule of this._ruleId2desc) {\n      if (rule) {\n        rule.dispose();\n      }\n    }\n  }\n  createOnigScanner(sources) {\n    return this._onigLib.createOnigScanner(sources);\n  }\n  createOnigString(sources) {\n    return this._onigLib.createOnigString(sources);\n  }\n  getMetadataForScope(scope) {\n    return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n  }\n  _collectInjections() {\n    const grammarRepository = {\n      lookup: (scopeName2) => {\n        if (scopeName2 === this._rootScopeName) {\n          return this._grammar;\n        }\n        return this.getExternalGrammar(scopeName2);\n      },\n      injections: (scopeName2) => {\n        return this._grammarRepository.injections(scopeName2);\n      }\n    };\n    const result = [];\n    const scopeName = this._rootScopeName;\n    const grammar = grammarRepository.lookup(scopeName);\n    if (grammar) {\n      const rawInjections = grammar.injections;\n      if (rawInjections) {\n        for (let expression in rawInjections) {\n          collectInjections(\n            result,\n            expression,\n            rawInjections[expression],\n            this,\n            grammar\n          );\n        }\n      }\n      const injectionScopeNames = this._grammarRepository.injections(scopeName);\n      if (injectionScopeNames) {\n        injectionScopeNames.forEach((injectionScopeName) => {\n          const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n          if (injectionGrammar) {\n            const selector = injectionGrammar.injectionSelector;\n            if (selector) {\n              collectInjections(\n                result,\n                selector,\n                injectionGrammar,\n                this,\n                injectionGrammar\n              );\n            }\n          }\n        });\n      }\n    }\n    result.sort((i1, i2) => i1.priority - i2.priority);\n    return result;\n  }\n  getInjections() {\n    if (this._injections === null) {\n      this._injections = this._collectInjections();\n    }\n    return this._injections;\n  }\n  registerRule(factory) {\n    const id = ++this._lastRuleId;\n    const result = factory(ruleIdFromNumber(id));\n    this._ruleId2desc[id] = result;\n    return result;\n  }\n  getRule(ruleId) {\n    return this._ruleId2desc[ruleIdToNumber(ruleId)];\n  }\n  getExternalGrammar(scopeName, repository) {\n    if (this._includedGrammars[scopeName]) {\n      return this._includedGrammars[scopeName];\n    } else if (this._grammarRepository) {\n      const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n      if (rawIncludedGrammar) {\n        this._includedGrammars[scopeName] = initGrammar(\n          rawIncludedGrammar,\n          repository && repository.$base\n        );\n        return this._includedGrammars[scopeName];\n      }\n    }\n    return void 0;\n  }\n  tokenizeLine(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, false, timeLimit);\n    return {\n      tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  tokenizeLine2(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, true, timeLimit);\n    return {\n      tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n    if (this._rootId === -1) {\n      this._rootId = RuleFactory.getCompiledRuleId(\n        this._grammar.repository.$self,\n        this,\n        this._grammar.repository\n      );\n      this.getInjections();\n    }\n    let isFirstLine;\n    if (!prevState || prevState === StateStackImpl.NULL) {\n      isFirstLine = true;\n      const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n      const defaultStyle = this.themeProvider.getDefaults();\n      const defaultMetadata = EncodedTokenMetadata.set(\n        0,\n        rawDefaultMetadata.languageId,\n        rawDefaultMetadata.tokenType,\n        null,\n        defaultStyle.fontStyle,\n        defaultStyle.foregroundId,\n        defaultStyle.backgroundId\n      );\n      const rootScopeName = this.getRule(this._rootId).getName(\n        null,\n        null\n      );\n      let scopeList;\n      if (rootScopeName) {\n        scopeList = AttributedScopeStack.createRootAndLookUpScopeName(\n          rootScopeName,\n          defaultMetadata,\n          this\n        );\n      } else {\n        scopeList = AttributedScopeStack.createRoot(\n          \"unknown\",\n          defaultMetadata\n        );\n      }\n      prevState = new StateStackImpl(\n        null,\n        this._rootId,\n        -1,\n        -1,\n        false,\n        null,\n        scopeList,\n        scopeList\n      );\n    } else {\n      isFirstLine = false;\n      prevState.reset();\n    }\n    lineText = lineText + \"\\n\";\n    const onigLineText = this.createOnigString(lineText);\n    const lineLength = onigLineText.content.length;\n    const lineTokens = new LineTokens(\n      emitBinaryTokens,\n      lineText,\n      this._tokenTypeMatchers,\n      this.balancedBracketSelectors\n    );\n    const r = _tokenizeString(\n      this,\n      onigLineText,\n      isFirstLine,\n      0,\n      prevState,\n      lineTokens,\n      true,\n      timeLimit\n    );\n    disposeOnigString(onigLineText);\n    return {\n      lineLength,\n      lineTokens,\n      ruleStack: r.stack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n};\nfunction initGrammar(grammar, base) {\n  grammar = clone(grammar);\n  grammar.repository = grammar.repository || {};\n  grammar.repository.$self = {\n    $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n    patterns: grammar.patterns,\n    name: grammar.scopeName\n  };\n  grammar.repository.$base = base || grammar.repository.$self;\n  return grammar;\n}\nvar AttributedScopeStack = class _AttributedScopeStack {\n  /**\n   * Invariant:\n   * ```\n   * if (parent && !scopePath.extends(parent.scopePath)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, scopePath, tokenAttributes) {\n    this.parent = parent;\n    this.scopePath = scopePath;\n    this.tokenAttributes = tokenAttributes;\n  }\n  static fromExtension(namesScopeList, contentNameScopesList) {\n    let current = namesScopeList;\n    let scopeNames = namesScopeList?.scopePath ?? null;\n    for (const frame of contentNameScopesList) {\n      scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);\n      current = new _AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n    }\n    return current;\n  }\n  static createRoot(scopeName, tokenAttributes) {\n    return new _AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);\n  }\n  static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n    const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n    const scopePath = new ScopeStack(null, scopeName);\n    const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n    const resolvedTokenAttributes = _AttributedScopeStack.mergeAttributes(\n      tokenAttributes,\n      rawRootMetadata,\n      rootStyle\n    );\n    return new _AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n  }\n  get scopeName() {\n    return this.scopePath.scopeName;\n  }\n  toString() {\n    return this.getScopeNames().join(\" \");\n  }\n  equals(other) {\n    return _AttributedScopeStack.equals(this, other);\n  }\n  static equals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n        return false;\n      }\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n    let fontStyle = -1 /* NotSet */;\n    let foreground = 0;\n    let background = 0;\n    if (styleAttributes !== null) {\n      fontStyle = styleAttributes.fontStyle;\n      foreground = styleAttributes.foregroundId;\n      background = styleAttributes.backgroundId;\n    }\n    return EncodedTokenMetadata.set(\n      existingTokenAttributes,\n      basicScopeAttributes.languageId,\n      basicScopeAttributes.tokenType,\n      null,\n      fontStyle,\n      foreground,\n      background\n    );\n  }\n  pushAttributed(scopePath, grammar) {\n    if (scopePath === null) {\n      return this;\n    }\n    if (scopePath.indexOf(\" \") === -1) {\n      return _AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n    }\n    const scopes = scopePath.split(/ /g);\n    let result = this;\n    for (const scope of scopes) {\n      result = _AttributedScopeStack._pushAttributed(result, scope, grammar);\n    }\n    return result;\n  }\n  static _pushAttributed(target, scopeName, grammar) {\n    const rawMetadata = grammar.getMetadataForScope(scopeName);\n    const newPath = target.scopePath.push(scopeName);\n    const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n    const metadata = _AttributedScopeStack.mergeAttributes(\n      target.tokenAttributes,\n      rawMetadata,\n      scopeThemeMatchResult\n    );\n    return new _AttributedScopeStack(target, newPath, metadata);\n  }\n  getScopeNames() {\n    return this.scopePath.getSegments();\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let self = this;\n    while (self && self !== base) {\n      result.push({\n        encodedTokenAttributes: self.tokenAttributes,\n        scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null)\n      });\n      self = self.parent;\n    }\n    return self === base ? result.reverse() : void 0;\n  }\n};\nvar _StateStackImpl = class _StateStackImpl {\n  /**\n   * Invariant:\n   * ```\n   * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n   * \tthrow new Error();\n   * }\n   * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    this.parent = parent;\n    this.ruleId = ruleId;\n    this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n    this.endRule = endRule;\n    this.nameScopesList = nameScopesList;\n    this.contentNameScopesList = contentNameScopesList;\n    this._stackElementBrand = void 0;\n    this.depth = this.parent ? this.parent.depth + 1 : 1;\n    this._enterPos = enterPos;\n    this._anchorPos = anchorPos;\n  }\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    return _StateStackImpl._equals(this, other);\n  }\n  static _equals(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (!this._structuralEquals(a, b)) {\n      return false;\n    }\n    return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n  }\n  /**\n   * A structural equals check. Does not take into account `scopes`.\n   */\n  static _structuralEquals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      if (a.depth !== b.depth || a.ruleId !== b.ruleId || a.endRule !== b.endRule) {\n        return false;\n      }\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  clone() {\n    return this;\n  }\n  static _reset(el) {\n    while (el) {\n      el._enterPos = -1;\n      el._anchorPos = -1;\n      el = el.parent;\n    }\n  }\n  reset() {\n    _StateStackImpl._reset(this);\n  }\n  pop() {\n    return this.parent;\n  }\n  safePop() {\n    if (this.parent) {\n      return this.parent;\n    }\n    return this;\n  }\n  push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    return new _StateStackImpl(\n      this,\n      ruleId,\n      enterPos,\n      anchorPos,\n      beginRuleCapturedEOL,\n      endRule,\n      nameScopesList,\n      contentNameScopesList\n    );\n  }\n  getEnterPos() {\n    return this._enterPos;\n  }\n  getAnchorPos() {\n    return this._anchorPos;\n  }\n  getRule(grammar) {\n    return grammar.getRule(this.ruleId);\n  }\n  toString() {\n    const r = [];\n    this._writeString(r, 0);\n    return \"[\" + r.join(\",\") + \"]\";\n  }\n  _writeString(res, outIndex) {\n    if (this.parent) {\n      outIndex = this.parent._writeString(res, outIndex);\n    }\n    res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n    return outIndex;\n  }\n  withContentNameScopesList(contentNameScopeStack) {\n    if (this.contentNameScopesList === contentNameScopeStack) {\n      return this;\n    }\n    return this.parent.push(\n      this.ruleId,\n      this._enterPos,\n      this._anchorPos,\n      this.beginRuleCapturedEOL,\n      this.endRule,\n      this.nameScopesList,\n      contentNameScopeStack\n    );\n  }\n  withEndRule(endRule) {\n    if (this.endRule === endRule) {\n      return this;\n    }\n    return new _StateStackImpl(\n      this.parent,\n      this.ruleId,\n      this._enterPos,\n      this._anchorPos,\n      this.beginRuleCapturedEOL,\n      endRule,\n      this.nameScopesList,\n      this.contentNameScopesList\n    );\n  }\n  // Used to warn of endless loops\n  hasSameRuleAs(other) {\n    let el = this;\n    while (el && el._enterPos === other._enterPos) {\n      if (el.ruleId === other.ruleId) {\n        return true;\n      }\n      el = el.parent;\n    }\n    return false;\n  }\n  toStateStackFrame() {\n    return {\n      ruleId: ruleIdToNumber(this.ruleId),\n      beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n      endRule: this.endRule,\n      nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n      contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? []\n    };\n  }\n  static pushFrame(self, frame) {\n    const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n    return new _StateStackImpl(\n      self,\n      ruleIdFromNumber(frame.ruleId),\n      frame.enterPos ?? -1,\n      frame.anchorPos ?? -1,\n      frame.beginRuleCapturedEOL,\n      frame.endRule,\n      namesScopeList,\n      AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList)\n    );\n  }\n};\n// TODO remove me\n_StateStackImpl.NULL = new _StateStackImpl(\n  null,\n  0,\n  0,\n  0,\n  false,\n  null,\n  null,\n  null\n);\nvar StateStackImpl = _StateStackImpl;\nvar BalancedBracketSelectors = class {\n  constructor(balancedBracketScopes, unbalancedBracketScopes) {\n    this.allowAny = false;\n    this.balancedBracketScopes = balancedBracketScopes.flatMap(\n      (selector) => {\n        if (selector === \"*\") {\n          this.allowAny = true;\n          return [];\n        }\n        return createMatchers(selector, nameMatcher).map((m) => m.matcher);\n      }\n    );\n    this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap(\n      (selector) => createMatchers(selector, nameMatcher).map((m) => m.matcher)\n    );\n  }\n  get matchesAlways() {\n    return this.allowAny && this.unbalancedBracketScopes.length === 0;\n  }\n  get matchesNever() {\n    return this.balancedBracketScopes.length === 0 && !this.allowAny;\n  }\n  match(scopes) {\n    for (const excluder of this.unbalancedBracketScopes) {\n      if (excluder(scopes)) {\n        return false;\n      }\n    }\n    for (const includer of this.balancedBracketScopes) {\n      if (includer(scopes)) {\n        return true;\n      }\n    }\n    return this.allowAny;\n  }\n};\nvar LineTokens = class {\n  constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._emitBinaryTokens = emitBinaryTokens;\n    this._tokenTypeOverrides = tokenTypeOverrides;\n    if (false) {\n      this._lineText = lineText;\n    } else {\n      this._lineText = null;\n    }\n    this._tokens = [];\n    this._binaryTokens = [];\n    this._lastTokenEndIndex = 0;\n  }\n  produce(stack, endIndex) {\n    this.produceFromScopes(stack.contentNameScopesList, endIndex);\n  }\n  produceFromScopes(scopesList, endIndex) {\n    if (this._lastTokenEndIndex >= endIndex) {\n      return;\n    }\n    if (this._emitBinaryTokens) {\n      let metadata = scopesList?.tokenAttributes ?? 0;\n      let containsBalancedBrackets = false;\n      if (this.balancedBracketSelectors?.matchesAlways) {\n        containsBalancedBrackets = true;\n      }\n      if (this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {\n        const scopes2 = scopesList?.getScopeNames() ?? [];\n        for (const tokenType of this._tokenTypeOverrides) {\n          if (tokenType.matcher(scopes2)) {\n            metadata = EncodedTokenMetadata.set(\n              metadata,\n              0,\n              toOptionalTokenType(tokenType.type),\n              null,\n              -1 /* NotSet */,\n              0,\n              0\n            );\n          }\n        }\n        if (this.balancedBracketSelectors) {\n          containsBalancedBrackets = this.balancedBracketSelectors.match(scopes2);\n        }\n      }\n      if (containsBalancedBrackets) {\n        metadata = EncodedTokenMetadata.set(\n          metadata,\n          0,\n          8 /* NotSet */,\n          containsBalancedBrackets,\n          -1 /* NotSet */,\n          0,\n          0\n        );\n      }\n      if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n        this._lastTokenEndIndex = endIndex;\n        return;\n      }\n      this._binaryTokens.push(this._lastTokenEndIndex);\n      this._binaryTokens.push(metadata);\n      this._lastTokenEndIndex = endIndex;\n      return;\n    }\n    const scopes = scopesList?.getScopeNames() ?? [];\n    this._tokens.push({\n      startIndex: this._lastTokenEndIndex,\n      endIndex,\n      // value: lineText.substring(lastTokenEndIndex, endIndex),\n      scopes\n    });\n    this._lastTokenEndIndex = endIndex;\n  }\n  getResult(stack, lineLength) {\n    if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n      this._tokens.pop();\n    }\n    if (this._tokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._tokens[this._tokens.length - 1].startIndex = 0;\n    }\n    return this._tokens;\n  }\n  getBinaryResult(stack, lineLength) {\n    if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n      this._binaryTokens.pop();\n      this._binaryTokens.pop();\n    }\n    if (this._binaryTokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._binaryTokens[this._binaryTokens.length - 2] = 0;\n    }\n    const result = new Uint32Array(this._binaryTokens.length);\n    for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n      result[i] = this._binaryTokens[i];\n    }\n    return result;\n  }\n};\n\n// src/registry.ts\nvar SyncRegistry = class {\n  constructor(theme, _onigLib) {\n    this._onigLib = _onigLib;\n    this._grammars = /* @__PURE__ */ new Map();\n    this._rawGrammars = /* @__PURE__ */ new Map();\n    this._injectionGrammars = /* @__PURE__ */ new Map();\n    this._theme = theme;\n  }\n  dispose() {\n    for (const grammar of this._grammars.values()) {\n      grammar.dispose();\n    }\n  }\n  setTheme(theme) {\n    this._theme = theme;\n  }\n  getColorMap() {\n    return this._theme.getColorMap();\n  }\n  /**\n   * Add `grammar` to registry and return a list of referenced scope names\n   */\n  addGrammar(grammar, injectionScopeNames) {\n    this._rawGrammars.set(grammar.scopeName, grammar);\n    if (injectionScopeNames) {\n      this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n    }\n  }\n  /**\n   * Lookup a raw grammar.\n   */\n  lookup(scopeName) {\n    return this._rawGrammars.get(scopeName);\n  }\n  /**\n   * Returns the injections for the given grammar\n   */\n  injections(targetScope) {\n    return this._injectionGrammars.get(targetScope);\n  }\n  /**\n   * Get the default theme settings\n   */\n  getDefaults() {\n    return this._theme.getDefaults();\n  }\n  /**\n   * Match a scope in the theme.\n   */\n  themeMatch(scopePath) {\n    return this._theme.match(scopePath);\n  }\n  /**\n   * Lookup a grammar.\n   */\n  grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    if (!this._grammars.has(scopeName)) {\n      let rawGrammar = this._rawGrammars.get(scopeName);\n      if (!rawGrammar) {\n        return null;\n      }\n      this._grammars.set(scopeName, createGrammar(\n        scopeName,\n        rawGrammar,\n        initialLanguage,\n        embeddedLanguages,\n        tokenTypes,\n        balancedBracketSelectors,\n        this,\n        this._onigLib\n      ));\n    }\n    return this._grammars.get(scopeName);\n  }\n};\n\n// src/index.ts\nvar Registry = class {\n  constructor(options) {\n    this._options = options;\n    this._syncRegistry = new SyncRegistry(\n      Theme.createFromRawTheme(options.theme, options.colorMap),\n      options.onigLib\n    );\n    this._ensureGrammarCache = /* @__PURE__ */ new Map();\n  }\n  dispose() {\n    this._syncRegistry.dispose();\n  }\n  /**\n   * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n   */\n  setTheme(theme, colorMap) {\n    this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap));\n  }\n  /**\n   * Returns a lookup array for color ids.\n   */\n  getColorMap() {\n    return this._syncRegistry.getColorMap();\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n    return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n    return this._loadGrammar(\n      initialScopeName,\n      initialLanguage,\n      configuration.embeddedLanguages,\n      configuration.tokenTypes,\n      new BalancedBracketSelectors(\n        configuration.balancedBracketSelectors || [],\n        configuration.unbalancedBracketSelectors || []\n      )\n    );\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   */\n  loadGrammar(initialScopeName) {\n    return this._loadGrammar(initialScopeName, 0, null, null, null);\n  }\n  _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n    while (dependencyProcessor.Q.length > 0) {\n      dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName));\n      dependencyProcessor.processQueue();\n    }\n    return this._grammarForScopeName(\n      initialScopeName,\n      initialLanguage,\n      embeddedLanguages,\n      tokenTypes,\n      balancedBracketSelectors\n    );\n  }\n  _loadSingleGrammar(scopeName) {\n    if (!this._ensureGrammarCache.has(scopeName)) {\n      this._doLoadSingleGrammar(scopeName);\n      this._ensureGrammarCache.set(scopeName, true);\n    }\n  }\n  _doLoadSingleGrammar(scopeName) {\n    const grammar = this._options.loadGrammar(scopeName);\n    if (grammar) {\n      const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : void 0;\n      this._syncRegistry.addGrammar(grammar, injections);\n    }\n  }\n  /**\n   * Adds a rawGrammar.\n   */\n  addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n    this._syncRegistry.addGrammar(rawGrammar, injections);\n    return this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages);\n  }\n  /**\n   * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n   */\n  _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n    return this._syncRegistry.grammarForScopeName(\n      scopeName,\n      initialLanguage,\n      embeddedLanguages,\n      tokenTypes,\n      balancedBracketSelectors\n    );\n  }\n};\nvar INITIAL = StateStackImpl.NULL;\nexport {\n  EncodedTokenMetadata,\n  FindOption,\n  FontStyle,\n  INITIAL,\n  Registry,\n  Theme,\n  disposeOnigString\n};\n","// node_modules/regex-utilities/src/index.js\nvar Context = Object.freeze({\n  DEFAULT: \"DEFAULT\",\n  CHAR_CLASS: \"CHAR_CLASS\"\n});\nfunction replaceUnescaped(expression, needle, replacement, context) {\n  const re = new RegExp(String.raw`${needle}|(?<$skip>\\[\\^?|\\\\?.)`, \"gsu\");\n  const negated = [false];\n  let numCharClassesOpen = 0;\n  let result = \"\";\n  for (const match of expression.matchAll(re)) {\n    const { 0: m, groups: { $skip } } = match;\n    if (!$skip && (!context || context === Context.DEFAULT === !numCharClassesOpen)) {\n      if (replacement instanceof Function) {\n        result += replacement(match, {\n          context: numCharClassesOpen ? Context.CHAR_CLASS : Context.DEFAULT,\n          negated: negated[negated.length - 1]\n        });\n      } else {\n        result += replacement;\n      }\n      continue;\n    }\n    if (m[0] === \"[\") {\n      numCharClassesOpen++;\n      negated.push(m[1] === \"^\");\n    } else if (m === \"]\" && numCharClassesOpen) {\n      numCharClassesOpen--;\n      negated.pop();\n    }\n    result += m;\n  }\n  return result;\n}\nfunction forEachUnescaped(expression, needle, callback, context) {\n  replaceUnescaped(expression, needle, callback, context);\n}\nfunction execUnescaped(expression, needle, pos = 0, context) {\n  if (!new RegExp(needle, \"su\").test(expression)) {\n    return null;\n  }\n  const re = new RegExp(`${needle}|(?<$skip>\\\\\\\\?.)`, \"gsu\");\n  re.lastIndex = pos;\n  let numCharClassesOpen = 0;\n  let match;\n  while (match = re.exec(expression)) {\n    const { 0: m, groups: { $skip } } = match;\n    if (!$skip && (!context || context === Context.DEFAULT === !numCharClassesOpen)) {\n      return match;\n    }\n    if (m === \"[\") {\n      numCharClassesOpen++;\n    } else if (m === \"]\" && numCharClassesOpen) {\n      numCharClassesOpen--;\n    }\n    if (re.lastIndex == match.index) {\n      re.lastIndex++;\n    }\n  }\n  return null;\n}\nfunction hasUnescaped(expression, needle, context) {\n  return !!execUnescaped(expression, needle, 0, context);\n}\nfunction getGroupContents(expression, contentsStartPos) {\n  const token5 = /\\\\?./gsu;\n  token5.lastIndex = contentsStartPos;\n  let contentsEndPos = expression.length;\n  let numCharClassesOpen = 0;\n  let numGroupsOpen = 1;\n  let match;\n  while (match = token5.exec(expression)) {\n    const [m] = match;\n    if (m === \"[\") {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n      if (m === \"(\") {\n        numGroupsOpen++;\n      } else if (m === \")\") {\n        numGroupsOpen--;\n        if (!numGroupsOpen) {\n          contentsEndPos = match.index;\n          break;\n        }\n      }\n    } else if (m === \"]\") {\n      numCharClassesOpen--;\n    }\n  }\n  return expression.slice(contentsStartPos, contentsEndPos);\n}\n\n// src/pattern.js\nvar Pattern = class {\n  #value;\n  /** @param {string} value */\n  constructor(value) {\n    this.#value = value;\n  }\n  /** @returns {string} */\n  toString() {\n    return String(this.#value);\n  }\n};\nfunction pattern(first, ...substitutions) {\n  if (Array.isArray(first?.raw)) {\n    return new Pattern(\n      // Intersperse raw template strings and substitutions\n      first.raw.flatMap((raw, i) => i < first.raw.length - 1 ? [raw, substitutions[i]] : raw).join(\"\")\n    );\n  } else if (!substitutions.length) {\n    return new Pattern(first ?? \"\");\n  }\n  throw new Error(`Unexpected arguments: ${JSON.stringify([first, ...substitutions])}`);\n}\n\n// src/utils.js\nvar RegexContext = {\n  DEFAULT: \"R_DEFAULT\",\n  CHAR_CLASS: \"R_CHAR_CLASS\",\n  GROUP_NAME: \"R_GROUP_NAME\",\n  ENCLOSED_TOKEN: \"R_ENCLOSED_TOKEN\",\n  INTERVAL_QUANTIFIER: \"R_INTERVAL_QUANTIFIER\",\n  INVALID_INCOMPLETE_TOKEN: \"R_INVALID_INCOMPLETE_TOKEN\"\n};\nvar CharClassContext = {\n  DEFAULT: \"CC_DEFAULT\",\n  RANGE: \"CC_RANGE\",\n  ENCLOSED_TOKEN: \"CC_ENCLOSED_TOKEN\",\n  Q_TOKEN: \"CC_Q_TOKEN\",\n  INVALID_INCOMPLETE_TOKEN: \"CC_INVALID_INCOMPLETE_TOKEN\"\n};\nvar patternModsSupported = (() => {\n  try {\n    new RegExp(\"(?i:)\");\n  } catch (e) {\n    return false;\n  }\n  return true;\n})();\nvar flagVSupported = (() => {\n  try {\n    new RegExp(\"\", \"v\");\n  } catch (e) {\n    return false;\n  }\n  return true;\n})();\nvar doublePunctuatorChars = \"&!#$%*+,.:;<=>?@^`~\";\nvar emulationGroupMarker = \"$E$\";\nvar namedCapturingDelim = String.raw`\\(\\?<(?![=!])(?<captureName>[^>]+)>`;\nvar capturingDelim = String.raw`\\((?!\\?)(?!(?<=\\(\\?\\()DEFINE\\))|${namedCapturingDelim}`;\nvar noncapturingDelim = String.raw`\\(\\?(?:[:=!>A-Za-z\\-]|<[=!]|\\(DEFINE\\))`;\nfunction escapeV(str, context) {\n  if (context === Context.CHAR_CLASS) {\n    return str.replace(new RegExp(String.raw`[()\\[\\]{}|\\\\/\\-${doublePunctuatorChars}]`, \"g\"), \"\\\\$&\");\n  }\n  return str.replace(/[()\\[\\]{}|\\\\^$*+?.]/g, \"\\\\$&\");\n}\nfunction sandboxLoneDoublePunctuatorChar(str) {\n  return str.replace(new RegExp(`^([${doublePunctuatorChars}])(?!\\\\1)`), (m, _, pos) => {\n    return `\\\\${m}${pos + 1 === str.length ? \"\" : m}`;\n  });\n}\nfunction sandboxLoneCharClassCaret(str) {\n  return str.replace(/^\\^/, \"\\\\^^\");\n}\nfunction sandboxUnsafeNulls(str, context) {\n  return replaceUnescaped(str, String.raw`\\\\0(?!\\d)`, \"\\\\x00\", context);\n}\nfunction getUnbalancedChar(expression, leftChar, rightChar) {\n  let numOpen = 0;\n  for (const [m] of expression.matchAll(new RegExp(`[${escapeV(leftChar + rightChar, Context.CHAR_CLASS)}]`, \"g\"))) {\n    numOpen += m === leftChar ? 1 : -1;\n    if (numOpen < 0) {\n      return rightChar;\n    }\n  }\n  if (numOpen > 0) {\n    return leftChar;\n  }\n  return \"\";\n}\nfunction getBreakoutChar(expression, regexContext, charClassContext) {\n  const escapesRemoved = expression.replace(/\\\\./gsu, \"\");\n  if (escapesRemoved.endsWith(\"\\\\\")) {\n    return \"\\\\\";\n  }\n  if (regexContext === RegexContext.DEFAULT) {\n    return getUnbalancedChar(escapesRemoved, \"(\", \")\");\n  } else if (regexContext === RegexContext.CHAR_CLASS && !(charClassContext === CharClassContext.ENCLOSED_TOKEN || charClassContext === CharClassContext.Q_TOKEN)) {\n    return getUnbalancedChar(escapesRemoved, \"[\", \"]\");\n  } else if (regexContext === RegexContext.ENCLOSED_TOKEN || regexContext === RegexContext.INTERVAL_QUANTIFIER || charClassContext === CharClassContext.ENCLOSED_TOKEN || charClassContext === CharClassContext.Q_TOKEN) {\n    if (escapesRemoved.includes(\"}\")) {\n      return \"}\";\n    }\n  } else if (regexContext === RegexContext.GROUP_NAME) {\n    if (escapesRemoved.includes(\">\")) {\n      return \">\";\n    }\n  }\n  return \"\";\n}\nvar contextToken = new RegExp(String.raw`\n(?<groupN>\\(\\?<(?![=!])|\\\\[gk]<)\n| (?<enclosedT>\\\\[pPu]\\{)\n| (?<qT>\\\\q\\{)\n| (?<intervalQ>\\{)\n| (?<incompleteT>\\\\(?: $\n  | c(?![A-Za-z])\n  | u(?![A-Fa-f\\d]{4})[A-Fa-f\\d]{0,3}\n  | x(?![A-Fa-f\\d]{2})[A-Fa-f\\d]?\n  )\n)\n| --\n| \\\\?.\n`.replace(/\\s+/g, \"\"), \"gsu\");\nfunction getEndContextForIncompleteExpression(incompleteExpression, {\n  regexContext = RegexContext.DEFAULT,\n  charClassContext = CharClassContext.DEFAULT,\n  charClassDepth = 0,\n  lastPos = 0\n} = {}) {\n  contextToken.lastIndex = lastPos;\n  let match;\n  while (match = contextToken.exec(incompleteExpression)) {\n    const { 0: m, groups: { groupN, enclosedT, qT, intervalQ, incompleteT } } = match;\n    if (m === \"[\") {\n      charClassDepth++;\n      regexContext = RegexContext.CHAR_CLASS;\n      charClassContext = CharClassContext.DEFAULT;\n    } else if (m === \"]\" && regexContext === RegexContext.CHAR_CLASS) {\n      if (charClassDepth) {\n        charClassDepth--;\n      }\n      if (!charClassDepth) {\n        regexContext = RegexContext.DEFAULT;\n      }\n      charClassContext = CharClassContext.DEFAULT;\n    } else if (regexContext === RegexContext.CHAR_CLASS) {\n      if (incompleteT) {\n        charClassContext = CharClassContext.INVALID_INCOMPLETE_TOKEN;\n      } else if (m === \"-\") {\n        charClassContext = CharClassContext.RANGE;\n      } else if (enclosedT) {\n        charClassContext = CharClassContext.ENCLOSED_TOKEN;\n      } else if (qT) {\n        charClassContext = CharClassContext.Q_TOKEN;\n      } else if (m === \"}\" && (charClassContext === CharClassContext.ENCLOSED_TOKEN || charClassContext === CharClassContext.Q_TOKEN) || // Don't continue in these contexts since we've advanced another token\n      charClassContext === CharClassContext.INVALID_INCOMPLETE_TOKEN || charClassContext === CharClassContext.RANGE) {\n        charClassContext = CharClassContext.DEFAULT;\n      }\n    } else {\n      if (incompleteT) {\n        regexContext = RegexContext.INVALID_INCOMPLETE_TOKEN;\n      } else if (groupN) {\n        regexContext = RegexContext.GROUP_NAME;\n      } else if (enclosedT) {\n        regexContext = RegexContext.ENCLOSED_TOKEN;\n      } else if (intervalQ) {\n        regexContext = RegexContext.INTERVAL_QUANTIFIER;\n      } else if (m === \">\" && regexContext === RegexContext.GROUP_NAME || m === \"}\" && (regexContext === RegexContext.ENCLOSED_TOKEN || regexContext === RegexContext.INTERVAL_QUANTIFIER) || // Don't continue in this context since we've advanced another token\n      regexContext === RegexContext.INVALID_INCOMPLETE_TOKEN) {\n        regexContext = RegexContext.DEFAULT;\n      }\n    }\n  }\n  return {\n    regexContext,\n    charClassContext,\n    charClassDepth,\n    lastPos: incompleteExpression.length\n  };\n}\nfunction countCaptures(expression) {\n  let num = 0;\n  forEachUnescaped(expression, capturingDelim, () => num++, Context.DEFAULT);\n  return num;\n}\nfunction adjustNumberedBackrefs(expression, precedingCaptures) {\n  return replaceUnescaped(\n    expression,\n    String.raw`\\\\(?<num>[1-9]\\d*)`,\n    ({ groups: { num } }) => `\\\\${+num + precedingCaptures}`,\n    Context.DEFAULT\n  );\n}\nfunction spliceStr(str, pos, oldValue, newValue) {\n  return str.slice(0, pos) + newValue + str.slice(pos + oldValue.length);\n}\nvar stringPropertyNames = [\n  \"Basic_Emoji\",\n  \"Emoji_Keycap_Sequence\",\n  \"RGI_Emoji_Modifier_Sequence\",\n  \"RGI_Emoji_Flag_Sequence\",\n  \"RGI_Emoji_Tag_Sequence\",\n  \"RGI_Emoji_ZWJ_Sequence\",\n  \"RGI_Emoji\"\n].join(\"|\");\nvar charClassUnionToken = new RegExp(String.raw`\n\\\\(?: c[A-Za-z]\n  | p\\{(?<pStrProp>${stringPropertyNames})\\}\n  | [pP]\\{[^\\}]+\\}\n  | (?<qStrProp>q)\n  | u(?:[A-Fa-f\\d]{4}|\\{[A-Fa-f\\d]+\\})\n  | x[A-Fa-f\\d]{2}\n  | .\n)\n| --\n| &&\n| .\n`.replace(/\\s+/g, \"\"), \"gsu\");\nfunction containsCharClassUnion(charClassPattern) {\n  let hasFirst = false;\n  let lastM;\n  for (const { 0: m, groups } of charClassPattern.matchAll(charClassUnionToken)) {\n    if (groups.pStrProp || groups.qStrProp) {\n      return true;\n    }\n    if (m === \"[\" && hasFirst) {\n      return true;\n    }\n    if ([\"-\", \"--\", \"&&\"].includes(m)) {\n      hasFirst = false;\n    } else if (m !== \"[\" && m !== \"]\") {\n      if (hasFirst || lastM === \"]\") {\n        return true;\n      }\n      hasFirst = true;\n    }\n    lastM = m;\n  }\n  return false;\n}\nfunction preprocess(template, substitutions, preprocessor, options) {\n  let newTemplate = { raw: [] };\n  let newSubstitutions = [];\n  let runningContext;\n  template.raw.forEach((raw, i) => {\n    const result = preprocessor(raw, { ...runningContext, lastPos: 0 }, options);\n    newTemplate.raw.push(result.transformed);\n    runningContext = result.runningContext;\n    if (i < template.raw.length - 1) {\n      const substitution = substitutions[i];\n      if (substitution instanceof Pattern) {\n        const result2 = preprocessor(substitution, { ...runningContext, lastPos: 0 }, options);\n        newSubstitutions.push(pattern(result2.transformed));\n        runningContext = result2.runningContext;\n      } else {\n        newSubstitutions.push(substitution);\n      }\n    }\n  });\n  return {\n    template: newTemplate,\n    substitutions: newSubstitutions\n  };\n}\n\n// src/flag-n.js\nvar token = new RegExp(String.raw`\n${noncapturingDelim}\n| \\(\\?<\n| (?<backrefNum>\\\\[1-9]\\d*)\n| \\\\?.\n`.replace(/\\s+/g, \"\"), \"gsu\");\nfunction flagNPreprocessor(value, runningContext) {\n  value = String(value);\n  let expression = \"\";\n  let transformed = \"\";\n  for (const { 0: m, groups: { backrefNum } } of value.matchAll(token)) {\n    expression += m;\n    runningContext = getEndContextForIncompleteExpression(expression, runningContext);\n    const { regexContext } = runningContext;\n    if (regexContext === RegexContext.DEFAULT) {\n      if (m === \"(\") {\n        transformed += \"(?:\";\n      } else if (backrefNum) {\n        throw new Error(`Invalid decimal escape \"${m}\" with implicit flag n; replace with named backreference`);\n      } else {\n        transformed += m;\n      }\n    } else {\n      transformed += m;\n    }\n  }\n  return {\n    transformed,\n    runningContext\n  };\n}\n\n// src/flag-x.js\nvar ws = /^\\s$/;\nvar escapedWsOrHash = /^\\\\[\\s#]$/;\nvar charClassWs = /^[ \\t]$/;\nvar escapedCharClassWs = /^\\\\[ \\t]$/;\nvar token2 = new RegExp(String.raw`\n\\\\(?: [gk]<\n  | [pPu]\\{\n  | c[A-Za-z]\n  | u[A-Fa-f\\d]{4}\n  | x[A-Fa-f\\d]{2}\n  | 0\\d+\n)\n| \\[\\^\n| ${noncapturingDelim}\n| \\(\\?<\n| (?<dp>[${doublePunctuatorChars}])\\k<dp>\n| --\n| \\\\?.\n`.replace(/\\s+/g, \"\"), \"gsu\");\nfunction flagXPreprocessor(value, runningContext, options) {\n  value = String(value);\n  let ignoringWs = false;\n  let ignoringCharClassWs = false;\n  let ignoringComment = false;\n  let expression = \"\";\n  let transformed = \"\";\n  let lastSignificantToken = \"\";\n  let lastSignificantCharClassContext = \"\";\n  let separatorNeeded = false;\n  const update = (str, { prefix = true, postfix = false } = {}) => {\n    str = (separatorNeeded && prefix ? \"(?:)\" : \"\") + str + (postfix ? \"(?:)\" : \"\");\n    separatorNeeded = false;\n    return str;\n  };\n  for (const { 0: m, index } of value.matchAll(token2)) {\n    if (ignoringComment) {\n      if (m === \"\\n\") {\n        ignoringComment = false;\n        separatorNeeded = true;\n      }\n      continue;\n    }\n    if (ignoringWs) {\n      if (ws.test(m)) {\n        continue;\n      }\n      ignoringWs = false;\n      separatorNeeded = true;\n    } else if (ignoringCharClassWs) {\n      if (charClassWs.test(m)) {\n        continue;\n      }\n      ignoringCharClassWs = false;\n    }\n    expression += m;\n    runningContext = getEndContextForIncompleteExpression(expression, runningContext);\n    const { regexContext, charClassContext } = runningContext;\n    if (\n      // `--` is matched in one step, so boundary chars aren't `-` unless separated by whitespace\n      m === \"-\" && regexContext === RegexContext.CHAR_CLASS && lastSignificantCharClassContext === CharClassContext.RANGE && (options.flags.includes(\"v\") || options.unicodeSetsPlugin)\n    ) {\n      throw new Error(\"Invalid unescaped hyphen as the end value for a range\");\n    }\n    if (\n      // `??` is matched in one step by the double punctuator token\n      regexContext === RegexContext.DEFAULT && /^(?:[?*+]|\\?\\?)$/.test(m) || regexContext === RegexContext.INTERVAL_QUANTIFIER && m === \"{\"\n    ) {\n      transformed += update(m, { prefix: false, postfix: lastSignificantToken === \"(\" && m === \"?\" });\n    } else if (regexContext === RegexContext.DEFAULT) {\n      if (ws.test(m)) {\n        ignoringWs = true;\n      } else if (m.startsWith(\"#\")) {\n        ignoringComment = true;\n      } else if (escapedWsOrHash.test(m)) {\n        transformed += update(m[1], { prefix: false });\n      } else {\n        transformed += update(m);\n      }\n    } else if (regexContext === RegexContext.CHAR_CLASS && m !== \"[\" && m !== \"[^\") {\n      if (charClassWs.test(m) && (charClassContext === CharClassContext.DEFAULT || charClassContext === CharClassContext.RANGE || charClassContext === CharClassContext.Q_TOKEN)) {\n        ignoringCharClassWs = true;\n      } else if (charClassContext === CharClassContext.INVALID_INCOMPLETE_TOKEN) {\n        throw new Error(`Invalid incomplete token in character class: \"${m}\"`);\n      } else if (escapedCharClassWs.test(m) && (charClassContext === CharClassContext.DEFAULT || charClassContext === CharClassContext.Q_TOKEN)) {\n        transformed += update(m[1], { prefix: false });\n      } else if (charClassContext === CharClassContext.DEFAULT) {\n        const nextChar = value[index + 1] ?? \"\";\n        let updated = sandboxUnsafeNulls(m);\n        if (charClassWs.test(nextChar) || m === \"^\") {\n          updated = sandboxLoneDoublePunctuatorChar(updated);\n        }\n        transformed += update(updated);\n      } else {\n        transformed += update(m);\n      }\n    } else {\n      transformed += update(m);\n    }\n    if (!(ignoringWs || ignoringCharClassWs || ignoringComment)) {\n      lastSignificantToken = m;\n      lastSignificantCharClassContext = charClassContext;\n    }\n  }\n  return {\n    transformed,\n    runningContext\n  };\n}\nfunction cleanPlugin(expression) {\n  const sep = String.raw`\\(\\?:\\)`;\n  expression = replaceUnescaped(expression, `(?:${sep}){2,}`, \"(?:)\", Context.DEFAULT);\n  const marker = emulationGroupMarker.replace(/\\$/g, \"\\\\$\");\n  expression = replaceUnescaped(\n    expression,\n    String.raw`(?:${sep}(?=[)|.[$\\\\]|\\((?!DEFINE)|$)|(?<=[()|.\\]^>]|\\\\[bBdDfnrsStvwW]|\\(\\?(?:[:=!]|<[=!])|^)${sep}(?![?*+{]))(?!${marker})`,\n    \"\",\n    Context.DEFAULT\n  );\n  return expression;\n}\n\n// src/atomic.js\nvar atomicPluginToken = new RegExp(String.raw`(?<noncapturingStart>${noncapturingDelim})|(?<capturingStart>\\((?:\\?<[^>]+>)?)|\\\\?.`, \"gsu\");\nfunction atomicPlugin(expression, data) {\n  if (!/\\(\\?>/.test(expression)) {\n    return expression;\n  }\n  const aGDelim = \"(?>\";\n  const emulatedAGDelim = `(?:(?=(${data.useEmulationGroups ? emulationGroupMarker : \"\"}`;\n  const captureNumMap = [0];\n  let numCapturesBeforeAG = 0;\n  let numAGs = 0;\n  let aGPos = NaN;\n  let hasProcessedAG;\n  do {\n    hasProcessedAG = false;\n    let numCharClassesOpen = 0;\n    let numGroupsOpenInAG = 0;\n    let inAG = false;\n    let match;\n    atomicPluginToken.lastIndex = Number.isNaN(aGPos) ? 0 : aGPos + emulatedAGDelim.length;\n    while (match = atomicPluginToken.exec(expression)) {\n      const { 0: m, index, groups: { capturingStart, noncapturingStart } } = match;\n      if (m === \"[\") {\n        numCharClassesOpen++;\n      } else if (!numCharClassesOpen) {\n        if (m === aGDelim && !inAG) {\n          aGPos = index;\n          inAG = true;\n        } else if (inAG && noncapturingStart) {\n          numGroupsOpenInAG++;\n        } else if (capturingStart) {\n          if (inAG) {\n            numGroupsOpenInAG++;\n          } else {\n            numCapturesBeforeAG++;\n            captureNumMap.push(numCapturesBeforeAG + numAGs);\n          }\n        } else if (m === \")\" && inAG) {\n          if (!numGroupsOpenInAG) {\n            numAGs++;\n            expression = `${expression.slice(0, aGPos)}${emulatedAGDelim}${expression.slice(aGPos + aGDelim.length, index)}))<$$${numAGs + numCapturesBeforeAG}>)${expression.slice(index + 1)}`;\n            hasProcessedAG = true;\n            break;\n          }\n          numGroupsOpenInAG--;\n        }\n      } else if (m === \"]\") {\n        numCharClassesOpen--;\n      }\n    }\n  } while (hasProcessedAG);\n  expression = replaceUnescaped(\n    expression,\n    String.raw`\\\\(?<backrefNum>[1-9]\\d*)|<\\$\\$(?<wrappedBackrefNum>\\d+)>`,\n    ({ 0: m, groups: { backrefNum, wrappedBackrefNum } }) => {\n      if (backrefNum) {\n        const bNum = +backrefNum;\n        if (bNum > captureNumMap.length - 1) {\n          throw new Error(`Backref \"${m}\" greater than number of captures`);\n        }\n        return `\\\\${captureNumMap[bNum]}`;\n      }\n      return `\\\\${wrappedBackrefNum}`;\n    },\n    Context.DEFAULT\n  );\n  return expression;\n}\nvar baseQuantifier = String.raw`(?:[?*+]|\\{\\d+(?:,\\d*)?\\})`;\nvar possessivePluginToken = new RegExp(String.raw`\n\\\\(?: \\d+\n  | c[A-Za-z]\n  | [gk]<[^>]+>\n  | [pPu]\\{[^\\}]+\\}\n  | u[A-Fa-f\\d]{4}\n  | x[A-Fa-f\\d]{2}\n  )\n| \\((?: \\? (?: [:=!>]\n  | <(?:[=!]|[^>]+>)\n  | [A-Za-z\\-]+:\n  | \\(DEFINE\\)\n  ))?\n| (?<qBase>${baseQuantifier})(?<qMod>[?+]?)(?<invalidQ>[?*+\\{]?)\n| \\\\?.\n`.replace(/\\s+/g, \"\"), \"gsu\");\nfunction possessivePlugin(expression) {\n  if (!new RegExp(`${baseQuantifier}\\\\+`).test(expression)) {\n    return expression;\n  }\n  const openGroupIndices = [];\n  let lastGroupIndex = null;\n  let lastCharClassIndex = null;\n  let lastToken = \"\";\n  let numCharClassesOpen = 0;\n  let match;\n  possessivePluginToken.lastIndex = 0;\n  while (match = possessivePluginToken.exec(expression)) {\n    const { 0: m, index, groups: { qBase, qMod, invalidQ } } = match;\n    if (m === \"[\") {\n      if (!numCharClassesOpen) {\n        lastCharClassIndex = index;\n      }\n      numCharClassesOpen++;\n    } else if (m === \"]\") {\n      if (numCharClassesOpen) {\n        numCharClassesOpen--;\n      } else {\n        lastCharClassIndex = null;\n      }\n    } else if (!numCharClassesOpen) {\n      if (qMod === \"+\" && lastToken && !lastToken.startsWith(\"(\")) {\n        if (invalidQ) {\n          throw new Error(`Invalid quantifier \"${m}\"`);\n        }\n        let charsAdded = -1;\n        if (/^\\{\\d+\\}$/.test(qBase)) {\n          expression = spliceStr(expression, index + qBase.length, qMod, \"\");\n        } else {\n          if (lastToken === \")\" || lastToken === \"]\") {\n            const nodeIndex = lastToken === \")\" ? lastGroupIndex : lastCharClassIndex;\n            if (nodeIndex === null) {\n              throw new Error(`Invalid unmatched \"${lastToken}\"`);\n            }\n            expression = `${expression.slice(0, nodeIndex)}(?>${expression.slice(nodeIndex, index)}${qBase})${expression.slice(index + m.length)}`;\n          } else {\n            expression = `${expression.slice(0, index - lastToken.length)}(?>${lastToken}${qBase})${expression.slice(index + m.length)}`;\n          }\n          charsAdded += 4;\n        }\n        possessivePluginToken.lastIndex += charsAdded;\n      } else if (m[0] === \"(\") {\n        openGroupIndices.push(index);\n      } else if (m === \")\") {\n        lastGroupIndex = openGroupIndices.length ? openGroupIndices.pop() : null;\n      }\n    }\n    lastToken = m;\n  }\n  return expression;\n}\n\n// src/subroutines.js\nfunction subroutinesPlugin(expression, data) {\n  const namedGroups = getNamedCapturingGroups(expression, { includeContents: true });\n  const transformed = processSubroutines(expression, namedGroups, data.useEmulationGroups);\n  return processDefinitionGroup(transformed, namedGroups);\n}\nvar subroutinePattern = String.raw`\\\\g<(?<subroutineName>[^>&]+)>`;\nvar token3 = new RegExp(String.raw`\n${subroutinePattern}\n| (?<capturingStart>${capturingDelim})\n| \\\\(?<backrefNum>[1-9]\\d*)\n| \\\\k<(?<backrefName>[^>]+)>\n| \\\\?.\n`.replace(/\\s+/g, \"\"), \"gsu\");\nfunction processSubroutines(expression, namedGroups, useEmulationGroups) {\n  if (!/\\\\g</.test(expression)) {\n    return expression;\n  }\n  const hasBackrefs = hasUnescaped(expression, \"\\\\\\\\(?:[1-9]|k<[^>]+>)\", Context.DEFAULT);\n  const subroutineWrapper = hasBackrefs ? `(${useEmulationGroups ? emulationGroupMarker : \"\"}` : \"(?:\";\n  const openSubroutines = /* @__PURE__ */ new Map();\n  const openSubroutinesStack = [];\n  const captureNumMap = [0];\n  let numCapturesPassedOutsideSubroutines = 0;\n  let numCapturesPassedInsideSubroutines = 0;\n  let numCapturesPassedInsideThisSubroutine = 0;\n  let numSubroutineCapturesTrackedInRemap = 0;\n  let numCharClassesOpen = 0;\n  let result = expression;\n  let match;\n  token3.lastIndex = 0;\n  while (match = token3.exec(result)) {\n    const { 0: m, index, groups: { subroutineName, capturingStart, backrefNum, backrefName } } = match;\n    if (m === \"[\") {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n      if (subroutineName) {\n        if (!namedGroups.has(subroutineName)) {\n          throw new Error(`Invalid named capture referenced by subroutine ${m}`);\n        }\n        if (openSubroutines.has(subroutineName)) {\n          throw new Error(`Subroutine ${m} followed a recursive reference`);\n        }\n        const contents = namedGroups.get(subroutineName).contents;\n        const subroutineValue = `${subroutineWrapper}${contents})`;\n        if (hasBackrefs) {\n          numCapturesPassedInsideThisSubroutine = 0;\n          numCapturesPassedInsideSubroutines++;\n        }\n        openSubroutines.set(subroutineName, {\n          // Incrementally decremented to track when we've left the group\n          unclosedGroupCount: countOpenParens(subroutineValue)\n        });\n        openSubroutinesStack.push(subroutineName);\n        result = spliceStr(result, index, m, subroutineValue);\n        token3.lastIndex -= m.length - subroutineWrapper.length;\n      } else if (capturingStart) {\n        if (openSubroutines.size) {\n          if (hasBackrefs) {\n            numCapturesPassedInsideThisSubroutine++;\n            numCapturesPassedInsideSubroutines++;\n          }\n          if (m !== \"(\") {\n            result = spliceStr(result, index, m, subroutineWrapper);\n            token3.lastIndex -= m.length - subroutineWrapper.length;\n          }\n        } else if (hasBackrefs) {\n          captureNumMap.push(\n            lastOf(captureNumMap) + 1 + numCapturesPassedInsideSubroutines - numSubroutineCapturesTrackedInRemap\n          );\n          numSubroutineCapturesTrackedInRemap = numCapturesPassedInsideSubroutines;\n          numCapturesPassedOutsideSubroutines++;\n        }\n      } else if ((backrefNum || backrefName) && openSubroutines.size) {\n        const num = backrefNum ? +backrefNum : namedGroups.get(backrefName)?.groupNum;\n        let isGroupFromThisSubroutine = false;\n        for (const s of openSubroutinesStack) {\n          const group = namedGroups.get(s);\n          if (num >= group.groupNum && num <= group.groupNum + group.numCaptures) {\n            isGroupFromThisSubroutine = true;\n            break;\n          }\n        }\n        if (isGroupFromThisSubroutine) {\n          const group = namedGroups.get(lastOf(openSubroutinesStack));\n          const subroutineNum = numCapturesPassedOutsideSubroutines + numCapturesPassedInsideSubroutines - numCapturesPassedInsideThisSubroutine;\n          const metadata = `\\\\k<$$b${num}s${subroutineNum}r${group.groupNum}c${group.numCaptures}>`;\n          result = spliceStr(result, index, m, metadata);\n          token3.lastIndex += metadata.length - m.length;\n        }\n      } else if (m === \")\") {\n        if (openSubroutines.size) {\n          const subroutine = openSubroutines.get(lastOf(openSubroutinesStack));\n          subroutine.unclosedGroupCount--;\n          if (!subroutine.unclosedGroupCount) {\n            openSubroutines.delete(openSubroutinesStack.pop());\n          }\n        }\n      }\n    } else if (m === \"]\") {\n      numCharClassesOpen--;\n    }\n  }\n  if (hasBackrefs) {\n    result = replaceUnescaped(\n      result,\n      String.raw`\\\\(?:(?<bNum>[1-9]\\d*)|k<\\$\\$b(?<bNumSub>\\d+)s(?<subNum>\\d+)r(?<refNum>\\d+)c(?<refCaps>\\d+)>)`,\n      ({ 0: m, groups: { bNum, bNumSub, subNum, refNum, refCaps } }) => {\n        if (bNum) {\n          const backrefNum = +bNum;\n          if (backrefNum > captureNumMap.length - 1) {\n            throw new Error(`Backref \"${m}\" greater than number of captures`);\n          }\n          return `\\\\${captureNumMap[backrefNum]}`;\n        }\n        const backrefNumInSubroutine = +bNumSub;\n        const subroutineGroupNum = +subNum;\n        const refGroupNum = +refNum;\n        const numCapturesInRef = +refCaps;\n        if (backrefNumInSubroutine < refGroupNum || backrefNumInSubroutine > refGroupNum + numCapturesInRef) {\n          return `\\\\${captureNumMap[backrefNumInSubroutine]}`;\n        }\n        return `\\\\${subroutineGroupNum - refGroupNum + backrefNumInSubroutine}`;\n      },\n      Context.DEFAULT\n    );\n  }\n  return result;\n}\nvar defineGroupToken = new RegExp(String.raw`${namedCapturingDelim}|\\(\\?:\\)|(?<invalid>\\\\?.)`, \"gsu\");\nfunction processDefinitionGroup(expression, namedGroups) {\n  const defineMatch = execUnescaped(expression, String.raw`\\(\\?\\(DEFINE\\)`, 0, Context.DEFAULT);\n  if (!defineMatch) {\n    return expression;\n  }\n  const defineGroup = getGroup(expression, defineMatch);\n  if (defineGroup.afterPos < expression.length) {\n    throw new Error(\"DEFINE group allowed only at the end of a regex\");\n  } else if (defineGroup.afterPos > expression.length) {\n    throw new Error(\"DEFINE group is unclosed\");\n  }\n  let match;\n  defineGroupToken.lastIndex = 0;\n  while (match = defineGroupToken.exec(defineGroup.contents)) {\n    const { captureName, invalid } = match.groups;\n    if (captureName) {\n      const group = getGroup(defineGroup.contents, match);\n      let duplicateName;\n      if (!namedGroups.get(captureName).isUnique) {\n        duplicateName = captureName;\n      } else {\n        const nestedNamedGroups = getNamedCapturingGroups(group.contents);\n        for (const name of nestedNamedGroups.keys()) {\n          if (!namedGroups.get(name).isUnique) {\n            duplicateName = name;\n            break;\n          }\n        }\n      }\n      if (duplicateName) {\n        throw new Error(`Duplicate group name \"${duplicateName}\" within DEFINE`);\n      }\n      defineGroupToken.lastIndex = group.afterPos;\n    } else if (invalid) {\n      throw new Error(`DEFINE group includes unsupported syntax at top level`);\n    }\n  }\n  return expression.slice(0, defineMatch.index);\n}\nfunction countOpenParens(expression) {\n  let num = 0;\n  forEachUnescaped(expression, \"\\\\(\", () => num++, Context.DEFAULT);\n  return num;\n}\nfunction getCaptureNum(expression, groupName) {\n  let num = 0;\n  let pos = 0;\n  let match;\n  while (match = execUnescaped(expression, capturingDelim, pos, Context.DEFAULT)) {\n    const { 0: m, index, groups: { captureName } } = match;\n    num++;\n    if (captureName === groupName) {\n      break;\n    }\n    pos = index + m.length;\n  }\n  return num;\n}\nfunction getGroup(expression, delimMatch) {\n  const contentsStart = delimMatch.index + delimMatch[0].length;\n  const contents = getGroupContents(expression, contentsStart);\n  const afterPos = contentsStart + contents.length + 1;\n  return {\n    contents,\n    afterPos\n  };\n}\nfunction getNamedCapturingGroups(expression, { includeContents } = {}) {\n  const namedGroups = /* @__PURE__ */ new Map();\n  forEachUnescaped(\n    expression,\n    namedCapturingDelim,\n    ({ 0: m, index, groups: { captureName } }) => {\n      if (namedGroups.has(captureName)) {\n        namedGroups.get(captureName).isUnique = false;\n      } else {\n        const group = { isUnique: true };\n        if (includeContents) {\n          const contents = getGroupContents(expression, index + m.length);\n          Object.assign(group, {\n            contents,\n            groupNum: getCaptureNum(expression, captureName),\n            numCaptures: countCaptures(contents)\n          });\n        }\n        namedGroups.set(captureName, group);\n      }\n    },\n    Context.DEFAULT\n  );\n  return namedGroups;\n}\nfunction lastOf(arr) {\n  return arr[arr.length - 1];\n}\n\n// src/backcompat.js\nvar incompatibleEscapeChars = \"&!#%,:;<=>@`~\";\nvar token4 = new RegExp(String.raw`\n\\[\\^?-?\n| --?\\]\n| (?<dp>[${doublePunctuatorChars}])\\k<dp>\n| --\n| \\\\(?<vOnlyEscape>[${incompatibleEscapeChars}])\n| \\\\[pPu]\\{[^}]+\\}\n| \\\\?.\n`.replace(/\\s+/g, \"\"), \"gsu\");\nfunction backcompatPlugin(expression) {\n  const unescapedLiteralHyphenMsg = 'Invalid unescaped \"-\" in character class';\n  let inCharClass = false;\n  let result = \"\";\n  for (const { 0: m, groups: { dp, vOnlyEscape } } of expression.matchAll(token4)) {\n    if (m[0] === \"[\") {\n      if (inCharClass) {\n        throw new Error(\"Invalid nested character class when flag v not supported; possibly from interpolation\");\n      }\n      if (m.endsWith(\"-\")) {\n        throw new Error(unescapedLiteralHyphenMsg);\n      }\n      inCharClass = true;\n    } else if (m.endsWith(\"]\")) {\n      if (m[0] === \"-\") {\n        throw new Error(unescapedLiteralHyphenMsg);\n      }\n      inCharClass = false;\n    } else if (inCharClass) {\n      if (m === \"&&\" || m === \"--\") {\n        throw new Error(`Invalid set operator \"${m}\" when flag v not supported`);\n      } else if (dp) {\n        throw new Error(`Invalid double punctuator \"${m}\", reserved by flag v`);\n      } else if (\"(){}/|\".includes(m)) {\n        throw new Error(`Invalid unescaped \"${m}\" in character class`);\n      } else if (vOnlyEscape) {\n        result += vOnlyEscape;\n        continue;\n      }\n    }\n    result += m;\n  }\n  return result;\n}\n\n// src/regex.js\nvar regex = (first, ...substitutions) => {\n  if (Array.isArray(first?.raw)) {\n    return regexFromTemplate({}, first, ...substitutions);\n  } else if ((typeof first === \"string\" || first === void 0) && !substitutions.length) {\n    return regexFromTemplate.bind(null, { flags: first ?? \"\" });\n  } else if ({}.toString.call(first) === \"[object Object]\" && !substitutions.length) {\n    return regexFromTemplate.bind(null, first);\n  }\n  throw new Error(`Unexpected arguments: ${JSON.stringify([first, ...substitutions])}`);\n};\nvar regexFromTemplate = (options, template, ...substitutions) => {\n  const opts = getOptions(options);\n  const prepped = handlePreprocessors(template, substitutions, opts);\n  let precedingCaptures = 0;\n  let expression = \"\";\n  let runningContext;\n  prepped.template.raw.forEach((raw, i) => {\n    const wrapEscapedStr = !!(prepped.template.raw[i] || prepped.template.raw[i + 1]);\n    precedingCaptures += countCaptures(raw);\n    expression += sandboxUnsafeNulls(raw, Context.CHAR_CLASS);\n    runningContext = getEndContextForIncompleteExpression(expression, runningContext);\n    const { regexContext, charClassContext } = runningContext;\n    if (i < prepped.template.raw.length - 1) {\n      const substitution = prepped.substitutions[i];\n      expression += interpolate(substitution, opts.flags, regexContext, charClassContext, wrapEscapedStr, precedingCaptures);\n      if (substitution instanceof RegExp) {\n        precedingCaptures += countCaptures(substitution.source);\n      } else if (substitution instanceof Pattern) {\n        precedingCaptures += countCaptures(String(substitution));\n      }\n    }\n  });\n  expression = handlePlugins(expression, opts);\n  if (opts.subclass) {\n    const unmarked = unmarkEmulationGroups(expression);\n    return new WrappedRegExp(unmarked.expression, opts.flags, { captureMap: unmarked.captureMap });\n  }\n  return new RegExp(expression, opts.flags);\n};\nfunction rewrite(expression = \"\", options = {}) {\n  const opts = getOptions(options);\n  if (opts.subclass) {\n    throw new Error(\"Cannot use option subclass\");\n  }\n  return {\n    expression: handlePlugins(\n      handlePreprocessors({ raw: [expression] }, [], opts).template.raw[0],\n      opts\n    ),\n    flags: opts.flags\n  };\n}\nfunction getOptions(options) {\n  const opts = {\n    flags: \"\",\n    subclass: false,\n    plugins: [],\n    unicodeSetsPlugin: backcompatPlugin,\n    disable: {\n      /* n, v, x, atomic, subroutines */\n    },\n    force: {\n      /* v */\n    },\n    ...options\n  };\n  if (/[nuvx]/.test(opts.flags)) {\n    throw new Error(\"Implicit flags v/u/x/n cannot be explicitly added\");\n  }\n  const useFlagV = opts.force.v || (opts.disable.v ? false : flagVSupported);\n  opts.flags += useFlagV ? \"v\" : \"u\";\n  if (useFlagV) {\n    opts.unicodeSetsPlugin = null;\n  }\n  return opts;\n}\nfunction handlePreprocessors(template, substitutions, options) {\n  const preprocessors = [];\n  if (!options.disable.x) {\n    preprocessors.push(flagXPreprocessor);\n  }\n  if (!options.disable.n) {\n    preprocessors.push(flagNPreprocessor);\n  }\n  for (const pp of preprocessors) {\n    ({ template, substitutions } = preprocess(template, substitutions, pp, options));\n  }\n  return {\n    template,\n    substitutions\n  };\n}\nfunction handlePlugins(expression, options) {\n  const { flags, plugins, unicodeSetsPlugin, disable, subclass } = options;\n  [\n    ...plugins,\n    // Run first, so provided plugins can output extended syntax\n    ...disable.subroutines ? [] : [subroutinesPlugin],\n    ...disable.atomic ? [] : [possessivePlugin, atomicPlugin],\n    ...disable.x ? [] : [cleanPlugin],\n    // Run last, so it doesn't have to worry about parsing extended syntax\n    ...!unicodeSetsPlugin ? [] : [unicodeSetsPlugin]\n  ].forEach((p) => expression = p(expression, { flags, useEmulationGroups: subclass }));\n  return expression;\n}\nvar WrappedRegExp = class _WrappedRegExp extends RegExp {\n  #captureMap;\n  /**\n  @param {string | WrappedRegExp} expression\n  @param {string} [flags]\n  @param {{captureMap: Array<boolean>;}} [data]\n  */\n  constructor(expression, flags, data) {\n    super(expression, flags);\n    if (data) {\n      this.#captureMap = data.captureMap;\n    } else if (expression instanceof _WrappedRegExp) {\n      this.#captureMap = expression.#captureMap;\n    }\n  }\n  /**\n  Called internally by all String/RegExp methods that use regexes.\n  @override\n  @param {string} str\n  @returns {RegExpExecArray | null}\n  */\n  exec(str) {\n    const match = RegExp.prototype.exec.call(this, str);\n    if (!match || !this.#captureMap) {\n      return match;\n    }\n    const copy = [...match];\n    match.length = 1;\n    for (let i = 1; i < copy.length; i++) {\n      if (this.#captureMap[i]) {\n        match.push(copy[i]);\n      }\n    }\n    return match;\n  }\n};\nfunction interpolate(value, flags, regexContext, charClassContext, wrapEscapedStr, precedingCaptures) {\n  if (value instanceof RegExp && regexContext !== RegexContext.DEFAULT) {\n    throw new Error(\"Cannot interpolate a RegExp at this position because the syntax context does not match\");\n  }\n  if (regexContext === RegexContext.INVALID_INCOMPLETE_TOKEN || charClassContext === CharClassContext.INVALID_INCOMPLETE_TOKEN) {\n    throw new Error(\"Interpolation preceded by invalid incomplete token\");\n  }\n  const isPattern = value instanceof Pattern;\n  let escapedValue = \"\";\n  if (!(value instanceof RegExp)) {\n    value = String(value);\n    if (!isPattern) {\n      escapedValue = escapeV(\n        value,\n        regexContext === RegexContext.CHAR_CLASS ? Context.CHAR_CLASS : Context.DEFAULT\n      );\n    }\n    const breakoutChar = getBreakoutChar(escapedValue || value, regexContext, charClassContext);\n    if (breakoutChar) {\n      throw new Error(`Unescaped stray \"${breakoutChar}\" in the interpolated value would have side effects outside it`);\n    }\n  }\n  if (regexContext === RegexContext.ENCLOSED_TOKEN || regexContext === RegexContext.INTERVAL_QUANTIFIER || regexContext === RegexContext.GROUP_NAME || charClassContext === CharClassContext.ENCLOSED_TOKEN || charClassContext === CharClassContext.Q_TOKEN) {\n    return isPattern ? String(value) : escapedValue;\n  } else if (regexContext === RegexContext.CHAR_CLASS) {\n    if (isPattern) {\n      if (hasUnescaped(String(value), \"^-|^&&|-$|&&$\")) {\n        throw new Error(\"Cannot use range or set operator at boundary of interpolated pattern; move the operation into the pattern or the operator outside of it\");\n      }\n      const sandboxedValue = sandboxLoneCharClassCaret(sandboxLoneDoublePunctuatorChar(value));\n      return containsCharClassUnion(value) ? `[${sandboxedValue}]` : sandboxUnsafeNulls(sandboxedValue);\n    }\n    return containsCharClassUnion(escapedValue) ? `[${escapedValue}]` : escapedValue;\n  }\n  if (value instanceof RegExp) {\n    const transformed = transformForLocalFlags(value, flags);\n    const backrefsAdjusted = adjustNumberedBackrefs(transformed.value, precedingCaptures);\n    return transformed.usedModifier ? backrefsAdjusted : `(?:${backrefsAdjusted})`;\n  }\n  if (isPattern) {\n    return `(?:${value})`;\n  }\n  return wrapEscapedStr ? `(?:${escapedValue})` : escapedValue;\n}\nfunction transformForLocalFlags(re, outerFlags) {\n  const modFlagsObj = {\n    i: null,\n    m: null,\n    s: null\n  };\n  const newlines = \"\\\\n\\\\r\\\\u2028\\\\u2029\";\n  let value = re.source;\n  if (re.ignoreCase !== outerFlags.includes(\"i\")) {\n    if (patternModsSupported) {\n      modFlagsObj.i = re.ignoreCase;\n    } else {\n      throw new Error(\"Pattern modifiers not supported, so flag i on the outer and interpolated regex must match\");\n    }\n  }\n  if (re.dotAll !== outerFlags.includes(\"s\")) {\n    if (patternModsSupported) {\n      modFlagsObj.s = re.dotAll;\n    } else {\n      value = replaceUnescaped(value, \"\\\\.\", re.dotAll ? \"[^]\" : `[^${newlines}]`, Context.DEFAULT);\n    }\n  }\n  if (re.multiline !== outerFlags.includes(\"m\")) {\n    if (patternModsSupported) {\n      modFlagsObj.m = re.multiline;\n    } else {\n      value = replaceUnescaped(value, \"\\\\^\", re.multiline ? `(?<=^|[${newlines}])` : \"(?<![^])\", Context.DEFAULT);\n      value = replaceUnescaped(value, \"\\\\$\", re.multiline ? `(?=$|[${newlines}])` : \"(?![^])\", Context.DEFAULT);\n    }\n  }\n  if (patternModsSupported) {\n    const keys = Object.keys(modFlagsObj);\n    let modifier = keys.filter((k) => modFlagsObj[k] === true).join(\"\");\n    const modOff = keys.filter((k) => modFlagsObj[k] === false).join(\"\");\n    if (modOff) {\n      modifier += `-${modOff}`;\n    }\n    if (modifier) {\n      return {\n        value: `(?${modifier}:${value})`,\n        usedModifier: true\n      };\n    }\n  }\n  return { value };\n}\nfunction unmarkEmulationGroups(expression) {\n  const marker = emulationGroupMarker.replace(/\\$/g, \"\\\\$\");\n  const captureMap = [true];\n  expression = replaceUnescaped(\n    expression,\n    `(?:${capturingDelim})(?<mark>${marker})?`,\n    ({ 0: m, groups: { mark } }) => {\n      if (mark) {\n        captureMap.push(false);\n        return m.slice(0, -emulationGroupMarker.length);\n      }\n      captureMap.push(true);\n      return m;\n    },\n    Context.DEFAULT\n  );\n  return {\n    captureMap,\n    expression\n  };\n}\nexport {\n  pattern,\n  regex,\n  rewrite\n};\n//# sourceMappingURL=regex.mjs.map\n","import { FontStyle } from './types.mjs';\nimport { INITIAL, EncodedTokenMetadata, Registry as Registry$1, Theme } from '@shikijs/vscode-textmate';\nexport { EncodedTokenMetadata as StackElementMetadata } from '@shikijs/vscode-textmate';\nimport { onigurumaToRegexp } from 'oniguruma-to-js';\nimport { rewrite } from 'regex';\n\nclass ShikiError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ShikiError';\n    }\n}\n\nfunction getHeapMax() {\n    return 2147483648;\n}\nfunction _emscripten_get_now() {\n    return typeof performance !== 'undefined' ? performance.now() : Date.now();\n}\nconst alignUp = (x, multiple) => x + ((multiple - (x % multiple)) % multiple);\nasync function main(init) {\n    let wasmMemory;\n    let buffer;\n    const binding = {};\n    function updateGlobalBufferAndViews(buf) {\n        buffer = buf;\n        binding.HEAPU8 = new Uint8Array(buf);\n        binding.HEAPU32 = new Uint32Array(buf);\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n        binding.HEAPU8.copyWithin(dest, src, src + num);\n    }\n    function emscripten_realloc_buffer(size) {\n        try {\n            wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n        }\n        catch { }\n    }\n    function _emscripten_resize_heap(requestedSize) {\n        const oldSize = binding.HEAPU8.length;\n        requestedSize = requestedSize >>> 0;\n        const maxHeapSize = getHeapMax();\n        if (requestedSize > maxHeapSize)\n            return false;\n        for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            const replacement = emscripten_realloc_buffer(newSize);\n            if (replacement)\n                return true;\n        }\n        return false;\n    }\n    const UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\n        const endIdx = idx + maxBytesToRead;\n        let endPtr = idx;\n        while (heapOrArray[endPtr] && !(endPtr >= endIdx))\n            ++endPtr;\n        if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n            return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n        }\n        let str = '';\n        while (idx < endPtr) {\n            let u0 = heapOrArray[idx++];\n            if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n            }\n            const u1 = heapOrArray[idx++] & 63;\n            if ((u0 & 224) === 192) {\n                str += String.fromCharCode(((u0 & 31) << 6) | u1);\n                continue;\n            }\n            const u2 = heapOrArray[idx++] & 63;\n            if ((u0 & 240) === 224) {\n                u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n            }\n            else {\n                u0 = ((u0 & 7) << 18)\n                    | (u1 << 12)\n                    | (u2 << 6)\n                    | (heapOrArray[idx++] & 63);\n            }\n            if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n            }\n            else {\n                const ch = u0 - 65536;\n                str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n            }\n        }\n        return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n        return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : '';\n    }\n    const asmLibraryArg = {\n        emscripten_get_now: _emscripten_get_now,\n        emscripten_memcpy_big: _emscripten_memcpy_big,\n        emscripten_resize_heap: _emscripten_resize_heap,\n        fd_write: () => 0,\n    };\n    async function createWasm() {\n        const info = {\n            env: asmLibraryArg,\n            wasi_snapshot_preview1: asmLibraryArg,\n        };\n        const exports = await init(info);\n        wasmMemory = exports.memory;\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        Object.assign(binding, exports);\n        binding.UTF8ToString = UTF8ToString;\n    }\n    await createWasm();\n    return binding;\n}\n\n/* ---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *-------------------------------------------------------- */\nlet onigBinding = null;\n// let defaultDebugCall = false\nfunction throwLastOnigError(onigBinding) {\n    throw new ShikiError(onigBinding.UTF8ToString(onigBinding.getLastOnigError()));\n}\nclass UtfString {\n    static _utf8ByteLength(str) {\n        let result = 0;\n        for (let i = 0, len = str.length; i < len; i++) {\n            const charCode = str.charCodeAt(i);\n            let codepoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i + 1 < len) {\n                    const nextCharCode = str.charCodeAt(i + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codepoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (codepoint <= 0x7F)\n                result += 1;\n            else if (codepoint <= 0x7FF)\n                result += 2;\n            else if (codepoint <= 0xFFFF)\n                result += 3;\n            else\n                result += 4;\n            if (wasSurrogatePair)\n                i++;\n        }\n        return result;\n    }\n    utf16Length;\n    utf8Length;\n    utf16Value;\n    utf8Value;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    constructor(str) {\n        const utf16Length = str.length;\n        const utf8Length = UtfString._utf8ByteLength(str);\n        const computeIndicesMapping = (utf8Length !== utf16Length);\n        const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n        if (computeIndicesMapping)\n            utf16OffsetToUtf8[utf16Length] = utf8Length;\n        const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n        if (computeIndicesMapping)\n            utf8OffsetToUtf16[utf8Length] = utf16Length;\n        const utf8Value = new Uint8Array(utf8Length);\n        let i8 = 0;\n        for (let i16 = 0; i16 < utf16Length; i16++) {\n            const charCode = str.charCodeAt(i16);\n            let codePoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i16 + 1 < utf16Length) {\n                    const nextCharCode = str.charCodeAt(i16 + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codePoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (computeIndicesMapping) {\n                utf16OffsetToUtf8[i16] = i8;\n                if (wasSurrogatePair)\n                    utf16OffsetToUtf8[i16 + 1] = i8;\n                if (codePoint <= 0x7F) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                }\n                else if (codePoint <= 0x7FF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                }\n                else if (codePoint <= 0xFFFF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                }\n                else {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                    utf8OffsetToUtf16[i8 + 3] = i16;\n                }\n            }\n            if (codePoint <= 0x7F) {\n                utf8Value[i8++] = codePoint;\n            }\n            else if (codePoint <= 0x7FF) {\n                utf8Value[i8++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else if (codePoint <= 0xFFFF) {\n                utf8Value[i8++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else {\n                utf8Value[i8++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            if (wasSurrogatePair)\n                i16++;\n        }\n        this.utf16Length = utf16Length;\n        this.utf8Length = utf8Length;\n        this.utf16Value = str;\n        this.utf8Value = utf8Value;\n        this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n    }\n    createString(onigBinding) {\n        const result = onigBinding.omalloc(this.utf8Length);\n        onigBinding.HEAPU8.set(this.utf8Value, result);\n        return result;\n    }\n}\nclass OnigString {\n    static LAST_ID = 0;\n    static _sharedPtr = 0; // a pointer to a string of 10000 bytes\n    static _sharedPtrInUse = false;\n    id = (++OnigString.LAST_ID);\n    _onigBinding;\n    content;\n    utf16Length;\n    utf8Length;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    ptr;\n    constructor(str) {\n        if (!onigBinding)\n            throw new ShikiError('Must invoke loadWasm first.');\n        this._onigBinding = onigBinding;\n        this.content = str;\n        const utfString = new UtfString(str);\n        this.utf16Length = utfString.utf16Length;\n        this.utf8Length = utfString.utf8Length;\n        this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n        if (this.utf8Length < 10000 && !OnigString._sharedPtrInUse) {\n            if (!OnigString._sharedPtr)\n                OnigString._sharedPtr = onigBinding.omalloc(10000);\n            OnigString._sharedPtrInUse = true;\n            onigBinding.HEAPU8.set(utfString.utf8Value, OnigString._sharedPtr);\n            this.ptr = OnigString._sharedPtr;\n        }\n        else {\n            this.ptr = utfString.createString(onigBinding);\n        }\n    }\n    convertUtf8OffsetToUtf16(utf8Offset) {\n        if (this.utf8OffsetToUtf16) {\n            if (utf8Offset < 0)\n                return 0;\n            if (utf8Offset > this.utf8Length)\n                return this.utf16Length;\n            return this.utf8OffsetToUtf16[utf8Offset];\n        }\n        return utf8Offset;\n    }\n    convertUtf16OffsetToUtf8(utf16Offset) {\n        if (this.utf16OffsetToUtf8) {\n            if (utf16Offset < 0)\n                return 0;\n            if (utf16Offset > this.utf16Length)\n                return this.utf8Length;\n            return this.utf16OffsetToUtf8[utf16Offset];\n        }\n        return utf16Offset;\n    }\n    dispose() {\n        if (this.ptr === OnigString._sharedPtr)\n            OnigString._sharedPtrInUse = false;\n        else\n            this._onigBinding.ofree(this.ptr);\n    }\n}\nclass OnigScanner {\n    _onigBinding;\n    _ptr;\n    constructor(patterns) {\n        if (!onigBinding)\n            throw new ShikiError('Must invoke loadWasm first.');\n        const strPtrsArr = [];\n        const strLenArr = [];\n        for (let i = 0, len = patterns.length; i < len; i++) {\n            const utfString = new UtfString(patterns[i]);\n            strPtrsArr[i] = utfString.createString(onigBinding);\n            strLenArr[i] = utfString.utf8Length;\n        }\n        const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n        const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n        const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n        for (let i = 0, len = patterns.length; i < len; i++)\n            onigBinding.ofree(strPtrsArr[i]);\n        onigBinding.ofree(strLenPtr);\n        onigBinding.ofree(strPtrsPtr);\n        if (scannerPtr === 0)\n            throwLastOnigError(onigBinding);\n        this._onigBinding = onigBinding;\n        this._ptr = scannerPtr;\n    }\n    dispose() {\n        this._onigBinding.freeOnigScanner(this._ptr);\n    }\n    findNextMatchSync(string, startPosition, arg) {\n        // let debugCall = defaultDebugCall\n        let options = 0 /* FindOption.None */;\n        if (typeof arg === 'number') {\n            // if (arg & FindOption.DebugCall)\n            //   debugCall = true\n            options = arg;\n        }\n        if (typeof string === 'string') {\n            string = new OnigString(string);\n            const result = this._findNextMatchSync(string, startPosition, false, options);\n            string.dispose();\n            return result;\n        }\n        return this._findNextMatchSync(string, startPosition, false, options);\n    }\n    _findNextMatchSync(string, startPosition, debugCall, options) {\n        const onigBinding = this._onigBinding;\n        // let resultPtr: Pointer\n        // if (debugCall)\n        //   resultPtr = onigBinding.findNextOnigScannerMatchDbg(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options)\n        // else\n        const resultPtr = onigBinding.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n        if (resultPtr === 0) {\n            // no match\n            return null;\n        }\n        const HEAPU32 = onigBinding.HEAPU32;\n        let offset = resultPtr / 4; // byte offset -> uint32 offset\n        const index = HEAPU32[offset++];\n        const count = HEAPU32[offset++];\n        const captureIndices = [];\n        for (let i = 0; i < count; i++) {\n            const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            captureIndices[i] = {\n                start: beg,\n                end,\n                length: end - beg,\n            };\n        }\n        return {\n            index,\n            captureIndices,\n        };\n    }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.instantiator === 'function');\n}\nfunction isInstantiatorModule(dataOrOptions) {\n    return (typeof dataOrOptions.default === 'function');\n}\nfunction isDataOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.data !== 'undefined');\n}\nfunction isResponse(dataOrOptions) {\n    return (typeof Response !== 'undefined' && dataOrOptions instanceof Response);\n}\nfunction isArrayBuffer(data) {\n    return (typeof ArrayBuffer !== 'undefined' && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)))\n        // eslint-disable-next-line node/prefer-global/buffer\n        || (typeof Buffer !== 'undefined' && Buffer.isBuffer?.(data))\n        || (typeof SharedArrayBuffer !== 'undefined' && data instanceof SharedArrayBuffer)\n        || (typeof Uint32Array !== 'undefined' && data instanceof Uint32Array);\n}\nlet initPromise;\nfunction loadWasm(options) {\n    if (initPromise)\n        return initPromise;\n    async function _load() {\n        onigBinding = await main(async (info) => {\n            let instance = options;\n            instance = await instance;\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (isInstantiatorOptionsObject(instance)) {\n                instance = await instance.instantiator(info);\n            }\n            else if (isInstantiatorModule(instance)) {\n                instance = await instance.default(info);\n            }\n            else {\n                if (isDataOptionsObject(instance))\n                    instance = instance.data;\n                if (isResponse(instance)) {\n                    if (typeof WebAssembly.instantiateStreaming === 'function')\n                        instance = await _makeResponseStreamingLoader(instance)(info);\n                    else\n                        instance = await _makeResponseNonStreamingLoader(instance)(info);\n                }\n                else if (isArrayBuffer(instance)) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n                // import(\"shiki/onig.wasm\") returns `{ default: WebAssembly.Module }` on cloudflare workers\n                // https://developers.cloudflare.com/workers/wrangler/bundling/\n                else if (instance instanceof WebAssembly.Module) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n                else if ('default' in instance && instance.default instanceof WebAssembly.Module) {\n                    instance = await _makeArrayBufferLoader(instance.default)(info);\n                }\n            }\n            if ('instance' in instance)\n                instance = instance.instance;\n            if ('exports' in instance)\n                instance = instance.exports;\n            return instance;\n        });\n    }\n    initPromise = _load();\n    return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n    return importObject => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n    return importObject => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n    return async (importObject) => {\n        const arrayBuffer = await data.arrayBuffer();\n        return WebAssembly.instantiate(arrayBuffer, importObject);\n    };\n}\n// export function createOnigString(str: string) {\n//   return new OnigString(str)\n// }\n// export function createOnigScanner(patterns: string[]) {\n//   return new OnigScanner(patterns)\n// }\n// export function setDefaultDebugCall(_defaultDebugCall: boolean): void {\n//   defaultDebugCall = _defaultDebugCall\n// }\n\nasync function createWasmOnigEngine(options) {\n    if (options)\n        await loadWasm(options);\n    return {\n        createScanner(patterns) {\n            return new OnigScanner(patterns);\n        },\n        createString(s) {\n            return new OnigString(s);\n        },\n    };\n}\n\nfunction toArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Split a string into lines, each line preserves the line ending.\n */\nfunction splitLines(code, preserveEnding = false) {\n    const parts = code.split(/(\\r?\\n)/g);\n    let index = 0;\n    const lines = [];\n    for (let i = 0; i < parts.length; i += 2) {\n        const line = preserveEnding\n            ? parts[i] + (parts[i + 1] || '')\n            : parts[i];\n        lines.push([line, index]);\n        index += parts[i].length;\n        index += parts[i + 1]?.length || 0;\n    }\n    return lines;\n}\n/**\n * Check if the language is plaintext that is ignored by Shiki.\n *\n * Hard-coded plain text languages: `plaintext`, `txt`, `text`, `plain`.\n */\nfunction isPlainLang(lang) {\n    return !lang || ['plaintext', 'txt', 'text', 'plain'].includes(lang);\n}\n/**\n * Check if the language is specially handled or bypassed by Shiki.\n *\n * Hard-coded languages: `ansi` and plaintexts like `plaintext`, `txt`, `text`, `plain`.\n */\nfunction isSpecialLang(lang) {\n    return lang === 'ansi' || isPlainLang(lang);\n}\n/**\n * Check if the theme is specially handled or bypassed by Shiki.\n *\n * Hard-coded themes: `none`.\n */\nfunction isNoneTheme(theme) {\n    return theme === 'none';\n}\n/**\n * Check if the theme is specially handled or bypassed by Shiki.\n *\n * Hard-coded themes: `none`.\n */\nfunction isSpecialTheme(theme) {\n    return isNoneTheme(theme);\n}\n/**\n * Utility to append class to a hast node\n *\n * If the `property.class` is a string, it will be splitted by space and converted to an array.\n */\nfunction addClassToHast(node, className) {\n    if (!className)\n        return node;\n    node.properties ||= {};\n    node.properties.class ||= [];\n    if (typeof node.properties.class === 'string')\n        node.properties.class = node.properties.class.split(/\\s+/g);\n    if (!Array.isArray(node.properties.class))\n        node.properties.class = [];\n    const targets = Array.isArray(className) ? className : className.split(/\\s+/g);\n    for (const c of targets) {\n        if (c && !node.properties.class.includes(c))\n            node.properties.class.push(c);\n    }\n    return node;\n}\n/**\n * Split a token into multiple tokens by given offsets.\n *\n * The offsets are relative to the token, and should be sorted.\n */\nfunction splitToken(token, offsets) {\n    let lastOffset = 0;\n    const tokens = [];\n    for (const offset of offsets) {\n        if (offset > lastOffset) {\n            tokens.push({\n                ...token,\n                content: token.content.slice(lastOffset, offset),\n                offset: token.offset + lastOffset,\n            });\n        }\n        lastOffset = offset;\n    }\n    if (lastOffset < token.content.length) {\n        tokens.push({\n            ...token,\n            content: token.content.slice(lastOffset),\n            offset: token.offset + lastOffset,\n        });\n    }\n    return tokens;\n}\n/**\n * Split 2D tokens array by given breakpoints.\n */\nfunction splitTokens(tokens, breakpoints) {\n    const sorted = Array\n        .from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints))\n        .sort((a, b) => a - b);\n    if (!sorted.length)\n        return tokens;\n    return tokens.map((line) => {\n        return line.flatMap((token) => {\n            const breakpointsInToken = sorted\n                .filter(i => token.offset < i && i < token.offset + token.content.length)\n                .map(i => i - token.offset)\n                .sort((a, b) => a - b);\n            if (!breakpointsInToken.length)\n                return token;\n            return splitToken(token, breakpointsInToken);\n        });\n    });\n}\n/**\n * Normalize a getter to a promise.\n */\nasync function normalizeGetter(p) {\n    return Promise.resolve(typeof p === 'function' ? p() : p).then(r => r.default || r);\n}\nfunction resolveColorReplacements(theme, options) {\n    const replacements = typeof theme === 'string' ? {} : { ...theme.colorReplacements };\n    const themeName = typeof theme === 'string' ? theme : theme.name;\n    for (const [key, value] of Object.entries(options?.colorReplacements || {})) {\n        if (typeof value === 'string')\n            replacements[key] = value;\n        else if (key === themeName)\n            Object.assign(replacements, value);\n    }\n    return replacements;\n}\nfunction applyColorReplacements(color, replacements) {\n    if (!color)\n        return color;\n    return replacements?.[color?.toLowerCase()] || color;\n}\nfunction getTokenStyleObject(token) {\n    const styles = {};\n    if (token.color)\n        styles.color = token.color;\n    if (token.bgColor)\n        styles['background-color'] = token.bgColor;\n    if (token.fontStyle) {\n        if (token.fontStyle & FontStyle.Italic)\n            styles['font-style'] = 'italic';\n        if (token.fontStyle & FontStyle.Bold)\n            styles['font-weight'] = 'bold';\n        if (token.fontStyle & FontStyle.Underline)\n            styles['text-decoration'] = 'underline';\n    }\n    return styles;\n}\nfunction stringifyTokenStyle(token) {\n    return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(';');\n}\n/**\n * Creates a converter between index and position in a code block.\n *\n * Overflow/underflow are unchecked.\n */\nfunction createPositionConverter(code) {\n    const lines = splitLines(code, true).map(([line]) => line);\n    function indexToPos(index) {\n        if (index === code.length) {\n            return {\n                line: lines.length - 1,\n                character: lines[lines.length - 1].length,\n            };\n        }\n        let character = index;\n        let line = 0;\n        for (const lineText of lines) {\n            if (character < lineText.length)\n                break;\n            character -= lineText.length;\n            line++;\n        }\n        return { line, character };\n    }\n    function posToIndex(line, character) {\n        let index = 0;\n        for (let i = 0; i < line; i++)\n            index += lines[i].length;\n        index += character;\n        return index;\n    }\n    return {\n        lines,\n        indexToPos,\n        posToIndex,\n    };\n}\n\n/**\n * A built-in transformer to add decorations to the highlighted code.\n */\nfunction transformerDecorations() {\n    const map = new WeakMap();\n    function getContext(shiki) {\n        if (!map.has(shiki.meta)) {\n            const converter = createPositionConverter(shiki.source);\n            function normalizePosition(p) {\n                if (typeof p === 'number') {\n                    if (p < 0 || p > shiki.source.length)\n                        throw new ShikiError(`Invalid decoration offset: ${p}. Code length: ${shiki.source.length}`);\n                    return {\n                        ...converter.indexToPos(p),\n                        offset: p,\n                    };\n                }\n                else {\n                    const line = converter.lines[p.line];\n                    if (line === undefined)\n                        throw new ShikiError(`Invalid decoration position ${JSON.stringify(p)}. Lines length: ${converter.lines.length}`);\n                    if (p.character < 0 || p.character > line.length)\n                        throw new ShikiError(`Invalid decoration position ${JSON.stringify(p)}. Line ${p.line} length: ${line.length}`);\n                    return {\n                        ...p,\n                        offset: converter.posToIndex(p.line, p.character),\n                    };\n                }\n            }\n            const decorations = (shiki.options.decorations || [])\n                .map((d) => ({\n                ...d,\n                start: normalizePosition(d.start),\n                end: normalizePosition(d.end),\n            }));\n            verifyIntersections(decorations);\n            map.set(shiki.meta, {\n                decorations,\n                converter,\n                source: shiki.source,\n            });\n        }\n        return map.get(shiki.meta);\n    }\n    return {\n        name: 'shiki:decorations',\n        tokens(tokens) {\n            if (!this.options.decorations?.length)\n                return;\n            const ctx = getContext(this);\n            const breakpoints = ctx.decorations.flatMap(d => [d.start.offset, d.end.offset]);\n            const splitted = splitTokens(tokens, breakpoints);\n            return splitted;\n        },\n        code(codeEl) {\n            if (!this.options.decorations?.length)\n                return;\n            const ctx = getContext(this);\n            const lines = Array.from(codeEl.children).filter(i => i.type === 'element' && i.tagName === 'span');\n            if (lines.length !== ctx.converter.lines.length)\n                throw new ShikiError(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);\n            function applyLineSection(line, start, end, decoration) {\n                const lineEl = lines[line];\n                let text = '';\n                let startIndex = -1;\n                let endIndex = -1;\n                if (start === 0)\n                    startIndex = 0;\n                if (end === 0)\n                    endIndex = 0;\n                if (end === Number.POSITIVE_INFINITY)\n                    endIndex = lineEl.children.length;\n                if (startIndex === -1 || endIndex === -1) {\n                    for (let i = 0; i < lineEl.children.length; i++) {\n                        text += stringify$2(lineEl.children[i]);\n                        if (startIndex === -1 && text.length === start)\n                            startIndex = i + 1;\n                        if (endIndex === -1 && text.length === end)\n                            endIndex = i + 1;\n                    }\n                }\n                if (startIndex === -1)\n                    throw new ShikiError(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);\n                if (endIndex === -1)\n                    throw new ShikiError(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);\n                const children = lineEl.children.slice(startIndex, endIndex);\n                // Full line decoration\n                if (!decoration.alwaysWrap && children.length === lineEl.children.length) {\n                    applyDecoration(lineEl, decoration, 'line');\n                }\n                // Single token decoration\n                else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === 'element') {\n                    applyDecoration(children[0], decoration, 'token');\n                }\n                // Create a wrapper for the decoration\n                else {\n                    const wrapper = {\n                        type: 'element',\n                        tagName: 'span',\n                        properties: {},\n                        children,\n                    };\n                    applyDecoration(wrapper, decoration, 'wrapper');\n                    lineEl.children.splice(startIndex, children.length, wrapper);\n                }\n            }\n            function applyLine(line, decoration) {\n                lines[line] = applyDecoration(lines[line], decoration, 'line');\n            }\n            function applyDecoration(el, decoration, type) {\n                const properties = decoration.properties || {};\n                const transform = decoration.transform || (i => i);\n                el.tagName = decoration.tagName || 'span';\n                el.properties = {\n                    ...el.properties,\n                    ...properties,\n                    class: el.properties.class,\n                };\n                if (decoration.properties?.class)\n                    addClassToHast(el, decoration.properties.class);\n                el = transform(el, type) || el;\n                return el;\n            }\n            const lineApplies = [];\n            // Apply decorations in reverse order so the nested ones get applied first.\n            const sorted = ctx.decorations.sort((a, b) => b.start.offset - a.start.offset);\n            for (const decoration of sorted) {\n                const { start, end } = decoration;\n                if (start.line === end.line) {\n                    applyLineSection(start.line, start.character, end.character, decoration);\n                }\n                else if (start.line < end.line) {\n                    applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);\n                    for (let i = start.line + 1; i < end.line; i++)\n                        lineApplies.unshift(() => applyLine(i, decoration));\n                    applyLineSection(end.line, 0, end.character, decoration);\n                }\n            }\n            lineApplies.forEach(i => i());\n        },\n    };\n}\nfunction verifyIntersections(items) {\n    for (let i = 0; i < items.length; i++) {\n        const foo = items[i];\n        if (foo.start.offset > foo.end.offset)\n            throw new ShikiError(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);\n        for (let j = i + 1; j < items.length; j++) {\n            const bar = items[j];\n            const isFooHasBarStart = foo.start.offset < bar.start.offset && bar.start.offset < foo.end.offset;\n            const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset < foo.end.offset;\n            const isBarHasFooStart = bar.start.offset < foo.start.offset && foo.start.offset < bar.end.offset;\n            const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset < bar.end.offset;\n            if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {\n                if (isFooHasBarEnd && isFooHasBarEnd)\n                    continue; // nested\n                if (isBarHasFooStart && isBarHasFooEnd)\n                    continue; // nested\n                throw new ShikiError(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);\n            }\n        }\n    }\n}\nfunction stringify$2(el) {\n    if (el.type === 'text')\n        return el.value;\n    if (el.type === 'element')\n        return el.children.map(stringify$2).join('');\n    return '';\n}\n\nconst builtInTransformers = [\n    /* @__PURE__ */ transformerDecorations(),\n];\nfunction getTransformers(options) {\n    return [\n        ...options.transformers || [],\n        ...builtInTransformers,\n    ];\n}\n\n/**\n * GrammarState is a special reference object that holds the state of a grammar.\n *\n * It's used to highlight code snippets that are part of the target language.\n */\nclass GrammarState {\n    _stack;\n    lang;\n    theme;\n    /**\n     * Static method to create a initial grammar state.\n     */\n    static initial(lang, theme) {\n        return new GrammarState(INITIAL, lang, theme);\n    }\n    constructor(_stack, lang, theme) {\n        this._stack = _stack;\n        this.lang = lang;\n        this.theme = theme;\n    }\n    get scopes() {\n        return getScopes(this._stack);\n    }\n    toJSON() {\n        return {\n            lang: this.lang,\n            theme: this.theme,\n            scopes: this.scopes,\n        };\n    }\n}\nfunction getScopes(stack) {\n    const scopes = [];\n    const visited = new Set();\n    function pushScope(stack) {\n        if (visited.has(stack))\n            return;\n        visited.add(stack);\n        const name = stack?.nameScopesList?.scopeName;\n        if (name)\n            scopes.push(name);\n        if (stack.parent)\n            pushScope(stack.parent);\n    }\n    pushScope(stack);\n    return scopes;\n}\nfunction getGrammarStack(state) {\n    if (!(state instanceof GrammarState))\n        throw new ShikiError('Invalid grammar state');\n    // @ts-expect-error _stack is private\n    return state._stack;\n}\n\n// src/colors.ts\nvar namedColors = [\n  \"black\",\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"blue\",\n  \"magenta\",\n  \"cyan\",\n  \"white\",\n  \"brightBlack\",\n  \"brightRed\",\n  \"brightGreen\",\n  \"brightYellow\",\n  \"brightBlue\",\n  \"brightMagenta\",\n  \"brightCyan\",\n  \"brightWhite\"\n];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B[\", position);\n  if (nextEscape !== -1) {\n    const nextClose = value.indexOf(\"m\", nextEscape);\n    return {\n      sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n      startPosition: nextEscape,\n      position: nextClose + 1\n    };\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence, index) {\n  let offset = 1;\n  const colorMode = sequence[index + offset++];\n  let color;\n  if (colorMode === \"2\") {\n    const rgb = [\n      sequence[index + offset++],\n      sequence[index + offset++],\n      sequence[index + offset]\n    ].map((x) => Number.parseInt(x));\n    if (rgb.length === 3 && !rgb.some((x) => Number.isNaN(x))) {\n      color = {\n        type: \"rgb\",\n        rgb\n      };\n    }\n  } else if (colorMode === \"5\") {\n    const colorIndex = Number.parseInt(sequence[index + offset]);\n    if (!Number.isNaN(colorIndex)) {\n      color = { type: \"table\", index: Number(colorIndex) };\n    }\n  }\n  return [offset, color];\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  for (let i = 0; i < sequence.length; i++) {\n    const code = sequence[i];\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt))\n      continue;\n    if (codeInt === 0) {\n      commands.push({ type: \"resetAll\" });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 30] }\n      });\n    } else if (codeInt === 38) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 40] }\n      });\n    } else if (codeInt === 48) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 90 + 8] }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 100 + 8] }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */ new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map((x) => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\n\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n    const colorReplacements = resolveColorReplacements(theme, options);\n    const lines = splitLines(fileContents);\n    const colorPalette = createColorPalette(Object.fromEntries(namedColors.map(name => [\n        name,\n        theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`],\n    ])));\n    const parser = createAnsiSequenceParser();\n    return lines.map(line => parser.parse(line[0]).map((token) => {\n        let color;\n        let bgColor;\n        if (token.decorations.has('reverse')) {\n            color = token.background ? colorPalette.value(token.background) : theme.bg;\n            bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n        }\n        else {\n            color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n            bgColor = token.background ? colorPalette.value(token.background) : undefined;\n        }\n        color = applyColorReplacements(color, colorReplacements);\n        bgColor = applyColorReplacements(bgColor, colorReplacements);\n        if (token.decorations.has('dim'))\n            color = dimColor(color);\n        let fontStyle = FontStyle.None;\n        if (token.decorations.has('bold'))\n            fontStyle |= FontStyle.Bold;\n        if (token.decorations.has('italic'))\n            fontStyle |= FontStyle.Italic;\n        if (token.decorations.has('underline'))\n            fontStyle |= FontStyle.Underline;\n        return {\n            content: token.value,\n            offset: line[1], // TODO: more accurate offset? might need to fork ansi-sequence-parser\n            color,\n            bgColor,\n            fontStyle,\n        };\n    }));\n}\n/**\n * Adds 50% alpha to a hex color string or the \"-dim\" postfix to a CSS variable\n */\nfunction dimColor(color) {\n    const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n    if (hexMatch) {\n        if (hexMatch[3]) {\n            // convert from #rrggbbaa to #rrggbb(aa/2)\n            const alpha = Math\n                .round(Number.parseInt(hexMatch[3], 16) / 2)\n                .toString(16)\n                .padStart(2, '0');\n            return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n        }\n        else if (hexMatch[2]) {\n            // convert from #rrggbb to #rrggbb80\n            return `#${hexMatch[1]}${hexMatch[2]}80`;\n        }\n        else {\n            // convert from #rgb to #rrggbb80\n            return `#${Array\n                .from(hexMatch[1])\n                .map(x => `${x}${x}`)\n                .join('')}80`;\n        }\n    }\n    const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n    if (cssVarMatch)\n        return `var(${cssVarMatch[1]}-dim)`;\n    return color;\n}\n\n/* ---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *-------------------------------------------------------- */\n/**\n * Code to tokens, with a simple theme.\n */\nfunction codeToTokensBase(internal, code, options = {}) {\n    const { lang = 'text', theme: themeName = internal.getLoadedThemes()[0], } = options;\n    if (isPlainLang(lang) || isNoneTheme(themeName))\n        return splitLines(code).map(line => [{ content: line[0], offset: line[1] }]);\n    const { theme, colorMap } = internal.setTheme(themeName);\n    if (lang === 'ansi')\n        return tokenizeAnsiWithTheme(theme, code, options);\n    const _grammar = internal.getLanguage(lang);\n    if (options.grammarState) {\n        if (options.grammarState.lang !== _grammar.name) {\n            throw new ShikiError(`Grammar state language \"${options.grammarState.lang}\" does not match highlight language \"${_grammar.name}\"`);\n        }\n        if (options.grammarState.theme !== themeName) {\n            throw new ShikiError(`Grammar state theme \"${options.grammarState.theme}\" does not match highlight theme \"${themeName}\"`);\n        }\n    }\n    return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction getLastGrammarState(internal, code, options = {}) {\n    const { lang = 'text', theme: themeName = internal.getLoadedThemes()[0], } = options;\n    if (isPlainLang(lang) || isNoneTheme(themeName))\n        throw new ShikiError('Plain language does not have grammar state');\n    if (lang === 'ansi')\n        throw new ShikiError('ANSI language does not have grammar state');\n    const { theme, colorMap } = internal.setTheme(themeName);\n    const _grammar = internal.getLanguage(lang);\n    return new GrammarState(_tokenizeWithTheme(code, _grammar, theme, colorMap, options).stateStack, _grammar.name, theme.name);\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n    return _tokenizeWithTheme(code, grammar, theme, colorMap, options).tokens;\n}\nfunction _tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n    const colorReplacements = resolveColorReplacements(theme, options);\n    const { tokenizeMaxLineLength = 0, tokenizeTimeLimit = 500, } = options;\n    const lines = splitLines(code);\n    let stateStack = options.grammarState\n        ? getGrammarStack(options.grammarState)\n        : options.grammarContextCode != null\n            ? _tokenizeWithTheme(options.grammarContextCode, grammar, theme, colorMap, {\n                ...options,\n                grammarState: undefined,\n                grammarContextCode: undefined,\n            }).stateStack\n            : INITIAL;\n    let actual = [];\n    const final = [];\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const [line, lineOffset] = lines[i];\n        if (line === '') {\n            actual = [];\n            final.push([]);\n            continue;\n        }\n        // Do not attempt to tokenize if the line length is longer than the `tokenizationMaxLineLength`\n        if (tokenizeMaxLineLength > 0 && line.length >= tokenizeMaxLineLength) {\n            actual = [];\n            final.push([{\n                    content: line,\n                    offset: lineOffset,\n                    color: '',\n                    fontStyle: 0,\n                }]);\n            continue;\n        }\n        let resultWithScopes;\n        let tokensWithScopes;\n        let tokensWithScopesIndex;\n        if (options.includeExplanation) {\n            resultWithScopes = grammar.tokenizeLine(line, stateStack);\n            tokensWithScopes = resultWithScopes.tokens;\n            tokensWithScopesIndex = 0;\n        }\n        const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit);\n        const tokensLength = result.tokens.length / 2;\n        for (let j = 0; j < tokensLength; j++) {\n            const startIndex = result.tokens[2 * j];\n            const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n            if (startIndex === nextStartIndex)\n                continue;\n            const metadata = result.tokens[2 * j + 1];\n            const color = applyColorReplacements(colorMap[EncodedTokenMetadata.getForeground(metadata)], colorReplacements);\n            const fontStyle = EncodedTokenMetadata.getFontStyle(metadata);\n            const token = {\n                content: line.substring(startIndex, nextStartIndex),\n                offset: lineOffset + startIndex,\n                color,\n                fontStyle,\n            };\n            if (options.includeExplanation) {\n                const themeSettingsSelectors = [];\n                if (options.includeExplanation !== 'scopeName') {\n                    for (const setting of theme.settings) {\n                        let selectors;\n                        switch (typeof setting.scope) {\n                            case 'string':\n                                selectors = setting.scope.split(/,/).map(scope => scope.trim());\n                                break;\n                            case 'object':\n                                selectors = setting.scope;\n                                break;\n                            default:\n                                continue;\n                        }\n                        themeSettingsSelectors.push({\n                            settings: setting,\n                            selectors: selectors.map(selector => selector.split(/ /)),\n                        });\n                    }\n                }\n                token.explanation = [];\n                let offset = 0;\n                while (startIndex + offset < nextStartIndex) {\n                    const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n                    const tokenWithScopesText = line.substring(tokenWithScopes.startIndex, tokenWithScopes.endIndex);\n                    offset += tokenWithScopesText.length;\n                    token.explanation.push({\n                        content: tokenWithScopesText,\n                        scopes: options.includeExplanation === 'scopeName'\n                            ? explainThemeScopesNameOnly(tokenWithScopes.scopes)\n                            : explainThemeScopesFull(themeSettingsSelectors, tokenWithScopes.scopes),\n                    });\n                    tokensWithScopesIndex += 1;\n                }\n            }\n            actual.push(token);\n        }\n        final.push(actual);\n        actual = [];\n        stateStack = result.ruleStack;\n    }\n    return {\n        tokens: final,\n        stateStack,\n    };\n}\nfunction explainThemeScopesNameOnly(scopes) {\n    return scopes.map(scope => ({ scopeName: scope }));\n}\nfunction explainThemeScopesFull(themeSelectors, scopes) {\n    const result = [];\n    for (let i = 0, len = scopes.length; i < len; i++) {\n        const scope = scopes[i];\n        result[i] = {\n            scopeName: scope,\n            themeMatches: explainThemeScope(themeSelectors, scope, scopes.slice(0, i)),\n        };\n    }\n    return result;\n}\nfunction matchesOne(selector, scope) {\n    return selector === scope\n        || (scope.substring(0, selector.length) === selector && scope[selector.length] === '.');\n}\nfunction matches(selectors, scope, parentScopes) {\n    if (!matchesOne(selectors[selectors.length - 1], scope))\n        return false;\n    let selectorParentIndex = selectors.length - 2;\n    let parentIndex = parentScopes.length - 1;\n    while (selectorParentIndex >= 0 && parentIndex >= 0) {\n        if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex]))\n            selectorParentIndex -= 1;\n        parentIndex -= 1;\n    }\n    if (selectorParentIndex === -1)\n        return true;\n    return false;\n}\nfunction explainThemeScope(themeSettingsSelectors, scope, parentScopes) {\n    const result = [];\n    for (const { selectors, settings } of themeSettingsSelectors) {\n        for (const selectorPieces of selectors) {\n            if (matches(selectorPieces, scope, parentScopes)) {\n                result.push(settings);\n                break; // continue to the next theme settings\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Get tokens with multiple themes\n */\nfunction codeToTokensWithThemes(internal, code, options) {\n    const themes = Object\n        .entries(options.themes)\n        .filter(i => i[1])\n        .map(i => ({ color: i[0], theme: i[1] }));\n    const tokens = syncThemesTokenization(...themes.map(t => codeToTokensBase(internal, code, {\n        ...options,\n        theme: t.theme,\n    })));\n    const mergedTokens = tokens[0]\n        .map((line, lineIdx) => line\n        .map((_token, tokenIdx) => {\n        const mergedToken = {\n            content: _token.content,\n            variants: {},\n            offset: _token.offset,\n        };\n        if ('includeExplanation' in options && options.includeExplanation) {\n            mergedToken.explanation = _token.explanation;\n        }\n        tokens.forEach((t, themeIdx) => {\n            const { content: _, explanation: __, offset: ___, ...styles } = t[lineIdx][tokenIdx];\n            mergedToken.variants[themes[themeIdx].color] = styles;\n        });\n        return mergedToken;\n    }));\n    return mergedTokens;\n}\n/**\n * Break tokens from multiple themes into same tokenization.\n *\n * For example, given two themes that tokenize `console.log(\"hello\")` as:\n *\n * - `console . log (\" hello \")` (6 tokens)\n * - `console .log ( \"hello\" )` (5 tokens)\n *\n * This function will return:\n *\n * - `console . log ( \" hello \" )` (8 tokens)\n * - `console . log ( \" hello \" )` (8 tokens)\n */\nfunction syncThemesTokenization(...themes) {\n    const outThemes = themes.map(() => []);\n    const count = themes.length;\n    for (let i = 0; i < themes[0].length; i++) {\n        const lines = themes.map(t => t[i]);\n        const outLines = outThemes.map(() => []);\n        outThemes.forEach((t, i) => t.push(outLines[i]));\n        const indexes = lines.map(() => 0);\n        const current = lines.map(l => l[0]);\n        while (current.every(t => t)) {\n            const minLength = Math.min(...current.map(t => t.content.length));\n            for (let n = 0; n < count; n++) {\n                const token = current[n];\n                if (token.content.length === minLength) {\n                    outLines[n].push(token);\n                    indexes[n] += 1;\n                    current[n] = lines[n][indexes[n]];\n                }\n                else {\n                    outLines[n].push({\n                        ...token,\n                        content: token.content.slice(0, minLength),\n                    });\n                    current[n] = {\n                        ...token,\n                        content: token.content.slice(minLength),\n                        offset: token.offset + minLength,\n                    };\n                }\n            }\n        }\n    }\n    return outThemes;\n}\n\n/**\n * High-level code-to-tokens API.\n *\n * It will use `codeToTokensWithThemes` or `codeToTokensBase` based on the options.\n */\nfunction codeToTokens(internal, code, options) {\n    let bg;\n    let fg;\n    let tokens;\n    let themeName;\n    let rootStyle;\n    if ('themes' in options) {\n        const { defaultColor = 'light', cssVariablePrefix = '--shiki-', } = options;\n        const themes = Object\n            .entries(options.themes)\n            .filter(i => i[1])\n            .map(i => ({ color: i[0], theme: i[1] }))\n            .sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n        if (themes.length === 0)\n            throw new ShikiError('`themes` option must not be empty');\n        const themeTokens = codeToTokensWithThemes(internal, code, options);\n        if (defaultColor && !themes.find(t => t.color === defaultColor))\n            throw new ShikiError(`\\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n        const themeRegs = themes.map(t => internal.getTheme(t.theme));\n        const themesOrder = themes.map(t => t.color);\n        tokens = themeTokens\n            .map(line => line.map(token => mergeToken(token, themesOrder, cssVariablePrefix, defaultColor)));\n        const themeColorReplacements = themes.map(t => resolveColorReplacements(t.theme, options));\n        fg = themes.map((t, idx) => (idx === 0 && defaultColor\n            ? ''\n            : `${cssVariablePrefix + t.color}:`) + (applyColorReplacements(themeRegs[idx].fg, themeColorReplacements[idx]) || 'inherit')).join(';');\n        bg = themes.map((t, idx) => (idx === 0 && defaultColor\n            ? ''\n            : `${cssVariablePrefix + t.color}-bg:`) + (applyColorReplacements(themeRegs[idx].bg, themeColorReplacements[idx]) || 'inherit')).join(';');\n        themeName = `shiki-themes ${themeRegs.map(t => t.name).join(' ')}`;\n        rootStyle = defaultColor ? undefined : [fg, bg].join(';');\n    }\n    else if ('theme' in options) {\n        const colorReplacements = resolveColorReplacements(options.theme, options);\n        tokens = codeToTokensBase(internal, code, options);\n        const _theme = internal.getTheme(options.theme);\n        bg = applyColorReplacements(_theme.bg, colorReplacements);\n        fg = applyColorReplacements(_theme.fg, colorReplacements);\n        themeName = _theme.name;\n    }\n    else {\n        throw new ShikiError('Invalid options, either `theme` or `themes` must be provided');\n    }\n    return {\n        tokens,\n        fg,\n        bg,\n        themeName,\n        rootStyle,\n    };\n}\nfunction mergeToken(merged, variantsOrder, cssVariablePrefix, defaultColor) {\n    const token = {\n        content: merged.content,\n        explanation: merged.explanation,\n        offset: merged.offset,\n    };\n    const styles = variantsOrder.map(t => getTokenStyleObject(merged.variants[t]));\n    // Get all style keys, for themes that missing some style, we put `inherit` to override as needed\n    const styleKeys = new Set(styles.flatMap(t => Object.keys(t)));\n    const mergedStyles = styles.reduce((acc, cur, idx) => {\n        for (const key of styleKeys) {\n            const value = cur[key] || 'inherit';\n            if (idx === 0 && defaultColor) {\n                acc[key] = value;\n            }\n            else {\n                const keyName = key === 'color' ? '' : key === 'background-color' ? '-bg' : `-${key}`;\n                const varKey = cssVariablePrefix + variantsOrder[idx] + (key === 'color' ? '' : keyName);\n                if (acc[key])\n                    acc[key] += `;${varKey}:${value}`;\n                else\n                    acc[key] = `${varKey}:${value}`;\n            }\n        }\n        return acc;\n    }, {});\n    token.htmlStyle = defaultColor\n        ? stringifyTokenStyle(mergedStyles)\n        : Object.values(mergedStyles).join(';');\n    return token;\n}\n\nfunction codeToHast(internal, code, options, transformerContext = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options),\n}) {\n    let input = code;\n    for (const transformer of getTransformers(options))\n        input = transformer.preprocess?.call(transformerContext, input, options) || input;\n    let { tokens, fg, bg, themeName, rootStyle, } = codeToTokens(internal, input, options);\n    const { mergeWhitespaces = true, } = options;\n    if (mergeWhitespaces === true)\n        tokens = mergeWhitespaceTokens(tokens);\n    else if (mergeWhitespaces === 'never')\n        tokens = splitWhitespaceTokens(tokens);\n    const contextSource = {\n        ...transformerContext,\n        get source() {\n            return input;\n        },\n    };\n    for (const transformer of getTransformers(options))\n        tokens = transformer.tokens?.call(contextSource, tokens) || tokens;\n    return tokensToHast(tokens, {\n        ...options,\n        fg,\n        bg,\n        themeName,\n        rootStyle,\n    }, contextSource);\n}\nfunction tokensToHast(tokens, options, transformerContext) {\n    const transformers = getTransformers(options);\n    const lines = [];\n    const root = {\n        type: 'root',\n        children: [],\n    };\n    const { structure = 'classic', } = options;\n    let preNode = {\n        type: 'element',\n        tagName: 'pre',\n        properties: {\n            class: `shiki ${options.themeName || ''}`,\n            style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n            tabindex: '0',\n            ...Object.fromEntries(Array.from(Object.entries(options.meta || {}))\n                .filter(([key]) => !key.startsWith('_'))),\n        },\n        children: [],\n    };\n    let codeNode = {\n        type: 'element',\n        tagName: 'code',\n        properties: {},\n        children: lines,\n    };\n    const lineNodes = [];\n    const context = {\n        ...transformerContext,\n        structure,\n        addClassToHast,\n        get source() {\n            return transformerContext.source;\n        },\n        get tokens() {\n            return tokens;\n        },\n        get options() {\n            return options;\n        },\n        get root() {\n            return root;\n        },\n        get pre() {\n            return preNode;\n        },\n        get code() {\n            return codeNode;\n        },\n        get lines() {\n            return lineNodes;\n        },\n    };\n    tokens.forEach((line, idx) => {\n        if (idx) {\n            if (structure === 'inline')\n                root.children.push({ type: 'element', tagName: 'br', properties: {}, children: [] });\n            else if (structure === 'classic')\n                lines.push({ type: 'text', value: '\\n' });\n        }\n        let lineNode = {\n            type: 'element',\n            tagName: 'span',\n            properties: { class: 'line' },\n            children: [],\n        };\n        let col = 0;\n        for (const token of line) {\n            let tokenNode = {\n                type: 'element',\n                tagName: 'span',\n                properties: {},\n                children: [{ type: 'text', value: token.content }],\n            };\n            const style = token.htmlStyle || stringifyTokenStyle(getTokenStyleObject(token));\n            if (style)\n                tokenNode.properties.style = style;\n            for (const transformer of transformers)\n                tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode) || tokenNode;\n            if (structure === 'inline')\n                root.children.push(tokenNode);\n            else if (structure === 'classic')\n                lineNode.children.push(tokenNode);\n            col += token.content.length;\n        }\n        if (structure === 'classic') {\n            for (const transformer of transformers)\n                lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n            lineNodes.push(lineNode);\n            lines.push(lineNode);\n        }\n    });\n    if (structure === 'classic') {\n        for (const transformer of transformers)\n            codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n        preNode.children.push(codeNode);\n        for (const transformer of transformers)\n            preNode = transformer?.pre?.call(context, preNode) || preNode;\n        root.children.push(preNode);\n    }\n    let result = root;\n    for (const transformer of transformers)\n        result = transformer?.root?.call(context, result) || result;\n    return result;\n}\nfunction mergeWhitespaceTokens(tokens) {\n    return tokens.map((line) => {\n        const newLine = [];\n        let carryOnContent = '';\n        let firstOffset = 0;\n        line.forEach((token, idx) => {\n            const isUnderline = token.fontStyle && token.fontStyle & FontStyle.Underline;\n            const couldMerge = !isUnderline;\n            if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n                if (!firstOffset)\n                    firstOffset = token.offset;\n                carryOnContent += token.content;\n            }\n            else {\n                if (carryOnContent) {\n                    if (couldMerge) {\n                        newLine.push({\n                            ...token,\n                            offset: firstOffset,\n                            content: carryOnContent + token.content,\n                        });\n                    }\n                    else {\n                        newLine.push({\n                            content: carryOnContent,\n                            offset: firstOffset,\n                        }, token);\n                    }\n                    firstOffset = 0;\n                    carryOnContent = '';\n                }\n                else {\n                    newLine.push(token);\n                }\n            }\n        });\n        return newLine;\n    });\n}\nfunction splitWhitespaceTokens(tokens) {\n    return tokens.map((line) => {\n        return line.flatMap((token) => {\n            if (token.content.match(/^\\s+$/))\n                return token;\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n            if (!match)\n                return token;\n            const [, leading, content, trailing] = match;\n            if (!leading && !trailing)\n                return token;\n            const expanded = [{\n                    ...token,\n                    offset: token.offset + leading.length,\n                    content,\n                }];\n            if (leading) {\n                expanded.unshift({\n                    content: leading,\n                    offset: token.offset,\n                });\n            }\n            if (trailing) {\n                expanded.push({\n                    content: trailing,\n                    offset: token.offset + leading.length + content.length,\n                });\n            }\n            return expanded;\n        });\n    });\n}\n\n/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nconst htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n];\n\n/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nclass Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property;\n    this.normal = normal;\n    if (space) {\n      this.space = space;\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {};\n/** @type {Normal} */\nSchema.prototype.normal = {};\n/** @type {string|null} */\nSchema.prototype.space = null;\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nfunction merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  let index = -1;\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n\n  return new Schema(property, normal, space)\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction normalize(value) {\n  return value.toLowerCase()\n}\n\nclass Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property;\n    /** @type {string} */\n    this.attribute = attribute;\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null;\nInfo.prototype.boolean = false;\nInfo.prototype.booleanish = false;\nInfo.prototype.overloadedBoolean = false;\nInfo.prototype.number = false;\nInfo.prototype.commaSeparated = false;\nInfo.prototype.spaceSeparated = false;\nInfo.prototype.commaOrSpaceSeparated = false;\nInfo.prototype.mustUseProperty = false;\nInfo.prototype.defined = false;\n\nlet powers = 0;\n\nconst boolean = increment();\nconst booleanish = increment();\nconst overloadedBoolean = increment();\nconst number = increment();\nconst spaceSeparated = increment();\nconst commaSeparated = increment();\nconst commaOrSpaceSeparated = increment();\n\nfunction increment() {\n  return 2 ** ++powers\n}\n\nvar types = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  boolean: boolean,\n  booleanish: booleanish,\n  commaOrSpaceSeparated: commaOrSpaceSeparated,\n  commaSeparated: commaSeparated,\n  number: number,\n  overloadedBoolean: overloadedBoolean,\n  spaceSeparated: spaceSeparated\n});\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types);\n\nclass DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1;\n\n    super(property, attribute);\n\n    mark(this, 'space', space);\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index];\n        mark(this, checks[index], (mask & types[check]) === types[check]);\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true;\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value;\n  }\n}\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\n\nconst own$3 = {}.hasOwnProperty;\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nfunction create(definition) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n  const normal = {};\n  /** @type {string} */\n  let prop;\n\n  for (prop in definition.properties) {\n    if (own$3.call(definition.properties, prop)) {\n      const value = definition.properties[prop];\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      );\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true;\n      }\n\n      property[prop] = info;\n\n      normal[normalize(prop)] = prop;\n      normal[normalize(info.attribute)] = prop;\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n\nconst xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});\n\nconst xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n});\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n\nconst xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n});\n\nconst aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});\n\nconst html$3 = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});\n\nconst svg$1 = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n});\n\n/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\n\nconst valid = /^data[-\\w.:]+$/i;\nconst dash = /-[a-z]/g;\nconst cap = /[A-Z]/g;\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nfunction find(schema, value) {\n  const normal = normalize(value);\n  let prop = value;\n  let Type = Info;\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase);\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1);\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4);\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab);\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes;\n        }\n\n        value = 'data' + dashes;\n      }\n    }\n\n    Type = DefinedInfo;\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nconst html$2 = merge([xml, xlink, xmlns, aria, html$3], 'html');\nconst svg = merge([xml, xlink, xmlns, aria, svg$1], 'svg');\n\n/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own$2 = {}.hasOwnProperty;\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nfunction zwitch(key, options) {\n  const settings = options || {};\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid;\n    const handlers = one.handlers;\n\n    if (value && own$2.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key]);\n      // @ts-expect-error Indexable.\n      fn = own$2.call(handlers, id) ? handlers[id] : one.unknown;\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {};\n  one.invalid = settings.invalid;\n  one.unknown = settings.unknown;\n\n  // @ts-expect-error: matches!\n  return one\n}\n\n/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nfunction core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  );\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = [];\n  let index = -1;\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'));\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase();\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n\n/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nconst characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n];\n\n/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nconst characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n};\n\n/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nconst dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n];\n\nconst own$1 = {}.hasOwnProperty;\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {};\n\n/** @type {string} */\nlet key;\n\nfor (key in characterEntitiesHtml4) {\n  if (own$1.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key;\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nfunction toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code);\n\n  if (own$1.call(characters, character)) {\n    const name = characters[character];\n    const value = '&' + name;\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n\n/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nfunction formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons);\n  /** @type {string|undefined} */\n  let named;\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    );\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons);\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal;\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n\n/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nfunction stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g;\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>'];\nconst commentEntitySubset = ['<', '>'];\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n\n/**\n * @import {Doctype, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n\n/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nfunction ccount(value, character) {\n  const source = String(value);\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0;\n  let index = source.indexOf(character);\n\n  while (index !== -1) {\n    count++;\n    index = source.indexOf(character, index + character.length);\n  }\n\n  return count\n}\n\n/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nfunction stringify$1(values, options) {\n  const settings = options || {};\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values;\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n\n/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nfunction stringify(values) {\n  return values.join(' ').trim()\n}\n\n/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g;\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nfunction whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n\n/**\n * @import {Parents, RootContent} from 'hast'\n */\n\n\nconst siblingAfter = siblings(1);\nconst siblingBefore = siblings(-1);\n\n/** @type {Array<RootContent>} */\nconst emptyChildren$1 = [];\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren$1;\n    let offset = (index || 0) + increment;\n    let next = siblings[offset];\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment;\n        next = siblings[offset];\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n\n/**\n * @import {Element, Parents} from 'hast'\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty;\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nfunction omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n\n/**\n * @import {Element, Parents} from 'hast'\n */\n\n\nconst closing = omission({\n  body: body$1,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html: html$1,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody: tbody$1,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n});\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true);\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody$1(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n\n/**\n * @import {Element, Parents} from 'hast'\n */\n\n\nconst opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n});\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1);\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children;\n  /** @type {Array<string>} */\n  const seen = [];\n  let index = -1;\n\n  while (++index < children.length) {\n    const child = children[index];\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName);\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true);\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1, true);\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index);\n  const head = siblingAfter(node, -1);\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n\n/**\n * @import {Element, Parents, Properties} from 'hast'\n * @import {State} from '../index.js'\n */\n\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n};\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction element(node, index, parent, state) {\n  const schema = state.schema;\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags;\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase());\n  /** @type {Array<string>} */\n  const parts = [];\n  /** @type {string} */\n  let last;\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg;\n  }\n\n  const attributes = serializeAttributes(state, node.properties);\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  );\n\n  state.schema = schema;\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false;\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '');\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1);\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ');\n      }\n\n      parts.push('/');\n    }\n\n    parts.push('>');\n  }\n\n  parts.push(content);\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>');\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = [];\n  let index = -1;\n  /** @type {string} */\n  let key;\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key]);\n        if (value) values.push(value);\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined;\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' ';\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key);\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1;\n  const y = state.settings.allowDangerousCharacters ? 0 : 1;\n  let quote = state.quote;\n  /** @type {string | undefined} */\n  let result;\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true;\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value);\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  );\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? stringify$1 : stringify)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value);\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    );\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative;\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote;\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n\n/**\n * @import {Parents, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&'];\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n\n/**\n * @import {Parents} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n\n/**\n * @import {Parents, Root} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nfunction root(node, _1, _2, state) {\n  return state.all(node)\n}\n\n/**\n * @import {Nodes, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nconst handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n});\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_);\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n\n/**\n * @import {Nodes, Parents, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\n */\n\n\n/** @type {Options} */\nconst emptyOptions = {};\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {};\n\n/** @type {Array<never>} */\nconst emptyChildren = [];\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nfunction toHtml(tree, options) {\n  const options_ = options || emptyOptions;\n  const quote = options_.quote || '\"';\n  const alternative = quote === '\"' ? \"'\" : '\"';\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html$2,\n    quote,\n    alternative\n  };\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nfunction all(parent) {\n  /** @type {Array<string>} */\n  const results = [];\n  const children = (parent && parent.children) || emptyChildren;\n  let index = -1;\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent);\n  }\n\n  return results.join('')\n}\n\n/**\n * Get highlighted code in HTML.\n */\nfunction codeToHtml(internal, code, options) {\n    const context = {\n        meta: {},\n        options,\n        codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n        codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options),\n    };\n    let result = toHtml(codeToHast(internal, code, options, context));\n    for (const transformer of getTransformers(options))\n        result = transformer.postprocess?.call(context, result, options) || result;\n    return result;\n}\n\n/**\n * https://github.com/microsoft/vscode/blob/f7f05dee53fb33fe023db2e06e30a89d3094488f/src/vs/platform/theme/common/colorRegistry.ts#L258-L268\n */\nconst VSCODE_FALLBACK_EDITOR_FG = { light: '#333333', dark: '#bbbbbb' };\nconst VSCODE_FALLBACK_EDITOR_BG = { light: '#fffffe', dark: '#1e1e1e' };\nconst RESOLVED_KEY = '__shiki_resolved';\n/**\n * Normalize a textmate theme to shiki theme\n */\nfunction normalizeTheme(rawTheme) {\n    // @ts-expect-error private field\n    if (rawTheme?.[RESOLVED_KEY])\n        return rawTheme;\n    const theme = {\n        ...rawTheme,\n    };\n    // Fallback settings\n    if (theme.tokenColors && !theme.settings) {\n        theme.settings = theme.tokenColors;\n        delete theme.tokenColors;\n    }\n    theme.type ||= 'dark';\n    theme.colorReplacements = { ...theme.colorReplacements };\n    theme.settings ||= [];\n    // Guess fg/bg colors\n    let { bg, fg } = theme;\n    if (!bg || !fg) {\n        /**\n         * First try:\n         * Theme might contain a global `tokenColor` without `name` or `scope`\n         * Used as default value for foreground/background\n         */\n        const globalSetting = theme.settings\n            ? theme.settings.find((s) => !s.name && !s.scope)\n            : undefined;\n        if (globalSetting?.settings?.foreground)\n            fg = globalSetting.settings.foreground;\n        if (globalSetting?.settings?.background)\n            bg = globalSetting.settings.background;\n        /**\n         * Second try:\n         * If there's no global `tokenColor` without `name` or `scope`\n         * Use `editor.foreground` and `editor.background`\n         */\n        if (!fg && theme?.colors?.['editor.foreground'])\n            fg = theme.colors['editor.foreground'];\n        if (!bg && theme?.colors?.['editor.background'])\n            bg = theme.colors['editor.background'];\n        /**\n         * Last try:\n         * If there's no fg/bg color specified in theme, use default\n         */\n        if (!fg)\n            fg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n        if (!bg)\n            bg = theme.type === 'light' ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n        theme.fg = fg;\n        theme.bg = bg;\n    }\n    // Push a no-scope setting with fallback colors\n    if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n        theme.settings.unshift({\n            settings: {\n                foreground: theme.fg,\n                background: theme.bg,\n            },\n        });\n    }\n    // Push non-hex colors to color replacements, as `vscode-textmate` doesn't support them\n    let replacementCount = 0;\n    const replacementMap = new Map();\n    function getReplacementColor(value) {\n        if (replacementMap.has(value))\n            return replacementMap.get(value);\n        replacementCount += 1;\n        const hex = `#${replacementCount.toString(16).padStart(8, '0').toLowerCase()}`;\n        if (theme.colorReplacements?.[`#${hex}`]) // already exists\n            return getReplacementColor(value);\n        replacementMap.set(value, hex);\n        return hex;\n    }\n    theme.settings = theme.settings.map((setting) => {\n        const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith('#');\n        const replaceBg = setting.settings?.background && !setting.settings.background.startsWith('#');\n        if (!replaceFg && !replaceBg)\n            return setting;\n        const clone = {\n            ...setting,\n            settings: {\n                ...setting.settings,\n            },\n        };\n        if (replaceFg) {\n            const replacement = getReplacementColor(setting.settings.foreground);\n            theme.colorReplacements[replacement] = setting.settings.foreground;\n            clone.settings.foreground = replacement;\n        }\n        if (replaceBg) {\n            const replacement = getReplacementColor(setting.settings.background);\n            theme.colorReplacements[replacement] = setting.settings.background;\n            clone.settings.background = replacement;\n        }\n        return clone;\n    });\n    for (const key of Object.keys(theme.colors || {})) {\n        // Only patch for known keys\n        if (key === 'editor.foreground' || key === 'editor.background' || key.startsWith('terminal.ansi')) {\n            if (!theme.colors[key]?.startsWith('#')) {\n                const replacement = getReplacementColor(theme.colors[key]);\n                theme.colorReplacements[replacement] = theme.colors[key];\n                theme.colors[key] = replacement;\n            }\n        }\n    }\n    Object.defineProperty(theme, RESOLVED_KEY, {\n        enumerable: false,\n        writable: false,\n        value: true,\n    });\n    return theme;\n}\n\n/**\n * Resolve\n */\nasync function resolveLangs(langs) {\n    return Array.from(new Set((await Promise.all(langs\n        .filter(l => !isSpecialLang(l))\n        .map(async (lang) => await normalizeGetter(lang).then(r => Array.isArray(r) ? r : [r])))).flat()));\n}\nasync function resolveThemes(themes) {\n    const resolved = await Promise.all(themes.map(async (theme) => isSpecialTheme(theme)\n        ? null\n        : normalizeTheme(await normalizeGetter(theme))));\n    return resolved.filter(i => !!i);\n}\n\nclass Registry extends Registry$1 {\n    _resolver;\n    _themes;\n    _langs;\n    _alias;\n    _resolvedThemes = new Map();\n    _resolvedGrammars = new Map();\n    _langMap = new Map();\n    _langGraph = new Map();\n    _textmateThemeCache = new WeakMap();\n    _loadedThemesCache = null;\n    _loadedLanguagesCache = null;\n    constructor(_resolver, _themes, _langs, _alias = {}) {\n        super(_resolver);\n        this._resolver = _resolver;\n        this._themes = _themes;\n        this._langs = _langs;\n        this._alias = _alias;\n        this._themes.map(t => this.loadTheme(t));\n        this.loadLanguages(this._langs);\n    }\n    getTheme(theme) {\n        if (typeof theme === 'string')\n            return this._resolvedThemes.get(theme);\n        else\n            return this.loadTheme(theme);\n    }\n    loadTheme(theme) {\n        const _theme = normalizeTheme(theme);\n        if (_theme.name) {\n            this._resolvedThemes.set(_theme.name, _theme);\n            // Reset cache\n            this._loadedThemesCache = null;\n        }\n        return _theme;\n    }\n    getLoadedThemes() {\n        if (!this._loadedThemesCache)\n            this._loadedThemesCache = [...this._resolvedThemes.keys()];\n        return this._loadedThemesCache;\n    }\n    // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`\n    // is expensive. Themes can switch often especially for dual-theme support.\n    //\n    // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,\n    // we omit here so it's easier to cache the themes.\n    setTheme(theme) {\n        let textmateTheme = this._textmateThemeCache.get(theme);\n        if (!textmateTheme) {\n            textmateTheme = Theme.createFromRawTheme(theme);\n            this._textmateThemeCache.set(theme, textmateTheme);\n        }\n        // @ts-expect-error Access private `_syncRegistry`, but should work in runtime\n        this._syncRegistry.setTheme(textmateTheme);\n    }\n    getGrammar(name) {\n        if (this._alias[name]) {\n            const resolved = new Set([name]);\n            while (this._alias[name]) {\n                name = this._alias[name];\n                if (resolved.has(name))\n                    throw new ShikiError(`Circular alias \\`${Array.from(resolved).join(' -> ')} -> ${name}\\``);\n                resolved.add(name);\n            }\n        }\n        return this._resolvedGrammars.get(name);\n    }\n    loadLanguage(lang) {\n        if (this.getGrammar(lang.name))\n            return;\n        const embeddedLazilyBy = new Set([...this._langMap.values()]\n            .filter(i => i.embeddedLangsLazy?.includes(lang.name)));\n        this._resolver.addLanguage(lang);\n        const grammarConfig = {\n            balancedBracketSelectors: lang.balancedBracketSelectors || ['*'],\n            unbalancedBracketSelectors: lang.unbalancedBracketSelectors || [],\n        };\n        // @ts-expect-error Private members, set this to override the previous grammar (that can be a stub)\n        this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n        const g = this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n        g.name = lang.name;\n        this._resolvedGrammars.set(lang.name, g);\n        if (lang.aliases) {\n            lang.aliases.forEach((alias) => {\n                this._alias[alias] = lang.name;\n            });\n        }\n        // Reset cache\n        this._loadedLanguagesCache = null;\n        // If there is a language that embeds this language lazily, we need to reload it\n        if (embeddedLazilyBy.size) {\n            for (const e of embeddedLazilyBy) {\n                this._resolvedGrammars.delete(e.name);\n                // Reset cache\n                this._loadedLanguagesCache = null;\n                // @ts-expect-error clear cache\n                this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n                // @ts-expect-error clear cache\n                this._syncRegistry?._grammars?.delete(e.scopeName);\n                this.loadLanguage(this._langMap.get(e.name));\n            }\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._resolvedThemes.clear();\n        this._resolvedGrammars.clear();\n        this._langMap.clear();\n        this._langGraph.clear();\n        this._loadedThemesCache = null;\n    }\n    loadLanguages(langs) {\n        for (const lang of langs)\n            this.resolveEmbeddedLanguages(lang);\n        const langsGraphArray = Array.from(this._langGraph.entries());\n        const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n        if (missingLangs.length) {\n            const dependents = langsGraphArray\n                .filter(([_, lang]) => lang && lang.embeddedLangs?.some(l => missingLangs.map(([name]) => name).includes(l)))\n                .filter(lang => !missingLangs.includes(lang));\n            throw new ShikiError(`Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(', ')}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(', ')}`);\n        }\n        for (const [_, lang] of langsGraphArray)\n            this._resolver.addLanguage(lang);\n        for (const [_, lang] of langsGraphArray)\n            this.loadLanguage(lang);\n    }\n    getLoadedLanguages() {\n        if (!this._loadedLanguagesCache) {\n            this._loadedLanguagesCache = [\n                ...new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)]),\n            ];\n        }\n        return this._loadedLanguagesCache;\n    }\n    resolveEmbeddedLanguages(lang) {\n        this._langMap.set(lang.name, lang);\n        this._langGraph.set(lang.name, lang);\n        if (lang.embeddedLangs) {\n            for (const embeddedLang of lang.embeddedLangs)\n                this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));\n        }\n    }\n}\n\nclass Resolver {\n    _langs = new Map();\n    _scopeToLang = new Map();\n    _injections = new Map();\n    _onigLib;\n    constructor(engine, langs) {\n        this._onigLib = {\n            createOnigScanner: patterns => engine.createScanner(patterns),\n            createOnigString: s => engine.createString(s),\n        };\n        langs.forEach(i => this.addLanguage(i));\n    }\n    get onigLib() {\n        return this._onigLib;\n    }\n    getLangRegistration(langIdOrAlias) {\n        return this._langs.get(langIdOrAlias);\n    }\n    loadGrammar(scopeName) {\n        return this._scopeToLang.get(scopeName);\n    }\n    addLanguage(l) {\n        this._langs.set(l.name, l);\n        if (l.aliases) {\n            l.aliases.forEach((a) => {\n                this._langs.set(a, l);\n            });\n        }\n        this._scopeToLang.set(l.scopeName, l);\n        if (l.injectTo) {\n            l.injectTo.forEach((i) => {\n                if (!this._injections.get(i))\n                    this._injections.set(i, []);\n                this._injections.get(i).push(l.scopeName);\n            });\n        }\n    }\n    getInjections(scopeName) {\n        const scopeParts = scopeName.split('.');\n        let injections = [];\n        for (let i = 1; i <= scopeParts.length; i++) {\n            const subScopeName = scopeParts.slice(0, i).join('.');\n            injections = [...injections, ...(this._injections.get(subScopeName) || [])];\n        }\n        return injections;\n    }\n}\n\nlet instancesCount = 0;\n/**\n * Get the minimal shiki context for rendering.\n *\n * Synchronous version of `createShikiInternal`, which requires to provide the engine and all themes and languages upfront.\n */\nfunction createShikiInternalSync(options) {\n    instancesCount += 1;\n    if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0)\n        console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \\`highlighter.dispose()\\` to release unused instances.`);\n    let isDisposed = false;\n    if (!options.engine)\n        throw new ShikiError('`engine` option is required for synchronous mode');\n    const langs = (options.langs || []).flat(1);\n    const themes = (options.themes || []).flat(1).map(normalizeTheme);\n    const resolver = new Resolver(options.engine, langs);\n    const _registry = new Registry(resolver, themes, langs, options.langAlias);\n    let _lastTheme;\n    function getLanguage(name) {\n        ensureNotDisposed();\n        const _lang = _registry.getGrammar(typeof name === 'string' ? name : name.name);\n        if (!_lang)\n            throw new ShikiError(`Language \\`${name}\\` not found, you may need to load it first`);\n        return _lang;\n    }\n    function getTheme(name) {\n        if (name === 'none')\n            return { bg: '', fg: '', name: 'none', settings: [], type: 'dark' };\n        ensureNotDisposed();\n        const _theme = _registry.getTheme(name);\n        if (!_theme)\n            throw new ShikiError(`Theme \\`${name}\\` not found, you may need to load it first`);\n        return _theme;\n    }\n    function setTheme(name) {\n        ensureNotDisposed();\n        const theme = getTheme(name);\n        if (_lastTheme !== name) {\n            _registry.setTheme(theme);\n            _lastTheme = name;\n        }\n        const colorMap = _registry.getColorMap();\n        return {\n            theme,\n            colorMap,\n        };\n    }\n    function getLoadedThemes() {\n        ensureNotDisposed();\n        return _registry.getLoadedThemes();\n    }\n    function getLoadedLanguages() {\n        ensureNotDisposed();\n        return _registry.getLoadedLanguages();\n    }\n    function loadLanguageSync(...langs) {\n        ensureNotDisposed();\n        _registry.loadLanguages(langs.flat(1));\n    }\n    async function loadLanguage(...langs) {\n        return loadLanguageSync(await resolveLangs(langs));\n    }\n    async function loadThemeSync(...themes) {\n        ensureNotDisposed();\n        for (const theme of themes.flat(1)) {\n            _registry.loadTheme(theme);\n        }\n    }\n    async function loadTheme(...themes) {\n        ensureNotDisposed();\n        return loadThemeSync(await resolveThemes(themes));\n    }\n    function ensureNotDisposed() {\n        if (isDisposed)\n            throw new ShikiError('Shiki instance has been disposed');\n    }\n    function dispose() {\n        if (isDisposed)\n            return;\n        isDisposed = true;\n        _registry.dispose();\n        instancesCount -= 1;\n    }\n    return {\n        setTheme,\n        getTheme,\n        getLanguage,\n        getLoadedThemes,\n        getLoadedLanguages,\n        loadLanguage,\n        loadLanguageSync,\n        loadTheme,\n        loadThemeSync,\n        dispose,\n        [Symbol.dispose]: dispose,\n    };\n}\n\nlet _defaultWasmLoader;\n/**\n * Set the default wasm loader for `loadWasm`.\n * @internal\n */\nfunction setDefaultWasmLoader(_loader) {\n    _defaultWasmLoader = _loader;\n}\n/**\n * Get the minimal shiki context for rendering.\n */\nasync function createShikiInternal(options = {}) {\n    const [themes, langs, engine,] = await Promise.all([\n        resolveThemes(options.themes || []),\n        resolveLangs(options.langs || []),\n        (options.engine || createWasmOnigEngine(options.loadWasm || _defaultWasmLoader)),\n    ]);\n    return createShikiInternalSync({\n        ...options,\n        loadWasm: undefined,\n        themes,\n        langs,\n        engine,\n    });\n}\n/**\n * @deprecated Use `createShikiInternal` instead.\n */\nfunction getShikiInternal(options = {}) {\n    // TODO: next: console.warn('`getShikiInternal` is deprecated. Use `createShikiInternal` instead.')\n    return createShikiInternal(options);\n}\n\n/**\n * Create a Shiki core highlighter instance, with no languages or themes bundled.\n * Wasm and each language and theme must be loaded manually.\n *\n * @see http://shiki.style/guide/bundles#fine-grained-bundle\n */\nasync function createHighlighterCore(options = {}) {\n    const internal = await createShikiInternal(options);\n    return {\n        getLastGrammarState: (code, options) => getLastGrammarState(internal, code, options),\n        codeToTokensBase: (code, options) => codeToTokensBase(internal, code, options),\n        codeToTokensWithThemes: (code, options) => codeToTokensWithThemes(internal, code, options),\n        codeToTokens: (code, options) => codeToTokens(internal, code, options),\n        codeToHast: (code, options) => codeToHast(internal, code, options),\n        codeToHtml: (code, options) => codeToHtml(internal, code, options),\n        ...internal,\n        getInternalContext: () => internal,\n    };\n}\n/**\n * Create a Shiki core highlighter instance, with no languages or themes bundled.\n * Wasm and each language and theme must be loaded manually.\n *\n * Synchronous version of `createHighlighterCore`, which requires to provide the engine and all themes and languages upfront.\n *\n * @see http://shiki.style/guide/bundles#fine-grained-bundle\n */\nfunction createHighlighterCoreSync(options = {}) {\n    const internal = createShikiInternalSync(options);\n    return {\n        getLastGrammarState: (code, options) => getLastGrammarState(internal, code, options),\n        codeToTokensBase: (code, options) => codeToTokensBase(internal, code, options),\n        codeToTokensWithThemes: (code, options) => codeToTokensWithThemes(internal, code, options),\n        codeToTokens: (code, options) => codeToTokens(internal, code, options),\n        codeToHast: (code, options) => codeToHast(internal, code, options),\n        codeToHtml: (code, options) => codeToHtml(internal, code, options),\n        ...internal,\n        getInternalContext: () => internal,\n    };\n}\nfunction makeSingletonHighlighterCore(createHighlighter) {\n    let _shiki;\n    async function getSingletonHighlighterCore(options = {}) {\n        if (!_shiki) {\n            _shiki = createHighlighter({\n                ...options,\n                themes: options.themes || [],\n                langs: options.langs || [],\n            });\n            return _shiki;\n        }\n        else {\n            const s = await _shiki;\n            await Promise.all([\n                s.loadTheme(...(options.themes || [])),\n                s.loadLanguage(...(options.langs || [])),\n            ]);\n            return s;\n        }\n    }\n    return getSingletonHighlighterCore;\n}\nconst getSingletonHighlighterCore = /* @__PURE__ */ makeSingletonHighlighterCore(createHighlighterCore);\n/**\n * @deprecated Use `createHighlighterCore` or `getSingletonHighlighterCore` instead.\n */\n/* v8 ignore next 5 */\nfunction getHighlighterCore(options = {}) {\n    // TODO: next:  console.warn('`getHighlighterCore` is deprecated. Use `createHighlighterCore` or `getSingletonHighlighterCore` instead.')\n    return createHighlighterCore(options);\n}\n\n// Implementation\nfunction createdBundledHighlighter(arg1, arg2, arg3) {\n    let bundledLanguages;\n    let bundledThemes;\n    let engine;\n    if (arg2) {\n        // TODO: next: console.warn('`createdBundledHighlighter` signature with `bundledLanguages` and `bundledThemes` is deprecated. Use the options object signature instead.')\n        bundledLanguages = arg1;\n        bundledThemes = arg2;\n        engine = () => createWasmOnigEngine(arg3);\n    }\n    else {\n        const options = arg1;\n        bundledLanguages = options.langs;\n        bundledThemes = options.themes;\n        engine = options.engine;\n    }\n    async function createHighlighter(options) {\n        function resolveLang(lang) {\n            if (typeof lang === 'string') {\n                if (isSpecialLang(lang))\n                    return [];\n                const bundle = bundledLanguages[lang];\n                if (!bundle)\n                    throw new ShikiError(`Language \\`${lang}\\` is not included in this bundle. You may want to load it from external source.`);\n                return bundle;\n            }\n            return lang;\n        }\n        function resolveTheme(theme) {\n            if (isSpecialTheme(theme))\n                return 'none';\n            if (typeof theme === 'string') {\n                const bundle = bundledThemes[theme];\n                if (!bundle)\n                    throw new ShikiError(`Theme \\`${theme}\\` is not included in this bundle. You may want to load it from external source.`);\n                return bundle;\n            }\n            return theme;\n        }\n        const _themes = (options.themes ?? []).map(i => resolveTheme(i));\n        const langs = (options.langs ?? [])\n            .map(i => resolveLang(i));\n        const core = await createHighlighterCore({\n            engine: engine(),\n            ...options,\n            themes: _themes,\n            langs,\n        });\n        return {\n            ...core,\n            loadLanguage(...langs) {\n                return core.loadLanguage(...langs.map(resolveLang));\n            },\n            loadTheme(...themes) {\n                return core.loadTheme(...themes.map(resolveTheme));\n            },\n        };\n    }\n    return createHighlighter;\n}\nfunction makeSingletonHighlighter(createHighlighter) {\n    let _shiki;\n    async function getSingletonHighlighter(options = {}) {\n        if (!_shiki) {\n            _shiki = createHighlighter({\n                ...options,\n                themes: options.themes || [],\n                langs: options.langs || [],\n            });\n            return _shiki;\n        }\n        else {\n            const s = await _shiki;\n            await Promise.all([\n                s.loadTheme(...(options.themes || [])),\n                s.loadLanguage(...(options.langs || [])),\n            ]);\n            return s;\n        }\n    }\n    return getSingletonHighlighter;\n}\nfunction createSingletonShorthands(createHighlighter) {\n    const getSingletonHighlighter = makeSingletonHighlighter(createHighlighter);\n    return {\n        getSingletonHighlighter(options) {\n            return getSingletonHighlighter(options);\n        },\n        async codeToHtml(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToHtml(code, options);\n        },\n        async codeToHast(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToHast(code, options);\n        },\n        async codeToTokens(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: ('theme' in options ? [options.theme] : Object.values(options.themes)),\n            });\n            return shiki.codeToTokens(code, options);\n        },\n        async codeToTokensBase(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: [options.theme],\n            });\n            return shiki.codeToTokensBase(code, options);\n        },\n        async codeToTokensWithThemes(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: Object.values(options.themes).filter(Boolean),\n            });\n            return shiki.codeToTokensWithThemes(code, options);\n        },\n        async getLastGrammarState(code, options) {\n            const shiki = await getSingletonHighlighter({\n                langs: [options.lang],\n                themes: [options.theme],\n            });\n            return shiki.getLastGrammarState(code, options);\n        },\n    };\n}\n\nconst MAX = 4294967295;\n/**\n * The default RegExp constructor for JavaScript regex engine.\n */\nfunction defaultJavaScriptRegexConstructor(pattern) {\n    pattern = pattern\n        // YAML specific handling; TODO: move to tm-grammars\n        .replaceAll('[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>\\'\"%@`]]', '[^\\\\s\\\\-?:,\\\\[\\\\]{}#&*!|>\\'\"%@`]');\n    const rewritten = rewrite(pattern, {\n        flags: 'dgm',\n        unicodeSetsPlugin: null,\n        disable: {\n            n: true,\n            v: true,\n            x: true,\n        },\n    });\n    return onigurumaToRegexp(rewritten.expression, {\n        flags: 'dgm',\n        ignoreContiguousAnchors: true,\n    });\n}\nclass JavaScriptScanner {\n    patterns;\n    cache;\n    forgiving;\n    regexConstructor;\n    regexps;\n    constructor(patterns, cache, forgiving, regexConstructor = defaultJavaScriptRegexConstructor) {\n        this.patterns = patterns;\n        this.cache = cache;\n        this.forgiving = forgiving;\n        this.regexConstructor = regexConstructor;\n        this.regexps = patterns.map((p) => {\n            const cached = cache?.get(p);\n            if (cached) {\n                if (cached instanceof RegExp) {\n                    return cached;\n                }\n                if (forgiving)\n                    return null;\n                throw cached;\n            }\n            try {\n                const regex = regexConstructor(p);\n                cache?.set(p, regex);\n                return regex;\n            }\n            catch (e) {\n                cache?.set(p, e);\n                if (forgiving)\n                    return null;\n                // console.error({ ...e })\n                throw e;\n            }\n        });\n    }\n    findNextMatchSync(string, startPosition) {\n        const str = typeof string === 'string'\n            ? string\n            : string.content;\n        const pending = [];\n        function toResult(index, match) {\n            return {\n                index,\n                captureIndices: match.indices.map((indice) => {\n                    if (indice == null) {\n                        return {\n                            end: MAX,\n                            start: MAX,\n                            length: 0,\n                        };\n                    }\n                    return {\n                        start: indice[0],\n                        length: indice[1] - indice[0],\n                        end: indice[1],\n                    };\n                }),\n            };\n        }\n        for (let i = 0; i < this.regexps.length; i++) {\n            const regexp = this.regexps[i];\n            if (!regexp)\n                continue;\n            try {\n                regexp.lastIndex = startPosition;\n                const match = regexp.exec(str);\n                if (!match)\n                    continue;\n                // If the match is at the start position, return it immediately\n                if (match.index === startPosition) {\n                    return toResult(i, match);\n                }\n                // Otherwise, store it for later\n                pending.push([i, match]);\n            }\n            catch (e) {\n                if (this.forgiving)\n                    continue;\n                throw e;\n            }\n        }\n        // Find the closest match to the start position\n        if (pending.length) {\n            const minIndex = Math.min(...pending.map(m => m[1].index));\n            for (const [i, match] of pending) {\n                if (match.index === minIndex) {\n                    return toResult(i, match);\n                }\n            }\n        }\n        return null;\n    }\n}\n/**\n * Use the modern JavaScript RegExp engine to implement the OnigScanner.\n *\n * As Oniguruma regex is more powerful than JavaScript regex, some patterns may not be supported.\n * Errors will be thrown when parsing TextMate grammars with unsupported patterns.\n * Set `forgiving` to `true` to ignore these errors and skip the unsupported patterns.\n *\n * @experimental\n */\nfunction createJavaScriptRegexEngine(options = {}) {\n    const { forgiving = false, cache = new Map(), } = options;\n    return {\n        createScanner(patterns) {\n            return new JavaScriptScanner(patterns, cache, forgiving, options.regexConstructor);\n        },\n        createString(s) {\n            return {\n                content: s,\n            };\n        },\n    };\n}\n\nexport { FontStyle, ShikiError, addClassToHast, applyColorReplacements, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighterCore, createHighlighterCoreSync, createJavaScriptRegexEngine, createPositionConverter, createShikiInternal, createShikiInternalSync, createSingletonShorthands, createWasmOnigEngine, createdBundledHighlighter, defaultJavaScriptRegexConstructor, getHighlighterCore, getShikiInternal, getSingletonHighlighterCore, getTokenStyleObject, toHtml as hastToHtml, isNoneTheme, isPlainLang, isSpecialLang, isSpecialTheme, loadWasm, makeSingletonHighlighter, makeSingletonHighlighterCore, normalizeGetter, normalizeTheme, resolveColorReplacements, setDefaultWasmLoader, splitLines, splitToken, splitTokens, stringifyTokenStyle, toArray, tokenizeAnsiWithTheme, tokenizeWithTheme, tokensToHast, transformerDecorations };\n","import { bundledLanguages } from './langs.mjs';\nexport { bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo } from './langs.mjs';\nimport { g as getWasmInlined } from './chunks/wasm-dynamic.mjs';\nimport { bundledThemes } from './themes.mjs';\nexport { bundledThemesInfo } from './themes.mjs';\nimport { createdBundledHighlighter, createWasmOnigEngine, createSingletonShorthands } from '@shikijs/core';\nexport * from '@shikijs/core';\nexport { createCssVariablesTheme } from './theme-css-variables.mjs';\n\nconst createHighlighter = /* @__PURE__ */ createdBundledHighlighter({\n  langs: bundledLanguages,\n  themes: bundledThemes,\n  engine: () => createWasmOnigEngine(getWasmInlined)\n});\nconst {\n  codeToHtml,\n  codeToHast,\n  codeToTokens,\n  codeToTokensBase,\n  codeToTokensWithThemes,\n  getSingletonHighlighter,\n  getLastGrammarState\n} = /* @__PURE__ */ createSingletonShorthands(\n  createHighlighter\n);\nconst getHighlighter = (options) => {\n  return createHighlighter(options);\n};\n\nexport { bundledLanguages, bundledThemes, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighter, getHighlighter, getLastGrammarState, getSingletonHighlighter, getWasmInlined };\n","\"use client\";\nimport{useMemo as p}from\"react\";import m from\"clsx\";import{createHighlighter as l}from\"shiki\";import h from\"./code.module-EGKDOBO5.module.css\";var u={displayName:\"Pseudocodice\",name:\"srs\",scopeName:\"source.srs\",patterns:[{include:\"#constant\"},{include:\"#entity\"},{include:\"#invalid\"},{include:\"#keywords\"},{include:\"#punctuation\"},{include:\"#storage\"},{include:\"#strings\"},{include:\"#support\"}],repository:{constant:{patterns:[{match:\"\\\\b-?\\\\d+(\\\\.\\\\d+)?\\\\b\",name:\"constant.numeric\"}]},entity:{patterns:[{match:\"(?<=function\\\\s+)\\\\w+(?=\\\\()\",name:\"entity.name.function\"}]},invalid:{patterns:[{match:\"\\\\[\\\\?+]\",name:\"invalid.illegal\"}]},keywords:{patterns:[{match:\"\\\\b(return|end|if|then|else|for|in|while|do)\\\\b\",name:\"keyword.control\"},{match:\"[<>]|\\\\b(mod|and|or|not)\\\\b\",name:\"keyword.operator\"},{match:\"[+/=\\xD7\\u2026\\u2190\\u2192\\u2260\\u2264\\u2265-]\",name:\"keyword.operator\"}]},punctuation:{patterns:[{match:\"[\\\\[\\\\]()]\",name:\"punctuation\"}]},storage:{patterns:[{match:\"\\\\b(integer|variable|function)\\\\b\",name:\"storage.type\"}]},strings:{patterns:[{match:'\"(?:\\\\\\\\.|[^\\\\\\\\\"])*\"',name:\"string.quoted.double\"}]},support:{patterns:[{match:\"\\\\b(max|min|output)\\\\b\",name:\"support.function\"}]},$self:{},$base:{}}},i=u;import{jsx as r}from\"react/jsx-runtime\";var n=await l({themes:[\"github-light\",\"github-dark\"],langs:[i]});function g({code:a,lang:t,inline:e,className:o}){let d=n.getLoadedLanguages();if(t!==\"srs\"&&t!==\"text\"&&!d.includes(t))throw n.loadLanguage(t);let s=p(()=>n.codeToHtml(a,{lang:t,themes:{light:\"github-light\",dark:\"github-dark\"},structure:e?\"inline\":\"classic\",transformers:[{pre(c){this.addClassToHast(c,h.pre)}}]}),[a,t,e]);return e?r(\"span\",{className:\"not-prose\",children:r(\"code\",{dangerouslySetInnerHTML:{__html:s},className:m(\"shiki\",o)})}):r(\"div\",{dangerouslySetInnerHTML:{__html:s},className:m(\"not-prose\",o)})}export{g as default};\n//# sourceMappingURL=highlight-UOJF2D5K.js.map"],"file":"assets/r/4a0bfe58-highlight-UOJF2D5K.js"}