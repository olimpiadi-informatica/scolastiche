{"version":3,"file":"cda85021-regexp.js","sources":["../../../node_modules/shiki/dist/langs/regexp.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"RegExp\", \"fileTypes\": [\"re\"], \"name\": \"regexp\", \"patterns\": [{ \"include\": \"#regexp-expression\" }], \"repository\": { \"codetags\": { \"captures\": { \"1\": { \"name\": \"keyword.codetag.notation.python\" } }, \"match\": \"(?:\\\\b(NOTE|XXX|HACK|FIXME|BUG|TODO)\\\\b)\" }, \"fregexp-base-expression\": { \"patterns\": [{ \"include\": \"#fregexp-quantifier\" }, { \"include\": \"#fstring-formatting-braces\" }, { \"match\": \"\\\\{.*?\\\\}\" }, { \"include\": \"#regexp-base-common\" }] }, \"fregexp-quantifier\": { \"match\": \"\\\\{\\\\{(\\\\d+|\\\\d+,(\\\\d+)?|,\\\\d+)\\\\}\\\\}\", \"name\": \"keyword.operator.quantifier.regexp\" }, \"fstring-formatting-braces\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.format.placeholder.other.python\" }, \"2\": { \"name\": \"invalid.illegal.brace.python\" }, \"3\": { \"name\": \"constant.character.format.placeholder.other.python\" } }, \"comment\": \"empty braces are illegal\", \"match\": \"({)(\\\\s*?)(})\" }, { \"match\": \"({{|}})\", \"name\": \"constant.character.escape.python\" }] }, \"regexp-backreference\": { \"captures\": { \"1\": { \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.backreference.named.begin.regexp\" }, \"2\": { \"name\": \"entity.name.tag.named.backreference.regexp\" }, \"3\": { \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.backreference.named.end.regexp\" } }, \"match\": \"(\\\\()(\\\\?P=\\\\w+(?:\\\\s+[0-9A-Za-z]+)?)(\\\\))\", \"name\": \"meta.backreference.named.regexp\" }, \"regexp-backreference-number\": { \"captures\": { \"1\": { \"name\": \"entity.name.tag.backreference.regexp\" } }, \"match\": \"(\\\\\\\\[1-9]\\\\d?)\", \"name\": \"meta.backreference.regexp\" }, \"regexp-base-common\": { \"patterns\": [{ \"match\": \"\\\\.\", \"name\": \"support.other.match.any.regexp\" }, { \"match\": \"\\\\^\", \"name\": \"support.other.match.begin.regexp\" }, { \"match\": \"\\\\$\", \"name\": \"support.other.match.end.regexp\" }, { \"match\": \"[+*?]\\\\??\", \"name\": \"keyword.operator.quantifier.regexp\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.disjunction.regexp\" }, { \"include\": \"#regexp-escape-sequence\" }] }, \"regexp-base-expression\": { \"patterns\": [{ \"include\": \"#regexp-quantifier\" }, { \"include\": \"#regexp-base-common\" }] }, \"regexp-character-set\": { \"patterns\": [{ \"match\": \"\\\\[\\\\^?\\\\](?!.*?\\\\])\" }, { \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp\" }, \"3\": { \"name\": \"constant.character.set.regexp\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"name\": \"meta.character.set.regexp\", \"patterns\": [{ \"include\": \"#regexp-charecter-set-escapes\" }, { \"match\": \"[^\\\\n]\", \"name\": \"constant.character.set.regexp\" }] }] }, \"regexp-charecter-set-escapes\": { \"patterns\": [{ \"match\": \"\\\\\\\\[abfnrtv\\\\\\\\]\", \"name\": \"constant.character.escape.regexp\" }, { \"include\": \"#regexp-escape-special\" }, { \"match\": \"\\\\\\\\([0-7]{1,3})\", \"name\": \"constant.character.escape.regexp\" }, { \"include\": \"#regexp-escape-character\" }, { \"include\": \"#regexp-escape-unicode\" }, { \"include\": \"#regexp-escape-catchall\" }] }, \"regexp-comments\": { \"begin\": \"\\\\(\\\\?#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.comment.begin.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.comment.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"name\": \"comment.regexp\", \"patterns\": [{ \"include\": \"#codetags\" }] }, \"regexp-conditional\": { \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[0-9A-Za-z]+)?|\\\\d+)\\\\)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.conditional.regexp\" }, \"1\": { \"name\": \"punctuation.parenthesis.conditional.begin.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"patterns\": [{ \"include\": \"#regexp-expression\" }] }, \"regexp-escape-catchall\": { \"match\": \"\\\\\\\\(.|\\\\n)\", \"name\": \"constant.character.escape.regexp\" }, \"regexp-escape-character\": { \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|0[0-7]{1,2}|[0-7]{3})\", \"name\": \"constant.character.escape.regexp\" }, \"regexp-escape-sequence\": { \"patterns\": [{ \"include\": \"#regexp-escape-special\" }, { \"include\": \"#regexp-escape-character\" }, { \"include\": \"#regexp-escape-unicode\" }, { \"include\": \"#regexp-backreference-number\" }, { \"include\": \"#regexp-escape-catchall\" }] }, \"regexp-escape-special\": { \"match\": \"\\\\\\\\([AbBdDsSwWZ])\", \"name\": \"support.other.escape.special.regexp\" }, \"regexp-escape-unicode\": { \"match\": \"\\\\\\\\(u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})\", \"name\": \"constant.character.unicode.regexp\" }, \"regexp-expression\": { \"patterns\": [{ \"include\": \"#regexp-base-expression\" }, { \"include\": \"#regexp-character-set\" }, { \"include\": \"#regexp-comments\" }, { \"include\": \"#regexp-flags\" }, { \"include\": \"#regexp-named-group\" }, { \"include\": \"#regexp-backreference\" }, { \"include\": \"#regexp-lookahead\" }, { \"include\": \"#regexp-lookahead-negative\" }, { \"include\": \"#regexp-lookbehind\" }, { \"include\": \"#regexp-lookbehind-negative\" }, { \"include\": \"#regexp-conditional\" }, { \"include\": \"#regexp-parentheses-non-capturing\" }, { \"include\": \"#regexp-parentheses\" }] }, \"regexp-flags\": { \"match\": \"\\\\(\\\\?[aiLmsux]+\\\\)\", \"name\": \"storage.modifier.flag.regexp\" }, \"regexp-lookahead\": { \"begin\": \"(\\\\()\\\\?=\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.lookahead.regexp\" }, \"1\": { \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"patterns\": [{ \"include\": \"#regexp-expression\" }] }, \"regexp-lookahead-negative\": { \"begin\": \"(\\\\()\\\\?!\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.lookahead.negative.regexp\" }, \"1\": { \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"patterns\": [{ \"include\": \"#regexp-expression\" }] }, \"regexp-lookbehind\": { \"begin\": \"(\\\\()\\\\?<=\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.lookbehind.regexp\" }, \"1\": { \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"patterns\": [{ \"include\": \"#regexp-expression\" }] }, \"regexp-lookbehind-negative\": { \"begin\": \"(\\\\()\\\\?<!\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.lookbehind.negative.regexp\" }, \"1\": { \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"patterns\": [{ \"include\": \"#regexp-expression\" }] }, \"regexp-named-group\": { \"begin\": \"(\\\\()(\\\\?P<\\\\w+(?:\\\\s+[0-9A-Za-z]+)?>)\", \"beginCaptures\": { \"1\": { \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\" }, \"2\": { \"name\": \"entity.name.tag.named.group.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"name\": \"meta.named.regexp\", \"patterns\": [{ \"include\": \"#regexp-expression\" }] }, \"regexp-parentheses\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"patterns\": [{ \"include\": \"#regexp-expression\" }] }, \"regexp-parentheses-non-capturing\": { \"begin\": \"\\\\(\\\\?:\", \"beginCaptures\": { \"0\": { \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\" }, \"2\": { \"name\": \"invalid.illegal.newline.python\" } }, \"patterns\": [{ \"include\": \"#regexp-expression\" }] }, \"regexp-quantifier\": { \"match\": \"\\\\{(\\\\d+|\\\\d+,(\\\\d+)?|,\\\\d+)\\\\}\", \"name\": \"keyword.operator.quantifier.regexp\" } }, \"scopeName\": \"source.regexp.python\", \"aliases\": [\"regex\"] });\nvar regexp = [\n  lang\n];\n\nexport { regexp as default };\n"],"names":["lang","regexp"],"mappings":"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","x_google_ignoreList":[0]}