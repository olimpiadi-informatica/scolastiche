/*! For licenses information, see LICENSES.txt */
import{r as h,c as w}from"./react-dom-BhtgsTX5.js";import{j as e}from"./toString-B7mxur-0.js";import{u as s,r as j,O as y}from"./olinfo-auth-DV3DIqQe.js";import{M as z,a as C,b as M,c as N}from"./question-Dvr1qsJL.js";import{C as E,S as d,V as L}from"./visualizer-Duv0zybs.js";function g(a){const n={em:"em",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...s(),...a.components};return e.jsxs(e.Fragment,{children:[e.jsx(n.h1,{children:"Giochi di Fibonacci 2023/2024"}),`
`,e.jsx(n.h2,{children:"Allenamento per la Fase II - Scuole primarie"}),`
`,e.jsxs(n.p,{children:["Questa prova contiene ",e.jsx(n.em,{children:"6 domande"})," da risolvere in ",e.jsx(n.em,{children:"100 minuti"}),`.
Le domande sono a `,e.jsx(n.strong,{children:"scelta multipla"})," o a ",e.jsx(n.strong,{children:"blocchi"}),", e sono divise in due parti:"]}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsxs(n.li,{children:["domande di interpretazione di ",e.jsx(n.strong,{children:"procedimenti procedurali"})," come programmi a blocchi, e"]}),`
`,e.jsxs(n.li,{children:["domande di ",e.jsx(n.strong,{children:"programmazione"})," tramite blocchi."]}),`
`]}),`
`,e.jsxs(n.p,{children:[`In entrambe le parti, le domande sono ordinate per difficoltà crescente.
`,e.jsx(n.strong,{children:"Attento che la difficoltà è soggettiva!"})," Se stai passando tanto tempo cercando di risolvere una domanda, prova a passare ad altre domande e altre categorie!"]}),`
`,e.jsx(n.h2,{children:"Punteggio"}),`
`,e.jsxs(n.p,{children:["Tutte le domande a ",e.jsx(n.em,{children:"scelta multipla"})," hanno 5 opzioni, di cui ",e.jsx(n.strong,{children:"solo una"})," è corretta. Il punteggio che puoi ottenere è:"]}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsxs(n.li,{children:["5 punti per una risposta ",e.jsx(n.em,{children:"corretta"}),";"]}),`
`,e.jsxs(n.li,{children:["1 punto per una risposta ",e.jsx(n.em,{children:"non data"}),";"]}),`
`,e.jsxs(n.li,{children:["0 punti per una risposta ",e.jsx(n.em,{children:"sbagliata"}),"."]}),`
`]}),`
`,e.jsxs(n.p,{children:["Le domande a ",e.jsx(n.em,{children:"blocchi"}),` richiedono di scrivere un singolo programma a blocchi, che viene valutato su tre diversi livelli.
Per ciascuna domanda e per ciascun livello, Il punteggio che puoi ottenere è:`]}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsxs(n.li,{children:["5 punti se il programma produce la risposta ",e.jsx(n.em,{children:"corretta"}),";"]}),`
`,e.jsxs(n.li,{children:["0 punti se il programma produce una risposta ",e.jsx(n.em,{children:"sbagliata"}),"."]}),`
`]}),`
`,e.jsx(n.p,{children:"Quindi ogni domanda a blocchi può valere fino a 15 punti in totale."})]})}function R(a={}){const{wrapper:n}={...s(),...a.components};return n?e.jsx(n,{...a,children:e.jsx(g,{...a})}):g(a)}const u={src:new URL("code-BTSFZks2.svg",import.meta.url).href,width:"977.3333333333333",height:"973.3333333333333"};function S(a){const n={p:"p",span:"span",...s(),...a.components},{Answer:i,AnswerGroup:t,Explanation:o,Image:c,SubProblem:r}=n;return i||p("Answer"),t||p("AnswerGroup"),o||p("Explanation"),c||p("Image"),r||p("SubProblem"),e.jsxs(r,{children:[e.jsx(n.p,{children:"Quali dei tre procedimenti consentono a Tip-Tap di prepararsi un piatto di carote? All’inizio piatto e carote sono nella dispensa, e alla fine devono trovarsi entrambi sul suo tavolo."}),e.jsx(n.p,{children:e.jsx(n.span,{className:"flex justify-center",children:e.jsx(c,{alt:"test",src:typeof u=="function"?u(_variant):u})})}),e.jsxs(t,{children:[e.jsx(i,{correct:!0,children:e.jsx(n.p,{children:"Solo 1"})}),e.jsx(i,{correct:!1,children:e.jsx(n.p,{children:"Solo 2"})}),e.jsx(i,{correct:!1,children:e.jsx(n.p,{children:"Solo 3"})}),e.jsx(i,{correct:!1,children:e.jsx(n.p,{children:"1 e 2"})}),e.jsx(i,{correct:!1,children:e.jsx(n.p,{children:"2 e 3"})})]}),e.jsx(o,{children:e.jsx(n.p,{children:"Il procedimento 1 consente a Tip-Tap di preparare un piatto di carote, portando prima il piatto e poi le carote dalla dispensa al tavolo. Il procedimento 2 non funziona, perché impone a Tip-Tap di posare il piatto prima di averlo preso. Il procedimento 3 non funziona, perché impone a Tip-Tap di prendere il piatto mentre si trova al tavolo, anche se il piatto si trova nella dispensa."})})]})}function T(a={}){const{wrapper:n}={...s(),...a.components};return n?e.jsx(n,{...a,children:e.jsx(S,{...a})}):S(a)}function p(a,n){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}const m={src:new URL("sol-CuR151kK.webp",import.meta.url).href,width:"439",height:"565"},k={languageVersion:0,blocks:[{type:"start",id:"y=zq)Uya2A/{vyOtN[i6",x:61,y:81}]},D=[],$={blocks:k,variables:D},I=[{type:"start",message0:"inizia qui",nextStatement:null,colour:20,tooltip:"L'esecuzione inizia da qui",helpUrl:"",maxInstances:1,js:""},{type:"avanza",message0:"avanza",previousStatement:null,nextStatement:null,colour:20,tooltip:"Vai avanti",helpUrl:"",js:`if(hiddenState.pos < hiddenState.N && hiddenState.door[hiddenState.pos] === 1 && !hiddenState.open[hiddenState.pos]) {
  exit(false, "non puoi avanzare, c\\'è una porta chiusa");
}
hiddenState.pos += 1;
if(hiddenState.pos > hiddenState.N) {
  exit(false, "hai superato la carota");
}
`},{type:"vedi porta chiusa",message0:"vedi porta chiusa",output:"Boolean",colour:20,tooltip:"vedi porta chiusa",helpUrl:"",js:["hiddenState.pos < hiddenState.N && hiddenState.door[hiddenState.pos] === 1 && !hiddenState.open[hiddenState.pos]","ORDER_LOGICAL_AND"]},{type:"N",message0:"N",output:"Number",colour:20,tooltip:"distanza iniziale dalla carota",helpUrl:"",js:["hiddenState.N","ORDER_MEMBER"]},{type:"apri porta",message0:"apri porta",previousStatement:null,nextStatement:null,colour:20,tooltip:"apri porta",helpUrl:"",js:`if(hiddenState.pos == hiddenState.N || hiddenState.door[hiddenState.pos] === 0 || hiddenState.open[hiddenState.pos]) {
  exit(false, "non ci sono porte da aprire");
}
hiddenState.open[hiddenState.pos] = true;
`},{type:"mangia carota",message0:"mangia carota",previousStatement:null,colour:20,tooltip:"mangia carota",helpUrl:"",js:`if(hiddenState.pos !== hiddenState.N) {
  exit(false, "non ci sono carote da mangiare");
}
hiddenState.eaten = true;
exit(true, "hai mangiato la carota, bravo!");
`}],_=[{door:[1,1,0,0,1],open:[!1,!1,!1,!1,!1],pos:0,N:5,eaten:!1},{door:[1,1,1,1,1,1,1,1,1,1],open:[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],pos:0,N:10,eaten:!1},{door:[0,1,0,0,1,1,1,0,1,1,0,1,1,1,1,0,1,1,1,0],open:[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],pos:0,N:20,eaten:!1}],A={src:new URL("bunny-CYq1cKrR.svg",import.meta.url).href,width:"66",height:"116.23880597014924"},U={src:new URL("rock-kFoDyZE_.svg",import.meta.url).href,width:"93",height:"26.71276595744681"},X={src:new URL("closed-door-W9kORwyj.svg",import.meta.url).href,width:"55",height:"172.85714285714286"},B={src:new URL("opened-door-C3xApehS.svg",import.meta.url).href,width:"100",height:"162.00000000000003"},P={src:new URL("carrot-CcABd57p.svg",import.meta.url).href,width:"40",height:"40"};function F({variables:a}){const{blocklyVariables:n,hiddenState:i}=a;return i?e.jsxs(e.Fragment,{children:[e.jsxs(E,{scale:130,children:[j(i.N).map(t=>e.jsx(h.Fragment,{children:!!i.door[t]&&(i.open[t]?e.jsx(d,{src:B,alt:"Porta aperta",x:t+.77,y:-.23}):e.jsx(d,{src:X,alt:"Porta chiusa",x:t+.65,y:0}))},t)),j(i.N+1).map(t=>e.jsx(d,{src:U,alt:"Sasso",x:t,y:.92},t)),e.jsx(d,{src:A,alt:"Bunny",x:i.pos+.15,y:.15,follow:!0}),e.jsx(d,{src:P,alt:"Carota",x:i.N+(i.eaten?.43:.46),y:i.eaten?.37:.77})]}),e.jsx(L,{variables:n})]}):null}function v(a){const n={li:"li",p:"p",span:"span",ul:"ul",...s(),...a.components},{Blockly:i,Code:t,Explanation:o,Image:c,MathExpr:r,SubProblem:f}=n;return i||l("Blockly"),t||l("Code"),o||l("Explanation"),c||l("Image"),r||l("MathExpr"),f||l("SubProblem"),e.jsxs(f,{children:[e.jsxs(n.p,{children:[`Tip-Tap vorrebbe tanto mangiare la sua carota, prima però deve raggiungerla!
A separarlo dal suo obiettivo ci sono `,e.jsx(r,{children:String.raw`N`}),` rocce, alcune divise da porte chiuse.
Tip-Tap sa compiere le seguenti azioni:`]}),e.jsxs(n.ul,{children:[`
`,e.jsxs(n.li,{children:[e.jsx(t,{code:String.raw`avanza`,inline:!0,language:"text",noLineNumbers:!1}),": salta alla roccia più vicina a destra, solo se non c’è una porta chiusa in mezzo."]}),`
`,e.jsxs(n.li,{children:[e.jsx(t,{code:String.raw`vedi porta chiusa`,inline:!0,language:"text",noLineNumbers:!1}),": condizione vera se di fianco a te c’è una porta chiusa."]}),`
`,e.jsxs(n.li,{children:[e.jsx(t,{code:String.raw`apri porta`,inline:!0,language:"text",noLineNumbers:!1}),": apri la porta a destra, ma solo se è di fianco a te."]}),`
`,e.jsxs(n.li,{children:[e.jsx(t,{code:String.raw`mangia carota`,inline:!0,language:"text",noLineNumbers:!1}),": mangia la carota a destra (solo se è di fianco a te) e termina il programma."]}),`
`]}),e.jsx(n.p,{children:"Scrivi un programma che consenta a Tip-Tap di mangiare sempre la carota!"}),e.jsx(i,{customBlocks:I,initialBlocks:$,testcases:_,debug:{logBlocks:!1,logJs:!1,logVariables:!1},Visualizer:F}),e.jsxs(o,{children:[e.jsx(n.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(n.p,{children:e.jsx(n.span,{className:"flex justify-center",children:e.jsx(c,{alt:"soluzione",src:typeof m=="function"?m(_variant):m})})}),e.jsxs(n.p,{children:["Secondo questo programma, per ognuno degli ",e.jsx(r,{children:String.raw`N`}),` passi che Tip-Tap deve fare, il protagonista
controlla innanzitutto se vede una porta chiusa. Se la vede, allora la apre; e poi in ogni caso
avanza alla roccia successiva. Completati tutti gli `,e.jsx(r,{children:String.raw`N`})," passi, Tip-Tap procede quindi a mangiare la carota."]})]})]})}function V(a={}){const{wrapper:n}={...s(),...a.components};return n?e.jsx(n,{...a,children:e.jsx(v,{...a})}):v(a)}function l(a,n){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}function b(a){const n={h2:"h2",...s(),...a.components},{Contest:i,Problem:t,Section:o}=n;return i||x("Contest"),t||x("Problem"),o||x("Section"),e.jsxs(i,{children:[e.jsx(n.h2,{children:"Sezione 1: procedimenti procedurali"}),e.jsxs(o,{children:[e.jsx(t,{points:[5,1,0],statement:T,id:1}),e.jsx(t,{points:[5,1,0],statement:z,id:2}),e.jsx(t,{points:[5,1,0],statement:C,id:3})]}),e.jsx(n.h2,{children:"Sezione 2: programmazione"}),e.jsxs(o,{children:[e.jsx(t,{points:[5,0,0],statement:V,id:4}),e.jsx(t,{points:[5,0,0],statement:M,id:5}),e.jsx(t,{points:[5,0,0],statement:N,id:6})]})]})}function q(a={}){const{wrapper:n}={...s(),...a.components};return n?e.jsx(n,{...a,children:e.jsx(b,{...a})}):b(a)}function x(a,n){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}const O="Giochi di Fibonacci 2023/2024 - Demo Fase II - Scuole primarie";function G(){return e.jsxs(y,{questionCount:12,duration:100,children:[e.jsx(R,{}),e.jsx(q,{})]})}document.title=O;w(document.getElementById("app")).render(h.createElement(h.StrictMode,null,h.createElement(G)));
//# sourceMappingURL=page-fibonacci-primarie-2023-seconda-fase-demo-waVhFyI7.js.map
