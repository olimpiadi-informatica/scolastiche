/*! For licenses information, see LICENSES.txt */
import{_ as E}from"../s/00dd80a9-react-dom.js";import{j as e}from"../_virtual_quizms-routes-42d422bb.js";import{n as j}from"../w/02f425e5-chunk-IFWY6GUU.js";const A={src:new URL("../7/7df21b95-ex1.svg",import.meta.url).href,width:1067,height:489},qe={src:new URL("../4/4a14d862-immagine.svg",import.meta.url).href,width:1415,height:493},Le={src:new URL("../e/e61d1a68-immagine.svg",import.meta.url).href,width:1415,height:493},Ue={src:new URL("../2/232a02d5-immagine.svg",import.meta.url).href,width:1749,height:495},ze={src:new URL("../3/34852166-immagine.svg",import.meta.url).href,width:1749,height:495},ke={src:new URL("../5/5a800e0d-immagine.svg",import.meta.url).href,width:1087,height:492},Ee=JSON.parse('[{"n":4,"s":4,"ans1":18,"wrong1":[20,16,22,8],"ans2":20,"wrong2":[18,16,22,28]},{"n":4,"s":5,"ans1":22,"wrong1":[24,20,26,9],"ans2":24,"wrong2":[22,20,26,36]},{"n":5,"s":3,"ans1":18,"wrong1":[20,15,22,8],"ans2":20,"wrong2":[18,15,22,23]},{"n":5,"s":4,"ans1":23,"wrong1":[25,20,27,9],"ans2":25,"wrong2":[23,20,27,32]},{"n":3,"s":5,"ans1":16,"wrong1":[18,15,20,8],"ans2":18,"wrong2":[16,15,20,31]}]'),Ne=[qe,Le,Ue,ze,ke];function _(a){return Ne[a]}const C={src:new URL("../3/34a8e714-4-1-secondarie.svg",import.meta.url).href,width:305,height:248},I={src:new URL("../8/801a16ed-ex2.svg",import.meta.url).href,width:739,height:497},B={src:new URL("../7/7debb0ca-4-2-secondarie.svg",import.meta.url).href,width:305,height:248};function be(a){const i=Ee,[n,f]=E.useState(0);for(const u of Object.keys(i[n]))if(/^[^a-z]./.test(u))throw new Error("Invalid variable name `"+u+"` in file `A11-connetti-stati/question.md`: variable names must start with a lowercase letter.");if(!("n"in i[n]))throw new Error("Variable `n` is not defined in file `A11-connetti-stati/question.md`.");if(!("s"in i[n]))throw new Error("Variable `s` is not defined in file `A11-connetti-stati/question.md`.");if(!("ans1"in i[n]))throw new Error("Variable `ans1` is not defined in file `A11-connetti-stati/question.md`.");if(!("wrong1"in i[n]))throw new Error("Variable `wrong1` is not defined in file `A11-connetti-stati/question.md`.");if(!("ans2"in i[n]))throw new Error("Variable `ans2` is not defined in file `A11-connetti-stati/question.md`.");if(!("wrong2"in i[n]))throw new Error("Variable `wrong2` is not defined in file `A11-connetti-stati/question.md`.");const{n:s,s:o,ans1:g,wrong1:h,ans2:m,wrong2:p}=i[n],r={em:"em",hr:"hr",p:"p",span:"span",strong:"strong",...j(),...a.components},{Answer:d,AnswerGroup:l,Equation:t,Explanation:x,Image:c,SubProblem:w}=r;return d||v("Answer"),l||v("AnswerGroup"),t||v("Equation"),x||v("Explanation"),c||v("Image"),w||v("SubProblem"),e.jsxs(e.Fragment,{children:[e.jsxs(w,{subId:1,children:[e.jsxs(r.p,{children:["A ",e.jsx(r.em,{children:"Carotandia"})," ci sono ",e.jsx(t,{children:String.raw`${s}`})," paesi, e in ognuno di essi ci sono ",e.jsx(t,{children:String.raw`${o}`}),` fattorie.
Tip-Tap vuole costruire delle strade che colleghino tutte le fattorie.
Una strada tra due fattorie dello stesso paese costa `,e.jsx(t,{children:String.raw`1`})," carota, mentre una strada tra fattorie di paesi diversi costa ",e.jsx(t,{children:String.raw`2`}),` carote.
Per esempio, se ci fossero tre paesi con due fattorie ciascuno, si potrebbero collegare le fattorie come in figura. Questo piano costa due carote per ognuna delle quattro strade tratteggiate, più una carota per ciascuna delle altre due strade, per un totale di dieci carote:`]}),e.jsx(r.p,{children:e.jsx(c,{alt:"esempio1",src:typeof A=="function"?A(n):A})}),e.jsxs(r.p,{children:[`In questo esempio, ci sono anche altri piani validi, ciascuno con un costo di sette carote o più.
Invece, a `,e.jsx(r.em,{children:"Carotandia"})," ci sono ",e.jsx(t,{children:String.raw`${s}`})," paesi con ",e.jsx(t,{children:String.raw`${o}`})," fattorie:"]}),e.jsx(r.p,{children:e.jsx(c,{alt:"immagine",src:typeof _=="function"?_(n):_})}),e.jsx(r.p,{children:"Qual è il minimo numero di carote che Tip-Tap deve spendere affinché da ogni fattoria si possa raggiungere ogni altra fattoria, eventualmente percorrendo più strade?"}),e.jsxs(l,{children:[e.jsx(d,{correct:!0,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${g}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${h[0]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${h[1]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${h[2]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${h[3]}`})})})]}),e.jsxs(x,{children:[e.jsxs(r.p,{children:["Dato che le strade all’interno dello stesso paese costano poco, conviene intanto collegare le fattorie all’interno dello stesso paese. Per ogni paese servono ",e.jsx(t,{children:String.raw`${o-1}`})," fattorie. Ad esempio, colleghiamo la fattoria ",e.jsx(t,{children:String.raw`1`})," con la fattoria ",e.jsxs(r.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`2`}),","]})," la fattoria ",e.jsx(t,{children:String.raw`2`})," con la fattoria ",e.jsxs(r.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`3`}),","]})," …, la fattoria ",e.jsx(t,{children:String.raw`${o-1}`})," con la fattoria ",e.jsxs(r.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`${o}`}),"."]})," Quindi il costo parziale è di ",e.jsx(t,{children:String.raw`${s*(o-1)}`}),` carote.
Adesso dobbiamo anche connettere i paesi tra di loro, e servono altre `,e.jsx(t,{children:String.raw`${s-1}`})," strade di costo ",e.jsx(t,{children:String.raw`2`})," carote. Ad esempio, colleghiamo l’ultima fattoria di ogni paese (tranne l’ultimo) con la prima di quello successivo. Il costo totale è ",e.jsx(t,{children:String.raw`${2*(s-1)+s*(o-1)}`})," carote."]}),e.jsx(r.p,{children:e.jsx(c,{alt:"4.1 secondarie",src:typeof C=="function"?C(n):C})})]})]}),`
`,e.jsx(r.hr,{}),`
`,e.jsxs(w,{subId:2,children:[e.jsxs(r.p,{children:["Mettiamo ora che le strade che Tip-Tap costruisce siano a ",e.jsx(r.strong,{children:"senso unico"}),", come in questo esempio:"]}),e.jsx(r.p,{children:e.jsx(c,{alt:"esempio1",src:typeof I=="function"?I(n):I})}),e.jsxs(r.p,{children:["Questo piano costa otto carote (",e.jsxs(r.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`3 \times 2 + 2 \times 1`}),"),"]}),` e consente di poter andare da ogni fattoria ad ogni altra rispettando i sensi unici.
Come prima, ci sono anche altri piani validi, ciascuno con un costo di sei carote o più.
Ricordando che a `,e.jsx(r.em,{children:"Carotandia"})," ci sono ",e.jsx(t,{children:String.raw`${s}`})," paesi con ",e.jsx(t,{children:String.raw`${o}`})," fattorie:"]}),e.jsx(r.p,{children:e.jsx(c,{alt:"immagine",src:typeof _=="function"?_(n):_})}),e.jsx(r.p,{children:"Qual è il minimo numero di carote che Tip-Tap deve spendere affinché da ogni fattoria si possa raggiungere ogni altra fattoria, eventualmente percorrendo più strade, ma rispettando sempre i sensi unici?"}),e.jsxs(l,{children:[e.jsx(d,{correct:!0,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${m}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[0]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[1]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[2]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[3]}`})})})]}),e.jsxs(x,{children:[e.jsxs(r.p,{children:["Nel problema precedente, abbiamo formato una linea composta da tutte le ",e.jsx(t,{children:String.raw`${s*o}`})," città. Assegniamo lo stesso verso a tutte le strade della linea, in modo che dalla prima città si possa raggiungere l’ultima. Ma in questo modo dall’ultima città non se ne può raggiungere nessun’altra. Per rimediare, basta creare una nuova strada che collega l’ultima città alla prima, pagando un costo aggiuntivo di ",e.jsx(t,{children:String.raw`2`})," carote."]}),e.jsx(r.p,{children:e.jsx(c,{alt:"4.2 secondarie",src:typeof B=="function"?B(n):B})})]})]})]})}function Zi(a={}){const{wrapper:i}={...j(),...a.components};return i?e.jsx(i,{...a,children:e.jsx(be,{...a})}):be(a)}function v(a,i){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}const Ae={src:new URL("../7/720f28dc-lavagna1.svg",import.meta.url).href,width:400,height:271},Ce={src:new URL("../8/80a13395-lavagna1.svg",import.meta.url).href,width:400,height:271},Ie={src:new URL("../2/26db107c-lavagna1.svg",import.meta.url).href,width:400,height:271},Be={src:new URL("../8/80a13395-lavagna1.svg",import.meta.url).href,width:400,height:271},De={src:new URL("../8/80a13395-lavagna1.svg",import.meta.url).href,width:400,height:271},Pe=JSON.parse('[{"a1":57,"a2":474,"b1":5,"b2":34,"ans1":8,"wrong1":[5,9,10,13],"ans2":9,"wrong2":[6,10,11,14]},{"a1":47,"a2":472,"b1":6,"b2":33,"ans1":6,"wrong1":[3,7,8,11],"ans2":11,"wrong2":[8,12,13,16]},{"a1":46,"a2":460,"b1":5,"b2":27,"ans1":6,"wrong1":[3,7,8,11],"ans2":10,"wrong2":[7,11,12,15]},{"a1":47,"a2":557,"b1":6,"b2":27,"ans1":6,"wrong1":[3,7,8,11],"ans2":9,"wrong2":[6,10,11,14]},{"a1":47,"a2":481,"b1":5,"b2":26,"ans1":7,"wrong1":[4,8,9,12],"ans2":10,"wrong2":[7,11,12,15]}]'),Ve=[Ae,Ce,Ie,Be,De];function D(a){return Ve[a]}const P={src:new URL("../8/8843b8e2-4-1-primarie.svg",import.meta.url).href,width:305,height:251},V={src:new URL("../4/4d90bd17-3-1-secondarie.svg",import.meta.url).href,width:305,height:248},Me={src:new URL("../b/bb617c43-lavagna2.svg",import.meta.url).href,width:400,height:271},Qe={src:new URL("../8/83f5cd97-lavagna2.svg",import.meta.url).href,width:400,height:271},Te={src:new URL("../5/52724867-lavagna2.svg",import.meta.url).href,width:400,height:271},Ge={src:new URL("../6/6f0eb1e4-lavagna2.svg",import.meta.url).href,width:400,height:271},Xe={src:new URL("../2/2a03c9c5-lavagna2.svg",import.meta.url).href,width:400,height:271},Oe=[Me,Qe,Te,Ge,Xe];function M(a){return Oe[a]}const Q={src:new URL("../5/55ce6eac-4-2-primarie.svg",import.meta.url).href,width:305,height:251},T={src:new URL("../9/9c35f0d8-3-2-secondarie.svg",import.meta.url).href,width:305,height:248};function _e(a){const i=Pe,[n,f]=E.useState(0);for(const fe of Object.keys(i[n]))if(/^[^a-z]./.test(fe))throw new Error("Invalid variable name `"+fe+"` in file `A4-sottrai-potenze/question.md`: variable names must start with a lowercase letter.");if(!("a1"in i[n]))throw new Error("Variable `a1` is not defined in file `A4-sottrai-potenze/question.md`.");if(!("b1"in i[n]))throw new Error("Variable `b1` is not defined in file `A4-sottrai-potenze/question.md`.");if(!("ans1"in i[n]))throw new Error("Variable `ans1` is not defined in file `A4-sottrai-potenze/question.md`.");if(!("wrong1"in i[n]))throw new Error("Variable `wrong1` is not defined in file `A4-sottrai-potenze/question.md`.");if(!("a2"in i[n]))throw new Error("Variable `a2` is not defined in file `A4-sottrai-potenze/question.md`.");if(!("b2"in i[n]))throw new Error("Variable `b2` is not defined in file `A4-sottrai-potenze/question.md`.");if(!("ans2"in i[n]))throw new Error("Variable `ans2` is not defined in file `A4-sottrai-potenze/question.md`.");if(!("wrong2"in i[n]))throw new Error("Variable `wrong2` is not defined in file `A4-sottrai-potenze/question.md`.");const{a1:s,b1:o,ans1:g,wrong1:h,a2:m,b2:p,ans2:r,wrong2:d}=i[n],l={hr:"hr",li:"li",p:"p",span:"span",ul:"ul",...j(),...a.components},{Answer:t,AnswerGroup:x,Equation:c,Explanation:w,Image:u,SubProblem:N}=l;return t||S("Answer"),x||S("AnswerGroup"),c||S("Equation"),w||S("Explanation"),u||S("Image"),N||S("SubProblem"),e.jsxs(e.Fragment,{children:[e.jsxs(N,{subId:1,children:[e.jsxs(l.p,{children:["Per esercitarsi nelle sottrazioni, Tip-Tap e Allie hanno inventato un gioco. Hanno scritto il numero ",e.jsx(c,{children:String.raw`${s}`})," sulla lavagna e devono renderlo uguale a ",e.jsx(c,{children:String.raw`0`})," con una sequenza, la più breve possibile, di operazioni di questo tipo:"]}),e.jsxs(l.ul,{children:[`
`,e.jsxs(l.li,{children:["diminuire di ",e.jsx(c,{children:String.raw`{1}`})," una qualsiasi cifra del numero;"]}),`
`,e.jsxs(l.li,{children:["sottrarre ",e.jsx(c,{children:String.raw`${o}`})," al numero (se il numero è almeno ",e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`${o}`}),")."]})]}),`
`]}),e.jsxs(l.p,{children:[`Ad ogni operazione, dopo aver calcolato il risultato, lo sostituiscono al numero scritto sulla lavagna.
Qual è il numero minimo di operazioni che devono fare per rendere il numero pari a `,e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`0`}),","]})," partendo da ",e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`${s}`}),"?"]})]}),e.jsx(l.p,{children:e.jsx(u,{alt:"Lavagna",src:typeof D=="function"?D(n):D})}),e.jsxs(x,{children:[e.jsx(t,{correct:!0,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${g}`})})}),e.jsx(t,{correct:!1,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${h[0]}`})})}),e.jsx(t,{correct:!1,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${h[1]}`})})}),e.jsx(t,{correct:!1,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${h[2]}`})})}),e.jsx(t,{correct:!1,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${h[3]}`})})})]}),e.jsxs(w,{children:[e.jsxs(l.p,{children:["Per la proprietà commutativa, l’ordine delle sottrazioni non importa, quindi possiamo ipotizzare di fare prima le operazioni di sottrarre ",e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`${o}`}),","]})," e poi le operazioni per diminuire le cifre di ",e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`1`}),"."]}),`
Proviamo a sottrarre `,e.jsx(c,{children:String.raw`${o}`})," un po’ di volte (",e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`0, 1, 2, \ldots`}),"),"]}),` e il numero di mosse rimanenti è la somma delle cifre del numero sulla lavagna.
Sottraendo `,e.jsx(c,{children:String.raw`${o}`})," il numero giusto di volte, la somma delle cifre diventa particolarmente piccola."]}),e.jsxs(l.p,{children:[e.jsx(u,{alt:"4.1 primarie",src:typeof P=="function"?P(n):P}),`
`,e.jsx(u,{alt:"3.1 secondarie",src:typeof V=="function"?V(n):V})]})]})]}),`
`,e.jsx(l.hr,{}),`
`,e.jsxs(N,{subId:2,children:[e.jsxs(l.p,{children:["Tip-Tap e Allie ora hanno scritto un nuovo numero ",e.jsx(c,{children:String.raw`${m}`})," sulla lavagna, e le operazioni consentite sono:"]}),e.jsxs(l.ul,{children:[`
`,e.jsxs(l.li,{children:["diminuire di ",e.jsx(c,{children:String.raw`{1}`})," una qualsiasi cifra del numero;"]}),`
`,e.jsxs(l.li,{children:["sottrarre ",e.jsx(c,{children:String.raw`${p}`})," al numero (se il numero è almeno ",e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`${p}`}),")."]})]}),`
`]}),e.jsxs(l.p,{children:["Qual è il numero minimo di operazioni che devono fare per rendere il numero pari a ",e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`0`}),","]})," partendo da ",e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`${m}`}),"?"]})]}),e.jsx(l.p,{children:e.jsx(u,{alt:"Lavagna",src:typeof M=="function"?M(n):M})}),e.jsxs(x,{children:[e.jsx(t,{correct:!0,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${r}`})})}),e.jsx(t,{correct:!1,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${d[0]}`})})}),e.jsx(t,{correct:!1,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${d[1]}`})})}),e.jsx(t,{correct:!1,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${d[2]}`})})}),e.jsx(t,{correct:!1,children:e.jsx(l.p,{children:e.jsx(c,{children:String.raw`${d[3]}`})})})]}),e.jsxs(w,{children:[e.jsxs(l.p,{children:["Qui ",e.jsx(c,{children:String.raw`${m}`})," è grande, quindi provare a sottrarre ",e.jsx(c,{children:String.raw`${p}`}),` finché il numero sulla lavagna non è negativo è troppo lungo.
Ma possiamo notare che, se troviamo una sequenza con risposta `,e.jsxs(l.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(c,{children:String.raw`${r}`}),","]})," non ha senso sottrarre ",e.jsx(c,{children:String.raw`${p}`})," più di ",e.jsx(c,{children:String.raw`${r}`})," volte, e questo accorcia i conti."]}),e.jsxs(l.p,{children:[e.jsx(u,{alt:"4.2 primarie",src:typeof Q=="function"?Q(n):Q}),`
`,e.jsx(u,{alt:"3.2 secondarie",src:typeof T=="function"?T(n):T})]})]})]})]})}function Ki(a={}){const{wrapper:i}={...j(),...a.components};return i?e.jsx(i,{...a,children:e.jsx(_e,{...a})}):_e(a)}function S(a,i){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}const Fe={src:new URL("../2/25aa12a8-fila.svg",import.meta.url).href,width:659,height:313},Je={src:new URL("../d/d05eb177-fila.svg",import.meta.url).href,width:659,height:313},He={src:new URL("../c/c853bcb1-fila.svg",import.meta.url).href,width:659,height:313},Ze={src:new URL("../5/5c203273-fila.svg",import.meta.url).href,width:659,height:313},Ke={src:new URL("../f/fefa6027-fila.svg",import.meta.url).href,width:659,height:313},We=JSON.parse('[{"k1":28,"ans1":5,"wrong1":[4,23,3,7],"k2":6,"ans2":32,"wrong2":[28,36,12,56],"seq":[0,1,1,0,1]},{"k1":26,"ans1":5,"wrong1":[4,21,3,7],"k2":6,"ans2":30,"wrong2":[26,34,10,54],"seq":[1,1,0,0,1]},{"k1":33,"ans1":6,"wrong1":[5,28,4,8],"k2":7,"ans2":37,"wrong2":[33,41,13,65],"seq":[1,0,0,1,1]},{"k1":32,"ans1":7,"wrong1":[6,27,5,9],"k2":8,"ans2":36,"wrong2":[32,40,8,68],"seq":[1,1,0,1,0]},{"k1":29,"ans1":6,"wrong1":[5,24,4,8],"k2":8,"ans2":37,"wrong2":[33,41,9,69],"seq":[1,0,1,1,0]}]'),Ye=[Fe,Je,He,Ze,Ke];function G(a){return Ye[a]}const X={src:new URL("../e/e01a90c8-code.svg",import.meta.url).href,width:557,height:484},O={src:new URL("../f/f0350413-5-1-primarie.svg",import.meta.url).href,width:305,height:251},F={src:new URL("../8/87e1d8bb-5-1-secondarie.svg",import.meta.url).href,width:305,height:248},J={src:new URL("../6/616567ca-5-2-primarie.svg",import.meta.url).href,width:305,height:251},H={src:new URL("../f/fc3df2eb-5-2-secondarie.svg",import.meta.url).href,width:305,height:248};function ve(a){const i=We,[n,f]=E.useState(0);for(const u of Object.keys(i[n]))if(/^[^a-z]./.test(u))throw new Error("Invalid variable name `"+u+"` in file `P6-distribuisci-carote/question.md`: variable names must start with a lowercase letter.");if(!("k1"in i[n]))throw new Error("Variable `k1` is not defined in file `P6-distribuisci-carote/question.md`.");if(!("ans1"in i[n]))throw new Error("Variable `ans1` is not defined in file `P6-distribuisci-carote/question.md`.");if(!("wrong1"in i[n]))throw new Error("Variable `wrong1` is not defined in file `P6-distribuisci-carote/question.md`.");if(!("k2"in i[n]))throw new Error("Variable `k2` is not defined in file `P6-distribuisci-carote/question.md`.");if(!("ans2"in i[n]))throw new Error("Variable `ans2` is not defined in file `P6-distribuisci-carote/question.md`.");if(!("wrong2"in i[n]))throw new Error("Variable `wrong2` is not defined in file `P6-distribuisci-carote/question.md`.");const{k1:s,ans1:o,wrong1:g,k2:h,ans2:m,wrong2:p}=i[n],r={hr:"hr",li:"li",p:"p",span:"span",ul:"ul",...j(),...a.components},{Answer:d,AnswerGroup:l,Equation:t,Explanation:x,Image:c,SubProblem:w}=r;return d||$("Answer"),l||$("AnswerGroup"),t||$("Equation"),x||$("Explanation"),c||$("Image"),w||$("SubProblem"),e.jsxs(e.Fragment,{children:[e.jsxs(w,{subId:1,children:[e.jsxs(r.p,{children:["Carol ha ",e.jsx(t,{children:String.raw`${s}`})," carote da distribuire agli altri conigli, che sono in fila ad aspettare."]}),e.jsx(r.p,{children:e.jsx(c,{alt:"I coniglietti in fila",src:typeof G=="function"?G(n):G})}),e.jsx(r.p,{children:"Per ogni coniglio in fila, da sinistra a destra, Carol decide quante carote dargli in base alla seguente regola:"}),e.jsx(r.p,{children:e.jsx(c,{alt:"Algoritmo",src:typeof X=="function"?X(n):X})}),e.jsxs(r.p,{children:["Quante carote gli rimarranno alla fine, se all’inizio ne ha ",e.jsxs(r.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`${s}`}),"?"]})]}),e.jsxs(l,{children:[e.jsx(d,{correct:!0,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${o}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${g[0]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${g[1]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${g[2]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${g[3]}`})})})]}),e.jsxs(x,{children:[e.jsx(r.p,{children:`Se incontra un coniglio adulto, Carol rimane con metà delle carote che aveva, arrotondate per difetto. Altrimenti, Carol perde una carota.
Ripetendo l’operazione per ogni coniglio presente, si arriva alla soluzione.`}),e.jsxs(r.p,{children:[e.jsx(c,{alt:"5.1 primarie",src:typeof O=="function"?O(n):O}),`
`,e.jsx(c,{alt:"5.1 secondarie",src:typeof F=="function"?F(n):F})]})]})]}),`
`,e.jsx(r.hr,{}),`
`,e.jsxs(w,{subId:2,children:[e.jsxs(r.p,{children:["Se alla fine della distribuzione Carol volesse rimanere con almeno ",e.jsx(t,{children:String.raw`${h}`})," carote, quante ne deve avere almeno all’inizio?"]}),e.jsxs(l,{children:[e.jsx(d,{correct:!0,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${m}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[0]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[1]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[2]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[3]}`})})})]}),e.jsxs(x,{children:[e.jsx(r.p,{children:"Possiamo ripercorrere il numero di carote di Carol al contrario (dalla fine all’inizio)."}),e.jsxs(r.ul,{children:[`
`,e.jsx(r.li,{children:"Se l’ultimo coniglio è bambino, prima di incontrarlo Carol aveva una carota in più."}),`
`,e.jsx(r.li,{children:"Se l’ultimo coniglio è adulto, prima di incontrarlo Carol aveva il doppio delle carote, oppure il doppio delle carote più una. Dato che vogliamo minimizzare il numero di carote iniziali, conviene dare a Carol il doppio delle carote (e mai il doppio delle carote più una)."}),`
`]}),e.jsxs(r.p,{children:[e.jsx(c,{alt:"5.2 primarie",src:typeof J=="function"?J(n):J}),`
`,e.jsx(c,{alt:"5.2 secondarie",src:typeof H=="function"?H(n):H})]})]})]})]})}function Wi(a={}){const{wrapper:i}={...j(),...a.components};return i?e.jsx(i,{...a,children:e.jsx(ve,{...a})}):ve(a)}function $(a,i){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}const Z={src:new URL("../f/f781bad8-fig.svg",import.meta.url).href,width:740,height:221},K={src:new URL("../5/5bf3252b-1-1-primarie.svg",import.meta.url).href,width:305,height:251},W={src:new URL("../2/263091ec-1-2-primarie.svg",import.meta.url).href,width:305,height:251},ei=JSON.parse('[{"correct1":3,"wrong1":[9,6,4,2],"correct2":3,"wrong2":[6,7,9,1],"c":3,"b":6},{"correct1":4,"wrong1":[12,8,6,3],"correct2":4,"wrong2":[8,10,12,2],"c":4,"b":8},{"correct1":3,"wrong1":[13,10,6,2],"correct2":5,"wrong2":[8,11,13,1],"c":3,"b":10},{"correct1":2,"wrong1":[14,12,7,1],"correct2":6,"wrong2":[8,13,14,1],"c":2,"b":12}]');function Se(a){const i=ei,[n,f]=E.useState(0);for(const u of Object.keys(i[n]))if(/^[^a-z]./.test(u))throw new Error("Invalid variable name `"+u+"` in file `a-20-due-carote/question.md`: variable names must start with a lowercase letter.");if(!("b"in i[n]))throw new Error("Variable `b` is not defined in file `a-20-due-carote/question.md`.");if(!("c"in i[n]))throw new Error("Variable `c` is not defined in file `a-20-due-carote/question.md`.");if(!("correct1"in i[n]))throw new Error("Variable `correct1` is not defined in file `a-20-due-carote/question.md`.");if(!("wrong1"in i[n]))throw new Error("Variable `wrong1` is not defined in file `a-20-due-carote/question.md`.");if(!("correct2"in i[n]))throw new Error("Variable `correct2` is not defined in file `a-20-due-carote/question.md`.");if(!("wrong2"in i[n]))throw new Error("Variable `wrong2` is not defined in file `a-20-due-carote/question.md`.");const{b:s,c:o,correct1:g,wrong1:h,correct2:m,wrong2:p}=i[n],r={hr:"hr",p:"p",span:"span",...j(),...a.components},{Answer:d,AnswerGroup:l,Equation:t,Explanation:x,Image:c,SubProblem:w}=r;return d||y("Answer"),l||y("AnswerGroup"),t||y("Equation"),x||y("Explanation"),c||y("Image"),w||y("SubProblem"),e.jsxs(e.Fragment,{children:[e.jsxs(w,{subId:1,children:[e.jsxs(r.p,{children:[`Bunny e Carol pranzano insieme tutti i giorni, portando ciascuno una carota dalla propria scorta personale.
Nella scorta di Bunny ci sono `,e.jsx(t,{children:String.raw`${s}`})," carote mentre nella scorta di Carol ce ne sono ",e.jsxs(r.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`${o}`}),"."]}),`
Dopo quanti giorni uno dei due avrà finito le carote della propria scorta?`]}),e.jsx(r.p,{children:e.jsx(c,{alt:"image",src:typeof Z=="function"?Z(n):Z})}),e.jsxs(l,{children:[e.jsx(d,{correct:!0,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${g}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${h[0]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${h[1]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${h[2]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${h[3]}`})})})]}),e.jsxs(x,{children:[e.jsxs(r.p,{children:["Bunny impiega ",e.jsx(t,{children:String.raw`${s}`})," giorni per finire le proprie carote, mentre Carol ne impiega ",e.jsxs(r.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`${o}`}),"."]}),`
Quindi il primo coniglio che finisce le proprie carote è quello che ne ha di meno: dopo `,e.jsx(t,{children:String.raw`${o}`})," giorni, avrà finito le carote."]}),e.jsx(r.p,{children:e.jsx(c,{alt:"1.1 primarie",src:typeof K=="function"?K(n):K})})]})]}),`
`,e.jsx(r.hr,{}),`
`,e.jsxs(w,{subId:2,children:[e.jsx(r.p,{children:"Se invece Carol fosse dispettosa e ogni sera di nascosto rubasse una carota dalla scorta Bunny per metterla nella sua, dopo quanti giorni uno dei due sarà rimasto senza carote nella propria scorta?"}),e.jsxs(l,{children:[e.jsx(d,{correct:!0,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${m}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[0]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[1]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[2]}`})})}),e.jsx(d,{correct:!1,children:e.jsx(r.p,{children:e.jsx(t,{children:String.raw`${p[3]}`})})})]}),e.jsxs(x,{children:[e.jsxs(r.p,{children:[`Bunny mangia una carota al giorno, mentre Carol mangia una carota di Bunny al giorno.
Quindi ogni giorno Bunny perde `,e.jsx(t,{children:String.raw`2`}),` carote, mentre Carol non ne perde nessuna.
Quindi la risposta è la metà del numero `,e.jsx(t,{children:String.raw`${s}`})," di carote iniziali di Bunny, cioè ",e.jsxs(r.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`${s/2}`}),"."]})]}),e.jsx(r.p,{children:e.jsx(c,{alt:"1.2 primarie",src:typeof W=="function"?W(n):W})})]})]})]})}function Yi(a={}){const{wrapper:i}={...j(),...a.components};return i?e.jsx(i,{...a,children:e.jsx(Se,{...a})}):Se(a)}function y(a,i){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}const Y={src:new URL("../9/9af6f89b-fig.svg",import.meta.url).href,width:889,height:277},ee={src:new URL("../0/0b35c6f7-2-1-primarie.svg",import.meta.url).href,width:305,height:251},ie={src:new URL("../7/73cc0e5f-1-1-secondarie.svg",import.meta.url).href,width:305,height:248},ne={src:new URL("../1/1924b6c7-2-2-primarie.svg",import.meta.url).href,width:305,height:251},re={src:new URL("../b/b3c5b2d7-1-2-secondarie.svg",import.meta.url).href,width:305,height:248};function $e(a){const i={hr:"hr",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...j(),...a.components},{Answer:n,AnswerGroup:f,Equation:s,Explanation:o,Image:g,SubProblem:h}=i;return n||R("Answer"),f||R("AnswerGroup"),s||R("Equation"),o||R("Explanation"),g||R("Image"),h||R("SubProblem"),e.jsxs(e.Fragment,{children:[e.jsxs(h,{subId:1,children:[e.jsx(i.p,{children:"Durante la ricreazione, gli amici di Bunny si sono disposti in fila:"}),e.jsx(i.p,{children:e.jsx(g,{alt:"immage",src:typeof Y=="function"?Y(_variant):Y})}),e.jsxs(i.p,{children:[`Per gioco, Bunny deve ordinarli dal più basso al più alto (le altezze degli amici sono scritte sulle loro magliette).
Può farlo con degli `,e.jsx(i.strong,{children:"scambi"})," di posto tra coppie di suoi amici. Quali di questi ",e.jsx(i.strong,{children:"scambi"})," può fare Bunny per riordinarli?"]}),e.jsxs(f,{children:[e.jsx(n,{correct:!0,children:e.jsxs(i.p,{children:["scambiare l’amico alto ",e.jsx(s,{children:String.raw`4`})," con l’amico alto ",e.jsx(s,{children:String.raw`1`})," e poi scambiare l’amico alto ",e.jsx(s,{children:String.raw`6`})," con l’amico alto ",e.jsx(s,{children:String.raw`3`})]})}),e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["scambiare l’amico alto ",e.jsx(s,{children:String.raw`4`})," con l’amico alto ",e.jsx(s,{children:String.raw`2`})," e poi scambiare l’amico alto ",e.jsx(s,{children:String.raw`6`})," con l’amico alto ",e.jsx(s,{children:String.raw`1`})]})}),e.jsx(n,{correct:!1,children:e.jsx(i.p,{children:"Bunny non può ordinarli solo con scambi"})}),e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["scambiare l’amico alto ",e.jsx(s,{children:String.raw`6`})," con l’amico alto ",e.jsx(s,{children:String.raw`3`})]})}),e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["scambiare l’amico alto ",e.jsx(s,{children:String.raw`6`})," con l’amico alto ",e.jsx(s,{children:String.raw`3`})," e poi scambiare l’amico alto ",e.jsx(s,{children:String.raw`4`})," con l’amico alto ",e.jsx(s,{children:String.raw`2`})]})})]}),e.jsxs(o,{children:[e.jsxs(i.p,{children:["Il coniglio alto ",e.jsx(s,{children:String.raw`1`})," è in quarta posizione e quello alto ",e.jsx(s,{children:String.raw`4`}),` è in prima posizione, quindi vanno scambiati.
Inoltre, il coniglio alto `,e.jsx(s,{children:String.raw`3`})," è in sesta posizione e quello alto ",e.jsx(s,{children:String.raw`6`}),` è in terza posizione, quindi vanno scambiati.
Non servono altri scambi!`]}),e.jsxs(i.p,{children:[e.jsx(g,{alt:"2.1 primarie",src:typeof ee=="function"?ee(_variant):ee}),`
`,e.jsx(g,{alt:"1.1 secondarie",src:typeof ie=="function"?ie(_variant):ie})]})]})]}),`
`,e.jsx(i.hr,{}),`
`,e.jsxs(h,{subId:2,children:[e.jsxs(i.p,{children:["Per rendere il gioco più difficile, ora Bunny può solo fare ",e.jsx(i.strong,{children:"scambi di vicini"}),", cioè può scambiare di posto due suoi amici ",e.jsx(i.strong,{children:"solo se"}),` sono uno di fianco all’altro.
Quanti `,e.jsx(i.strong,{children:"scambi di vicini"})," deve fare per ordinare i suoi amici?"]}),e.jsxs(f,{children:[e.jsx(n,{correct:!1,children:e.jsx(i.p,{children:e.jsx(s,{children:String.raw`6`})})}),e.jsx(n,{correct:!1,children:e.jsx(i.p,{children:e.jsx(s,{children:String.raw`2`})})}),e.jsx(n,{correct:!0,children:e.jsx(i.p,{children:e.jsx(s,{children:String.raw`8`})})}),e.jsx(n,{correct:!1,children:e.jsx(i.p,{children:e.jsx(s,{children:String.raw`12`})})}),e.jsx(n,{correct:!1,children:e.jsx(i.p,{children:e.jsx(s,{children:String.raw`11`})})})]}),e.jsxs(o,{children:[e.jsx(i.p,{children:"Conviene fare solo scambi tra conigli vicini in ordine sbagliato, cioè conviene fare uno scambio solo se il coniglio a sinistra è più alto di quello a destra. Ad esempio,"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:["All’inizio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[4, 2, 6, 1, 5, 3]`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Dopo il primo scambio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[2, 4, 6, 1, 5, 3]`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Dopo il secondo scambio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[2, 4, 1, 6, 5, 3]`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Dopo il terzo scambio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[2, 1, 4, 6, 5, 3]`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Dopo il quarto scambio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[1, 2, 4, 6, 5, 3]`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Dopo il quinto scambio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[1, 2, 4, 5, 6, 3]`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Dopo il sesto scambio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[1, 2, 4, 5, 3, 6]`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Dopo il settimo scambio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[1, 2, 4, 3, 5, 6]`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Dopo l’ottavo scambio, l’ordine è ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`[1, 2, 3, 4, 5, 6]`}),"."]})]}),`
`]}),e.jsxs(i.p,{children:[`Anche facendo altri scambi, la risposta non cambia, purché non si facciano scambi tra conigli vicini che sono già nell’ordine giusto.
Non è una coincidenza: all’inizio, ci sono `,e.jsx(s,{children:String.raw`8`})," coppie di conigli (non necessariamente vicini) tali che il più alto dei due è più a sinistra di quello in basso, e ad ogni scambio il numero di queste coppie diminuisce di ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(s,{children:String.raw`1`}),"."]})]}),e.jsxs(i.p,{children:[e.jsx(g,{alt:"2.2 primarie",src:typeof ne=="function"?ne(_variant):ne}),`
`,e.jsx(g,{alt:"1.2 secondarie",src:typeof re=="function"?re(_variant):re})]})]})]})]})}function en(a={}){const{wrapper:i}={...j(),...a.components};return i?e.jsx(i,{...a,children:e.jsx($e,{...a})}):$e(a)}function R(a,i){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}const ii={src:new URL("../1/1e6b54c0-scale1.svg",import.meta.url).href,width:1213,height:563},ni={src:new URL("../c/c9aa6459-scale1.svg",import.meta.url).href,width:1213,height:563},ri={src:new URL("../1/1e6b54c0-scale1.svg",import.meta.url).href,width:1213,height:563},si={src:new URL("../f/ffd1a374-scale1.svg",import.meta.url).href,width:1213,height:563},ai=JSON.parse('[{"perm":[0,1,2,3]},{"perm":[0,1,3,2]},{"perm":[3,1,2,0]},{"perm":[1,3,0,2]}]'),ti=[ii,ni,ri,si];function q(a){return ti[a]}const oi={src:new URL("../e/ea0c960b-scale2.svg",import.meta.url).href,width:1213,height:563},ci={src:new URL("../e/e9b1943c-scale2.svg",import.meta.url).href,width:1213,height:563},li={src:new URL("../c/c61f37f3-scale2.svg",import.meta.url).href,width:1213,height:563},di={src:new URL("../6/64c260c7-scale2.svg",import.meta.url).href,width:1213,height:563},hi=[oi,ci,li,di];function L(a){return hi[a]}const pi={src:new URL("../2/2050f2ab-A.svg",import.meta.url).href,width:150.6,height:40.8},gi={src:new URL("../2/2c572495-A.svg",import.meta.url).href,width:150.6,height:40.8},mi={src:new URL("../1/1e279de2-A.svg",import.meta.url).href,width:161.4,height:40.8},ui={src:new URL("../d/d2434848-A.svg",import.meta.url).href,width:161.4,height:40.8},xi=[pi,gi,mi,ui];function se(a){return xi[a]}const wi={src:new URL("../2/2ef3a60e-B.svg",import.meta.url).href,width:150.6,height:40.8},ji={src:new URL("../7/771c857f-B.svg",import.meta.url).href,width:150.6,height:40.8},fi={src:new URL("../c/cb79c2ed-B.svg",import.meta.url).href,width:161.4,height:40.8},bi={src:new URL("../7/7f5885db-B.svg",import.meta.url).href,width:161.4,height:40.8},_i=[wi,ji,fi,bi];function ae(a){return _i[a]}const vi={src:new URL("../7/771c857f-B.svg",import.meta.url).href,width:150.6,height:40.8},Si={src:new URL("../2/2ef3a60e-B.svg",import.meta.url).href,width:150.6,height:40.8},$i={src:new URL("../7/7f5885db-B.svg",import.meta.url).href,width:161.4,height:40.8},yi={src:new URL("../c/cb79c2ed-B.svg",import.meta.url).href,width:161.4,height:40.8},Ri=[vi,Si,$i,yi];function te(a){return Ri[a]}const qi={src:new URL("../1/107fee5e-D.svg",import.meta.url).href,width:150.6,height:40.8},Li={src:new URL("../7/7cf0fd78-D.svg",import.meta.url).href,width:150.6,height:40.8},Ui={src:new URL("../d/de952141-D.svg",import.meta.url).href,width:161.4,height:40.8},zi={src:new URL("../3/3c418f36-D.svg",import.meta.url).href,width:161.4,height:40.8},ki=[qi,Li,Ui,zi];function oe(a){return ki[a]}const Ei={src:new URL("../7/7cf0fd78-D.svg",import.meta.url).href,width:150.6,height:40.8},Ni={src:new URL("../1/107fee5e-D.svg",import.meta.url).href,width:150.6,height:40.8},Ai={src:new URL("../3/3c418f36-D.svg",import.meta.url).href,width:161.4,height:40.8},Ci={src:new URL("../d/de952141-D.svg",import.meta.url).href,width:161.4,height:40.8},Ii=[Ei,Ni,Ai,Ci];function ce(a){return Ii[a]}const le={src:new URL("../1/11b15ada-3-1-primarie.svg",import.meta.url).href,width:305,height:251},de={src:new URL("../1/1d97281e-2-1-secondarie.svg",import.meta.url).href,width:305,height:248},Bi={src:new URL("../6/6940932e-scale3.svg",import.meta.url).href,width:1213,height:563},Di={src:new URL("../d/db9b44ac-scale3.svg",import.meta.url).href,width:1213,height:563},Pi={src:new URL("../3/33221cd3-scale3.svg",import.meta.url).href,width:1213,height:563},Vi={src:new URL("../d/d41978bf-scale3.svg",import.meta.url).href,width:1213,height:563},Mi=[Bi,Di,Pi,Vi];function he(a){return Mi[a]}const Qi={src:new URL("../0/00448184-scale4.svg",import.meta.url).href,width:1213,height:563},Ti={src:new URL("../3/3b0999cc-scale4.svg",import.meta.url).href,width:1213,height:563},Gi={src:new URL("../8/8804d224-scale4.svg",import.meta.url).href,width:1213,height:563},Xi={src:new URL("../c/caec5f8c-scale4.svg",import.meta.url).href,width:1213,height:563},Oi=[Qi,Ti,Gi,Xi];function pe(a){return Oi[a]}const ge={src:new URL("../0/0e05f012-3-2-primarie.svg",import.meta.url).href,width:305,height:251},me={src:new URL("../5/55c5f250-2-2-secondarie.svg",import.meta.url).href,width:305,height:248};function ye(a){const i=ai,[n,f]=E.useState(0);for(const d of Object.keys(i[n]))if(/^[^a-z]./.test(d))throw new Error("Invalid variable name `"+d+"` in file `a-22-pesa-la-frutta/question.md`: variable names must start with a lowercase letter.");i[n];const s={em:"em",hr:"hr",p:"p",span:"span",...j(),...a.components},{Answer:o,AnswerGroup:g,Equation:h,Explanation:m,Image:p,SubProblem:r}=s;return o||U("Answer"),g||U("AnswerGroup"),h||U("Equation"),m||U("Explanation"),p||U("Image"),r||U("SubProblem"),e.jsxs(e.Fragment,{children:[e.jsxs(r,{subId:1,children:[e.jsx(s.p,{children:"Carol ha comprato una nuova bilancia. Ha quindi confrontato alcuni frutti e delle carote come vedi in figura:"}),e.jsxs(s.p,{children:[e.jsx(p,{alt:"scale1",src:typeof q=="function"?q(n):q}),`
`,e.jsx(p,{alt:"scale2",src:typeof L=="function"?L(n):L})]}),e.jsxs(s.p,{children:["in entrambe le prove le bilance sono in ",e.jsx(s.em,{children:"equilibrio"}),`, cioè la somma dei pesi degli oggetti sul piatto a sinistra è uguale alla somma dei pesi degli oggetti sul piatto a destra.
Quali tra queste immagini riporta gli oggetti in ordine dal più leggero al più pesante?`]}),e.jsxs(g,{children:[e.jsx(o,{correct:!1,children:e.jsx("span",{children:e.jsx(p,{alt:"A",src:typeof se=="function"?se(n):se})})}),e.jsx(o,{correct:!1,children:e.jsx("span",{children:e.jsx(p,{alt:"B",src:typeof ae=="function"?ae(n):ae})})}),e.jsx(o,{correct:!1,children:e.jsx("span",{children:e.jsx(p,{alt:"C",src:typeof te=="function"?te(n):te})})}),e.jsx(o,{correct:!1,children:e.jsx("span",{children:e.jsx(p,{alt:"D",src:typeof oe=="function"?oe(n):oe})})}),e.jsx(o,{correct:!0,children:e.jsx("span",{children:e.jsx(p,{alt:"E",src:typeof ce=="function"?ce(n):ce})})})]}),e.jsxs(m,{children:[e.jsx(s.p,{children:`Togliendo due carote da entrambi i piatti della prima bilancia Carol riesce a capire che il peso dei due frutti rimanenti sul piatto sinistro
della prima bilancia è uguale a quello di una carota. Sapendo questo, capisce quindi che il peso del piatto sinistro della seconda bilancia è di
due carote ed è uguale al peso del frutto sul piatto destro. I frutti che in due pesano come una carota sono i più leggeri, i frutti che
pesano come due carote sono i più pesanti e le carote stanno nel mezzo.`}),e.jsxs(s.p,{children:[e.jsx(p,{alt:"3.1 primarie",src:typeof le=="function"?le(n):le}),`
`,e.jsx(p,{alt:"2.1 secondarie",src:typeof de=="function"?de(n):de})]})]})]}),`
`,e.jsx(s.hr,{}),`
`,e.jsxs(r,{subId:2,children:[e.jsx(s.p,{children:"Dopo le pesate di prima, che riportiamo qui per comodità:"}),e.jsxs(s.p,{children:[e.jsx(p,{alt:"scale1",src:typeof q=="function"?q(n):q}),`
`,e.jsx(p,{alt:"scale2",src:typeof L=="function"?L(n):L})]}),e.jsx(s.p,{children:"Carol compra altri frutti da pesare e ottiene il risultato che vedi nella prima bilancia qui sotto:"}),e.jsxs(s.p,{children:[e.jsx(p,{alt:"scale3",src:typeof he=="function"?he(n):he}),`
`,e.jsx(p,{alt:"scale4",src:typeof pe=="function"?pe(n):pe})]}),e.jsxs(s.p,{children:["Quante carote deve mettere Carol al posto del punto interrogativo (",e.jsxs(s.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(h,{children:String.raw`\texttt{?}`}),")"]})," per equilibrare l’ultima bilancia?"]}),e.jsxs(g,{children:[e.jsx(o,{correct:!0,children:e.jsx(s.p,{children:e.jsx(h,{children:String.raw`4`})})}),e.jsx(o,{correct:!1,children:e.jsx(s.p,{children:e.jsx(h,{children:String.raw`6`})})}),e.jsx(o,{correct:!1,children:e.jsx(s.p,{children:e.jsx(h,{children:String.raw`8`})})}),e.jsx(o,{correct:!1,children:e.jsx(s.p,{children:e.jsx(h,{children:String.raw`7`})})}),e.jsx(o,{correct:!1,children:e.jsx(s.p,{children:e.jsx(h,{children:String.raw`2`})})})]}),e.jsxs(m,{children:[e.jsx(s.p,{children:`Con lo stesso ragionamento di prima si capisce che la somma dei pesi dei nuovi frutti è di una carota, perchè il frutto sulla destra della
bilancia ne pesa due e una carota è già presente a sinistra. Di conseguenza per mettere la bilancia in equilibrio sul piatto al posto del punto di domanda andranno 4 carote:
due per i nuovi frutti, e due per il vecchio frutto.`}),e.jsxs(s.p,{children:[e.jsx(p,{alt:"3.2 primarie",src:typeof ge=="function"?ge(n):ge}),`
`,e.jsx(p,{alt:"2.2 secondarie",src:typeof me=="function"?me(n):me})]})]})]})]})}function nn(a={}){const{wrapper:i}={...j(),...a.components};return i?e.jsx(i,{...a,children:e.jsx(ye,{...a})}):ye(a)}function U(a,i){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}const z={src:new URL("../6/6678e90d-fig.svg",import.meta.url).href,width:1939,height:296},k={src:new URL("../2/2481fa21-code.svg",import.meta.url).href,width:232,height:323},ue={src:new URL("../e/e7babf95-6-1-primarie.svg",import.meta.url).href,width:305,height:251},xe={src:new URL("../a/ac2fb29b-6-1-secondarie.svg",import.meta.url).href,width:305,height:248},we={src:new URL("../4/4faf4dcc-6-2-primarie.svg",import.meta.url).href,width:305,height:251},je={src:new URL("../5/57df7471-6-2-secondarie.svg",import.meta.url).href,width:305,height:248};function Re(a){const i={em:"em",hr:"hr",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...j(),...a.components},{Answer:n,AnswerGroup:f,Code:s,Equation:o,Explanation:g,Image:h,SubProblem:m}=i;return n||b("Answer"),f||b("AnswerGroup"),s||b("Code"),o||b("Equation"),g||b("Explanation"),h||b("Image"),m||b("SubProblem"),e.jsxs(e.Fragment,{children:[e.jsxs(m,{subId:1,children:[e.jsxs(i.p,{children:["Bunny si trova sulla casella ",e.jsx(o,{children:String.raw`1`})," di questo percorso ad ostacoli:"]}),e.jsx(i.p,{children:e.jsx(h,{alt:"fig",src:typeof z=="function"?z(_variant):z})}),e.jsxs(i.p,{children:["Il suo obbiettivo è ",e.jsx(i.strong,{children:"raggiungere o superare"})," la casella numero ",e.jsx(o,{children:String.raw`10`}),` dove c’è la bandierina del traguardo.
Bunny può fare le seguenti due azioni:`]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(i.strong,{children:"avanza"}),": Bunny avanza alla casella successiva;"]}),`
`,e.jsxs(i.li,{children:[e.jsx(i.strong,{children:"salta"}),": Bunny supera la casella successiva con un salto, atterrando su quella dopo."]}),`
`]}),e.jsxs(i.p,{children:["Per esempio se Bunny compie un’azione ",e.jsx(i.strong,{children:"salta"})," quando è sulla casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`1`}),","]})," supera la casella ",e.jsx(o,{children:String.raw`2`})," e atterra sulla casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`3`}),"."]}),`
`,e.jsx(i.strong,{children:"ATTENZIONE:"})," sul percorso ci sono delle ",e.jsx(i.em,{children:"grandi rocce"}),"! Bunny non può passare su una casella occupata da una ",e.jsx(i.em,{children:"grande roccia"}),", altrimenti cadrebbe, ma può superarla grazie ad un’azione ",e.jsx(i.strong,{children:"salta"}),`.
Se Bunny segue il procedimento qui sotto, riesce a raggiungere la bandierina?`]}),e.jsx(i.p,{children:e.jsx(h,{alt:"code",src:typeof k=="function"?k(_variant):k})}),e.jsxs(f,{children:[e.jsx(n,{correct:!1,children:e.jsx(i.p,{children:"si, raggiunge la bandierina"})}),e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["no, perchè cade sulla ",e.jsx(i.em,{children:"grande roccia"})," in posizione ",e.jsx(o,{children:String.raw`4`})]})}),e.jsx(n,{correct:!0,children:e.jsxs(i.p,{children:["no, perchè si ferma sulla casella ",e.jsx(o,{children:String.raw`9`})]})}),e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["no, perchè cade sulla ",e.jsx(i.em,{children:"grande roccia"})," in posizione ",e.jsx(o,{children:String.raw`8`})]})}),e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["si, raggiunge e supera la bandierina arrivando sulla casella ",e.jsx(o,{children:String.raw`13`})]})})]}),e.jsxs(g,{children:[e.jsx(i.p,{children:"Ripercorriamo il percorso di Bunny:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:["Casella iniziale: ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`1`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Prima ripetizione:",`
`,e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`2`}),";"]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`3`}),";"]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`salta`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`5`}),";"]})]}),`
`]}),`
`]}),`
`,e.jsxs(i.li,{children:["Seconda ripetizione:",`
`,e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`6`}),";"]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`7`}),";"]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`salta`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`9`}),"."]})]}),`
`]}),`
`]}),`
`]}),e.jsxs(i.p,{children:["Quindi Bunny si ferma nella posizione ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`9`}),","]})," senza raggiungere la bandierina."]}),e.jsxs(i.p,{children:[e.jsx(h,{alt:"6.1 primarie",src:typeof ue=="function"?ue(_variant):ue}),`
`,e.jsx(h,{alt:"6.1 secondarie",src:typeof xe=="function"?xe(_variant):xe})]})]})]}),`
`,e.jsx(i.hr,{}),`
`,e.jsxs(m,{subId:2,children:[e.jsx(i.p,{children:"Ricordiamo il percorso ad ostacoli ed il procedimento seguito da Bunny:"}),e.jsx(i.p,{children:e.jsx(h,{alt:"fig",src:typeof z=="function"?z(_variant):z})}),e.jsx(i.p,{children:e.jsx(h,{alt:"code",src:typeof k=="function"?k(_variant):k})}),e.jsx(i.p,{children:"Bunny si chiede se cambiando punto di partenza riuscirebbe a raggiungere o superare la bandierina. Per quali di questi punti di partenza Bunny raggiunge la bandierina seguendo il suo procedimento?"}),e.jsxs(f,{children:[e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["la casella ",e.jsx(o,{children:String.raw`2`})]})}),e.jsx(n,{correct:!0,children:e.jsxs(i.p,{children:["la casella ",e.jsx(o,{children:String.raw`5`})]})}),e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["la casella ",e.jsx(o,{children:String.raw`7`})]})}),e.jsx(n,{correct:!1,children:e.jsxs(i.p,{children:["la casella ",e.jsx(o,{children:String.raw`6`})]})}),e.jsx(n,{correct:!1,children:e.jsx(i.p,{children:"non ci sono punti di partenza da cui raggiunge la bandierina"})})]}),e.jsxs(g,{children:[e.jsxs(i.p,{children:["Bunny vince partendo dalla casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`5`}),","]})," in questo modo:"]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:["Casella iniziale: ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`5`}),"."]})]}),`
`,e.jsxs(i.li,{children:["Prima ripetizione:",`
`,e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`6`}),";"]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`7`}),";"]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`salta`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`9`}),"."]})]}),`
`]}),`
`]}),`
`,e.jsxs(i.li,{children:["Seconda ripetizione:",`
`,e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(s,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": nuova casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`10`}),","]})," e Bunny vince."]}),`
`]}),`
`]}),`
`]}),e.jsxs(i.p,{children:["Se invece Bunny parte dalla casella ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`2`}),","]})," si ferma sulla roccia in posizione ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`4`}),","]})," e se parte dalla casella ",e.jsx(o,{children:String.raw`6`})," o dalla casella ",e.jsx(o,{children:String.raw`7`})," si ferma sulla roccia in posizione ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(o,{children:String.raw`8`}),"."]})]}),e.jsxs(i.p,{children:[e.jsx(h,{alt:"6.2 primarie",src:typeof we=="function"?we(_variant):we}),`
`,e.jsx(h,{alt:"6.2 secondarie",src:typeof je=="function"?je(_variant):je})]})]})]})]})}function rn(a={}){const{wrapper:i}={...j(),...a.components};return i?e.jsx(i,{...a,children:e.jsx(Re,{...a})}):Re(a)}function b(a,i){throw new Error("Expected component `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}export{Zi as M,Ki as a,Wi as b,Yi as c,en as d,nn as e,rn as f};
//# sourceMappingURL=f2bf6955-question.js.map
