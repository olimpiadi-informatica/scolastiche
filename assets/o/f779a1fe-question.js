/*! For licenses information, see LICENSES.txt */
"use client";import{j as e}from"../_virtual_quizms-routes-5deb27b2.js";import{P as m}from"../u/1eb8543a-components.js";import{C as z,r as j,S as d,R as S,V as N}from"../i/4589ec85-visualizer.js";function se(){return{...m()}}const R={src:new URL("../e/eab1aec0-fig.svg",import.meta.url).href,width:1344,height:175},A={src:new URL("../b/b9ee346e-code.svg",import.meta.url).href,width:1833,height:983},U={src:new URL("../a/a9593baf-primarie.svg",import.meta.url).href,width:305,height:251};function Y(n){const i={em:"em",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...se(),...n.components},{Answer:s,AnswerGroup:t,Code:a,Equation:l,Explanation:r,Image:o,MultipleChoiceAnswer:c,SubProblem:p}=i;return s||u("Answer"),t||u("AnswerGroup"),a||u("Code"),l||u("Equation"),r||u("Explanation"),o||u("Image"),c||u("MultipleChoiceAnswer"),p||u("SubProblem"),e.jsxs(p,{children:[e.jsx(i.p,{children:`Tip-Tap ha proprio voglia di una bella scorpacciata di carote!
Per farla, può usare le seguenti azioni:`}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": salta alla roccia più vicina a destra."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`mangia carota`,inline:!0,lang:"text",className:"p-0 text-base"}),": mangia una carota, ma se dov’è arrivato non ci sono carote si ",e.jsx(i.strong,{children:"mangia la lingua"}),"!"]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`roccia marrone`,inline:!0,lang:"text",className:"p-0 text-base"}),": condizione vera se Tip-Tap si trova su una roccia di colore marrone."]}),`
`]}),e.jsx(i.p,{children:`Quali di questi procedimenti consentono a Tip-Tap di mangiare tutte le carote, senza
mangiarsi la lingua?`}),e.jsx(i.p,{children:e.jsx(o,{alt:"T_ | _ _ | _C",src:typeof R=="function"?R(_variant):R})}),e.jsx(i.p,{children:e.jsx(o,{alt:"code",src:typeof A=="function"?A(_variant):A})}),e.jsx(t,{children:e.jsxs(c,{children:[e.jsx(s,{id:"A",correct:!1,children:e.jsxs(i.p,{children:[e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(l,{children:String.raw`1`}),","]})," ",e.jsx(l,{children:String.raw`3`})," e ",e.jsx(l,{children:String.raw`5`})]})}),e.jsx(s,{id:"B",correct:!1,children:e.jsxs(i.p,{children:[e.jsx(l,{children:String.raw`2`})," e ",e.jsx(l,{children:String.raw`4`})]})}),e.jsx(s,{id:"C",correct:!0,children:e.jsxs(i.p,{children:[e.jsx(l,{children:String.raw`3`})," e ",e.jsx(l,{children:String.raw`5`})]})}),e.jsx(s,{id:"D",correct:!1,children:e.jsxs(i.p,{children:["solo ",e.jsx(l,{children:String.raw`5`})]})}),e.jsx(s,{id:"E",correct:!1,children:e.jsxs(i.p,{children:["tutti tranne l’",e.jsx(l,{children:String.raw`1`})]})})]})}),e.jsxs(r,{children:[e.jsx(i.p,{children:"Tip-Tap riesce a mangiare tutte le carote sia seguendo l’opzione 3 che l’opzione 5."}),e.jsx(i.p,{children:e.jsx(i.em,{children:`Nell’opzione 3, inizia mangiando la prima carota, poi le carote sulle rocce marroni tra le 4 successive, poi un’altra carota
(quella sulla roccia grigia centrale), e ancora le carote sulle rocce marroni tra le 4 successive.`})}),e.jsx(i.p,{children:e.jsx(i.em,{children:`Nell’opzione 5, inizia mangiando le carote sulle rocce marroni tra le prime 4, poi un’altra carota
(quella sulla roccia grigia centrale), e ancora le carote sulle rocce marroni tra le 4 successive.`})}),e.jsx(i.p,{children:"In tutte le altre tre opzioni, Tip-Tap non riesce a fare quanto richiesto."}),e.jsx(i.p,{children:e.jsx(i.em,{children:"Nell’opzione 1, Tip-Tap tenta di mangiare carote anche dove non ce ne sono, mordendosi la lingua."})}),e.jsx(i.p,{children:e.jsx(i.em,{children:"Nell’opzione 2, Tip-Tap mangia tutte le carote sulle rocce marroni, ma non mangia la carota sulla roccia grigia centrale."})}),e.jsx(i.p,{children:e.jsx(i.em,{children:`Nell’opzione 4, Tip-Tap mangia la prima carota, poi una carota ogni due rocce, e infine mangia anche l’ultima carota.
Anche in questo caso non mangia la carota sulla roccia grigia centrale.`})}),e.jsx(i.p,{children:e.jsx(o,{alt:"primarie",src:typeof U=="function"?U(_variant):U})})]})]})}function Ke(n={}){const{wrapper:i}={...se(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(Y,{...n})}):Y(n)}function u(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function le(){return{...m()}}const C={src:new URL("../1/1e2cfa0a-code.svg",import.meta.url).href,width:1277,height:867},$={src:new URL("../9/91580aa8-opzioni.svg",import.meta.url).href,width:1104,height:1343},M={src:new URL("../8/8ce53df3-primarie.svg",import.meta.url).href,width:305,height:251},q={src:new URL("../c/c44678fa-secondarie.svg",import.meta.url).href,width:305,height:248};function K(n){const i={em:"em",p:"p",span:"span",...le(),...n.components},{Answer:s,AnswerGroup:t,Equation:a,Explanation:l,Image:r,MultipleChoiceAnswer:o,SubProblem:c}=i;return s||g("Answer"),t||g("AnswerGroup"),a||g("Equation"),l||g("Explanation"),r||g("Image"),o||g("MultipleChoiceAnswer"),c||g("SubProblem"),e.jsxs(c,{children:[e.jsxs(i.p,{children:["Bunny è all’ingresso del fienile della fattoria Fibonacci, e davanti a lui ci sono ",e.jsx(a,{children:String.raw`9`})," pile di balle di fieno numerate con i numeri da ",e.jsx(a,{children:String.raw`1`})," a ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`9`}),"."]})," Ogni pila è formata da un numero variabile di balle di fieno. Bunny vuole giocare spostandosi da una pila all’altra, partendo dalla pila ",e.jsx(a,{children:String.raw`1`})," e seguendo questo procedimento:"]}),e.jsx(i.p,{children:e.jsx(r,{alt:"code",src:typeof C=="function"?C(_variant):C})}),e.jsx(i.p,{children:"In quali di queste situazioni Bunny riesce ad uscire dal fienile?"}),e.jsx(i.p,{children:e.jsx(r,{alt:"opzione1",src:typeof $=="function"?$(_variant):$})}),e.jsx(i.p,{children:"Risposte:"}),e.jsx(t,{children:e.jsxs(o,{children:[e.jsx(s,{id:"A",correct:!1,children:e.jsx(i.p,{children:"nessuna"})}),e.jsx(s,{id:"B",correct:!1,children:e.jsx(i.p,{children:"tutte"})}),e.jsx(s,{id:"C",correct:!1,children:e.jsx(i.p,{children:"solo la 1"})}),e.jsx(s,{id:"D",correct:!0,children:e.jsx(i.p,{children:"la 1 e la 2"})}),e.jsx(s,{id:"E",correct:!1,children:e.jsx(i.p,{children:"la 1 e la 3"})})]})}),e.jsxs(l,{children:[e.jsx(i.p,{children:"Bunny riesce ad uscire dal fienile nell’opzione 1 e nella 2."}),e.jsx(i.p,{children:e.jsx(i.em,{children:"Nell’opzione 1, inizia dalla pila 1, poi salta di due in due fino alla pila 9."})}),e.jsx(i.p,{children:e.jsx(i.em,{children:"Nell’opzione 2, inizia dalla pila 1, salta sulla 3, indietreggia sulla due, salta sulla 4, salta sulla 6, indietreggia sulla 5, salta sulla 7 e finisce sulla 9."})}),e.jsx(i.p,{children:e.jsx(i.em,{children:"Nell’opzione 3, Bunny non riesce ad uscire perchè rimane bloccato saltando in circolo tra le pile 3, 4, 5 senza mai smettere."})}),e.jsxs(i.p,{children:[e.jsx(r,{alt:"primarie",src:typeof M=="function"?M(_variant):M})," ",e.jsx(r,{alt:"secondarie",src:typeof q=="function"?q(_variant):q})]})]})]})}function We(n={}){const{wrapper:i}={...le(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(K,{...n})}):K(n)}function g(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function re(){return{...m()}}const k={src:new URL("../8/820a2449-code.svg",import.meta.url).href,width:1560,height:1296},G={src:new URL("../4/42aaa326-primarie.svg",import.meta.url).href,width:305,height:251},L={src:new URL("../b/bcb7cdfb-secondarie.svg",import.meta.url).href,width:305,height:248};function W(n){const i={p:"p",span:"span",strong:"strong",...re(),...n.components},{Answer:s,AnswerGroup:t,Equation:a,Explanation:l,Image:r,MultipleChoiceAnswer:o,SubProblem:c}=i;return s||x("Answer"),t||x("AnswerGroup"),a||x("Equation"),l||x("Explanation"),r||x("Image"),o||x("MultipleChoiceAnswer"),c||x("SubProblem"),e.jsxs(c,{children:[e.jsx(i.p,{children:`I conigli della fattoria Fibonacci hanno preparato due enormi mucchi di carote.
All’inizio il mucchio sinistro contiene 2024 carote, mentre il mucchio destro ne contiene 3024.
Bunny, Tip-Tap e Carol le mangiano seguendo questo procedimento:`}),e.jsx(i.p,{children:e.jsx(r,{alt:"code",src:typeof k=="function"?k(_variant):k})}),e.jsx(i.p,{children:"Quante carote mangia Carol?"}),e.jsx(t,{children:e.jsxs(o,{children:[e.jsx(s,{id:"A",correct:!1,children:e.jsx(i.p,{children:"0"})}),e.jsx(s,{id:"B",correct:!1,children:e.jsx(i.p,{children:"1"})}),e.jsx(s,{id:"C",correct:!1,children:e.jsx(i.p,{children:"2"})}),e.jsx(s,{id:"D",correct:!1,children:e.jsx(i.p,{children:"4"})}),e.jsx(s,{id:"E",correct:!0,children:e.jsx(i.p,{children:"8"})})]})}),e.jsxs(l,{children:[e.jsxs(i.p,{children:[`Si può notare che ad ogni passaggio della ripetizione, indipendentemente da quale mucchio
abbia più carote, Tip-Tap e Bunny in totale mangiano `,e.jsx(a,{children:String.raw`10`}),` carote.
Visto che all’inizio ci sono `,e.jsx(a,{children:String.raw`2024 + 3024 = 5048`}),` carote, i due conigli andranno avanti
a mangiare `,e.jsx(a,{children:String.raw`10`})," carote per volta fino a quando rimarranno ",e.jsx(a,{children:String.raw`8`}),` carote tra i due mucchi.
A quel punto tutte le carote rimaste le mangerà Carol!`]}),e.jsxs(i.p,{children:[e.jsx(i.strong,{children:"Approfondimento:"}),` visto che la condizione che termina la ripetizione chiede solo che
una delle due pile contenga meno di `,e.jsx(a,{children:String.raw`7`}),` carote, si potrebbe pensare che alla fine potrebbero
rimanere più carote per Carol, come `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`18`}),","]})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`28`}),","]})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`38`}),","]})," eccetera. Questo però non è possibile!"]}),e.jsxs(i.p,{children:[`Infatti, si può notare che ogni volta Tip-Tap e Bunny mangiano più carote dalla pila più grande
e meno dalla pila più piccola. Questo porta a ridurre la differenza tra le due pile, finché
la differenza non è `,e.jsx(i.strong,{children:"al massimo 3"}),`. Da quel punto in poi la differenza tra le due pila rimarrà
sempre al massimo 3, e quindi quando una pila arriva ad avere meno di `,e.jsx(a,{children:String.raw`7`}),` carote (quindi al massimo
`,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`6`}),"),"]})," l’altra pila non può avere più di ",e.jsx(a,{children:String.raw`6 + 3 = 9`})," carote, per un totale di al massimo ",e.jsx(a,{children:String.raw`9 + 6 = 15`}),`
carote, che è meno di `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`18`}),"."]})]}),e.jsxs(i.p,{children:[e.jsx(r,{alt:"primarie",src:typeof G=="function"?G(_variant):G})," ",e.jsx(r,{alt:"secondarie",src:typeof L=="function"?L(_variant):L})]})]})]})}function Ze(n={}){const{wrapper:i}={...re(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(W,{...n})}):W(n)}function x(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function oe(){return{...m()}}const T={src:new URL("../f/f60c29e1-code.svg",import.meta.url).href,width:513,height:891},I={src:new URL("../b/b879ee34-secondarie.svg",import.meta.url).href,width:305,height:248};function Z(n){const i={p:"p",span:"span",...oe(),...n.components},{Answer:s,AnswerGroup:t,Equation:a,Explanation:l,Image:r,MultipleChoiceAnswer:o,SubProblem:c}=i;return s||f("Answer"),t||f("AnswerGroup"),a||f("Equation"),l||f("Explanation"),r||f("Image"),o||f("MultipleChoiceAnswer"),c||f("SubProblem"),e.jsxs(c,{children:[e.jsx(i.p,{children:"Tip-Tap sistemando la sua soffitta si è imbattuto in un libro di programmazione molto vecchio. Nella prima pagina trova il seguente procedimento:"}),e.jsx(i.p,{children:e.jsx(r,{alt:"code",src:typeof T=="function"?T(_variant):T})}),e.jsx(i.p,{children:"Purtroppo la successiva pagina è rovinata perciò Tip-Tap non riesce a capire che numero verrà stampato alla fine, aiutalo tu! Quale numero viene stampato dall’ultimo blocco?"}),e.jsx(t,{children:e.jsxs(o,{children:[e.jsx(s,{id:"A",correct:!1,children:e.jsx(i.p,{children:"0"})}),e.jsx(s,{id:"B",correct:!0,children:e.jsx(i.p,{children:"2"})}),e.jsx(s,{id:"C",correct:!1,children:e.jsx(i.p,{children:"4"})}),e.jsx(s,{id:"D",correct:!1,children:e.jsx(i.p,{children:"6"})}),e.jsx(s,{id:"E",correct:!1,children:e.jsx(i.p,{children:"10"})})]})}),e.jsxs(l,{children:[e.jsxs(i.p,{children:["Il programma incrementa il contatore per ogni multiplo di ",e.jsx(a,{children:String.raw`7`})," fino a ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`42`}),","]}),`
e lo decrementa per ogni multiplo di `,e.jsx(a,{children:String.raw`9`})," fino a ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`42`}),"."]}),`
Siccome i multipli di `,e.jsx(a,{children:String.raw`7`})," fino a ",e.jsx(a,{children:String.raw`42`})," sono ",e.jsx(a,{children:String.raw`6`})," e i multipli di ",e.jsx(a,{children:String.raw`9`})," fino a ",e.jsx(a,{children:String.raw`42`})," sono ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`4`}),","]}),`
il contatore alla fine varrà `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`6 - 4 = 2`}),"."]})]}),e.jsx(i.p,{children:e.jsx(r,{alt:"secondarie",src:typeof I=="function"?I(_variant):I})})]})]})}function ei(n={}){const{wrapper:i}={...oe(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(Z,{...n})}):Z(n)}function f(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function ce(){return{...m()}}const E={src:new URL("../e/ed135708-sol.webp",import.meta.url).href,width:1278,height:1090},B={src:new URL("../4/45c8b699-primarie.svg",import.meta.url).href,width:305,height:251},D={src:new URL("../6/6614aea2-secondarie.svg",import.meta.url).href,width:305,height:248},me=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[{"name":"salto","id":"aL]BB^jjqL!cyI]38IpA"}]}'),he=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"N","message0":"N","inputsInline":true,"colour":20,"tooltip":"numero totale di palloni da sistemare","helpUrl":"","js":["state.N",1.2],"output":"Number"},{"type":"altezza della pila","message0":"altezza della pila %1","args0":[{"type":"input_value","check":"Number","min":["1",0],"max":["state.N",1.2],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"altezza della pila i-esima","helpUrl":"","js":["(function(i) {\\n  state.pos = i - (state.pos > i-1 ? 0.5 : 1.5);\\n  return state.H[i-1];\\n})(_ARG0)",2],"output":"Number"},{"type":"aggiungi carota alla pila","message0":"aggiungi carota alla pila %1","args0":[{"type":"input_value","check":"Number","min":["1",0],"max":["state.N",1.2],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"aggiungi una carota alla pila i-esima","helpUrl":"","js":"(function(i) {\\n  state.pos = i - (state.pos > i-1 ? 0.5 : 1.5);\\n  state.C[i-1] += 1;\\n  state.carrots[state.carrots.length] = i;\\n  if (state.C[i-1] === 3)\\n    exit(false, \\"hai messo una terza carota\\");\\n})(_ARG0);","nextStatement":null,"previousStatement":null},{"type":"termina","message0":"termina","inputsInline":true,"colour":20,"tooltip":"termina il procedimento","helpUrl":"","js":"for (var i=0; i<state.N; i++) {\\n  if (state.C[i] === state.sol[i]) continue;\\n  if (state.sol[i] === 0)\\n    exit(false, \\"non dovevi mettere carote nella pila \\" + (i+1));\\n  if (state.C[i] === 0 && state.sol[i] === 1)\\n    exit(false, \\"non hai messo la carota nella pila \\" + (i+1));\\n  if (state.C[i] === 0 && state.sol[i] === 2)\\n    exit(false, \\"non hai messo le due carote nella pila \\" + (i+1));\\n  if (state.C[i] === 2)\\n    exit(false, \\"non ci voleva la seconda carota nella pila \\" + (i+1));\\n  if (state.C[i] === 1)\\n    exit(false, \\"manca la seconda carota nella pila \\" + (i+1));\\n  exit(false, \\"problema di correzione\\");\\n}\\nexit(true, \\"hai messo le carote bene, complimenti!\\");","previousStatement":null}]`),ge=JSON.parse('[{"N":6,"H":[1,2,4,6,7,10],"C":[0,0,0,0,0,0],"sol":[1,0,1,0,0,2],"carrots":[],"pos":-1},{"N":20,"H":[1,2,4,5,8,6,10,4,9,3,5,3,2,9,5,9,10,3,5,13],"C":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":[1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,2],"carrots":[],"pos":-1},{"N":50,"H":[1,2,3,4,2,4,6,6,8,4,7,8,8,9,5,1,5,1,2,6,1,6,8,6,4,6,2,4,10,4,4,3,9,8,2,2,6,9,8,2,5,9,5,2,9,6,9,4,10,9],"C":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0],"carrots":[],"pos":-1}]'),xe={src:new URL("../d/d5b24aa0-bunny.svg",import.meta.url).href,width:40,height:70.56179775280899},ee={src:new URL("../9/9c001779-carrot.svg",import.meta.url).href,width:25,height:25},fe={src:new URL("../d/d6b64c10-hay.svg",import.meta.url).href,width:60,height:37.10526315789474};function je({variables:n,state:i}){return e.jsxs(e.Fragment,{children:[e.jsxs(z,{gravity:"bottom",scale:10,children:[j(i.N).flatMap(s=>j(i.H[s]).map(t=>e.jsx(d,{src:fe,alt:"Fieno",x:1.5+s*6,y:t*2.8},`hay-${s}-${t}`))),e.jsx(S,{borderColor:"transparent",x:-3,y:-1,width:1,height:1}),e.jsx(d,{src:xe,alt:"Carol",x:3+i.pos*6,y:-1,follow:!0}),e.jsx(d,{src:ee,alt:"Carota",x:5+i.pos*6,y:-.1}),j(i.carrots.length+2).map(s=>{let t=5+i.pos*6,a=-.1;if(s<i.carrots.length){const l=i.carrots[s]-1;t=3.5+l*6+s%3*.5,a=-.3+i.H[l]*2.8}return e.jsx(d,{src:ee,alt:"Carota",x:t,y:a},s)})]}),e.jsx(N,{variables:{...n,pile:i.N}})]})}function ie(n){const i={em:"em",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...ce(),...n.components},{Blockly:s,Code:t,Equation:a,Explanation:l,Image:r,SubProblem:o}=i;return s||b("Blockly"),t||b("Code"),a||b("Equation"),l||b("Explanation"),r||b("Image"),o||b("SubProblem"),e.jsxs(o,{children:[e.jsx(i.p,{children:"Carol sta organizzando una gara di salto nel fienile della fattoria Fibonacci!"}),e.jsxs(i.p,{children:["Il fienile ha ",e.jsx(a,{children:String.raw`N`})," ",e.jsx(i.strong,{children:"pile"})," di balle di fieno, l’",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`i`}),"-esima"]})," delle quali composta da ",e.jsx(a,{children:String.raw`H_i`}),` balle di fieno.
La gara partirà dall’ingresso del fienile a sinistra, prima di tutte le pile. Da lì i conigli dovranno
saltare sulla prima pila `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`i = 1`}),","]}),` e poi via via sulle successive, fino ad arrivare all’ultima pila e
saltare fuori dal fienile a destra.`]}),e.jsxs(i.p,{children:[`I conigli non fanno fatica a saltare in piano o in basso, ma saltare verso l’alto non è facile!
Quindi, Carol vuole mettere una carota come premio su `,e.jsx(i.strong,{children:"ogni"}),` pila di balle di fieno che richiede
un salto `,e.jsx(i.strong,{children:"maggiore"}),` di tutti i salti fatti prima per arrivare fino a lì. Inoltre, vuole mettere
una seconda carota sul salto più alto di tutti del percorso. Carol può fare queste cose:`]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`altezza della pila i`,inline:!0,lang:"text",className:"p-0 text-base"}),": guarda quante balle di fieno ",e.jsx(a,{children:String.raw`H_i`})," ci sono nella pila ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`i`}),"-esima."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`aggiungi carota alla pila i`,inline:!0,lang:"text",className:"p-0 text-base"}),": aggiungi una carota in cima all’",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`i`}),"-esima"]})," pila."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`termina`,inline:!0,lang:"text",className:"p-0 text-base"}),": smetti di aggiungere carote e fai partire la gara."]}),`
`]}),e.jsx(i.p,{children:"Aiuta Carol a preparare il fienile per la gara di salto!"}),e.jsx(s,{customBlocks:he,initialBlocks:me,testcases:ge,visualizer:je}),e.jsxs(l,{children:[e.jsx(i.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(i.p,{children:e.jsx(r,{alt:"soluzione",src:typeof E=="function"?E(_variant):E})}),e.jsxs(i.p,{children:[`Questo programma, mette subito una carota sulla prima pila, che richiede il primo salto: il primo
salto è sempre maggiore degli `,e.jsx(i.em,{children:"zero"}),` salti fatti prima! Il programma poi ricorda che il massimo
salto finora (`,e.jsx(i.em,{children:"maxsalto"}),") è alto come la prima pila, ed è stato fatto nella pila ",e.jsx(a,{children:String.raw`1`})," (",e.jsx(i.em,{children:"dovesalto"}),")."]}),e.jsxs(i.p,{children:[`A questo punto, il programma itera su tutte le altre pile, dalla seconda alla fine.
Per ciascuna di queste, calcola quanto è grande il `,e.jsx(i.em,{children:"salto"})," che serve per arrivare all’",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`i`}),"-esima"]}),` pila.
Se questo salto è maggiore del massimo salto finora, allora va ad aggiungere una carota e lo
memorizza in `,e.jsx(i.em,{children:"maxsalto"})," e ",e.jsx(i.em,{children:"dovesalto"}),"."]}),e.jsxs(i.p,{children:[`Una volta terminato di scorrere tutte le pile, Carol torna all’ultima pila a cui ha aggiunto una
carota (`,e.jsx(i.em,{children:"dovesalto"}),") e ci aggiunge la seconda carota."]}),e.jsxs(i.p,{children:[e.jsx(r,{alt:"primarie",src:typeof B=="function"?B(_variant):B})," ",e.jsx(r,{alt:"secondarie",src:typeof D=="function"?D(_variant):D})]})]})]})}function ii(n={}){const{wrapper:i}={...ce(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(ie,{...n})}):ie(n)}function b(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function pe(){return{...m()}}const P={src:new URL("../8/821bf1c8-fig.svg",import.meta.url).href,width:452,height:493},F={src:new URL("../1/102c5a01-sol.webp",import.meta.url).href,width:1315,height:988},H={src:new URL("../8/806403c9-primarie.svg",import.meta.url).href,width:305,height:251},X={src:new URL("../5/5105c3e2-secondarie.svg",import.meta.url).href,width:305,height:248},be=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[]}'),we=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"fine della fila","message0":"fine della fila %1","args0":[{"type":"field_dropdown","options":[["Fibonacci","0"],["Turing","1"]],"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"la fila è finita?","helpUrl":"","js":["state.data[_ARG0].pos === state.data[_ARG0].H.length",9],"output":"Boolean"},{"type":"altezza primo della fila","message0":"altezza primo della fila %1","args0":[{"type":"field_dropdown","options":[["Fibonacci","0"],["Turing","1"]],"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"l'altezza del primo coniglio nella fila","helpUrl":"","js":["state.data[_ARG0].pos === state.data[_ARG0].H.length\\n  ? exit(false, _ARG0 === 0 ? \\"la fila Fibonacci è finita\\" : \\"la fila Turing è finita\\")\\n  : state.data[_ARG0].H[state.data[_ARG0].pos]",15],"output":"Number"},{"type":"prendi dalla fila","message0":"prendi dalla fila %1","args0":[{"type":"field_dropdown","options":[["Fibonacci","0"],["Turing","1"]],"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"prendi il prossimo coniglio dalla fila","helpUrl":"","js":"state.data[_ARG0].presi[state.data[_ARG0].presi.length] = state.data[_ARG0].H[state.data[_ARG0].pos];\\nif (state.data[_ARG0].pos === state.data[_ARG0].H.length)\\n  exit(false, \\"la fila Fibonacci è finita\\");\\nstate.data[_ARG0].scelta[state.data[_ARG0].pos] = state.data[_ARG0].presi.length;\\nstate.data[_ARG0].pos += 1\\nif (state.data[_ARG0].presi.length <= state.data[1].presi.length\\n      && state.data[_ARG0].presi[state.data[_ARG0].presi.length-1] !== state.data[1-_ARG0].presi[state.data[_ARG0].presi.length-1])\\n  exit(false, \\"l'ultimo preso da \\" + (_ARG0 === 0 ? \\"Fibonacci\\" : \\"Turing\\") + \\" ha un'altezza che non corrisponde\\");","nextStatement":null,"previousStatement":null},{"type":"scarta dalla fila","message0":"scarta dalla fila %1","args0":[{"type":"field_dropdown","options":[["Fibonacci","0"],["Turing","1"]],"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"scarta il prossimo coniglio dalla fila","helpUrl":"","js":"state.data[_ARG0].scartati[state.data[_ARG0].scartati.length] = state.data[_ARG0].H[state.data[_ARG0].pos];\\nif (state.data[_ARG0].pos === state.data[_ARG0].H.length)\\n  exit(false, _ARG0 === 0 ? \\"la fila Fibonacci è finita\\" : \\"la fila Turing è finita\\");\\nstate.data[_ARG0].scelta[state.data[_ARG0].pos] = -state.data[_ARG0].scartati.length;\\nstate.data[_ARG0].pos += 1","nextStatement":null,"previousStatement":null},{"type":"termina","message0":"termina","inputsInline":true,"colour":20,"tooltip":"termina il procedimento","helpUrl":"","js":"if (state.data[0].presi.length !== state.data[1].presi.length)\\n  exit(false, \\"le due squadre non hanno lo stesso numero di giocatori\\");\\nif (state.data[0].presi.length < state.sol)\\n  exit(false, \\"hai fatto squadre da \\" + state.data[0].presi.length + \\" ma potevi farle da \\" + state.sol);\\nif (state.data[0].presi.length > state.sol)\\n  exit(false, \\"problema di correzione\\");\\nexit(true, \\"hai scelto bene le squadre, complimenti!\\");","previousStatement":null}]`),_e=JSON.parse('[{"data":[{"H":[23,26,26,26,29,29,32,35,35],"pos":0,"presi":[],"scartati":[],"scelta":[]},{"H":[23,23,29,32,35,38,38],"pos":0,"presi":[],"scartati":[],"scelta":[]}],"sol":4},{"data":[{"H":[22,23,25,26,27,28,29,30,31,34,35,36,37,39,40],"pos":0,"presi":[],"scartati":[],"scelta":[]},{"H":[20,21,22,23,24,25,26,27,28,29,31,32,34,36,37,38,40],"pos":0,"presi":[],"scartati":[],"scelta":[]}],"sol":12},{"data":[{"H":[20,20,20,21,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,25,26,26,26,26,26,26,27,27,28,30,30,30,31,31,32,33,34,34,34,34,34,34,36,36,37,37,37,37,38,39,40,40,40,40],"pos":0,"presi":[],"scartati":[],"scelta":[]},{"H":[20,20,20,20,20,20,21,22,22,22,22,23,23,23,23,24,24,24,25,25,26,27,27,27,27,28,28,30,31,32,32,32,33,33,34,34,34,34,35,36,36,37,37,37,39,39,39,40,40,40,40],"pos":0,"presi":[],"scartati":[],"scelta":[]}],"sol":37}]'),ve={src:new URL("../6/66b9ece1-ball.svg",import.meta.url).href,width:35,height:35},ye={src:new URL("../2/27400aa0-bunny.svg",import.meta.url).href,width:66,height:116.42696629213484},Se={src:new URL("../6/698c343d-fibonacci.svg",import.meta.url).href,width:63.829787234042556,height:100},ze={src:new URL("../2/296ff494-turing.svg",import.meta.url).href,width:63.829787234042556,height:100};function Ne({variables:n,state:i}){const s=[Se,ze],t=Math.max(...i.data.map(a=>a.presi.length))*5;return e.jsxs(e.Fragment,{children:[e.jsxs(z,{gravity:"bottom",scale:10,children:[e.jsx(d,{src:ye,alt:"Bunny",x:0+t,y:19.5,follow:!0}),e.jsx(d,{src:ve,alt:"Pallone",x:3.5+t,y:20.5}),j(2).flatMap(a=>{const{H:l,scelta:r}=i.data[a];let o=0,c=0;return j(l.length).map(p=>{let h,v=[30,7][a];return p>=r.length?h=(p-r.length)*5+t+10:r[p]>0?(h=o,o+=5):(h=c+t+10,c+=5,v+=[12,-10][a]),e.jsx(d,{src:s[a],alt:"Giocatore",x:h,y:v,scaleY:l[p]/28,className:"origin-bottom"},`${a}-${p}`)})})]}),e.jsx(N,{variables:{...n,Fibonacci:i.data[0].H.length-i.data[0].pos,Turing:i.data[1].H.length-i.data[1].pos}})]})}function ae(n){const i={li:"li",p:"p",strong:"strong",ul:"ul",...pe(),...n.components},{Blockly:s,Code:t,Explanation:a,Image:l,SubProblem:r}=i;return s||y("Blockly"),t||y("Code"),a||y("Explanation"),l||y("Image"),r||y("SubProblem"),e.jsxs(r,{children:[e.jsxs(i.p,{children:["Bunny deve selezionare due squadre di basket da ",e.jsx(i.strong,{children:"più giocatori possibile"}),` per la sfida tra la fattoria Fibonacci e la fattoria Turing!
Per fare una partita bilanciata, vuole che le due squadre siano composte da uno stesso numero di giocatori della stessa altezza, come in questo caso:`]}),e.jsx(i.p,{children:e.jsx(l,{alt:"esempio",src:typeof P=="function"?P(_variant):P})}),e.jsx(i.p,{children:`Bunny ha quindi messo in fila, in ordine crescente di altezza, i conigli di entrambe le fattorie.
Ora può fare queste operazioni:`}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`fine della fila Fibonacci`,inline:!0,lang:"text",className:"p-0 text-base"}),": condizione vera se la fila della fattoria Fibonacci è terminata."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`fine della fila Turing`,inline:!0,lang:"text",className:"p-0 text-base"}),": condizione vera se la fila della fattoria Turing è terminata."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`altezza primo della fila Fibonacci`,inline:!0,lang:"text",className:"p-0 text-base"}),": l’altezza del primo coniglio nella fila della fattoria Fibonacci."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`altezza primo della fila Turing`,inline:!0,lang:"text",className:"p-0 text-base"}),": l’altezza del primo coniglio nella fila della fattoria Turing."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`prendi dalla fila Fibonacci`,inline:!0,lang:"text",className:"p-0 text-base"}),": prendi il prossimo coniglio dalla fila della fattoria Fibonacci."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`prendi dalla fila Turing`,inline:!0,lang:"text",className:"p-0 text-base"}),": prendi il prossimo coniglio dalla fila della fattoria Turing."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`scarta dalla fila Fibonacci`,inline:!0,lang:"text",className:"p-0 text-base"}),": scarta il prossimo coniglio dalla fila della fattoria Fibonacci."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`scarta dalla fila Turing`,inline:!0,lang:"text",className:"p-0 text-base"}),": scarta il prossimo coniglio dalla fila della fattoria Turing."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`termina`,inline:!0,lang:"text",className:"p-0 text-base"}),": completa le squadre e inizia la partita a basket."]}),`
`]}),e.jsx(i.p,{children:"Aiuta Bunny a fare le squadre per la partita!"}),e.jsx(s,{customBlocks:we,initialBlocks:be,testcases:_e,visualizer:Ne}),e.jsxs(a,{children:[e.jsx(i.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(i.p,{children:e.jsx(l,{alt:"soluzione",src:typeof F=="function"?F(_variant):F})}),e.jsx(i.p,{children:`Questo programma procede a selezionare i conigli fino a che una delle due file non si svuota.
Se i due primi della fila hanno la stessa altezza, è possibile prenderli entrambi per
ingrandire la squadra. Se non hanno la stessa altezza Bunny scarta il più basso dei due,
visto che non ha più speranze di trovare un avversario della stessa altezza nell’altra fila.`}),e.jsxs(i.p,{children:[e.jsx(l,{alt:"primarie",src:typeof H=="function"?H(_variant):H})," ",e.jsx(l,{alt:"secondarie",src:typeof X=="function"?X(_variant):X})]})]})]})}function ai(n={}){const{wrapper:i}={...pe(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(ae,{...n})}):ae(n)}function y(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function de(){return{...m()}}const O={src:new URL("../a/ab62f043-sol.webp",import.meta.url).href,width:798,height:630},J={src:new URL("../3/375b3a82-primarie.svg",import.meta.url).href,width:305,height:251},Re=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[]}'),Ae=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"N","message0":"N","inputsInline":true,"colour":20,"tooltip":"numero totale di palloni da sistemare","helpUrl":"","js":["state.N",1.2],"output":"Number"},{"type":"pallone da calcio","message0":"pallone da calcio","inputsInline":true,"colour":20,"tooltip":"il prossimo pallone è da calcio?","helpUrl":"","js":["state.pos < state.N ? state.balls[state.pos] < 2 : exit(false, \\"non ci sono più palloni\\")",15],"output":"Boolean"},{"type":"pallone gonfio","message0":"pallone gonfio","inputsInline":true,"colour":20,"tooltip":"il prossimo pallone è gonfio?","helpUrl":"","js":["state.pos < state.N ? state.balls[state.pos] % 2 : exit(false, \\"non ci sono più palloni\\")",15],"output":"Boolean"},{"type":"tieni","message0":"tieni","inputsInline":true,"colour":20,"tooltip":"metti da parte il prossimo pallone","helpUrl":"","js":"if (state.pos === state.N)\\n  exit(false, \\"non ci sono più palloni\\");\\nstate.deposited += 1;\\nstate.placement[state.pos] = state.deposited;\\nstate.pos += 1;\\nif (state.balls[state.pos-1] === 2)\\n  exit(false, \\"questo pallone era da buttare\\");","nextStatement":null,"previousStatement":null},{"type":"butta","message0":"butta","inputsInline":true,"colour":20,"tooltip":"butta il prossimo pallone","helpUrl":"","js":"if (state.pos === state.N)\\n  exit(false, \\"non ci sono più palloni\\");\\nstate.trashed += 1;\\nstate.placement[state.pos] = -state.trashed;\\nstate.pos += 1;\\nif (state.balls[state.pos-1] !== 2)\\n  exit(false, \\"questo pallone era da tenere\\");","nextStatement":null,"previousStatement":null},{"type":"termina","message0":"termina","inputsInline":true,"colour":20,"tooltip":"termina il procedimento","helpUrl":"","js":"if (state.pos < state.N)\\n  exit(false, \\"non hai finito di sistemare i palloni\\");\\nexit(true, \\"hai sistemato i palloni, complimenti!\\");","previousStatement":null}]`),Ue=JSON.parse('[{"balls":[1,0,3,3,1,2,3,1],"placement":[0,0,0,0,0,0,0,0],"pos":0,"trashed":0,"deposited":0,"N":8},{"balls":[2,2,1,2,2,2,2,2,1,1,2,2,2,2,1,2,1,2,1,1],"placement":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"pos":0,"trashed":0,"deposited":0,"N":20},{"balls":[3,2,2,1,3,2,2,2,3,0,2,3,1,3,1,2,0,2,0,3,0,1,3,0,3,3,3,0,1,1,1,0,2,2,1,2,2,2,3,3,3,3,3,2,2,3,1,2,2,0],"placement":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"pos":0,"trashed":0,"deposited":0,"N":50}]'),Ce={src:new URL("../1/1576261f-ball0.svg",import.meta.url).href,width:40,height:20.105820105820108},$e={src:new URL("../e/e08472cf-ball1.svg",import.meta.url).href,width:40,height:40},Me={src:new URL("../7/7ddeaadb-ball2.svg",import.meta.url).href,width:40,height:20.105820105820108},qe={src:new URL("../7/78a3a030-ball3.svg",import.meta.url).href,width:40,height:40},ke={src:new URL("../9/98ab570a-bunny.svg",import.meta.url).href,width:66,height:116.42696629213484},Ge={src:new URL("../1/133fc043-shelf.svg",import.meta.url).href,width:269.75206611570246,height:170},Le={src:new URL("../8/8fae0542-trash.svg",import.meta.url).href,width:120,height:153.0275229357798},Te=Object.assign({"./asy/ball0.asy":Ce,"./asy/ball1.asy":$e,"./asy/ball2.asy":Me,"./asy/ball3.asy":qe});function Ie({variables:n,state:i}){function s(t){const a=i.N>20?9:4,l=i.N>20?.2:.4;let r=[0,3];if(t>=i.pos)r=[.35*(t-i.pos)+2.4,1.4];else if(i.placement[t]>0){const o=(i.placement[t]-1)%a,c=(i.placement[t]-1-o)/a;r=[o*l+.08,1.27-c*.4]}else{const o=-i.placement[t]-1;r=[1.6+(7*o%11-5)*(.04+o*.001),2.7-o*.06]}return i.balls[t]%2&&(r[1]-=.14),r}return e.jsxs(e.Fragment,{children:[e.jsxs(z,{scale:130,children:[e.jsx(d,{src:Ge,alt:"Scaffale",x:0,y:.2}),j(i.N).map(t=>e.jsx(d,{src:Te[`./asy/ball${i.balls[t]}.asy`],alt:"Pallone",x:s(t)[0],y:s(t)[1]},t)),e.jsx(d,{src:ke,alt:"Tip-Tap",x:1.9,y:.7,follow:!0}),e.jsx(d,{src:Le,alt:"Cestino",x:1.3,y:1.8})]}),e.jsx(N,{variables:n})]})}function ne(n){const i={li:"li",p:"p",strong:"strong",ul:"ul",...de(),...n.components},{Blockly:s,Code:t,Equation:a,Explanation:l,Image:r,SubProblem:o}=i;return s||w("Blockly"),t||w("Code"),a||w("Equation"),l||w("Explanation"),r||w("Image"),o||w("SubProblem"),e.jsxs(o,{children:[e.jsxs(i.p,{children:["Tip-Tap deve sistemare la sua vecchia collezione di ",e.jsx(a,{children:String.raw`N`}),` palloni.
Non avendo spazio per tutti, ha deciso che terrà `,e.jsx(i.strong,{children:"tutti i palloni da calcio"})," e i ",e.jsx(i.strong,{children:"palloni da basket gonfi"}),`,
mentre butterà i `,e.jsx(i.strong,{children:"palloni da basket sgonfi"}),"."]}),e.jsx(i.p,{children:"Per farlo, Tip-Tap può compiere le seguenti azioni:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`tieni`,inline:!0,lang:"text",className:"p-0 text-base"}),": metti via il prossimo pallone nello scaffale."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`butta`,inline:!0,lang:"text",className:"p-0 text-base"}),": butta via il prossimo pallone nel cestino."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`pallone da calcio`,inline:!0,lang:"text",className:"p-0 text-base"}),": condizione vera se il prossimo pallone è da calcio."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`pallone gonfio`,inline:!0,lang:"text",className:"p-0 text-base"}),": condizione vera se il prossimo pallone è gonfio."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`termina`,inline:!0,lang:"text",className:"p-0 text-base"}),": finisci di mettere a posto i palloni."]}),`
`]}),e.jsx(i.p,{children:"Scrivi un programma che consenta a Tip-Tap di sistemare tutti i suoi palloni!"}),e.jsx(s,{customBlocks:Ae,initialBlocks:Re,testcases:Ue,visualizer:Ie}),e.jsxs(l,{children:[e.jsx(i.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(i.p,{children:e.jsx(r,{alt:"soluzione",src:typeof O=="function"?O(_variant):O})}),e.jsxs(i.p,{children:["Secondo questo programma, per ognuno degli ",e.jsx(a,{children:String.raw`N`}),` palloni che Tip-Tap deve sistemare, il protagonista
controlla se il prossimo pallone è da calcio o gonfio. Se sì lo tiene, altrimenti lo butta.`]}),e.jsx(i.p,{children:e.jsx(r,{alt:"primarie",src:typeof J=="function"?J(_variant):J})})]})]})}function ni(n={}){const{wrapper:i}={...de(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(ne,{...n})}):ne(n)}function w(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function ue(){return{...m()}}const V={src:new URL("../5/5cc84022-sol.webp",import.meta.url).href,width:944,height:643},Q={src:new URL("../8/80e816cd-secondarie.svg",import.meta.url).href,width:305,height:248},Ee=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[]}'),Be=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"S","message0":"S","inputsInline":true,"colour":20,"tooltip":"altezza della colonna di sinistra da costruire","helpUrl":"","js":["state.S",1.2],"output":"Number"},{"type":"D","message0":"D","inputsInline":true,"colour":20,"tooltip":"altezza della colonna di destra da costruire","helpUrl":"","js":["state.D",1.2],"output":"Number"},{"type":"M","message0":"M","inputsInline":true,"colour":20,"tooltip":"numero di blocchetti nel set da costruzioni","helpUrl":"","js":["state.M",1.2],"output":"Number"},{"type":"altezza colonna","message0":"altezza colonna %1","args0":[{"type":"field_dropdown","options":[["sinistra","0"],["destra","2"]],"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"altezza corrente della colonna","helpUrl":"","js":["state.pos[_ARG0]",1.2],"output":"Number"},{"type":"impila blocchetto","message0":"impila blocchetto %1 a %2","args0":[{"type":"input_value","check":"Number","min":["1",0],"max":["state.M",1.2],"integer":true,"name":"_ARG0"},{"type":"field_dropdown","options":[["sinistra","0"],["destra","2"]],"name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"impila blocchetto alto i alla colonna","helpUrl":"","js":"(function(i) {\\n  state.orient = _ARG1 / 2;\\n  state.pos[1] = i;\\n  if (state.blocchi[i-1][0] !== 1)\\n    exit(false, \\"hai già usato il blocchetto \\" + i);\\n  state.rimasti -= 1;\\n  state.pos[3] = state.pos[_ARG1] + (i-4)/2;\\n  state.blocchi[i-1] = [_ARG1, state.pos[_ARG1]];\\n  state.pos[_ARG1] += i;\\n  if (state.pos[0] > state.S)\\n    exit(false, \\"la colonna di sinistra è troppo alta\\");\\n  if (state.pos[2] > state.D)\\n    exit(false, \\"la colonna di destra è troppo alta\\");\\n})(_ARG0);","nextStatement":null,"previousStatement":null},{"type":"termina","message0":"termina","inputsInline":true,"colour":20,"tooltip":"termina il procedimento","helpUrl":"","js":"if (state.pos[0] < state.S)\\n  exit(false, \\"la colonna di sinistra è troppo bassa\\");\\nif (state.pos[2] < state.D)\\n  exit(false, \\"la colonna di destra è troppo bassa\\");\\nexit(true, \\"hai costruito bene le colonne, complimenti!\\");","previousStatement":null}]`),De=JSON.parse('[{"S":9,"D":12,"M":6,"blocchi":[[1,0],[1,1],[1,2],[1,3],[1,4],[1,5]],"pos":[0,0,0,0],"rimasti":6,"orient":1},{"S":70,"D":35,"M":14,"blocchi":[[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[1,10],[1,11],[1,12],[1,13]],"pos":[0,0,0,0],"rimasti":14,"orient":1},{"S":330,"D":166,"M":31,"blocchi":[[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[1,10],[1,11],[1,12],[1,13],[1,14],[1,15],[1,16],[1,17],[1,18],[1,19],[1,20],[1,21],[1,22],[1,23],[1,24],[1,25],[1,26],[1,27],[1,28],[1,29],[1,30]],"pos":[0,0,0,0],"rimasti":31,"orient":1}]'),Pe={src:new URL("../e/e3d5cc76-bunnies3.svg",import.meta.url).href,width:66,height:116.42696629213484},Fe={src:new URL("../9/98ab570a-bunny.svg",import.meta.url).href,width:66,height:116.42696629213484},He={src:new URL("../2/28e654b1-stairs1.svg",import.meta.url).href,width:80,height:248},Xe={src:new URL("../8/82bf9b12-stairs2.svg",import.meta.url).href,width:80,height:1370},Oe={src:new URL("../d/decd1926-stairs3.svg",import.meta.url).href,width:80,height:6512};function Je({variables:n,state:i}){const s=[He,Xe,Oe][i.M<=6?0:i.M<=14?1:2],t=[Pe,Fe],a=2,l=3,r=["#4093b0","#bf4eb4","#44c966","#4473c9","#c2a948","#7468c5","#9c5ebd","#7cc258","#a3b651","#40af91","#4473c9","#c2a948","#7468c5","#9c5ebd","#7cc258","#a3b651"];let o=0;for(let p=0;p<i.pos[1];++p)i.blocchi[p][0]===1&&(o+=1);let c=3-o*(l+1);return e.jsxs(e.Fragment,{children:[e.jsxs(z,{gravity:"bottom",scale:10,children:[e.jsx(S,{color:"#eeeeee",height:i.S*a,width:l+1,x:7,y:0}),e.jsx(S,{color:"#eeeeee",height:i.D*a,width:l+1,x:23,y:0}),e.jsx(d,{src:s,alt:"Scale",x:13.1,y:0}),e.jsx(S,{color:"#954520",height:1,width:(l+1)*i.M*2+l+17,x:7-(l+1)*i.M,y:i.pos[3]*a}),e.jsx(d,{src:t[i.orient],alt:"Bunny",x:14,y:i.pos[3]*a,follow:!0}),j(i.M).map(p=>{let h=i.blocchi[p][0]*8+7.5,v=i.blocchi[p][1]*a;return i.blocchi[p][0]===1&&(p>=i.pos[1]&&c<23&&(c=23.5),c+=l+1,h=c,v=i.pos[3]*a+.5),e.jsx(S,{color:r[p%r.length],height:(p+1)*a,width:l,x:h,y:v,className:"pl-0.5 leading-4",children:p+1},p)})]}),e.jsx(N,{variables:{sinistra:`${i.pos[0]}/${i.S}`,destra:`${i.pos[2]}/${i.D}`,blocchetti:`${i.rimasti}/${i.M}`,...n}})]})}function te(n){const i={li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...ue(),...n.components},{Blockly:s,Code:t,Equation:a,Explanation:l,Image:r,SubProblem:o}=i;return s||_("Blockly"),t||_("Code"),a||_("Equation"),l||_("Explanation"),r||_("Image"),o||_("SubProblem"),e.jsxs(o,{children:[e.jsxs(i.p,{children:[`Tip-Tap vuole costruire una nuova tettoia per la sua fattoria!
Come prima cosa, ha bisogno di costruire le due colonne portanti:
una a sinistra alta `,e.jsx(a,{children:String.raw`S`})," centimetri, e una a destra alta ",e.jsx(a,{children:String.raw`D`})," centimetri."]}),e.jsxs(i.p,{children:[`Per farlo intende impilare alcuni blocchetti presi da un set da costruzioni,
composto da un singolo blocchetto per ogni altezza possibile tra un minimo
di 1 centimetro e un massimo di `,e.jsx(a,{children:String.raw`M`}),` centimetri, e che in tutto arrivano
esattamente all’altezza totale delle due colonne. Ora può fare queste operazioni:`]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`altezza colonna destra`,inline:!0,lang:"text",className:"p-0 text-base"}),": l’altezza corrente della colonna di destra."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`altezza colonna sinistra`,inline:!0,lang:"text",className:"p-0 text-base"}),": l’altezza corrente della colonna di sinistra."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`impila blocchetto i a destra`,inline:!0,lang:"text",className:"p-0 text-base"}),": aggiunge il blocchetto alto ",e.jsx(a,{children:String.raw`i`})," centimetri alla colonna di destra, se non l’ha già usato."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`impila blocchetto i a sinistra`,inline:!0,lang:"text",className:"p-0 text-base"}),": aggiunge il blocchetto alto ",e.jsx(a,{children:String.raw`i`})," centimetri alla colonna di sinistra, se non l’ha già usato."]}),`
`,e.jsxs(i.li,{children:[e.jsx(t,{code:String.raw`termina`,inline:!0,lang:"text",className:"p-0 text-base"}),": completa le colonne e costruisci la tettoia."]}),`
`]}),e.jsx(i.p,{children:"Aiuta Tip-Tap a completare la tettoia come previsto!"}),e.jsx(s,{customBlocks:Be,initialBlocks:Ee,testcases:De,visualizer:Je}),e.jsxs(l,{children:[e.jsx(i.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(i.p,{children:e.jsx(r,{alt:"soluzione",src:typeof V=="function"?V(_variant):V})}),e.jsx(i.p,{children:`Questo programma procede a selezionare i blocchetti dal più grande al più piccolo.
Per ogni blocchetto, prova prima se può metterlo nella colonna a sinistra.
Se non può, prova anche a destra prima di scartarlo definitivamente.`}),e.jsxs(i.p,{children:[e.jsx(i.strong,{children:"Approfondimento:"}),` Si può dimostrare che questo procedimento riesce sempre a costruire
le colonne. Per mostrarlo, consideriamo cosa succede quando vogliamo piazzare il
blocchetto alto `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`M`}),"."]}),` La più alta delle due colonne deve essere alta più della metà del
totale, ma `,e.jsx(a,{children:String.raw`M`})," è al massimo la metà del totale dei blocchetti da ",e.jsx(a,{children:String.raw`1`})," a ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`M`}),","]}),` quindi
posso sicuramente farlo stare in una delle due colonne. Mettendolo, abbiamo ridotto sia l’altezza
totale da costruire che l’altezza totale dei blocchetti di `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(a,{children:String.raw`M`}),","]}),` quindi è ancora vero che
l’altezza totale dei blocchetti è uguale all’altezza totale delle colonne da costruire.`]}),e.jsx(i.p,{children:e.jsx(r,{alt:"secondarie",src:typeof Q=="function"?Q(_variant):Q})})]})]})}function ti(n={}){const{wrapper:i}={...ue(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(te,{...n})}):te(n)}function _(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}export{ti as M,ni as a,ai as b,ii as c,ei as d,Ze as e,We as f,Ke as g};
//# sourceMappingURL=f779a1fe-question.js.map
