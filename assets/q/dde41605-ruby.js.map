{"version":3,"file":"dde41605-ruby.js","sources":["../../../node_modules/shiki/dist/langs/ruby.mjs"],"sourcesContent":["import html from './html.mjs';\nimport xml from './xml.mjs';\nimport sql from './sql.mjs';\nimport css from './css.mjs';\nimport c from './c.mjs';\nimport javascript from './javascript.mjs';\nimport shellscript from './shellscript.mjs';\nimport lua from './lua.mjs';\nimport './java.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Ruby\", \"name\": \"ruby\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.class.ruby\" }, \"2\": { \"name\": \"entity.name.type.class.ruby\" }, \"3\": { \"name\": \"keyword.operator.other.ruby\" }, \"4\": { \"name\": \"entity.other.inherited-class.ruby\" }, \"5\": { \"name\": \"keyword.operator.other.ruby\" }, \"6\": { \"name\": \"variable.other.object.ruby\" } }, \"match\": \"^\\\\s*(class)\\\\s+(?:([.a-zA-Z0-9_:]+)(?:\\\\s*(<)\\\\s*([.a-zA-Z0-9_:]+))?|(<<)\\\\s*([.a-zA-Z0-9_:]+))\", \"name\": \"meta.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.module.ruby\" }, \"2\": { \"name\": \"entity.name.type.module.ruby\" }, \"3\": { \"name\": \"entity.other.inherited-class.module.first.ruby\" }, \"4\": { \"name\": \"punctuation.separator.inheritance.ruby\" }, \"5\": { \"name\": \"entity.other.inherited-class.module.second.ruby\" }, \"6\": { \"name\": \"punctuation.separator.inheritance.ruby\" }, \"7\": { \"name\": \"entity.other.inherited-class.module.third.ruby\" }, \"8\": { \"name\": \"punctuation.separator.inheritance.ruby\" } }, \"match\": \"^\\\\s*(module)\\\\s+(([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))?([A-Z]\\\\w*(::))*[A-Z]\\\\w*)\", \"name\": \"meta.module.ruby\" }, { \"comment\": \"else if is a common mistake carried over from other languages. it works if you put in a second end, but it\\u2019s never what you want.\", \"match\": \"(?<!\\\\.)\\\\belse(\\\\s)+if\\\\b\", \"name\": \"invalid.deprecated.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols as hash key (1.9 syntax)\", \"match\": \"(?>[a-zA-Z_]\\\\w*(?>[?!])?)(:)(?!:)\", \"name\": \"constant.other.symbol.hashkey.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols as hash key (1.8 syntax)\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!])?)(?=\\\\s*=>)\", \"name\": \"constant.other.symbol.hashkey.ruby\" }, { \"comment\": \"everything being a reserved word, not a value and needing a 'end' is a..\", \"match\": \"(?<!\\\\.)\\\\b(BEGIN|begin|case|class|else|elsif|END|end|ensure|for|if|in|module|rescue|then|unless|until|when|while)\\\\b(?![?!])\", \"name\": \"keyword.control.ruby\" }, { \"comment\": \"contextual smart pair support for block parameters\", \"match\": \"(?<!\\\\.)\\\\bdo\\\\b\", \"name\": \"keyword.control.start-block.ruby\" }, { \"comment\": \"contextual smart pair support\", \"match\": \"(?<=\\\\{)(\\\\s+)\", \"name\": \"meta.syntax.ruby.start-block\" }, { \"match\": \"(?<!\\\\.)\\\\b(alias|alias_method|block_given[?]|break|defined[?]|iterator[?]|next|redo|retry|return|super|undef|yield)(\\\\b|(?<=[?]))(?![?!])\", \"name\": \"keyword.control.pseudo-method.ruby\" }, { \"match\": \"\\\\b(nil|true|false)\\\\b(?![?!])\", \"name\": \"constant.language.ruby\" }, { \"match\": \"\\\\b(__(dir|FILE|LINE)__)\\\\b(?![?!])\", \"name\": \"variable.language.ruby\" }, { \"begin\": \"^__END__\\\\n\", \"captures\": { \"0\": { \"name\": \"string.unquoted.program-block.ruby\" } }, \"comment\": \"__END__ marker\", \"contentName\": \"text.plain\", \"end\": \"(?=not)impossible\", \"patterns\": [{ \"begin\": \"(?=<?xml|<(?i:html\\\\b)|!DOCTYPE (?i:html\\\\b))\", \"end\": \"(?=not)impossible\", \"name\": \"text.html.embedded.ruby\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }] }, { \"match\": \"\\\\b(self)\\\\b(?![?!])\", \"name\": \"variable.language.self.ruby\" }, { \"comment\": \" everything being a method but having a special function is a..\", \"match\": \"\\\\b(initialize|new|loop|include|extend|prepend|fail|raise|attr_reader|attr_writer|attr_accessor|attr|catch|throw|private|private_class_method|module_function|public|public_class_method|protected|refine|using)\\\\b(?![?!])\", \"name\": \"keyword.other.special-method.ruby\" }, { \"begin\": \"\\\\b(?<!\\\\.|::)(require|require_relative)\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.other.special-method.ruby\" } }, \"end\": \"$|(?=#|\\\\})\", \"name\": \"meta.require.ruby\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.instance.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(@@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(\\\\$)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.global.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(\\\\$)(!|@|&|`|'|\\\\+|\\\\d+|~|=|/|\\\\\\\\|,|;|\\\\.|<|>|_|\\\\*|\\\\$|\\\\?|:|\\\"|-[0adFiIlpvw])\", \"name\": \"variable.other.readwrite.global.pre-defined.ruby\" }, { \"begin\": \"\\\\b(ENV)\\\\[\", \"beginCaptures\": { \"1\": { \"name\": \"variable.other.constant.ruby\" } }, \"end\": \"\\\\]\", \"name\": \"meta.environment-variable.ruby\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b[A-Z]\\\\w*(?=((\\\\.|::)[A-Za-z]|\\\\[))\", \"name\": \"support.class.ruby\" }, { \"match\": \"\\\\b(abort|at_exit|autoload[?]?|binding|callcc|caller|caller_locations|chomp|chop|eval|exec|exit|exit!|fork|format|gets|global_variables|gsub|lambda|load|local_variables|open|p|print|printf|proc|putc|puts|rand|readline|readlines|select|set_trace_func|sleep|spawn|sprintf|srand|sub|syscall|system|test|trace_var|trap|untrace_var|warn)(\\\\b|(?<=[?!]))(?![?!])\", \"name\": \"support.function.kernel.ruby\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"variable.other.constant.ruby\" }, { \"begin\": \"(?=def\\\\b)(?<=^|\\\\s)(def)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"2\": { \"name\": \"entity.name.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.parameters.ruby\" } }, \"comment\": \"the method pattern comes from the symbol pattern, see there for a explaination\", \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.ruby\" } }, \"name\": \"meta.function.method.with-arguments.ruby\", \"patterns\": [{ \"begin\": \"(?=[&*_a-zA-Z])\", \"end\": \"(?=[,)])\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.variable.ruby\" }, \"2\": { \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.constant.ruby\" }, \"4\": { \"name\": \"variable.parameter.function.ruby\" } }, \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\" }, { \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] }], \"repository\": { \"braces\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.begin.ruby\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.ruby\" } }, \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] }, \"parens\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.begin.ruby\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.function.end.ruby\" } }, \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#braces\" }, { \"include\": \"$self\" }] } } }, { \"begin\": \"(?=def\\\\b)(?<=^|\\\\s)(def)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))[ \\\\t](?=[ \\\\t]*[^\\\\s#;])\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"2\": { \"name\": \"entity.name.function.ruby\" } }, \"comment\": \"same as the previous rule, but without parentheses around the arguments\", \"end\": \"$\", \"name\": \"meta.function.method.with-arguments.ruby\", \"patterns\": [{ \"begin\": \"(?![\\\\s,])\", \"end\": \"(?=,|$)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.variable.ruby\" }, \"2\": { \"name\": \"constant.other.symbol.hashkey.parameter.function.ruby\" }, \"3\": { \"name\": \"punctuation.definition.constant.ruby\" }, \"4\": { \"name\": \"variable.parameter.function.ruby\" } }, \"match\": \"\\\\G([&*]?)(?:([_a-zA-Z]\\\\w*(:))|([_a-zA-Z]\\\\w*))\", \"name\": \"variable.parameter.function.ruby\" }, { \"include\": \"$self\" }] }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.def.ruby\" }, \"3\": { \"name\": \"entity.name.function.ruby\" } }, \"comment\": \" the optional name is just to catch the def also without a method-name\", \"match\": \"(?=def\\\\b)(?<=^|\\\\s)(def)\\\\b(\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|!=|!~|>[>=]?|<=>|<[<=]?|[%&`/\\\\|^]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?)))?\", \"name\": \"meta.function.method.without-arguments.ruby\" }, { \"match\": \"\\\\b\\\\d(?>_?\\\\d)*(?=\\\\.\\\\d|[eE])(\\\\.\\\\d(?>_?\\\\d)*)?([eE][-+]?\\\\d(?>_?\\\\d)*)?r?i?\\\\b\", \"name\": \"constant.numeric.float.ruby\" }, { \"match\": \"\\\\b(0|(0[dD]\\\\d|[1-9])(?>_?\\\\d)*)r?i?\\\\b\", \"name\": \"constant.numeric.integer.ruby\" }, { \"match\": \"\\\\b0[xX]\\\\h(?>_?\\\\h)*r?i?\\\\b\", \"name\": \"constant.numeric.hex.ruby\" }, { \"match\": \"\\\\b0[bB][01](?>_?[01])*r?i?\\\\b\", \"name\": \"constant.numeric.binary.ruby\" }, { \"match\": \"\\\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\\\b\", \"name\": \"constant.numeric.octal.ruby\" }, { \"begin\": \":'\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"end\": \"'\", \"name\": \"constant.other.symbol.single-quoted.ruby\", \"patterns\": [{ \"match\": \"\\\\\\\\['\\\\\\\\]\", \"name\": \"constant.character.escape.ruby\" }] }, { \"begin\": ':\"', \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"end\": '\"', \"name\": \"constant.other.symbol.double-quoted.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"comment\": \"Needs higher precedence than regular expressions.\", \"match\": \"(?<!\\\\()/=\", \"name\": \"keyword.operator.assignment.augmented.ruby\" }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"single quoted string (does not allow interpolation)\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.single.ruby\", \"patterns\": [{ \"match\": \"\\\\\\\\'|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"double quoted string (allows for interpolation)\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.double.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"execute string (allows for interpolation)\", \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.interpolated.ruby\", \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"include\": \"#percent_literals\" }, { \"begin\": \"(?:^|(?<=[=>~(?:\\\\[,|&;]|[\\\\s;]if\\\\s|[\\\\s;]elsif\\\\s|[\\\\s;]while\\\\s|[\\\\s;]unless\\\\s|[\\\\s;]when\\\\s|[\\\\s;]assert_match\\\\s|[\\\\s;]or\\\\s|[\\\\s;]and\\\\s|[\\\\s;]not\\\\s|[\\\\s.]index\\\\s|[\\\\s.]scan\\\\s|[\\\\s.]sub\\\\s|[\\\\s.]sub!\\\\s|[\\\\s.]gsub\\\\s|[\\\\s.]gsub!\\\\s|[\\\\s.]match\\\\s)|(?<=^when\\\\s|^if\\\\s|^elsif\\\\s|^while\\\\s|^unless\\\\s))\\\\s*((/))(?![*+{}?])\", \"captures\": { \"1\": { \"name\": \"string.regexp.classic.ruby\" }, \"2\": { \"name\": \"punctuation.definition.string.ruby\" } }, \"comment\": \"regular expressions (normal)\\n\t\t\twe only start a regexp if the character before it (excluding whitespace)\\n\t\t\tis what we think is before a regexp\\n\t\t\t\", \"contentName\": \"string.regexp.classic.ruby\", \"end\": \"((/[eimnosux]*))\", \"patterns\": [{ \"include\": \"#regex_sub\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.ruby\" } }, \"comment\": \"symbols\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?![>=]))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?|(@@?|\\\\$)[a-zA-Z_]\\\\w*)\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"^=begin\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"comment\": \"multiline comments\", \"end\": \"^=end\", \"name\": \"comment.block.documentation.ruby\" }, { \"begin\": \"(^[ \\\\t]+)?(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.ruby\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.ruby\" }] }, { \"comment\": '\\n\t\t\tmatches questionmark-letters.\\n\\n\t\t\texamples (1st alternation = hex):\\n\t\t\t?\\\\x1     ?\\\\x61\\n\\n\t\t\texamples (2nd alternation = octal):\\n\t\t\t?\\\\0      ?\\\\07     ?\\\\017\\n\\n\t\t\texamples (3rd alternation = escaped):\\n\t\t\t?\\\\n      ?\\\\b\\n\\n\t\t\texamples (4th alternation = meta-ctrl):\\n\t\t\t?\\\\C-a    ?\\\\M-a    ?\\\\C-\\\\M-\\\\C-\\\\M-a\\n\\n\t\t\texamples (4th alternation = normal):\\n\t\t\t?a       ?A       ?0 \\n\t\t\t?*       ?\"       ?( \\n\t\t\t?.       ?#\\n\t\t\t\\n\t\t\t\\n\t\t\tthe negative lookbehind prevents against matching\\n\t\t\tp(42.tainted?)\\n\t\t\t', \"match\": \"(?<!\\\\w)\\\\?(\\\\\\\\(x\\\\h{1,2}(?!\\\\h)\\\\b|0[0-7]{0,2}(?![0-7])\\\\b|[^x0MC])|(\\\\\\\\[MC]-)+\\\\w|[^\\\\s\\\\\\\\])\", \"name\": \"constant.numeric.ruby\" }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded html\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.html\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"text.html\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"text.html.basic\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded xml\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.xml\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"text.xml\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"text.xml\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded sql\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.sql\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.sql\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.sql\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded css\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.css\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.css\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.css\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded c++\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.c++\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.c++\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.c++\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded c\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.c\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.c\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.c\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1))', \"comment\": \"Heredoc with embedded javascript\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.js\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.js\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.js\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded jQuery javascript\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.js.jquery\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.js.jquery\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.js.jquery\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1))', \"comment\": \"Heredoc with embedded shell\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.shell\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.shell\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.shell\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded lua\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.lua\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.lua\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.lua\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": '(?=(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1))', \"comment\": \"Heredoc with embedded ruby\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.embedded.block.ruby\", \"patterns\": [{ \"begin\": '(?><<[-~](\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1)', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"contentName\": \"source.ruby\", \"end\": \"\\\\s*\\\\2$\\\\n?\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"source.ruby\" }, { \"include\": \"#escaped_char\" }] }] }, { \"begin\": \"(?>=\\\\s*<<(\\\\w+))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"^\\\\1$\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?><<[-~](\\\\w+))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"comment\": \"heredoc with indented terminator\", \"end\": \"\\\\s*\\\\1$\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.unquoted.heredoc.ruby\", \"patterns\": [{ \"include\": \"#heredoc\" }, { \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?<=\\\\{|do|\\\\{\\\\s|do\\\\s)(\\\\|)\", \"captures\": { \"1\": { \"name\": \"punctuation.separator.arguments.ruby\" } }, \"end\": \"(?<!\\\\|)(\\\\|)(?!\\\\|)\", \"patterns\": [{ \"include\": \"$self\" }, { \"match\": \"[_a-zA-Z][_a-zA-Z0-9]*\", \"name\": \"variable.other.block.ruby\" }, { \"match\": \",\", \"name\": \"punctuation.separator.variable.ruby\" }] }, { \"match\": \"=>\", \"name\": \"punctuation.separator.key-value\" }, { \"match\": \"->\", \"name\": \"support.function.kernel.lambda.ruby\" }, { \"match\": \"<<=|%=|&{1,2}=|\\\\*=|\\\\*\\\\*=|\\\\+=|-=|\\\\^=|\\\\|{1,2}=|<<\", \"name\": \"keyword.operator.assignment.augmented.ruby\" }, { \"match\": \"<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\\\t])\\\\?\", \"name\": \"keyword.operator.comparison.ruby\" }, { \"match\": \"(?<!\\\\.)\\\\b(and|not|or)\\\\b(?![?!])\", \"name\": \"keyword.operator.logical.ruby\" }, { \"comment\": \"Make sure this goes after assignment and comparison\", \"match\": \"(?<=^|[ \\\\t])!|&&|\\\\|\\\\||\\\\^\", \"name\": \"keyword.operator.logical.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.method.ruby\" } }, \"comment\": \"Safe navigation operator - Added in 2.3\", \"match\": \"(&\\\\.)\\\\s*(?![A-Z])\" }, { \"match\": \"(%|&|\\\\*\\\\*|\\\\*|\\\\+|-|/)\", \"name\": \"keyword.operator.arithmetic.ruby\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.ruby\" }, { \"match\": \"\\\\||~|>>\", \"name\": \"keyword.operator.other.ruby\" }, { \"match\": \";\", \"name\": \"punctuation.separator.statement.ruby\" }, { \"match\": \",\", \"name\": \"punctuation.separator.object.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace.ruby\" } }, \"comment\": \"Mark as namespace separator if double colons followed by capital letter\", \"match\": \"(::)\\\\s*(?=[A-Z])\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.method.ruby\" } }, \"comment\": \"Mark as method separator if double colons not followed by capital letter\", \"match\": \"(\\\\.|::)\\\\s*(?![A-Z])\" }, { \"comment\": \"Must come after method and constant separators to prefer double colons\", \"match\": \":\", \"name\": \"punctuation.separator.other.ruby\" }, { \"match\": \"\\\\{\", \"name\": \"punctuation.section.scope.begin.ruby\" }, { \"match\": \"\\\\}\", \"name\": \"punctuation.section.scope.end.ruby\" }, { \"match\": \"\\\\[\", \"name\": \"punctuation.section.array.begin.ruby\" }, { \"match\": \"\\\\]\", \"name\": \"punctuation.section.array.end.ruby\" }, { \"match\": \"\\\\(|\\\\)\", \"name\": \"punctuation.section.function.ruby\" }], \"repository\": { \"escaped_char\": { \"match\": \"\\\\\\\\(?:[0-7]{1,3}|x[\\\\da-fA-F]{1,2}|.)\", \"name\": \"constant.character.escape.ruby\" }, \"heredoc\": { \"begin\": \"^<<[-~]?\\\\w+\", \"end\": \"$\", \"patterns\": [{ \"include\": \"$self\" }] }, \"interpolated_ruby\": { \"patterns\": [{ \"begin\": \"#\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.ruby\" } }, \"contentName\": \"source.ruby\", \"end\": \"(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.ruby\" }, \"1\": { \"name\": \"source.ruby\" } }, \"name\": \"meta.embedded.line.ruby\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }, { \"include\": \"$self\" }], \"repository\": { \"nest_curly_and_self\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.scope.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }] }, { \"include\": \"$self\" }] } } }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.instance.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#@@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.class.ruby\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.ruby\" } }, \"match\": \"(#\\\\$)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.global.ruby\" }] }, \"percent_literals\": { \"patterns\": [{ \"begin\": \"%i(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.symbol.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }, { \"include\": \"#symbol\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\<|\\\\\\\\>\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }] }, \"braces\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }] }, \"brackets\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }] }, \"parens\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\", \"name\": \"constant.other.symbol.ruby\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }] }, \"symbol\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\", \"name\": \"constant.other.symbol.ruby\" }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"constant.other.symbol.ruby\" }] } } }, { \"begin\": \"%I(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.symbol.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }, { \"include\": \"#symbol\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#symbol\" }] }] }, \"braces\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#symbol\" }] }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#symbol\" }] }] }, \"parens\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"constant.other.symbol.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#symbol\" }] }] }, \"symbol\": { \"patterns\": [{ \"begin\": \"(?=\\\\\\\\|#\\\\{)\", \"end\": \"(?!\\\\G)\", \"name\": \"constant.other.symbol.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }] }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"constant.other.symbol.ruby\" }] } } }, { \"begin\": \"%q(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.other.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }], \"repository\": { \"angles\": { \"patterns\": [{ \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%Q?(?:([(\\\\[{<])|([^\\\\w\\\\s=]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.quoted.other.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%r(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"([)\\\\]}>]\\\\2|\\\\1\\\\2)[eimnosux]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.regexp.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#regex_sub\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#regex_sub\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%s(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.constant.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.constant.end.ruby\" } }, \"name\": \"constant.other.symbol.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }], \"repository\": { \"angles\": { \"patterns\": [{ \"match\": \"\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\\", \"name\": \"constant.character.escape.ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }, { \"begin\": \"%w(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.string.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }, { \"include\": \"#string\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\<|\\\\\\\\>\", \"name\": \"string.other.ruby\" }, { \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }] }, \"braces\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\{|\\\\\\\\\\\\}\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"brackets\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\[|\\\\\\\\\\\\]\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }] }, \"parens\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\(|\\\\\\\\\\\\)\", \"name\": \"string.other.ruby\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"constant.character.escape.ruby\" } }, \"match\": \"\\\\\\\\\\\\\\\\|\\\\\\\\[ ]\", \"name\": \"string.other.ruby\" }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"string.other.ruby\" }] } } }, { \"begin\": \"%W(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.array.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.array.end.ruby\" } }, \"name\": \"meta.array.string.interpolated.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }, { \"include\": \"#string\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"begin\": \"<\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }, { \"include\": \"#string\" }] }] }, \"braces\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }, { \"include\": \"#string\" }] }] }, \"brackets\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }, { \"include\": \"#string\" }] }] }, \"parens\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"string.other.ruby\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#string\" }] }] }, \"string\": { \"patterns\": [{ \"begin\": \"(?=\\\\\\\\|#\\\\{)\", \"end\": \"(?!\\\\G)\", \"name\": \"string.other.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }] }, { \"match\": \"\\\\S\\\\w*\", \"name\": \"string.other.ruby\" }] } } }, { \"begin\": \"%x(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ruby\" } }, \"end\": \"[)\\\\]}>]\\\\2|\\\\1\\\\2\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.ruby\" } }, \"name\": \"string.interpolated.percent.ruby\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\))\", \"patterns\": [{ \"include\": \"#parens\" }] }, { \"begin\": \"\\\\G(?<=\\\\[)(?!\\\\])\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"include\": \"#brackets\" }] }, { \"begin\": \"\\\\G(?<=\\\\{)(?!\\\\})\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#braces\" }] }, { \"begin\": \"\\\\G(?<=<)(?!>)\", \"end\": \"(?=>)\", \"patterns\": [{ \"include\": \"#angles\" }] }, { \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }], \"repository\": { \"angles\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"<\", \"end\": \">\", \"patterns\": [{ \"include\": \"#angles\" }] }] }, \"braces\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#braces\" }] }] }, \"brackets\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#brackets\" }] }] }, \"parens\": { \"patterns\": [{ \"include\": \"#escaped_char\" }, { \"include\": \"#interpolated_ruby\" }, { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#parens\" }] }] } } }] }, \"regex_sub\": { \"patterns\": [{ \"include\": \"#interpolated_ruby\" }, { \"include\": \"#escaped_char\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.quantifier.begin.ruby\" }, \"3\": { \"name\": \"punctuation.definition.quantifier.end.ruby\" } }, \"match\": \"(\\\\{)\\\\d+(,\\\\d+)?(\\\\})\", \"name\": \"keyword.operator.quantifier.ruby\" }, { \"begin\": \"\\\\[\\\\^?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.character-class.begin.ruby\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.character-class.end.ruby\" } }, \"name\": \"constant.other.character-class.set.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"\\\\(\\\\?#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.begin.ruby\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.ruby\" } }, \"name\": \"comment.line.number-sign.ruby\", \"patterns\": [{ \"include\": \"#escaped_char\" }] }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.ruby\" } }, \"end\": \"\\\\)\", \"name\": \"meta.group.regexp.ruby\", \"patterns\": [{ \"include\": \"#regex_sub\" }] }, { \"begin\": \"(?<=^|\\\\s)(#)\\\\s(?=[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F}]]*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.ruby\" } }, \"comment\": \"We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.\", \"end\": \"$\\\\n?\", \"name\": \"comment.line.number-sign.ruby\" }] } }, \"scopeName\": \"source.ruby\", \"embeddedLangs\": [\"html\", \"xml\", \"sql\", \"css\", \"c\", \"javascript\", \"shellscript\", \"lua\"], \"aliases\": [\"rb\"] });\nvar ruby = [\n  ...html,\n  ...xml,\n  ...sql,\n  ...css,\n  ...c,\n  ...javascript,\n  ...shellscript,\n  ...lua,\n  lang\n];\n\nexport { ruby as default };\n"],"names":["lang","ruby","html","xml","sql","css","c","javascript","shellscript","lua"],"mappings":";8SAUA,MAAMA,EAAO,OAAO,OAAO,CAAE,YAAe,OAAQ,KAAQ,OAAQ,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA4B,EAAI,EAAK,CAAE,KAAQ,6BAA+B,EAAE,EAAK,CAAE,KAAQ,6BAA+B,EAAE,EAAK,CAAE,KAAQ,mCAAqC,EAAE,EAAK,CAAE,KAAQ,+BAAiC,EAAK,CAAE,KAAQ,4BAA4B,CAAI,EAAE,MAAS,mGAAoG,KAAQ,iBAAiB,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,6BAA+B,EAAE,EAAK,CAAE,KAAQ,8BAA8B,EAAI,EAAK,CAAE,KAAQ,gDAAkD,EAAE,EAAK,CAAE,KAAQ,0CAA4C,EAAK,CAAE,KAAQ,iDAAmD,EAAE,EAAK,CAAE,KAAQ,0CAA4C,EAAK,CAAE,KAAQ,gDAAkD,EAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,MAAS,+EAAgF,KAAQ,oBAAsB,CAAE,QAAW,oIAA0I,MAAS,6BAA8B,KAAQ,yBAAyB,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,QAAW,mCAAoC,MAAS,qCAAsC,KAAQ,oCAAoC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,QAAW,mCAAoC,MAAS,gDAAiD,KAAQ,oCAAsC,EAAE,CAAE,QAAW,2EAA4E,MAAS,gIAAiI,KAAQ,sBAAwB,EAAE,CAAE,QAAW,qDAAsD,MAAS,mBAAoB,KAAQ,kCAAkC,EAAI,CAAE,QAAW,gCAAiC,MAAS,iBAAkB,KAAQ,8BAAgC,EAAE,CAAE,MAAS,6IAA8I,KAAQ,oCAAsC,EAAE,CAAE,MAAS,iCAAkC,KAAQ,wBAAwB,EAAI,CAAE,MAAS,sCAAuC,KAAQ,wBAAwB,EAAI,CAAE,MAAS,cAAe,SAAY,CAAE,EAAK,CAAE,KAAQ,oCAAoC,GAAM,QAAW,iBAAkB,YAAe,aAAc,IAAO,oBAAqB,SAAY,CAAC,CAAE,MAAS,gDAAiD,IAAO,oBAAqB,KAAQ,0BAA2B,SAAY,CAAC,CAAE,QAAW,iBAAiB,CAAE,CAAC,CAAE,CAAC,EAAI,CAAE,MAAS,uBAAwB,KAAQ,+BAAiC,CAAE,QAAW,kEAAmE,MAAS,8NAA+N,KAAQ,mCAAqC,EAAE,CAAE,MAAS,8CAA+C,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAqC,CAAA,EAAI,IAAO,cAAe,KAAQ,oBAAqB,SAAY,CAAC,CAAE,QAAW,QAAS,CAAC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAsC,CAAI,EAAE,MAAS,mBAAoB,KAAQ,wCAAwC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAsC,GAAM,MAAS,oBAAqB,KAAQ,qCAAqC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAsC,GAAM,MAAS,qBAAsB,KAAQ,sCAAsC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,MAAS,oFAAqF,KAAQ,kDAAkD,EAAI,CAAE,MAAS,cAAe,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAA8B,GAAM,IAAO,MAAO,KAAQ,iCAAkC,SAAY,CAAC,CAAE,QAAW,OAAS,CAAA,GAAK,CAAE,MAAS,yCAA0C,KAAQ,sBAAwB,CAAE,MAAS,sWAAuW,KAAQ,gCAAkC,CAAE,MAAS,kBAAmB,KAAQ,8BAAgC,EAAE,CAAE,MAAS,4KAA6K,cAAiB,CAAE,EAAK,CAAE,KAAQ,0BAA4B,EAAE,EAAK,CAAE,KAAQ,2BAA6B,EAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,QAAW,iFAAkF,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,GAAM,KAAQ,2CAA4C,SAAY,CAAC,CAAE,MAAS,kBAAmB,IAAO,WAAY,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA4B,EAAI,EAAK,CAAE,KAAQ,yDAA2D,EAAK,CAAE,KAAQ,sCAAsC,EAAI,EAAK,CAAE,KAAQ,kCAAoC,CAAA,EAAI,MAAS,kDAAkD,EAAI,CAAE,QAAW,WAAa,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,OAAO,CAAE,CAAG,CAAA,EAAG,WAAc,CAAE,OAAU,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,QAAS,CAAC,EAAI,OAAU,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAyC,CAAA,EAAI,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,OAAS,CAAA,EAAK,CAAA,EAAI,CAAE,MAAS,4LAA6L,cAAiB,CAAE,EAAK,CAAE,KAAQ,0BAA0B,EAAI,EAAK,CAAE,KAAQ,2BAA6B,CAAA,EAAI,QAAW,0EAA2E,IAAO,IAAK,KAAQ,2CAA4C,SAAY,CAAC,CAAE,MAAS,aAAc,IAAO,UAAW,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8BAAgC,EAAK,CAAE,KAAQ,uDAAuD,EAAI,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,kCAAoC,CAAA,EAAI,MAAS,mDAAoD,KAAQ,kCAAkC,EAAI,CAAE,QAAW,OAAO,CAAE,CAAG,CAAA,GAAK,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,0BAA0B,EAAI,EAAK,CAAE,KAAQ,4BAA+B,EAAE,QAAW,yEAA0E,MAAS,yKAA0K,KAAQ,6CAA+C,EAAE,CAAE,MAAS,qFAAsF,KAAQ,6BAA6B,EAAI,CAAE,MAAS,2CAA4C,KAAQ,+BAAiC,EAAE,CAAE,MAAS,+BAAgC,KAAQ,6BAA+B,CAAE,MAAS,iCAAkC,KAAQ,gCAAkC,CAAE,MAAS,uCAAwC,KAAQ,+BAAiC,CAAE,MAAS,KAAM,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,IAAO,IAAK,KAAQ,2CAA4C,SAAY,CAAC,CAAE,MAAS,cAAe,KAAQ,iCAAkC,CAAC,EAAI,CAAE,MAAS,KAAM,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAsC,GAAM,IAAO,IAAK,KAAQ,2CAA4C,SAAY,CAAC,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,eAAiB,CAAA,GAAK,CAAE,QAAW,oDAAqD,MAAS,aAAc,KAAQ,4CAA8C,EAAE,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA4C,CAAA,EAAI,QAAW,sDAAuD,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,GAAM,KAAQ,4BAA6B,SAAY,CAAC,CAAE,MAAS,iBAAkB,KAAQ,gCAAgC,CAAE,CAAC,EAAI,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,QAAW,kDAAmD,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,KAAQ,4BAA6B,SAAY,CAAC,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,eAAiB,CAAA,GAAK,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA0C,CAAI,EAAE,QAAW,4CAA6C,IAAO,IAAK,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,GAAM,KAAQ,2BAA4B,SAAY,CAAC,CAAE,QAAW,sBAAwB,CAAE,QAAW,gBAAiB,CAAC,EAAI,CAAE,QAAW,mBAAmB,EAAI,CAAE,MAAS,6UAA8U,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA8B,EAAE,EAAK,CAAE,KAAQ,qCAAwC,EAAE,QAAW;AAAA;AAAA;AAAA,KAA0J,YAAe,6BAA8B,IAAO,mBAAoB,SAAY,CAAC,CAAE,QAAW,aAAc,CAAC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,QAAW,UAAW,MAAS,oIAAqI,KAAQ,4BAA4B,EAAI,CAAE,MAAS,UAAW,SAAY,CAAE,EAAK,CAAE,KAAQ,qCAAqC,GAAM,QAAW,qBAAsB,IAAO,QAAS,KAAQ,kCAAkC,EAAI,CAAE,MAAS,mBAAoB,cAAiB,CAAE,EAAK,CAAE,KAAQ,8CAAiD,EAAE,IAAO,UAAW,SAAY,CAAC,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,qCAAqC,GAAM,IAAO,MAAO,KAAQ,+BAAiC,CAAA,CAAG,EAAE,CAAE,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2gB,MAAS,oGAAqG,KAAQ,uBAAuB,EAAI,CAAE,MAAS,8CAA+C,QAAW,6BAA8B,IAAO,UAAW,KAAQ,2BAA4B,SAAY,CAAC,CAAE,MAAS,0CAA2C,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA0C,CAAI,EAAE,YAAe,YAAa,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,iBAAiB,EAAI,CAAE,QAAW,eAAiB,CAAA,EAAG,CAAC,EAAI,CAAE,MAAS,6CAA8C,QAAW,4BAA6B,IAAO,UAAW,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,yCAA0C,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,YAAe,WAAY,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,eAAiB,CAAA,EAAG,CAAC,EAAI,CAAE,MAAS,6CAA8C,QAAW,4BAA6B,IAAO,UAAW,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,yCAA0C,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,YAAe,aAAc,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,eAAiB,CAAA,EAAG,CAAC,EAAI,CAAE,MAAS,6CAA8C,QAAW,4BAA6B,IAAO,UAAW,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,yCAA0C,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,YAAe,aAAc,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,eAAiB,CAAA,CAAG,CAAA,CAAG,EAAE,CAAE,MAAS,6CAA8C,QAAW,4BAA6B,IAAO,UAAW,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,yCAA0C,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,YAAe,aAAc,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,YAAc,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,YAAY,EAAI,CAAE,QAAW,eAAiB,CAAA,EAAG,CAAC,EAAI,CAAE,MAAS,2CAA4C,QAAW,0BAA2B,IAAO,UAAW,KAAQ,wBAAyB,SAAY,CAAC,CAAE,MAAS,uCAAwC,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,YAAe,WAAY,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,eAAiB,CAAA,EAAG,CAAC,EAAI,CAAE,MAAS,2DAA4D,QAAW,mCAAoC,IAAO,UAAW,KAAQ,yBAA0B,SAAY,CAAC,CAAE,MAAS,uDAAwD,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,YAAe,YAAa,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,eAAe,CAAE,CAAG,CAAA,CAAG,EAAE,CAAE,MAAS,gDAAiD,QAAW,0CAA2C,IAAO,UAAW,KAAQ,gCAAiC,SAAY,CAAC,CAAE,MAAS,4CAA6C,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,YAAe,mBAAoB,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,QAAW,kBAAoB,EAAE,CAAE,QAAW,eAAiB,CAAA,EAAG,CAAC,EAAI,CAAE,MAAS,sDAAuD,QAAW,8BAA+B,IAAO,UAAW,KAAQ,4BAA6B,SAAY,CAAC,CAAE,MAAS,kDAAmD,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA4C,CAAA,EAAI,YAAe,eAAgB,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,cAAgB,EAAE,CAAE,QAAW,eAAe,CAAE,CAAC,CAAE,CAAG,EAAE,CAAE,MAAS,6CAA8C,QAAW,4BAA6B,IAAO,UAAW,KAAQ,0BAA2B,SAAY,CAAC,CAAE,MAAS,yCAA0C,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA0C,GAAM,YAAe,aAAc,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,yCAA4C,EAAE,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAU,EAAI,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,YAAc,EAAE,CAAE,QAAW,gBAAiB,CAAC,CAAE,CAAG,EAAE,CAAE,MAAS,8CAA+C,QAAW,6BAA8B,IAAO,UAAW,KAAQ,2BAA4B,SAAY,CAAC,CAAE,MAAS,0CAA2C,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA0C,GAAM,YAAe,cAAe,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,UAAY,EAAE,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,aAAa,EAAI,CAAE,QAAW,gBAAiB,CAAC,CAAE,CAAG,EAAE,CAAE,MAAS,oBAAqB,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA4C,CAAA,EAAI,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,GAAM,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,YAAc,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,eAAe,CAAE,CAAG,EAAE,CAAE,MAAS,mBAAoB,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA4C,CAAA,EAAI,QAAW,mCAAoC,IAAO,WAAY,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,GAAM,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,YAAc,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,eAAe,CAAE,CAAG,EAAE,CAAE,MAAS,gCAAiC,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAsC,CAAI,EAAE,IAAO,uBAAwB,SAAY,CAAC,CAAE,QAAW,OAAS,EAAE,CAAE,MAAS,yBAA0B,KAAQ,6BAA+B,CAAE,MAAS,IAAK,KAAQ,sCAAuC,CAAC,EAAI,CAAE,MAAS,KAAM,KAAQ,mCAAqC,CAAE,MAAS,KAAM,KAAQ,uCAAyC,CAAE,MAAS,wDAAyD,KAAQ,4CAA4C,EAAI,CAAE,MAAS,+DAAgE,KAAQ,kCAAoC,EAAE,CAAE,MAAS,qCAAsC,KAAQ,+BAAiC,EAAE,CAAE,QAAW,sDAAuD,MAAS,+BAAgC,KAAQ,iCAAmC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAmC,GAAM,QAAW,0CAA2C,MAAS,qBAAqB,EAAI,CAAE,MAAS,2BAA4B,KAAQ,kCAAkC,EAAI,CAAE,MAAS,IAAK,KAAQ,oCAAsC,CAAE,MAAS,WAAY,KAAQ,6BAA+B,EAAE,CAAE,MAAS,IAAK,KAAQ,sCAAwC,EAAE,CAAE,MAAS,IAAK,KAAQ,mCAAqC,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,uCAA0C,EAAE,QAAW,0EAA2E,MAAS,mBAAqB,EAAE,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAmC,CAAI,EAAE,QAAW,2EAA4E,MAAS,uBAAyB,EAAE,CAAE,QAAW,yEAA0E,MAAS,IAAK,KAAQ,kCAAkC,EAAI,CAAE,MAAS,MAAO,KAAQ,sCAAsC,EAAI,CAAE,MAAS,MAAO,KAAQ,sCAAwC,CAAE,MAAS,MAAO,KAAQ,wCAA0C,CAAE,MAAS,MAAO,KAAQ,oCAAsC,EAAE,CAAE,MAAS,UAAW,KAAQ,mCAAmC,CAAE,EAAG,WAAc,CAAE,aAAgB,CAAE,MAAS,yCAA0C,KAAQ,gCAAgC,EAAI,QAAW,CAAE,MAAS,eAAgB,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,QAAS,CAAC,EAAI,kBAAqB,CAAE,SAAY,CAAC,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,yCAA2C,CAAA,EAAI,YAAe,cAAe,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,uCAAuC,EAAI,EAAK,CAAE,KAAQ,aAAe,CAAA,EAAI,KAAQ,0BAA2B,SAAY,CAAC,CAAE,QAAW,sBAAsB,EAAI,CAAE,QAAW,OAAS,CAAA,EAAG,WAAc,CAAE,oBAAuB,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAgC,GAAM,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,uBAAwB,CAAC,EAAI,CAAE,QAAW,OAAS,CAAA,EAAK,CAAA,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAsC,GAAM,MAAS,oBAAqB,KAAQ,wCAAwC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,MAAS,qBAAsB,KAAQ,qCAAqC,EAAI,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,MAAS,sBAAuB,KAAQ,sCAAsC,CAAE,CAAG,EAAE,iBAAoB,CAAE,SAAY,CAAC,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,uCAA0C,EAAE,IAAO,qBAAsB,YAAe,CAAE,EAAK,CAAE,KAAQ,qCAAwC,EAAE,KAAQ,yBAA0B,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,SAAW,CAAA,GAAK,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,SAAW,CAAA,GAAK,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,SAAS,CAAE,CAAG,EAAE,CAAE,QAAW,SAAS,CAAE,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAkC,CAAA,EAAI,MAAS,cAAe,KAAQ,4BAA8B,EAAE,CAAE,MAAS,IAAK,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA4B,CAAI,EAAE,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,OAAU,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAgC,GAAM,MAAS,kBAAmB,KAAQ,4BAA8B,EAAE,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA4B,GAAM,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAa,CAAE,QAAW,UAAW,CAAC,CAAE,CAAG,EAAE,SAAY,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,iCAAoC,EAAE,MAAS,kBAAmB,KAAQ,8BAAgC,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,6BAAgC,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,SAAW,CAAA,EAAG,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAgC,CAAI,EAAE,MAAS,kBAAmB,KAAQ,4BAA4B,EAAI,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,UAAW,CAAC,CAAE,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,iCAAoC,EAAE,MAAS,mBAAoB,KAAQ,4BAA4B,EAAI,CAAE,MAAS,UAAW,KAAQ,4BAA8B,CAAA,CAAG,CAAA,CAAI,EAAE,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,IAAO,qBAAsB,YAAe,CAAE,EAAK,CAAE,KAAQ,oCAAoC,GAAM,KAAQ,sCAAuC,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,SAAW,CAAA,GAAK,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,aAAe,CAAE,QAAW,SAAS,CAAE,CAAG,EAAE,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,SAAW,CAAA,GAAK,CAAE,QAAW,SAAW,CAAA,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,IAAK,SAAY,CAAE,EAAK,CAAE,KAAQ,6BAAgC,EAAE,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAW,CAAA,EAAG,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAa,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA4B,GAAM,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,SAAW,CAAA,CAAG,CAAA,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,4BAA8B,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,gBAAiB,IAAO,UAAW,KAAQ,6BAA8B,SAAY,CAAC,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,oBAAsB,CAAA,GAAK,CAAE,MAAS,UAAW,KAAQ,4BAA8B,CAAA,EAAK,CAAA,EAAI,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA0C,CAAI,EAAE,IAAO,qBAAsB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,CAAA,EAAI,KAAQ,2BAA4B,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,EAAE,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,YAAa,CAAC,EAAI,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAW,CAAA,GAAK,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,uBAAwB,KAAQ,gCAAgC,EAAI,CAAE,MAAS,IAAK,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,SAAW,CAAA,EAAG,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,KAAQ,gCAAgC,EAAI,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAW,CAAA,EAAG,CAAC,EAAI,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,KAAQ,gCAAgC,EAAI,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAW,CAAE,CAAC,CAAE,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,KAAQ,gCAAgC,EAAI,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAC,CAAE,CAAG,CAAA,GAAM,CAAE,MAAS,mCAAoC,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,IAAO,qBAAsB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAAwC,CAAI,EAAE,KAAQ,wCAAyC,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAC,EAAI,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,WAAW,CAAE,CAAG,EAAE,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,EAAE,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,oBAAoB,CAAE,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,oBAAsB,EAAE,CAAE,MAAS,IAAK,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,CAAE,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,iBAAmB,CAAE,QAAW,sBAAwB,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAW,CAAA,EAAG,CAAC,EAAI,SAAY,CAAE,SAAY,CAAC,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAa,CAAA,EAAG,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,oBAAsB,EAAE,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,CAAE,CAAG,CAAA,CAAI,EAAE,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA0C,GAAM,IAAO,kCAAmC,YAAe,CAAE,EAAK,CAAE,KAAQ,yCAA4C,EAAE,KAAQ,6BAA8B,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,WAAa,CAAA,GAAK,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,EAAE,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,EAAE,CAAE,QAAW,YAAc,CAAA,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,YAAc,EAAE,CAAE,MAAS,IAAK,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,CAAE,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,cAAgB,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,SAAY,CAAE,SAAY,CAAC,CAAE,QAAW,YAAY,EAAI,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAa,CAAA,EAAG,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,YAAc,EAAE,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,CAAE,CAAG,CAAA,CAAI,EAAE,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAAgD,EAAE,IAAO,qBAAsB,YAAe,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,KAAQ,qCAAsC,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,WAAa,CAAA,GAAK,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,SAAW,CAAA,EAAG,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,uBAAwB,KAAQ,gCAAgC,EAAI,CAAE,MAAS,IAAK,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,KAAQ,gCAAgC,EAAI,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,KAAQ,kCAAoC,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAW,CAAE,CAAG,CAAA,GAAK,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,2BAA4B,KAAQ,gCAAkC,EAAE,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,EAAK,CAAA,EAAI,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,sCAAsC,GAAM,IAAO,qBAAsB,YAAe,CAAE,EAAK,CAAE,KAAQ,oCAAoC,GAAM,KAAQ,yBAA0B,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,WAAa,CAAE,QAAW,SAAW,CAAA,CAAG,EAAE,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,aAAe,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAS,CAAE,CAAC,EAAI,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAW,CAAA,GAAK,CAAE,QAAW,UAAW,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAgC,GAAM,MAAS,cAAe,KAAQ,mBAAmB,EAAI,CAAE,MAAS,IAAK,SAAY,CAAE,EAAK,CAAE,KAAQ,oBAAuB,EAAE,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAW,CAAA,EAAG,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAkC,CAAA,EAAI,MAAS,kBAAmB,KAAQ,mBAAmB,EAAI,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAmB,CAAI,EAAE,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,SAAY,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAgC,GAAM,MAAS,kBAAmB,KAAQ,mBAAqB,EAAE,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAmB,GAAM,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,SAAW,CAAA,CAAG,CAAA,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,iCAAoC,EAAE,MAAS,kBAAmB,KAAQ,qBAAuB,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,SAAW,CAAA,EAAG,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAkC,CAAA,EAAI,MAAS,mBAAoB,KAAQ,mBAAmB,EAAI,CAAE,MAAS,UAAW,KAAQ,mBAAmB,CAAE,CAAG,CAAA,GAAM,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,sCAAwC,CAAA,EAAI,IAAO,qBAAsB,YAAe,CAAE,EAAK,CAAE,KAAQ,qCAAwC,EAAE,KAAQ,sCAAuC,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,WAAa,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,WAAa,EAAE,CAAE,QAAW,SAAW,CAAA,CAAG,EAAE,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAW,CAAA,CAAG,EAAE,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,SAAS,EAAI,CAAE,QAAW,SAAS,CAAE,CAAC,EAAI,CAAE,QAAW,UAAW,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,IAAK,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,WAAa,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAmB,GAAM,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAW,EAAE,CAAE,QAAW,SAAW,CAAA,CAAG,CAAA,CAAG,EAAE,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAqB,CAAA,EAAI,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAW,EAAI,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,GAAK,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,mBAAmB,GAAM,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAa,CAAE,QAAW,UAAW,CAAC,CAAE,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,gBAAiB,IAAO,UAAW,KAAQ,oBAAqB,SAAY,CAAC,CAAE,QAAW,iBAAmB,CAAE,QAAW,oBAAsB,CAAA,CAAG,EAAE,CAAE,MAAS,UAAW,KAAQ,mBAAmB,CAAE,CAAG,CAAA,GAAM,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,EAAE,IAAO,qBAAsB,YAAe,CAAE,EAAK,CAAE,KAAQ,yCAA4C,EAAE,KAAQ,mCAAoC,SAAY,CAAC,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAW,CAAA,CAAG,EAAE,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,WAAa,CAAA,GAAK,CAAE,MAAS,qBAAsB,IAAO,UAAW,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,EAAE,CAAE,MAAS,iBAAkB,IAAO,QAAS,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,EAAI,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,oBAAsB,CAAA,EAAG,WAAc,CAAE,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,oBAAsB,EAAE,CAAE,MAAS,IAAK,IAAO,IAAK,SAAY,CAAC,CAAE,QAAW,UAAW,CAAC,CAAE,CAAG,EAAE,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,sBAAwB,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAW,CAAA,CAAG,CAAA,GAAK,SAAY,CAAE,SAAY,CAAC,CAAE,QAAW,eAAe,EAAI,CAAE,QAAW,oBAAoB,EAAI,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAa,CAAA,EAAG,CAAC,EAAI,OAAU,CAAE,SAAY,CAAC,CAAE,QAAW,eAAiB,EAAE,CAAE,QAAW,oBAAsB,EAAE,CAAE,MAAS,MAAO,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,SAAS,CAAE,CAAG,CAAA,EAAK,CAAA,CAAE,CAAG,EAAE,UAAa,CAAE,SAAY,CAAC,CAAE,QAAW,oBAAsB,EAAE,CAAE,QAAW,iBAAmB,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAA8C,EAAI,EAAK,CAAE,KAAQ,4CAA8C,CAAA,EAAI,MAAS,yBAA0B,KAAQ,kCAAoC,EAAE,CAAE,MAAS,UAAW,cAAiB,CAAE,EAAK,CAAE,KAAQ,mDAAmD,CAAI,EAAE,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,iDAAmD,CAAA,EAAI,KAAQ,0CAA2C,SAAY,CAAC,CAAE,QAAW,eAAe,CAAE,CAAG,EAAE,CAAE,MAAS,UAAW,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA2C,GAAM,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,yCAAyC,CAAI,EAAE,KAAQ,gCAAiC,SAAY,CAAC,CAAE,QAAW,eAAiB,CAAA,CAAG,EAAE,CAAE,MAAS,MAAO,SAAY,CAAE,EAAK,CAAE,KAAQ,mCAAmC,GAAM,IAAO,MAAO,KAAQ,yBAA0B,SAAY,CAAC,CAAE,QAAW,YAAc,CAAA,CAAG,EAAE,CAAE,MAAS,iEAAkE,cAAiB,CAAE,EAAK,CAAE,KAAQ,qCAAqC,GAAM,QAAW,6JAA8J,IAAO,QAAS,KAAQ,+BAAiC,CAAA,EAAK,EAAE,UAAa,cAAe,cAAiB,CAAC,OAAQ,MAAO,MAAO,MAAO,IAAK,aAAc,cAAe,KAAK,EAAG,QAAW,CAAC,IAAI,CAAG,CAAA,EAC3uvC,IAACC,EAAO,CACT,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACH,GAAGC,EACHT,CACF","x_google_ignoreList":[0]}