/*! For licenses information, see LICENSES.txt */
"use client";import{j as e,c as L}from"../_virtual_quizms-routes-3e20caca.js";import{P as b,I as J}from"../u/2e388509-components.js";import{C as w,r as s,S as o,R as m,V as N}from"../i/1e48c4ae-visualizer.js";import{H as R}from"../v/14ee0b02-hint.js";function P(){return{...b()}}const y={src:new URL("../2/2be8358e-sol.webp",import.meta.url).href,width:1049,height:745};const F={kind:"categoryToolbox",contents:[{kind:"category",name:"Variabili",categorystyle:"variable_category",custom:"VARIABLE"},{kind:"category",name:"Matematica",categorystyle:"math_category",contents:[{kind:"block",type:"math_number",fields:{NUM:123}},{kind:"block",type:"math_arithmetic",fields:{OP:"ADD"}}]},{kind:"category",name:"Logica",categorystyle:"logic_category",contents:[{kind:"block",type:"logic_compare"},{kind:"block",type:"logic_operation"},{kind:"block",type:"logic_negate"},{kind:"block",type:"controls_if"},{kind:"block",type:"controls_if",extraState:{hasElse:"true"}}]},{kind:"category",name:"Cicli",categorystyle:"loop_category",contents:[{kind:"block",type:"controls_repeat_ext",inputs:{TIMES:{block:{type:"math_number",fields:{NUM:10}}}}},{kind:"block",type:"controls_whileUntil"},{kind:"block",type:"controls_for",fields:{VAR:"i"},inputs:{FROM:{block:{type:"math_number",fields:{NUM:1}}},TO:{block:{type:"math_number",fields:{NUM:10}}},BY:{block:{type:"math_number",fields:{NUM:1}}}}}]}]},Q=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[]}'),H=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"N","message0":"N","inputsInline":true,"colour":20,"tooltip":"numero di rocce del percorso","helpUrl":"","js":["state.N",1.2],"output":"Number"},{"type":"posizione di Carol","message0":"posizione Carol","inputsInline":true,"colour":20,"tooltip":"la posizione corrente di Carol","helpUrl":"","js":["state.pos+1",6.2],"output":"Number"},{"type":"costo roccia","message0":"costo roccia %1","args0":[{"type":"input_value","check":"Number","min":["1",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"costo in carote per atterrare sulla i-esima roccia del percorso","helpUrl":"","js":["(function(i) {\\n  if (i < 1 || i > state.N)\\n    exit(false, \\"la roccia \\" + i + \\" non esiste\\");\\n  return state.cost[i-1];\\n})(_ARG0)",2],"output":"Number"},{"type":"comincia","message0":"comincia la corsa","inputsInline":true,"colour":20,"tooltip":"comincia la corsa dalla posizione di partenza","helpUrl":"","js":"if (state.start == 1)\\n  exit(false, \\"hai già cominciato la gara\\");\\nif (state.pos > -1) {\\n  state.pos = -1;\\n  pause();\\n}\\nstate.start = -1;\\npause();\\nstate.start = 1;","nextStatement":null,"previousStatement":null},{"type":"avanza","message0":"avanza","inputsInline":true,"colour":20,"tooltip":"avanza alla roccia successiva","helpUrl":"","js":"if (state.start == 0)\\n  exit(false, \\"devi prima cominciare la corsa\\");\\nstate.pos += 1;\\nif (state.pos > state.N+1)\\n  exit(false, \\"hai superato troppo la fine del percorso\\");\\nif (state.pos < state.N)\\n  state.count += state.cost[state.pos];","nextStatement":null,"previousStatement":null},{"type":"salta","message0":"salta","inputsInline":true,"colour":20,"tooltip":"salta oltre alla prossima roccia","helpUrl":"","js":"if (state.start == 0)\\n  exit(false, \\"devi prima cominciare la corsa\\");\\nstate.pos += 1;\\nstate.flight = 1;\\npause();\\nstate.pos += 1;\\nstate.flight = 0;\\nif (state.pos > state.N+1)\\n  exit(false, \\"hai superato troppo la fine del percorso\\");\\nif (state.pos < state.N)\\n  state.count += state.cost[state.pos];","nextStatement":null,"previousStatement":null},{"type":"termina","message0":"termina","inputsInline":true,"colour":20,"tooltip":"finisci la corsa e vai a pagare le penalità","helpUrl":"","js":"if (state.start == 0)\\n  exit(false, \\"non hai neanche cominciato la corsa\\");\\nif (state.pos < state.N-1)\\n  exit(false, \\"non hai raggiunto la bandierina\\");\\nif (state.count > 0)\\n  exit(false, \\"potevi spendere meno carote\\");\\nexit(true, \\"hai finito la corsa senza spendere carote, complimenti!\\");","previousStatement":null}]`),Y=JSON.parse('[{"cost":[9,0,8,0],"pos":-1,"flight":0,"N":4,"count":0,"start":0},{"cost":[0,4,0,0,9],"pos":-1,"flight":0,"N":5,"count":0,"start":0},{"cost":[5,0,9,0,0,0,0],"pos":-1,"flight":0,"N":7,"count":0,"start":0},{"cost":[8,0,9,0,2,0,0,6,0,7],"pos":-1,"flight":0,"N":10,"count":0,"start":0}]'),q={src:new URL("../d/d5b24aa0-bunny.svg",import.meta.url).href,width:66,height:116.42696629213484},Z={src:new URL("../2/28ccc1f1-carrot.svg",import.meta.url).href,width:40,height:40},K={src:new URL("../2/2bf8d260-flag.svg",import.meta.url).href,width:80,height:111.15044247787611},W={src:new URL("../e/e38402df-flat_rock.svg",import.meta.url).href,width:120,height:34.56},e0={src:new URL("../a/acd76549-priced_rock.svg",import.meta.url).href,width:120,height:34.56};function i0({variables:l,state:i}){return i.N>50?e.jsx("div",{className:"text-slate-800 p-4",children:"La visualizzazione è disponibile solo per i primi 5 livelli."}):e.jsxs(e.Fragment,{children:[e.jsxs(w,{scale:130,children:[i.start==1?null:e.jsx(o,{src:q,alt:"Tip-Tap",x:i.pos+.2,y:.2-.6*i.start,follow:!0}),s(i.N).map(t=>e.jsx(o,{src:i.cost[t]==0?W:e0,alt:i.cost[t]==0?"roccia gratis":"roccia a pagamento",x:t,y:1.5},`rock${t}`)),s(i.N).map(t=>i.cost[t]==0?null:e.jsx(m,{color:"transparent",width:.5,height:.3,x:t,y:1.8,className:L("!border-none flex items-center justify-end text-3xl decoration-red-500",i.pos===t&&i.flight==0?"underline text-red-500":"text-black"),children:i.cost[t]},`cost${t}`)),s(i.N).map(t=>i.cost[t]==0?null:e.jsx(o,{src:Z,alt:"carota",x:t+.5,y:1.8},`carrot${t}`)),i.start<1?null:e.jsx(o,{src:q,alt:"Tip-Tap",x:i.pos+.2,y:.8-i.flight,follow:!0}),e.jsx(o,{src:K,alt:"Bandierina",x:i.N-1.4,y:.9})]}),e.jsx(N,{variables:{...l,"N (num. rocce)":i.N,"carote spese":i.count}})]})}function G(l){const i={em:"em",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...P(),...l.components},{Blockly:t,Code:a,Equation:n,Explanation:r,Image:p,SubProblem:u}=i;return t||x("Blockly"),a||x("Code"),n||x("Equation"),r||x("Explanation"),p||x("Image"),u||x("SubProblem"),e.jsxs(u,{children:[e.jsxs(i.p,{children:[`Carol, nota per la sua passione per la corsa ad ostacoli, sta iniziando un nuovo tipo di competizione:
la `,e.jsx(i.strong,{children:"corsa a pagamento"}),`! Il funzionamento è simile a quello della corsa ad ostacoli, solo che invece
degli ostacoli (su cui non si può mai atterrare) ci sono alcune rocce marroni che sono `,e.jsx(i.em,{children:"a pagamento"}),`.
Carol può atterrare sulle rocce a pagamento, ma se lo fa dovrà pagare alcune carote di penalità alla
fine della corsa!`]}),e.jsxs(i.p,{children:["Il percorso è composto da ",e.jsx(n,{children:String.raw`N`})," rocce, numerate da ",e.jsx(n,{children:String.raw`1`})," a ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`N`}),","]})," e la roccia ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima"]})," ha un costo di ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`P_i`}),"."]}),`
Carol comincia subito prima della prima roccia, e deve raggiungere o superare la bandierina finale
(sull’ultima roccia). In questa prima corsa, gli organizzatori sono stati attenti ad assicurarsi che
`,e.jsx(i.strong,{children:"non ci siano mai due rocce a pagamento di seguito"}),". Hai a disposizione questi blocchi:"]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`N`,inline:!0,lang:"text",className:"p-0 text-base"}),": il numero di rocce del percorso."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`posizione Carol`,inline:!0,lang:"text",className:"p-0 text-base"}),": la posizione corrente di Carol."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`costo roccia`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," il costo ",e.jsx(n,{children:String.raw`P_i`})," in carote per atterrare sulla ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima"]})," roccia del percorso (zero per le rocce gratis)."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`comincia la corsa`,inline:!0,lang:"text",className:"p-0 text-base"}),": comincia la corsa dalla posizione di partenza."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": avanza alla roccia successiva."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`salta`,inline:!0,lang:"text",className:"p-0 text-base"}),": salta oltre alla prossima roccia, atterrando su quella dopo."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`termina`,inline:!0,lang:"text",className:"p-0 text-base"}),": finisci la corsa e vai a pagare le penalità."]}),`
`]}),e.jsx(i.p,{children:"Aiuta Carol a completare il percorso pagando meno carote possibile!"}),e.jsx(R,{children:e.jsx(i.p,{children:`Quando cominci la corsa, ad ogni punto del percorso, devi scegliere tra avanzare e saltare.
Come nella scorsa lezione, puoi scegliere cosa fare in modo greedy!`})}),e.jsx(t,{toolbox:F,customBlocks:H,initialBlocks:Q,testcases:Y,visualizer:i0}),e.jsxs(r,{children:[e.jsx(i.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(i.p,{children:e.jsx(p,{alt:"soluzione",src:typeof y=="function"?y(_variant):y})}),e.jsxs(i.p,{children:[`Secondo questo programma, Carol comincia subito la corsa dalla posizione di partenza.
Poi, fino a che non raggiunge l’ultima roccia (in posizione `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`N`}),"),"]}),` procede saltando o avanzando.
Se la roccia davanti a Carol è gratis, avanza; invece se è a pagamento la salta.
Dato che non ci sono due rocce a pagamento vicine, Carol riuscirà in questo modo a raggiungere
la fine del percorso senza pagare nessuna carota!`]})]}),e.jsxs(i.p,{children:["Prima di passare alla prossima domanda, assicurati di aver risolto ",e.jsx(i.strong,{children:"tutti i livelli"})," di questa!"]})]})}function n0(l={}){const{wrapper:i}={...P(),...l.components};return i?e.jsx(i,{...l,children:e.jsx(G,{...l})}):G(l)}function x(l,i){throw new Error("Expected component `"+l+"` to be defined: you likely forgot to import, pass, or provide it.")}function E(){return{...b()}}const S={src:new URL("../3/3754a30a-sol.webp",import.meta.url).href,width:1536,height:1397};const a0={kind:"categoryToolbox",contents:[{kind:"category",name:"Variabili",categorystyle:"variable_category",custom:"VARIABLE"},{kind:"category",name:"Matematica",categorystyle:"math_category",contents:[{kind:"block",type:"math_number",fields:{NUM:123}},{kind:"block",type:"math_arithmetic",fields:{OP:"ADD"}}]},{kind:"category",name:"Logica",categorystyle:"logic_category",contents:[{kind:"block",type:"logic_compare"},{kind:"block",type:"logic_operation"},{kind:"block",type:"logic_negate"},{kind:"block",type:"controls_if"},{kind:"block",type:"controls_if",extraState:{hasElse:"true"}}]},{kind:"category",name:"Cicli",categorystyle:"loop_category",contents:[{kind:"block",type:"controls_repeat_ext",inputs:{TIMES:{block:{type:"math_number",fields:{NUM:10}}}}},{kind:"block",type:"controls_whileUntil"},{kind:"block",type:"controls_for",fields:{VAR:"i"},inputs:{FROM:{block:{type:"math_number",fields:{NUM:1}}},TO:{block:{type:"math_number",fields:{NUM:10}}},BY:{block:{type:"math_number",fields:{NUM:1}}}}}]}]},l0=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[]}'),t0=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"N","message0":"N","inputsInline":true,"colour":20,"tooltip":"numero di rocce del percorso","helpUrl":"","js":["state.N",1.2],"output":"Number"},{"type":"posizione di Carol","message0":"posizione Carol","inputsInline":true,"colour":20,"tooltip":"la posizione corrente di Carol","helpUrl":"","js":["state.pos+1",6.2],"output":"Number"},{"type":"costo roccia","message0":"costo roccia %1","args0":[{"type":"input_value","check":"Number","min":["1",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"costo in carote per atterrare sulla i-esima roccia del percorso","helpUrl":"","js":["(function(i) {\\n  if (i < 1 || i > state.N)\\n    exit(false, \\"la roccia \\" + i + \\" non esiste\\");\\n  return state.cost[i-1];\\n})(_ARG0)",2],"output":"Number"},{"type":"scrivi sulla lavagna","message0":"scrivi %1 sulla lavagna %2","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"},{"type":"input_value","check":"Number","min":["1",0],"integer":true,"name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"Carol scrive la preferenza x sulla lavagna i-esima prima di cominciare la corsa","helpUrl":"","js":"(function(x,i) {\\n  if (i < 1 || i > state.N)\\n    exit(false, \\"la lavagna \\" + i + \\" non esiste\\");\\n  if (state.start == 1)\\n    exit(false, \\"hai già cominciato la gara\\");\\n  state.value[i-1] = x;\\n  state.pos = i-1;\\n})(_ARG0, _ARG1);","nextStatement":null,"previousStatement":null},{"type":"preferenza","message0":"preferenza %1","args0":[{"type":"input_value","check":"Number","min":["1",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"numero che Carol ha scritto sulla lavagna i-esima","helpUrl":"","js":["(function(i) {\\n  if (i < 1 || i > state.N) return 0;\\n  return state.value[i-1];\\n})(_ARG0)",2],"output":"Number"},{"type":"comincia","message0":"comincia la corsa","inputsInline":true,"colour":20,"tooltip":"comincia la corsa dalla posizione di partenza","helpUrl":"","js":"if (state.start == 1)\\n  exit(false, \\"hai già cominciato la gara\\");\\nif (state.pos > -1) {\\n  state.pos = -1;\\n  pause();\\n}\\nstate.start = -1;\\npause();\\nstate.start = 1;","nextStatement":null,"previousStatement":null},{"type":"avanza","message0":"avanza","inputsInline":true,"colour":20,"tooltip":"avanza alla roccia successiva","helpUrl":"","js":"if (state.start == 0)\\n  exit(false, \\"devi prima cominciare la corsa\\");\\nstate.pos += 1;\\nif (state.pos > state.N+1)\\n  exit(false, \\"hai superato troppo la fine del percorso\\");\\nif (state.pos < state.N)\\n  state.count += state.cost[state.pos];","nextStatement":null,"previousStatement":null},{"type":"salta","message0":"salta","inputsInline":true,"colour":20,"tooltip":"salta oltre alla prossima roccia","helpUrl":"","js":"if (state.start == 0)\\n  exit(false, \\"devi prima cominciare la corsa\\");\\nstate.pos += 1;\\nstate.flight = 1;\\npause();\\nstate.pos += 1;\\nstate.flight = 0;\\nif (state.pos > state.N+1)\\n  exit(false, \\"hai superato troppo la fine del percorso\\");\\nif (state.pos < state.N)\\n  state.count += state.cost[state.pos];","nextStatement":null,"previousStatement":null},{"type":"termina","message0":"termina","inputsInline":true,"colour":20,"tooltip":"finisci la corsa e vai a pagare le penalità","helpUrl":"","js":"if (state.start == 0)\\n  exit(false, \\"non hai neanche cominciato la corsa\\");\\nif (state.pos < state.N-1)\\n  exit(false, \\"non hai raggiunto la bandierina\\");\\nif (state.count > state.sol)\\n  exit(false, \\"potevi spendere meno carote\\");\\nexit(true, \\"hai finito la corsa spendendo poco, complimenti!\\");","previousStatement":null}]`),o0=JSON.parse('[{"cost":[2,1,4,5,0],"value":[null,null,null,null],"sol":5,"pos":-1,"flight":0,"N":4,"count":0,"start":0},{"cost":[1,1,3,1,3,4,0],"value":[null,null,null,null,null,null],"sol":5,"pos":-1,"flight":0,"N":6,"count":0,"start":0},{"cost":[1,1,3,2,2,4,3,6,2,0],"value":[null,null,null,null,null,null,null,null,null],"sol":10,"pos":-1,"flight":0,"N":9,"count":0,"start":0},{"cost":[1,1,1,1,1,1,1,4,1,1,2,6,1,0],"value":[null,null,null,null,null,null,null,null,null,null,null,null,null],"sol":8,"pos":-1,"flight":0,"N":13,"count":0,"start":0}]'),U={src:new URL("../d/d5b24aa0-bunny.svg",import.meta.url).href,width:66,height:116.42696629213484},r0={src:new URL("../2/28ccc1f1-carrot.svg",import.meta.url).href,width:40,height:40},s0={src:new URL("../2/2bf8d260-flag.svg",import.meta.url).href,width:80,height:111.15044247787611},c0={src:new URL("../a/acd76549-priced_rock.svg",import.meta.url).href,width:120,height:34.56};function p0({variables:l,state:i}){return i.N>50?e.jsx("div",{className:"text-slate-800 p-4",children:"La visualizzazione è disponibile solo per i primi 5 livelli."}):e.jsxs(e.Fragment,{children:[e.jsxs(w,{scale:130,children:[i.start==1?null:e.jsx(o,{src:U,alt:"Tip-Tap",x:i.pos+.2,y:.2-.6*i.start,follow:!0}),s(i.N).map(t=>e.jsx(o,{src:c0,alt:"roccia a pagamento",x:t,y:1.5},`rock${t}`)),s(i.N).map(t=>i.cost[t]==0?null:e.jsx(m,{color:"transparent",width:.5,height:.3,x:t,y:1.8,className:L("!border-none flex items-center justify-end text-3xl decoration-red-500",i.pos===t&&i.flight==0&i.start==1?"underline text-red-500":"text-black"),children:i.cost[t]},`cost${t}`)),s(i.N).map(t=>i.cost[t]==0?null:e.jsx(o,{src:r0,alt:"carota",x:t+.5,y:1.8},`carrot${t}`)),s(i.N).map(t=>e.jsx(m,{color:"black",borderColor:"gray",width:.7,height:.5,x:t+.1,y:.8,className:"flex items-center justify-center text-3xl text-white",children:i.value[t]},`value${t}`)),i.start<1?null:e.jsx(o,{src:U,alt:"Tip-Tap",x:i.pos+.2,y:.8-i.flight,follow:!0}),e.jsx(o,{src:s0,alt:"Bandierina",x:i.N-1.4,y:.9})]}),e.jsx(N,{variables:{...l,"N (num. rocce)":i.N,"carote spese":i.count}})]})}function C(l){const i={em:"em",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...E(),...l.components},{Blockly:t,Code:a,Equation:n,Explanation:r,Image:p,SubProblem:u}=i;return t||g("Blockly"),a||g("Code"),n||g("Equation"),r||g("Explanation"),p||g("Image"),u||g("SubProblem"),e.jsxs(u,{children:[e.jsxs(i.p,{children:["Carol vuole partecipare ad una nuova ",e.jsx(i.em,{children:"corsa a pagamento"}),`. Dato che con la prima corsa gli organizzatori
hanno guadagnato poco, hanno deciso che ora metteranno `,e.jsx(i.strong,{children:"solamente rocce a pagamento"}),`!
In compenso, hanno messo una lavagna ad ogni posizione del percorso, su cui i partecipanti possono
annotare una loro `,e.jsx(i.strong,{children:"preferenza numerica"})," per ciascuna posizione ",e.jsx(i.strong,{children:"prima di cominciare la corsa"}),`.
Hai a disposizione gli stessi blocchi di prima, più due nuovi per leggere e scrivere sulle lavagne:`]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`N`,inline:!0,lang:"text",className:"p-0 text-base"}),": il numero di rocce del percorso."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`posizione Carol`,inline:!0,lang:"text",className:"p-0 text-base"}),": la posizione corrente di Carol."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`costo roccia`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," il costo ",e.jsx(n,{children:String.raw`P_i`})," in carote per atterrare sulla ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima"]})," roccia del percorso (zero per le rocce gratis)."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`scrivi`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsx(n,{children:String.raw`x`})," ",e.jsx(a,{code:String.raw`sulla lavagna`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," Carol scrive la preferenza ",e.jsx(n,{children:String.raw`x`})," sulla lavagna ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima"]})," prima di cominciare la corsa ",e.jsx(i.strong,{children:"(nuovo!)"}),"."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`preferenza`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," il numero che Carol ha scritto sulla lavagna ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima,"]})," ",e.jsx("u",{children:"oppure zero se la lavagna "}),e.jsx(n,{children:String.raw`i`}),e.jsx("u",{children:"-esima non esiste"})," ",e.jsx(i.strong,{children:"(nuovo!)"}),"."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`comincia la corsa`,inline:!0,lang:"text",className:"p-0 text-base"}),": comincia la corsa dalla posizione di partenza."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`avanza`,inline:!0,lang:"text",className:"p-0 text-base"}),": avanza alla roccia successiva."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`salta`,inline:!0,lang:"text",className:"p-0 text-base"}),": salta oltre alla prossima roccia, atterrando su quella dopo."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`termina`,inline:!0,lang:"text",className:"p-0 text-base"}),": finisci la corsa e vai a pagare le penalità."]}),`
`]}),e.jsx(i.p,{children:"Aiuta Carol a completare il percorso pagando meno carote possibile!"}),e.jsxs(i.p,{children:[`Questa volta scegliere tra avanzare e saltare in modo greedy (senza preoccuparsi del resto del percorso)
non ci farà pagare il meno possibile. `,e.jsx(i.em,{children:"Se vuoi, ti invitiamo a provare e vedere come va!"}),` Fare meglio non
sarà facile, e per riuscirci avremo bisogno di usare prima le lavagne e annotarci le giuste preferenze
sopra ogni posizione. Poi, potremo scegliere tra avanzare e saltare basandoci sui numeri che abbiamo
scritto sulle lavagne.`]}),e.jsx(R,{label:"suggerimento 1",children:e.jsx(i.p,{children:`Il valore di preferenza che scriveremo dovrà servire a guidarci nelle scelte, per cui potremo guardare
la preferenza delle prossime rocce più vicine per capire se avanzare o saltare. Cosa dovrà quindi
rappresentare questo valore di preferenza?`})}),e.jsx(R,{label:"suggerimento 2",children:e.jsx(i.p,{children:`Per calcolare i valori di preferenza bisognerà utilizzare un ciclo contatore per scandire tutte le rocce.
Conviene scandirle dall’inizio o dalla fine? Ti ricordiamo che per scandire in avanti nel ciclo contatore
basta impostare che il ciclo proceda “per 1”, mentre per scandire all’indietro bisogna indicare “per -1”.`})}),e.jsx(t,{toolbox:a0,customBlocks:t0,initialBlocks:l0,testcases:o0,visualizer:p0}),e.jsxs(r,{children:[e.jsx(i.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(i.p,{children:e.jsx(p,{alt:"soluzione",src:typeof S=="function"?S(_variant):S})}),e.jsxs(i.p,{children:[`Secondo questo programma, prima di cominciare la corsa, scandiamo tutte le rocce dall’ultima tornando
indietro verso la prima. Per ciascuna di essere, annotiamo un valore di preferenza sulla lavagna, che
corrisponde a `,e.jsx(i.strong,{children:"quanto ci costa finire il percorso da quel punto in poi"}),`. Ci viene anche in aiuto che
il blocco `,e.jsx(a,{code:String.raw`preferenza`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsx(n,{children:String.raw`i`})," restituisce zero per tutte le posizioni ",e.jsx(n,{children:String.raw`i`}),` dopo la fine del percorso, che è
proprio pari al costo (zero) che abbiamo da quel punto in poi (visto che lì abbiamo già finito).`]}),e.jsxs(i.p,{children:[`Per calcolare quindi la preferenza (cioè il costo per finire da una certa roccia in poi), dobbiamo
trovare il minimo tra la preferenza delle due rocce successive (cioè i costi per finire da quelle rocce).
Salviamo questo valore nella variabile `,e.jsx(i.em,{children:"minimo"}),`, e da questo otteniamo la preferenza della roccia
corrente aggiungendoci il suo costo.`]}),e.jsx(i.p,{children:`Al termine di questo ciclo, avremo compilato le preferenze su tutte le lavagne, e quindi possiamo
procedere in modo simile al problema precedente. Cominciamo quindi la corsa dalla posizione di partenza,
poi procediamo saltando o avanzando fino a che non abbiamo raggiunto o superato l’ultima roccia.
Avanziamo se la preferenza della prossima roccia è minore di quella della roccia successiva, altrimenti
saltiamo. In questo modo andremo a spendere esattamente il numero minimo di carote per raggiungere la
fine del percorso!`})]}),e.jsxs(i.p,{children:["Prima di passare alla prossima domanda, assicurati di aver risolto ",e.jsx(i.strong,{children:"tutti i livelli"})," di questa!"]}),e.jsx(i.p,{children:e.jsx(i.strong,{children:"(lezione in costruzione, continua…)"})})]})}function u0(l={}){const{wrapper:i}={...E(),...l.components};return i?e.jsx(i,{...l,children:e.jsx(C,{...l})}):C(l)}function g(l,i){throw new Error("Expected component `"+l+"` to be defined: you likely forgot to import, pass, or provide it.")}function T(){return{...b()}}const k={src:new URL("../a/a438f0d6-sol.webp",import.meta.url).href,width:1376,height:1104},z={src:new URL("../7/722331ad-stats.svg",import.meta.url).href,width:305,height:251},d0=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[]}'),m0=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"N","message0":"N","inputsInline":true,"colour":20,"tooltip":"il numero di giorni","helpUrl":"","js":["state.N",1.2],"output":"Number"},{"type":"valore del titolo al giorno","message0":"valore del titolo %1 al giorno %2","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"},{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"valore del titolo i-esimo al giorno d-esimo","helpUrl":"","js":["(function(i, d) {\\n  if (i < 0 || i >= state.N)\\n    exit(false, \\"il titolo \\" + i + \\" non esiste\\");\\n  if (d > state.N)\\n    exit(false, \\"il giorno \\" + d + \\" non esiste\\");\\n  if (d <= i)\\n    exit(false, \\"il giorno \\" + d + \\" è prima della validità del titolo \\" + i);\\n  return state.V[i] + (d-i)*state.G[i];\\n})(_ARG0, _ARG1)",2],"output":"Number"},{"type":"valore del titolo","message0":"valore del titolo %1","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"valore del titolo i-esimo","helpUrl":"","js":["(function(i) {\\n  if (i < 0 || i >= state.N)\\n    exit(false, \\"il titolo \\" + i + \\" non esiste\\");\\n  return state.V[i];\\n})(_ARG0)",2],"output":"Number"},{"type":"guadagno del titolo","message0":"guadagno del titolo %1","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"guadagno del titolo i-esimo","helpUrl":"","js":["(function(i) {\\n  if (i < 0 || i >= state.N)\\n    exit(false, \\"il titolo \\" + i + \\" non esiste\\");\\n  return state.G[i];\\n})(_ARG0)",2],"output":"Number"},{"type":"annota preferenza per il titolo","message0":"annota preferenza %1 per il titolo %2","args0":[{"type":"input_value","check":"Number","integer":true,"name":"_ARG0"},{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"annota preferenza per il titolo i-esimo","helpUrl":"","js":"(function(x, i) {\\n  if (i < 0 || i >= state.N)\\n    exit(false, \\"il titolo \\" + i + \\" non esiste\\");\\n  state.pos = i;\\n  state.pref[i] = x;\\n})(_ARG0, _ARG1);","nextStatement":null,"previousStatement":null},{"type":"leggi preferenza per il titolo","message0":"leggi preferenza per il titolo %1","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"leggi preferenza per il titolo i-esimo","helpUrl":"","js":["(function(i) {\\n  if (i < 0 || i >= state.N)\\n    exit(false, \\"il titolo \\" + i + \\" non esiste\\");\\n  return state.pref[i];\\n})(_ARG0)",2],"output":"Number"},{"type":"prendi il titolo dopo il titolo","message0":"prendi il titolo %1 dopo il titolo %2","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"},{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"prendi il titolo k dopo il titolo i-esimo","helpUrl":"","js":"(function(k, i) {\\n  if (i < 0 || i >= state.N)\\n    exit(false, \\"il titolo \\" + i + \\" non esiste\\");\\n  if (k < 0 || k >= state.N)\\n    exit(false, \\"il titolo \\" + k + \\" non esiste\\");\\n  if (k <= i)\\n    exit(false, \\"il titolo \\" + k + \\" non è dopo il titolo \\" + i);\\n  if (state.V[i] + (k-i)*state.G[i] <= state.V[k])\\n    exit(false, \\"non puoi scambiare il titolo \\" + k + \\" per il titolo \\" + i);\\n  state.pos = i;\\n  state.next[i] = k;\\n})(_ARG0, _ARG1);","nextStatement":null,"previousStatement":null},{"type":"non prendere altri titoli dopo","message0":"non prendere altri titoli dopo %1","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"non prendere altri titoli dopo il titolo i-esimo","helpUrl":"","js":"(function(i) {\\n  if (i < 0 || i >= state.N)\\n    exit(false, \\"il titolo \\" + i + \\" non esiste\\");\\n  state.pos = i;\\n  state.next[i] = i;\\n})(_ARG0);","nextStatement":null,"previousStatement":null},{"type":"termina","message0":"termina","inputsInline":true,"colour":20,"tooltip":"esegui il piano","helpUrl":"","js":"var next = 0;\\nfor (var i = 0; i < state.N; i++) {\\n  state.pos = i;\\n  state.curval += state.G[state.taken];\\n  pause();\\n  if (i === next) {\\n    if (state.curval <= state.V[i])\\n      exit(false, \\"ATTENZIONE: non puoi scambiare il titolo \\" + i + \\" per il titolo \\" + state.taken);\\n    state.taken = i;\\n    state.curval = state.V[i];\\n    next = state.next[i];\\n    pause();\\n  }\\n}\\nstate.pos = state.N;\\nstate.curval += state.G[state.taken];\\nif (state.curval < state.sol)\\n  exit(false, \\"potevi guadagnare di più\\");\\nexit(true, \\"hai guadagnato il massimo, complimenti!\\");","previousStatement":null}]`),h0=JSON.parse('[{"N":4,"V":[40,40,40,40],"G":[1,0,4,3],"pref":[null,null,null,null],"next":[0,1,2,3],"pos":0,"taken":-1,"curval":-1,"sol":48},{"N":5,"V":[13,13,13,13,13],"G":[2,6,2,2,2],"pref":[null,null,null,null,null],"next":[0,1,2,3,4],"pos":0,"taken":-1,"curval":-1,"sol":37},{"N":6,"V":[9,57,51,28,12,32],"G":[1,1,4,3,8,9],"pref":[null,null,null,null,null,null],"next":[0,1,2,3,4,5],"pos":0,"taken":-1,"curval":-1,"sol":28},{"N":8,"V":[9,4,1,14,17,7,24,5],"G":[1,2,0,0,3,1,5,5],"pref":[null,null,null,null,null,null,null,null],"next":[0,1,2,3,4,5,6,7],"pos":0,"taken":-1,"curval":-1,"sol":18},{"N":10,"V":[2,3,13,3,12,8,29,40,23,10],"G":[1,2,2,4,1,5,1,0,3,4],"pref":[null,null,null,null,null,null,null,null,null,null],"next":[0,1,2,3,4,5,6,7,8,9],"pos":0,"taken":-1,"curval":-1,"sol":33},{"N":15,"V":[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90],"G":[26,85,34,89,87,82,9,77,81,21,68,93,31,20,59],"pref":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"next":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"pos":0,"taken":-1,"curval":-1,"sol":1280},{"N":20,"V":[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54],"G":[18,18,18,18,18,18,18,18,18,18,91,18,18,18,91,91,91,18,18,91],"pref":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"next":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"pos":0,"taken":-1,"curval":-1,"sol":964},{"N":30,"V":[108,174,175,64,35,43,123,157,9,338,74,78,152,91,1,222,174,294,283,239,32,81,56,46,290,204,299,287,135,255],"G":[6,0,0,8,7,10,3,1,7,0,0,3,6,2,58,37,17,0,1,12,2,80,3,7,0,37,16,3,9,50],"pref":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"next":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"pos":0,"taken":-1,"curval":-1,"sol":929},{"N":40,"V":[9,9,15,7,30,26,24,12,12,84,110,90,108,105,239,27,344,334,330,50,62,412,347,111,254,196,194,549,918,287,864,375,570,947,511,154,907,1654,1764,1753],"G":[2,1,4,6,10,10,11,14,16,14,3,7,14,4,21,1,37,35,14,37,14,0,4,45,40,7,29,8,4,42,9,65,30,35,85,62,27,69,16,92],"pref":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"next":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"pos":0,"taken":-1,"curval":-1,"sol":1021},{"N":50,"V":[4,1,2,21,15,25,7,31,74,76,10,20,107,168,149,161,133,104,342,366,160,122,271,405,134,660,307,468,323,769,74,9,938,204,150,1101,436,1036,543,271,714,140,1800,500,756,1167,646,1794,2225,1239],"G":[1,0,5,8,0,1,14,7,5,13,15,15,6,27,12,3,10,24,0,24,16,29,18,27,44,46,50,35,42,45,31,19,24,37,27,7,74,69,7,40,7,6,74,61,64,67,20,7,65,10],"pref":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"next":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"pos":0,"taken":-1,"curval":-1,"sol":1507}]'),x0={src:new URL("../d/db338f54-arrow.svg",import.meta.url).href,width:120,height:22.5},g0={src:new URL("../c/cea2aa47-bunny.svg",import.meta.url).href,width:66,height:117.40384615384615},_={src:new URL("../2/28ccc1f1-carrot.svg",import.meta.url).href,width:30,height:30},j0={src:new URL("../b/bb707dae-certificate.svg",import.meta.url).href,width:120,height:166.76923076923077},f0={src:new URL("../2/2bf8d260-flag.svg",import.meta.url).href,width:80,height:111.15044247787611};function b0({variables:l,state:i}){return i.N>10?e.jsx("div",{className:"text-slate-800 p-4",children:"La visualizzazione è disponibile solo per i primi 5 livelli."}):e.jsxs(e.Fragment,{children:[e.jsxs(w,{gravity:"bottom",scale:10,children:[e.jsx(o,{src:g0,alt:"Bunny",x:15*(i.pos+.25)-1,y:26,follow:!0}),e.jsx(o,{src:f0,alt:"fine",x:15*(i.N+.8)-1,y:27}),s(i.N).map(a=>e.jsx(o,{src:j0,alt:"titolo",x:15*a,y:10+(i.taken===a?5:0)},`titolo${a}`)),s(i.N).map(a=>e.jsx(m,{color:"transparent",width:12,height:3,x:15*a+.5,y:23+(i.taken===a?5:0),className:"!border-none flex items-center justify-start italic text-xl",children:a===0?"Carrot":`Giorno ${a}`},`day${a}`)),s(i.N).map(a=>e.jsx(m,{color:"transparent",width:7,height:3,x:15*a,y:20+(i.taken===a?5:0),className:"!border-none flex items-center justify-end text-2xl",children:i.V[a]},`value${a}`)),s(i.N).map(a=>e.jsx(o,{src:_,alt:"carota",x:15*a+6.8,y:20.2+(i.taken===a?5:0)},`carota${a}`)),s(i.N).map(a=>e.jsx(m,{color:"transparent",width:7,height:3,x:15*a+1,y:17+(i.taken===a?5:0),className:"!border-none flex items-center justify-end italic text-2xl",children:`+${i.G[a]}`},`gain${a}`)),s(i.N).map(a=>e.jsx(o,{src:_,alt:"carota",x:15*a+8,y:17.2+(i.taken===a?5:0)},`+carota${a}`)),s(i.N).map(a=>e.jsx(m,{color:"transparent",width:10,height:3,x:15*a+1,y:14+(i.taken===a?5:0),className:"flex items-center justify-start font-bold text-2xl",children:i.pref[a]},`gain${a}`)),s(i.N).map(a=>e.jsx(o,{src:x0,alt:"freccia",x:15*a+.7+(i.next[a]-a)*7.3,y:10-2*(i.next[a]-a),scaleX:1.3*(i.next[a]-a),scaleY:1.3*(i.next[a]-a)},`+freccia${a}`)),s(i.taken>=0?1:0).map(()=>e.jsx(o,{src:_,alt:"carotacorrente",x:15*i.pos+(i.taken===i.pos?6.8:12.8),y:i.taken===i.pos?25.2:30.2},"carval")),s(i.taken>=0?1:0).map(()=>e.jsx(m,{color:"transparent",width:5,height:3,x:15*i.pos+(i.taken===i.pos?2:8),y:i.taken===i.pos?25:30,className:"!border-none flex items-center justify-end font-bold text-[25px]",children:i.curval},"curval"))]}),e.jsx(N,{variables:{...l,"N (num. giorni)":i.N}})]})}function I(l){const i={em:"em",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...T(),...l.components},{Blockly:t,Code:a,Equation:n,Explanation:r,Image:p,SubProblem:u}=i;return t||j("Blockly"),a||j("Code"),n||j("Equation"),r||j("Explanation"),p||j("Image"),u||j("SubProblem"),e.jsxs(u,{children:[e.jsxs(i.p,{children:["Per il suo compleanno, a Tip-Tap hanno regalato un titolo di investimento della ",e.jsx(i.strong,{children:"Carrot"}),". Il titolo oggi ha un valore ",e.jsx(n,{children:String.raw`T_0`}),` carote,
ma il suo valore sale di `,e.jsx(n,{children:String.raw`G_0`})," carote ogni giorno, per cui tra ",e.jsx(n,{children:String.raw`k`})," giorni varrà ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`T_0 + k \cdot G_0`}),"."]})," Il nostro amico allora ha deciso di darsi alla finanza!"]}),e.jsxs(i.p,{children:[`Tuttavia, un solo intermediario accetta di fare affari con i conigli, e con delle condizioni molto restrittive. Ogni giorno,
l’intermediario offre a Tip-Tap un singolo titolo: nel giorno `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),","]})," un titolo che vale ",e.jsx(n,{children:String.raw`T_i`})," in quel giorno e il cui valore salirà di ",e.jsx(n,{children:String.raw`G_i`}),`
in ogni successivo giorno. Se il titolo che Tip-Tap possiede quel giorno vale più di quello offerto dall’intermediario, Tip-Tap può decidere di scambiare il
titolo che ha con quello offerto, ma senza ricevere nessun resto in cambio.`]}),e.jsxs(i.p,{children:["Quello che però l’intermediario non sa è che Tip-Tap è molto furbo, ed è riuscito a scoprire quali titoli offrirà l’intermediario per i prossimi ",e.jsx(n,{children:String.raw`N`}),` giorni.
Usa queste informazioni per assicurarti il massimo guadagno dopo `,e.jsx(n,{children:String.raw`N`}),` giorni!
Hai a disposizione questi blocchi per ispezionare la situazione:`]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`N`,inline:!0,lang:"text",className:"p-0 text-base"}),": il numero di giorni."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`valore del titolo`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," il valore ",e.jsx(n,{children:String.raw`T_i`})," del titolo che viene proposto nel giorno ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`guadagno del titolo`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," il guadagno ",e.jsx(n,{children:String.raw`G_i`})," che avrà il titolo ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esimo"]})," in ogni giorno successivo."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`valore del titolo`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsx(n,{children:String.raw`i`})," ",e.jsx(a,{code:String.raw`al giorno`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`d`}),":"]})," il valore ",e.jsx(n,{children:String.raw`T_i`})," del titolo che viene proposto nel giorno ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),","]})," incrementato di ",e.jsx(n,{children:String.raw`G_i`})," al giorno fino al giorno ",e.jsx(n,{children:String.raw`d`})," (",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`T_i + (d-i) \cdot G_i`}),")."]})]}),`
`]}),e.jsx(i.p,{children:"Inoltre, hai a disposizione questi blocchi per annotarti informazioni di supporto:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`annota preferenza`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsx(n,{children:String.raw`x`})," ",e.jsx(a,{code:String.raw`per il titolo`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," annota un numero ",e.jsx(n,{children:String.raw`x`})," a tua scelta sul titolo ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esimo."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`leggi preferenza per il titolo`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," leggi il numero che hai annotato sul titolo ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esimo."]})]}),`
`]}),e.jsx(i.p,{children:"Infine, hai a disposizione questi blocchi per riportare un piano finanziario:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`prendi il titolo`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsx(n,{children:String.raw`k`})," ",e.jsx(a,{code:String.raw`dopo il titolo`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," pianifica di prendere il titolo ",e.jsx(n,{children:String.raw`k`})," come prossimo titolo dopo ",e.jsx(n,{children:String.raw`i`})," (se prenderai il titolo ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),")."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`non prendere altri titoli dopo`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),":"]})," pianifica di tenere il titolo ",e.jsx(n,{children:String.raw`i`})," fino alla fine degli ",e.jsx(n,{children:String.raw`N`})," giorni (e questo è il piano iniziale per tutti i titoli)."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`termina`,inline:!0,lang:"text",className:"p-0 text-base"}),": segui il piano che hai indicato con i blocchi fino alla fine degli ",e.jsx(n,{children:String.raw`N`})," giorni."]}),`
`]}),e.jsxs(i.p,{children:[e.jsx(i.strong,{children:"Attenzione:"})," è possibile cambiare idea più volte su quale titolo prendere dopo un certo titolo ",e.jsx(n,{children:String.raw`i`}),` (e se prenderne o no), usando più volte i blocchi relativi.
Nota inoltre che il tuo piano può pianificare un `,e.jsx(i.em,{children:"prossimo titolo"})," anche per titoli che in realtà non verranno poi presi nell’esecuzione finale."]}),e.jsx(t,{customBlocks:m0,initialBlocks:d0,testcases:h0,visualizer:b0}),e.jsxs(r,{children:[e.jsxs(i.p,{children:[`L’idea principale che serve a risolvere il problema è capire cosa annotare sui titoli. Supponiamo
di annotare su ogni titolo un numero che rappresenta `,e.jsx(i.strong,{children:"quanto al massimo potremmo avere all’ultimo giorno"}),`,
`,e.jsx(i.strong,{children:"se prenderemo questo titolo e poi faremo le scelte migliori possibili"}),`.
Con questa idea, un possibile programma corretto è il seguente:`]}),e.jsx(i.p,{children:e.jsx(p,{alt:"soluzione",src:typeof k=="function"?k(_variant):k})}),e.jsx(i.p,{children:`Secondo questo programma, scandiamo i titoli dall’ultimo all’indietro dall’ultimo fino al primo, per capire
cosa possiamo annotarci sopra (e quale “freccia” mettere). Per l’ultimo ci sono poche scelte: dovremo per
forza tenerlo, quindi non mettiamo frecce e annotiamo il valore che acquisisce all’ultimo giorno.`}),e.jsxs(i.p,{children:["Per gli altri titoli ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),","]}),` iniziamo comunque allo stesso modo, considerando cosa possiamo ottenere se li tenessimo
fino alla fine, quindi annotando il valore che acquisirebbero all’ultimo giorno. Poi, però, dobbiamo consideriare
se ad un certo punto ci potrebbe convenire scambiarli con un altro titolo!`]}),e.jsxs(i.p,{children:["Iteriamo quindi sui titoli ",e.jsx(n,{children:String.raw`j`}),` successivi, verificando prima se lo scambio ci verrebbe accettato dall’intermediario,
e poi se lo scambio ci porterebbe vantaggio. Possiamo facilmente capire se ci porta vantaggio, andando a leggere
l’annotazione che su quel titolo avremo già messo, e che ci dice quanto al massimo potremo fare dal titolo `,e.jsx(n,{children:String.raw`j`}),`
in poi! Se questa è meglio di quello che abbiamo trovato finora per il titolo `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),","]}),` e lo scambio è accettabile,
ipotizziamo di fare lo scambio: aggiorniamo quindi l’annotazione per `,e.jsx(n,{children:String.raw`i`})," e programmiamo di prendere ",e.jsx(n,{children:String.raw`j`})," dopo ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"."]})]}),e.jsx(i.p,{children:"Ripetendo questo procedimento per tutti i titoli, andiamo a costruire il piano di investimento migliore!"}),e.jsx(i.p,{children:e.jsx(p,{alt:"statistiche",src:typeof z=="function"?z(_variant):z})})]})]})}function v0(l={}){const{wrapper:i}={...T(),...l.components};return i?e.jsx(i,{...l,children:e.jsx(I,{...l})}):I(l)}function j(l,i){throw new Error("Expected component `"+l+"` to be defined: you likely forgot to import, pass, or provide it.")}function D(){return{...b()}}const A={src:new URL("../d/df7e0f0d-sol.webp",import.meta.url).href,width:1645,height:1846},w0=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[]}'),N0=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"N","message0":"N","inputsInline":true,"colour":20,"tooltip":"il numero di ostacoli","helpUrl":"","js":["state.N",1.2],"output":"Number"},{"type":"pedana","message0":"pedana %1 %2","args0":[{"type":"field_dropdown","options":[["alta","A"],["bassa","B"]],"name":"_ARG0"},{"type":"input_value","check":"Number","min":["1",0],"max":["state.N",1.2],"integer":true,"name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"l'altezza dell'ostacolo dato","helpUrl":"","js":["state._ARG0[(_ARG1) - 1]",1.2],"output":"Number"},{"type":"differenza assoluta","message0":"differenza assoluta tra %1 e %2","args0":[{"type":"input_value","check":"Number","name":"_ARG0"},{"type":"input_value","check":"Number","name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"la differenza assoluta tra x e y","helpUrl":"","js":["Math.abs((_ARG0) - (_ARG1))",2],"output":"Number"},{"type":"minimo","message0":"minimo tra %1 e %2","args0":[{"type":"input_value","check":"Number","name":"_ARG0"},{"type":"input_value","check":"Number","name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"il valore minimo tra x e y","helpUrl":"","js":["Math.min(_ARG0, _ARG1)",2],"output":"Number"},{"type":"termina","message0":"termina in %1 tempo","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"termina in x tempo","helpUrl":"","js":"(function(i) {\\n  if (i > state.sol) exit(false, \\"potevi metterci meno di \\" + i + \\" tempo\\");\\n  if (i < state.sol) exit(false, \\"non si può finire il livello in \\" + i + \\" tempo\\");\\n  exit(true, i + \\" è il tempo minimo per finire il livello, complimenti!\\");\\n})(_ARG0);","previousStatement":null},{"type":"valore pedana","message0":"valore pedana %1 %2","args0":[{"type":"field_dropdown","options":[["alta","VA"],["bassa","VB"]],"name":"_ARG0"},{"type":"input_value","check":"Number","min":["1",0],"max":["state.N",1.2],"integer":true,"name":"_ARG1"}],"inputsInline":true,"colour":20,"tooltip":"valore salvato dell'ostacolo dato","helpUrl":"","js":["state._ARG0[(_ARG1) - 1]",1.2],"output":"Number"},{"type":"imposta valore pedana","message0":"imposta valore pedana %1 %2 a %3","args0":[{"type":"field_dropdown","options":[["alta","VA"],["bassa","VB"]],"name":"_ARG0"},{"type":"input_value","check":"Number","min":["1",0],"max":["state.N",1.2],"integer":true,"name":"_ARG1"},{"type":"input_value","check":"Number","name":"_ARG2"}],"inputsInline":true,"colour":20,"tooltip":"salva un valore dell'ostacolo dato","helpUrl":"","js":"state._ARG0[(_ARG1) - 1] = _ARG2;","nextStatement":null,"previousStatement":null}]`),y0=JSON.parse('[{"N":2,"A":[14,13],"B":[7,7],"i":1,"VA":[0,0],"VB":[0,0],"sol":7},{"N":5,"A":[2,17,13,27,16],"B":[2,16,13,10,12],"i":4,"VA":[0,0,0,0,0],"VB":[0,0,0,0,0],"sol":24},{"N":10,"A":[19,17,10,25,20,18,10,24,22,16],"B":[7,5,3,4,9,5,2,3,11,4],"i":9,"VA":[0,0,0,0,0,0,0,0,0,0],"VB":[0,0,0,0,0,0,0,0,0,0],"sol":38},{"N":25,"A":[10,11,11,10,7,7,7,9,9,8,8,11,7,9,7,11,7,11,11,10,11,9,9,8,7],"B":[2,1,2,2,1,2,2,1,1,1,1,2,1,2,2,2,2,1,2,1,2,1,1,1,2],"goal":9,"i":24,"VA":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"VB":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":16},{"N":50,"A":[16,3,5,2,18,17,17,7,19,19,15,12,11,4,19,7,1,4,12,11,2,5,2,1,7,19,13,12,2,7,4,7,2,18,20,9,8,10,14,2,2,13,9,16,7,2,6,17,4,6],"B":[3,3,2,1,13,9,8,6,14,9,8,2,10,4,11,2,1,2,3,7,1,2,1,1,5,4,2,2,1,2,4,6,1,14,4,2,2,6,3,2,1,4,6,6,7,1,3,9,4,1],"i":49,"VA":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"VB":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":146},{"N":100,"A":[96,97,95,95,97,96,95,97,94,96,97,95,97,95,96,93,94,94,94,96,96,96,96,94,93,94,97,97,93,96,95,93,94,93,93,96,93,93,97,93,93,94,95,93,96,93,96,95,97,93,95,93,94,97,95,93,96,96,97,94,97,93,94,95,95,95,93,95,94,95,96,94,93,94,95,97,95,95,96,93,96,95,93,93,96,95,94,97,93,93,94,96,93,97,95,96,94,93,94,97],"B":[19,10,13,5,1,3,2,9,8,12,10,19,5,13,3,20,11,8,15,19,2,19,2,15,9,15,16,20,2,11,15,14,18,5,13,11,7,1,20,7,20,10,6,16,3,9,4,5,12,5,1,2,9,11,19,20,15,12,6,13,10,5,9,11,3,20,2,6,19,12,18,10,16,2,6,3,13,10,4,18,16,11,16,16,2,11,6,13,3,7,2,1,13,17,15,19,14,12,9,6],"goal":95,"i":99,"VA":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"VB":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":263},{"N":200,"A":[221,184,33,270,104,255,132,22,75,102,194,280,54,250,289,217,254,166,256,278,5,163,19,76,80,299,241,44,21,116,21,8,170,77,191,196,258,294,266,219,106,275,247,199,120,11,1,155,292,171,253,135,209,197,84,66,147,29,247,73,42,181,19,198,25,242,78,17,166,282,100,252,31,240,173,64,66,151,266,20,228,98,183,39,21,131,267,118,258,260,59,219,217,54,33,213,80,229,214,255,167,41,37,184,16,179,6,188,74,2,64,151,13,120,73,233,245,133,15,186,243,152,168,42,274,81,76,115,261,122,95,191,24,11,40,68,154,214,73,153,44,228,190,271,193,5,165,105,151,47,56,58,79,205,216,90,233,268,182,45,105,1,237,112,59,155,80,242,255,119,208,12,139,1,204,298,228,130,146,44,37,157,175,272,84,213,145,69,108,54,279,143,227,291,81,62,206,240,287,182],"B":[50,30,2,232,16,102,54,7,14,59,93,78,39,38,208,134,174,128,104,113,3,83,17,33,49,151,17,34,3,17,10,8,42,59,130,136,18,47,40,194,38,214,217,156,109,11,1,130,131,17,221,78,99,16,83,31,86,2,107,63,10,106,15,118,4,200,3,5,27,178,50,29,20,158,167,38,50,32,97,13,96,59,162,3,16,7,111,12,216,157,10,145,22,27,7,199,4,111,8,236,65,23,8,178,12,46,2,19,27,1,1,95,10,110,24,29,89,34,4,86,75,142,48,7,158,49,17,41,125,97,38,108,5,7,5,54,141,190,55,91,16,162,164,30,105,4,113,48,121,12,18,36,58,48,111,32,88,73,119,31,38,1,2,39,50,140,55,24,195,70,72,2,11,1,135,203,27,91,51,3,17,137,31,128,9,75,134,67,69,27,207,75,96,71,16,25,152,36,154,162],"i":199,"VA":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"VB":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":10774},{"N":500,"A":[485,426,489,712,326,668,455,147,54,221,364,401,867,69,703,405,370,119,4,895,717,745,145,196,445,734,394,339,664,152,956,152,324,214,455,809,438,504,748,815,450,601,928,35,649,892,373,761,694,239,305,722,770,790,422,56,714,682,978,953,957,595,502,722,221,273,45,167,4,671,144,806,697,994,407,944,465,348,105,905,814,331,467,333,30,46,378,215,355,858,258,320,881,261,353,46,957,75,472,742,49,506,451,88,247,847,158,906,452,79,573,41,256,226,861,957,328,110,922,625,808,729,797,527,550,280,17,630,177,255,292,760,528,880,125,661,122,579,236,734,560,227,852,67,315,240,644,294,141,567,336,600,832,898,159,523,139,801,509,786,993,241,136,779,362,606,645,923,631,540,501,317,982,569,677,829,493,322,266,619,721,842,805,394,214,323,352,685,674,267,688,313,365,553,750,155,23,643,26,47,232,335,841,354,433,914,460,146,320,665,746,392,420,547,824,704,778,579,419,176,513,637,861,717,82,244,849,181,969,980,918,761,575,736,438,107,644,728,630,42,349,28,955,38,92,300,470,520,167,346,823,968,16,544,564,36,585,269,467,739,414,508,22,758,261,703,781,529,396,214,580,825,601,698,167,339,599,579,976,372,641,331,802,616,175,808,583,453,350,972,492,970,839,798,766,193,563,286,543,65,594,965,648,620,773,273,292,439,840,288,551,568,351,723,811,866,769,160,394,476,576,652,818,234,17,542,697,647,643,20,586,282,968,949,80,459,762,461,522,981,169,946,951,650,963,259,903,793,625,93,31,12,208,408,447,651,690,714,597,364,130,336,408,944,139,84,886,370,72,735,688,483,323,323,927,784,282,687,610,414,524,167,915,933,723,734,748,45,708,397,353,833,83,179,207,268,718,802,530,932,775,566,40,182,525,918,324,198,811,626,832,535,727,935,139,791,59,85,352,833,82,438,361,463,854,525,862,122,325,187,20,908,198,424,64,816,934,615,367,419,452,619,689,577,423,32,822,196,66,99,27,22,414,708,919,331,810,764,508,83,549,810,880,29,529,857,83,368,483,158,641,983,1,346,968,713,165,799,656,966,957,337,495,910,695,46,247,289,175,361,168,475,898,142,579,167,6,400,821,153],"B":[381,112,251,514,253,62,154,127,40,7,242,6,540,11,686,4,22,80,3,656,300,233,74,27,236,339,87,216,446,115,726,135,67,48,179,399,414,200,226,201,105,51,398,15,87,192,30,654,178,157,45,525,292,362,235,41,529,665,561,753,441,466,131,488,87,22,4,90,3,8,17,439,228,624,286,227,99,312,78,88,327,275,458,131,17,13,42,135,97,207,155,265,394,247,123,20,566,2,254,449,27,236,61,11,26,784,106,219,314,55,404,12,251,33,286,361,223,72,293,555,207,304,453,474,268,119,4,102,107,56,4,549,439,51,50,280,95,368,173,721,289,190,246,67,168,96,492,88,4,517,188,26,133,406,46,79,53,794,292,713,219,188,60,394,312,136,511,111,27,368,234,7,226,167,507,756,280,41,71,412,196,325,299,31,10,128,226,676,232,177,167,9,294,60,646,91,16,63,8,1,168,35,64,340,70,222,223,92,91,337,419,5,136,545,754,474,43,126,200,1,142,527,751,152,43,216,841,64,23,826,173,701,173,81,307,80,469,154,617,17,193,21,911,32,46,78,121,365,104,139,505,403,10,296,481,35,566,20,203,123,178,27,9,36,149,213,542,349,129,30,338,249,546,362,40,5,53,160,353,150,301,254,414,442,1,145,45,65,5,739,466,681,679,264,627,18,435,90,174,21,113,517,557,394,446,160,7,399,736,133,540,326,98,443,146,7,524,145,185,19,422,629,779,231,12,163,200,363,509,8,248,95,777,431,74,122,731,443,103,193,113,67,437,405,279,224,776,365,336,40,16,5,196,198,398,641,399,40,477,292,72,13,243,535,11,73,356,3,25,114,554,23,13,202,129,651,209,146,152,157,62,33,138,493,658,48,533,36,647,93,300,85,72,68,205,168,260,266,468,159,460,157,38,165,35,776,37,166,468,245,470,164,342,671,122,570,35,67,2,794,14,312,292,172,388,371,652,18,12,33,11,623,12,331,40,399,54,173,40,28,182,262,318,465,93,30,271,100,46,16,12,6,316,670,14,234,568,712,244,7,412,803,269,21,99,847,43,51,17,133,294,38,1,81,562,151,45,163,249,900,640,13,491,641,408,15,163,169,61,116,108,187,579,99,14,150,6,368,177,5],"i":499,"VA":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"VB":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":94879},{"N":800,"A":[104,2090,157,459,2505,628,109,1787,2812,2914,565,2090,2185,300,1671,2698,396,1787,1930,922,984,1971,2382,1034,2157,2222,2475,971,166,1318,2565,2190,591,110,1725,1611,430,1887,1893,695,1943,652,1163,461,1415,2575,1937,2125,802,725,1330,1557,170,2259,143,1103,2982,1421,542,2512,679,1764,1632,312,1743,2975,567,627,674,122,556,1463,1180,2803,1675,1073,1403,2055,2184,1541,2276,961,1551,1599,2096,1680,401,631,21,2440,438,2652,2441,456,2821,691,350,43,1484,1969,443,1854,2394,2731,937,2301,320,689,2635,2119,2492,1795,2801,1082,2407,1591,1807,220,356,2410,1371,2076,161,2540,1101,2009,2642,1937,742,2216,654,2494,1872,281,1611,1680,378,1976,455,578,386,2697,2727,2403,814,136,2287,2926,439,2292,1406,2809,990,2039,1276,921,2031,2085,376,1249,1730,1506,596,1180,1971,1472,1575,530,1644,2050,937,2906,2590,1770,1472,2927,432,1194,1827,1410,766,2046,451,1573,1904,1892,2532,2768,2058,1994,1289,2802,377,1300,932,1767,2357,1666,1080,2972,732,741,1492,958,34,2190,532,2477,335,810,2131,274,960,1702,1945,2,861,169,1104,2388,2883,1382,2625,2441,378,423,424,99,582,1553,2348,826,2081,493,433,1945,2085,1925,1864,1392,1705,1546,2315,1375,1859,1438,1681,1831,25,1659,1828,1760,1038,1946,935,1162,2676,2456,2140,769,2121,242,1405,1370,657,1599,769,2033,687,194,2794,769,1344,2127,624,2717,874,1808,996,2474,2277,3,256,995,2762,918,2804,2113,2645,1174,2022,788,1527,1461,1601,2717,1920,601,465,639,1901,2215,1507,191,1664,359,2399,1686,863,17,2175,1265,2228,271,2478,63,1718,1475,343,980,115,2100,629,1059,2432,1141,1568,2076,936,2418,365,635,2568,2309,260,1781,1580,100,1779,2722,581,488,1761,131,1083,473,1195,2524,2219,1388,2262,662,90,1057,564,407,2299,278,2337,2133,2402,1988,2131,1423,2285,726,2718,1635,2494,1428,1103,2242,886,1286,1134,342,1344,2894,144,2506,1198,682,825,2272,1840,1699,2179,503,2432,1328,1215,2574,2760,129,34,313,1299,2677,199,1020,2836,574,2446,1592,1151,1039,2183,1839,504,1534,2133,947,1956,126,333,404,528,63,1484,1696,2160,2048,1100,1768,2857,673,1464,1021,907,1233,764,1026,743,2957,2889,997,2294,2382,1016,1227,2958,819,1688,1561,1589,1577,2156,423,353,48,44,1622,2762,1690,2711,1058,647,994,860,220,275,1020,2909,551,1185,2451,1439,1467,1218,2629,548,1964,818,1626,1940,1804,1948,1213,1430,2471,1622,1644,2055,2764,964,1767,1087,686,575,2178,2653,1400,1776,1869,2665,214,2989,1053,2832,75,2447,1051,888,2532,2709,2497,37,85,686,968,2048,1453,2385,473,102,706,2433,1117,855,807,756,2033,620,2072,2404,12,1787,129,2059,1718,1359,2566,775,252,566,2692,1991,2495,1105,1879,654,2099,2290,2491,1726,652,1717,518,2395,762,1206,2805,1075,454,1457,2196,34,2490,568,1672,1972,111,2589,349,2638,923,858,114,2454,543,1666,2238,1826,2222,2297,2639,2411,366,1924,1098,867,2805,2607,2145,43,1166,577,552,1361,1325,1353,257,1528,1040,1360,1928,2157,332,1798,1652,1967,1745,304,589,2095,607,587,142,2641,475,279,1097,1443,2978,1648,1308,1912,1415,2057,2971,1500,2099,1024,1947,1508,2536,2236,2125,458,2335,163,737,1103,1979,1717,2654,2681,1956,2971,2800,179,2155,1579,1179,873,2897,2553,2748,2505,1292,1343,2327,2099,1604,1510,1210,866,991,2405,1866,2455,2556,1320,590,2255,2198,1831,839,744,1467,1021,364,2035,862,1597,2097,1450,1292,178,807,670,1878,1028,1179,1720,1287,224,472,241,655,2519,1795,2245,1974,903,368,2573,2074,2704,2102,2444,2309,83,392,1279,2409,2908,2359,811,1211,753,926,533,1057,1244,2524,838,559,746,2412,1440,2698,2778,1110,2951,2532,2455,17,849,2366,1713,596,2206,2062,902,715,1297,948,2611,2766,412,2008,1445,2412,893,2263,269,1539,2417,2118,2932,591,1072,728,1086,1340,2097,1411,2958,2252,2908,2332,2688,1251,2115,861,834,360,2193,499,2759,2677,133,955,390,1549,286,871,814,2015,785,2103,2474,2254,2618,1768,1618,1074,2622,2470,1437,844,2640,810,882,2794,29,970,1933,2476],"B":[42,16,13,294,605,389,54,1164,1364,1016,373,888,1640,67,1160,1437,221,504,782,405,661,814,283,565,1523,89,1944,283,157,801,437,200,402,99,1498,887,366,1238,331,349,842,605,1032,189,293,1465,1291,221,264,598,607,1300,75,1767,106,769,853,275,113,1463,32,1182,950,40,1116,2269,174,213,234,68,505,1277,687,486,1584,325,1287,1360,593,1516,1251,902,710,966,1255,833,350,152,19,2119,357,840,2104,137,2517,385,19,8,1480,652,347,756,1040,1993,163,2260,261,27,684,1675,853,1451,1659,44,550,351,1158,97,330,1660,478,1866,123,417,1040,1129,1615,544,236,1493,310,589,141,245,1160,1139,136,471,152,369,71,233,561,2289,8,104,2009,2828,243,1423,200,22,233,1718,563,10,727,1397,40,1175,464,781,238,409,1352,580,1255,123,728,1930,672,1532,1470,569,821,1160,246,248,316,499,347,469,349,797,1052,1159,904,1636,1275,477,1061,7,242,808,841,100,166,192,411,1339,116,716,58,45,25,19,120,817,239,2,1701,91,233,783,1654,2,391,158,59,1422,1506,930,551,2118,129,366,140,89,140,425,1309,432,2050,287,355,256,1834,366,1122,264,522,161,2071,479,509,985,49,1482,18,1566,459,494,978,289,452,738,1992,610,359,308,503,40,76,1274,480,1389,422,394,401,87,2134,742,376,1778,506,2338,613,68,500,1302,805,1,69,454,2499,677,447,1743,2598,693,1404,168,1142,898,899,1301,138,226,385,404,1450,861,1443,6,425,212,2334,1108,649,5,2006,779,2201,41,2019,14,1264,640,12,629,76,1506,477,226,1832,450,787,1392,844,1081,23,324,2393,1987,246,655,1494,15,1244,548,32,362,508,70,788,177,766,777,245,1056,58,508,82,680,353,315,1711,129,427,308,526,71,916,199,889,711,943,413,1799,324,714,823,477,264,1,339,632,1325,22,58,235,282,526,1419,183,1030,1676,42,1897,357,494,1790,1175,6,18,161,1122,1178,182,870,2117,266,230,858,462,641,2005,1451,217,348,211,724,786,31,158,94,449,58,1077,256,1010,1154,828,965,240,537,415,155,819,298,565,56,239,1710,643,777,528,689,537,44,1888,64,344,1036,436,1093,2021,65,273,6,16,923,1130,708,1624,157,601,759,47,131,229,462,2710,522,28,606,1366,752,1028,1039,24,1653,624,696,618,286,1677,680,1307,1560,1186,1425,1221,2314,194,444,1054,522,530,2074,1950,531,618,1857,2158,203,796,940,282,26,423,3,190,712,1477,1097,2,78,318,403,1488,180,1770,359,99,15,2178,723,394,327,184,1348,606,1670,929,1,1238,35,350,636,1297,2536,732,87,324,1124,986,1355,160,1647,111,1061,1658,1835,1375,623,1570,116,457,494,205,1744,566,326,1043,307,3,61,126,789,1815,41,576,201,2373,50,423,7,1636,305,829,225,1799,596,521,850,690,296,590,518,413,37,212,288,41,317,520,118,14,298,1185,45,425,924,994,1098,346,162,786,1111,1130,1063,113,410,1284,73,160,99,2316,341,269,620,1364,1954,1212,1275,1050,476,154,1573,701,29,158,228,892,999,100,2080,21,1470,94,350,996,1549,3,968,2681,1522,1411,659,123,676,1425,991,28,1861,2457,711,1810,1185,881,591,1760,486,781,493,262,550,1524,488,1384,600,499,263,709,470,983,709,615,1240,727,277,1853,301,560,828,833,43,50,619,571,166,1028,997,1667,790,222,457,86,273,2289,633,1700,768,693,42,374,72,2387,1356,393,963,6,374,188,1604,526,2176,285,326,605,141,234,1016,298,1112,81,417,204,71,1102,1966,517,168,2865,1144,904,5,759,14,261,497,169,1306,686,468,907,665,1128,774,180,558,1104,1159,293,1608,90,234,390,568,1888,433,400,71,903,771,210,799,1573,516,2217,623,143,909,1704,480,401,50,1648,260,1912,688,52,247,307,833,281,539,224,187,103,534,800,2130,2544,1231,1313,966,2582,119,708,719,142,452,531,869,5,465,188,1131],"i":799,"VA":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"VB":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":447431},{"N":1000,"A":[4752,5392,1453,2040,8133,1448,2230,3934,293,4636,8474,2386,8322,5247,5890,3281,8544,6208,582,7224,4716,8630,9870,5734,9592,9382,4340,1914,2283,8786,2941,4897,9387,6008,1615,8099,8527,494,9656,7630,4261,9216,2662,1999,9522,2620,3985,3711,9848,2529,2906,1731,1565,7665,4227,680,2317,961,5454,6682,364,3963,1461,2360,8568,7422,176,6895,8508,5438,8738,3284,1556,4419,4290,1388,2375,431,7329,4676,6945,9322,3190,124,1753,6307,4213,7943,7715,8445,2175,4394,255,5553,1791,512,5082,3155,6723,2090,4096,7740,2847,5801,7150,5975,1730,9137,2147,255,8600,7865,6444,1584,939,4856,4938,8632,9141,3,25,5560,7412,3251,6136,9364,4285,7369,244,78,5401,5120,1885,4936,1678,4730,4028,1823,2696,2713,7623,2750,9355,9187,268,1646,1358,6250,4203,3761,9742,9171,3057,138,9871,4642,8407,7749,7661,4150,4470,3056,7574,381,7771,4692,345,7525,8480,3240,9858,9040,540,6783,7224,196,9292,1117,2155,8504,4571,1290,374,7819,5616,3239,4836,7355,8419,1052,1411,6209,6759,3805,7942,9074,7126,4728,2524,7071,9605,7696,6057,6861,9598,5680,6955,7224,1079,5430,6173,5552,3000,1133,2903,525,2933,8523,7070,4743,7216,8706,2612,2587,1913,4634,4945,530,5437,1112,4813,7452,5069,3373,1115,663,1499,116,5060,20,707,9732,7697,1332,2282,9187,1666,1071,3306,7983,1316,7760,7303,2754,1670,6104,6917,2130,8300,9062,1545,6196,8662,9203,6429,3968,1500,9912,5970,5782,6122,131,2345,3433,2243,1898,8021,7929,2062,4273,669,5756,3279,1558,8110,4118,3106,1897,3981,6544,1690,6355,5848,5440,6457,6900,4427,4292,4386,5488,6825,4370,2937,6051,1859,8150,9289,6685,699,86,9942,5397,6628,9553,3243,8899,7437,8958,9719,5680,1918,274,5959,7863,3737,6309,9829,3084,8100,6428,2521,6247,3518,1035,9315,4929,1618,4101,6520,8547,5250,6953,7604,4110,4211,4668,9961,382,8418,3326,4461,594,6792,1404,417,8075,6391,5730,7730,7290,7781,3032,410,5829,5045,1093,1596,9935,2109,5172,2532,4135,5590,3672,736,8368,6453,9752,5026,8257,2383,5570,726,8023,1278,8578,2283,9227,9227,1327,5845,7667,6073,5405,1650,1804,5052,5985,117,7784,6629,3506,6845,7968,8075,6174,7033,3370,6949,3147,1175,7619,5946,7371,4032,7556,5569,8147,1588,9606,5211,1434,5180,4462,1911,6207,5370,5461,3101,4955,2782,2606,3945,8580,1733,6208,1463,7600,2308,946,1853,1962,6621,1539,1341,9513,3554,4951,2820,7416,4372,2861,6614,2904,1404,8522,7469,1488,8460,4953,922,5721,8184,3788,2059,7115,5911,1984,2196,3881,8966,8136,5628,7884,8263,4850,2953,3207,8986,5109,2851,796,8687,9200,6157,5202,5536,5421,2373,427,7895,2291,1378,307,1793,5262,3176,1028,3765,2906,6273,8687,6861,6425,650,3654,121,7307,177,2515,1039,5185,4831,5608,6773,5402,8461,7270,8753,6576,5495,4593,3508,7651,4896,7022,2127,7821,2799,3162,4435,8295,9622,7946,7886,4066,3010,892,627,1548,2251,9224,5884,1637,6172,2059,9396,3329,3667,9785,7275,4702,2300,1566,3089,2135,4354,5320,7301,5506,1640,1481,189,3091,7131,5422,9654,5378,7893,8081,4015,968,5433,1472,4524,102,2617,9140,7442,1108,4453,4641,6627,7466,1824,4925,4880,8016,7286,9979,2544,437,2923,2567,6901,8388,8753,6884,5564,9202,9681,1351,3970,3314,3138,6164,4331,9666,7257,629,7304,3651,7763,8549,5521,9220,4811,2901,3272,5776,2529,4189,6648,1273,6396,1284,9330,8777,3538,7418,9958,2778,9923,9967,7175,4263,8793,8088,276,9736,2808,3265,4767,9305,2464,8936,5479,5076,3706,4978,9404,5801,5386,5669,4922,2443,629,9781,139,3825,7056,7619,70,9387,8814,225,717,2087,6286,2872,8979,489,670,6642,2805,431,5224,6881,3294,5838,4032,529,8069,782,5543,3016,3231,585,1953,5301,4994,2958,6801,906,1811,9321,2660,3637,6344,9177,5942,8599,3537,6547,3675,1282,1820,2707,462,1865,8656,8954,4202,6004,729,3542,7287,4425,983,4083,4363,5526,1721,4393,6081,953,1766,4665,5580,3952,3265,6201,8765,2768,6401,8743,8760,1795,3294,4926,1714,6918,9058,2941,1998,4829,7964,4825,8831,1273,3158,6988,5370,2302,5755,2125,7552,7900,9990,7932,4644,6729,1087,9724,1117,6454,4783,6969,9560,8867,9274,6624,6757,6026,4021,1776,8771,4849,7953,4034,2443,5598,357,2455,8412,9936,1675,9207,7824,8086,5492,1485,678,6619,8393,3601,5576,1088,2086,1587,4605,4166,294,5265,3974,5782,5873,3299,6453,9520,5050,9878,8931,5149,7112,1520,832,9115,3228,5923,9261,3654,7094,4697,1065,4507,3504,7421,2587,2732,814,6059,3678,3706,4184,9271,8789,8146,8288,3995,3489,1610,1730,9839,1500,7106,7372,231,8587,8555,2077,9076,6585,8548,7505,9288,6434,9121,1983,5145,4190,7410,1692,5097,1250,5586,1777,5392,1728,3218,83,297,7580,8468,8187,3876,8433,4328,6577,7322,5027,245,9441,1749,1494,6308,4297,4561,3000,7444,4245,1540,2826,856,4113,5447,935,5591,4666,727,8263,5231,5241,5719,7354,2848,4827,8047,7300,3998,3823,781,7294,6208,9809,5316,208,4097,2885,1683,6558,914,1716,957,4221,8595,1118,7891,5546,5479,775,8519,7246,293,5222,8591,1871,3996,8829,2453,9373,8859,7103,7319,2818,5910,4842,4492,6408,972,1643,9808,9238,318,8746,9493,1287,2476,3059,6373,6050,5641,262,9637,6023,5610,9416,5985,6709,5913,4134,3487,8592,9836,8284,5222,9548,1574,2712,4185,4298,3030,6859,1596,2453,2939,7334,1326,6125,5765,6784,3273,9539,9742,9612,26,2237,7227,9300,856],"B":[3213,2437,1259,1693,3036,472,1677,3510,249,1180,6065,475,5267,620,1570,1210,6945,3234,147,632,1271,3081,8017,1273,2435,7036,1734,324,1809,6944,157,3852,1398,5304,207,2013,701,441,1414,6730,2105,6167,974,1391,8484,2035,54,588,2364,2425,279,573,553,4729,3440,77,1850,356,2081,3199,152,870,1214,1016,3490,2619,65,4737,2117,4666,6361,1222,912,1941,2510,754,1843,198,426,4182,3836,8480,657,35,1720,5800,1621,7211,2169,6622,2038,1409,54,2144,1347,447,2643,1354,6385,508,2929,3617,2815,3504,3360,4785,180,7420,394,244,6329,1946,5219,864,692,1397,2282,2039,5528,1,3,2767,6938,995,5485,7557,1403,3280,27,14,1702,4463,1027,758,1116,500,3773,1401,1821,679,2113,1802,447,6202,63,635,1291,1710,3145,1897,8269,6030,1743,108,3830,2842,5142,5152,7214,2823,1342,911,2651,191,5095,2026,53,5974,2986,1593,5436,2178,504,3826,3013,51,3343,1005,360,6635,1703,877,279,5878,24,2526,3432,5767,4646,80,709,5271,3121,1160,3282,11,5204,3975,1635,3235,4948,4487,2491,6701,2785,306,3598,2543,465,1893,197,1278,2037,204,2474,235,41,7165,1471,3252,2552,621,1962,437,970,2501,3205,274,3780,123,1801,5191,4491,1547,869,44,756,38,476,2,160,2773,5320,1200,83,2212,158,238,411,3546,236,5879,4108,2212,284,5980,4190,331,575,4066,1494,3046,5311,8956,2513,2319,313,6638,2324,4141,172,1,1056,2673,763,1697,6019,5462,1129,1138,177,2651,2592,1028,1185,2629,2601,1265,1445,6304,563,4566,263,1898,277,4400,1305,383,652,5313,64,1858,1038,4291,351,1633,1212,2337,265,4,2600,1409,1919,8989,130,3105,7175,7367,5485,2992,1580,215,1525,7123,2959,6261,243,2518,3387,1326,1757,3644,1036,325,37,1513,316,1445,2103,6901,4412,4019,983,2582,2069,3076,8419,256,8227,1729,3332,23,4552,570,16,5561,4371,4500,4292,4554,4737,2405,311,1723,3527,449,339,7425,2037,3607,2002,4025,4301,3176,370,4323,4384,1577,1063,2289,262,1594,28,3858,1175,829,1911,2219,4232,620,1070,7478,351,846,1279,628,4753,1479,85,3318,5185,375,2186,3539,7266,1192,6634,3121,5146,1097,281,2637,2387,2815,665,1045,1795,1265,1100,7287,1427,1354,1337,2919,231,2639,2537,13,2697,1529,2285,1947,326,4254,105,6097,801,3971,577,944,310,1710,4977,577,1182,1633,3496,3302,2176,5757,2767,2650,2138,663,433,5859,7120,680,6953,3758,144,1437,1853,267,1803,816,1841,661,817,2527,5153,7049,4832,7385,4423,150,1113,2050,1805,3603,450,467,8659,8955,3440,4983,1858,4050,2129,379,6604,6,1151,71,113,2555,3138,99,2999,1474,5321,6032,1719,5896,611,2331,114,6045,107,824,265,2299,3707,4290,4024,2181,4987,6483,5441,5494,3307,117,3444,6167,3303,6057,733,1560,2559,320,4118,2684,3031,995,7675,1778,477,529,93,1211,603,3439,3000,197,4001,1375,8557,2488,3128,9341,4941,782,1714,1535,2938,729,2258,1386,5821,4475,1546,812,16,1407,2034,3502,2031,537,4981,2433,1572,354,1385,1148,3754,102,579,5534,6920,798,3836,239,195,6645,270,2700,1275,6558,57,5319,1697,153,2366,321,6201,7420,2272,6729,1084,5892,2762,191,461,1960,114,2702,2909,4140,4254,320,3552,3589,122,6481,1757,5717,1334,1152,487,3097,1237,1374,227,381,3373,158,4096,1105,1328,4571,1608,654,9640,793,6359,1752,998,601,25,3082,2018,2134,4710,1436,1527,14,5371,4478,2379,100,6761,581,2294,823,4621,1443,15,6562,111,3363,4672,2408,23,7444,1107,172,94,1612,4897,901,1762,444,404,2319,1558,344,5162,4250,2105,4882,2776,426,4202,205,3750,2327,870,205,602,2703,1179,2361,2259,392,1550,8155,1557,1680,1055,7251,377,3731,2102,3984,2342,1107,314,1243,164,269,2945,6818,109,1129,528,2930,5465,3415,770,2414,1583,5458,1423,4032,2408,272,736,1596,1906,3403,771,997,4120,1419,221,717,7107,521,2094,704,1025,5523,5783,604,589,1426,7369,2025,3942,979,1468,2201,847,1899,4151,257,3286,2613,5105,1155,374,5653,950,2909,232,1895,879,5136,4839,511,804,6078,4291,1863,668,239,2383,2936,4185,1770,766,1486,172,422,5153,4062,1505,1703,4285,2347,5049,428,650,2122,5572,2410,2133,922,157,900,2743,3635,176,5228,3341,2966,3074,72,5149,8822,3281,361,1947,199,1175,257,673,4782,3088,1986,1358,2735,2601,170,944,3126,658,90,11,2343,95,445,3542,2034,2557,6137,5137,8089,819,533,951,288,86,9169,1209,3713,3240,189,5223,3453,1227,4816,4873,824,4675,4054,2162,5039,1682,4697,2189,3660,1203,2644,893,56,1723,4824,1142,2339,3,159,903,328,6069,1124,4938,1645,4944,3906,2712,195,4824,700,315,3739,2857,1815,2258,3822,3898,171,2265,795,2951,2949,394,1426,3901,554,4962,2213,616,163,6809,1471,2167,15,1293,1424,465,390,6489,5297,602,209,118,1739,1906,1425,4604,271,281,11,3467,4668,684,4788,2175,1896,758,3901,4288,196,350,3326,1150,124,5128,988,8069,8092,1473,2151,158,5534,2799,1877,45,879,279,5409,2704,22,2665,2539,286,2244,1669,154,2362,4617,122,164,3010,707,6078,531,1538,4712,1232,3425,3040,2211,1828,4767,9169,1263,1466,3834,3659,1618,2953,650,1063,1377,6314,767,2197,1217,1696,646,7533,6995,4002,12,127,3352,1552,398],"i":999,"VA":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"VB":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":1842872}]'),S0={src:new URL("../2/27400aa0-bunny.svg",import.meta.url).href,width:50,height:88.20224719101124},B={src:new URL("../8/8d833b2a-platform.svg",import.meta.url).href,width:90,height:12.65625};function k0({variables:l,state:i}){const{N:t,A:a,VA:n,B:r,VB:p}=i;if(t>50)return e.jsx("div",{className:"text-slate-800 p-4",children:"La visualizzazione è disponibile solo per i primi 5 livelli."});const u=Math.max(...a),h=d=>3*d/u;return e.jsxs(e.Fragment,{children:[e.jsxs(w,{scale:100,children:[a.map((d,c)=>e.jsx(m,{color:"#d1d5db",borderColor:"#6b7280",x:c+1.48,y:-h(d)-.1,height:h(d)+.3,width:.15,className:"rounded-md"},c)),a.map((d,c)=>e.jsx(o,{src:B,alt:"Pedana",x:c+1.1,y:-h(d)},c)),r.map((d,c)=>e.jsx(o,{src:B,alt:"Pedana",x:c+1.1,y:-h(d)},c)),n.map((d,c)=>e.jsx(m,{color:"transparent",borderColor:"transparent",height:1,width:2.2,x:c+1.1,y:-h(a[c])-.35,className:"text-3xl text-gray-400 [text-shadow:0_0_2px_#fff]",children:d},c)),p.map((d,c)=>e.jsx(m,{color:"transparent",borderColor:"transparent",height:1,width:2.2,x:c+1.1,y:-h(r[c])-.35,className:"text-3xl text-gray-400 [text-shadow:0_0_2px_#fff]",children:d},c)),e.jsx(m,{color:"brown",borderColor:"#D35A1E",height:.3,width:Math.min(t,50)+2}),e.jsx(o,{src:S0,alt:"Bunny",x:.2,y:-.8})]}),e.jsx(N,{variables:{...l}})]})}function V(l){const i={em:"em",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...D(),...l.components},{Blockly:t,Code:a,Equation:n,Explanation:r,Image:p,SubProblem:u}=i;return t||f("Blockly"),a||f("Code"),n||f("Equation"),r||f("Explanation"),p||f("Image"),u||f("SubProblem"),e.jsxs(u,{children:[e.jsxs(i.p,{children:["Il nuovissimo videogioco ",e.jsx(i.em,{children:"SuperBunny"})," è finalmente in commercio! Bunny, il protagonista del videogioco, in ogni livello deve superare ",e.jsx(n,{children:String.raw`N`})," ostacoli numerati da ",e.jsx(n,{children:String.raw`1`})," ad ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`N`}),"."]}),`
Su ogni ostacolo ci sono `,e.jsx(n,{children:String.raw`2`})," pedane (ad altezze diverse) su cui Bunny può saltare: l’ostacolo numero ",e.jsx(n,{children:String.raw`i`})," è fatto da una pedana più in alto che si trova ad una altezza di ",e.jsx(n,{children:String.raw`A_i`})," metri, e da una pedana più in basso ad un’altezza di ",e.jsx(n,{children:String.raw`B_i`})," metri."]}),e.jsxs(i.p,{children:["Bunny parte da terra ad altezza ",e.jsx(n,{children:String.raw`0`})," e deve per prima cosa saltare sull’ostacolo numero ",e.jsx(n,{children:String.raw`1`})," scegliendo una delle due pedane. Una volta raggiunto l’ostacolo ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`1`}),","]})," sceglierà una delle due pedane dell’ostacolo successivo, il ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`2`}),","]}),` e ci salterà sopra.
L’obiettivo del gioco è superare in ordine tutti gli ostacoli fino all’ostacolo numero `,e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`N`}),"."]}),` Anche se Bunny può scegliere ogni volta su quale pedana di un ostacolo saltare, non tutti i salti sono uguali!
Infatti, più il salto è grande e più tempo ci vuole per farlo. Per saltare da pedana ad altezza `,e.jsx(n,{children:String.raw`h`})," fino ad una pedana sull’ostacolo successivo ad altezza ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`k`}),","]})," Bunny ci metterà una quantità di secondi pari alla ",e.jsx(i.em,{children:"differenza assoluta"})," tra ",e.jsx(n,{children:String.raw`h`})," e ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`k`}),"."]})]}),e.jsx(i.p,{children:e.jsxs(i.em,{children:[e.jsx(i.strong,{children:"Nota:"})," la differenza assoluta tra ",e.jsx(n,{children:String.raw`h`})," e ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`k`}),","]})," in formule ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`|h - k|`}),","]})," indica il valore della differenza tra ",e.jsx(n,{children:String.raw`h`})," e ",e.jsx(n,{children:String.raw`k`})," ignorando il segno: quindi ",e.jsx(n,{children:String.raw`h - k`})," se ",e.jsx(n,{children:String.raw`h > k`})," o ",e.jsx(n,{children:String.raw`k - h`})," se ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`k > h`}),"."]})]})}),e.jsx(i.p,{children:`Il tempo totale impiegato per completare un livello è la somma dei tempi impiegati in ogni salto. Quanti secondi servono a Bunny per completare il livello?
Puoi usare questi blocchi:`}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`N`,inline:!0,lang:"text",className:"p-0 text-base"}),": il numero ",e.jsx(n,{children:String.raw`N`})," di ostacoli."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`pedana alta i`,inline:!0,lang:"text",className:"p-0 text-base"}),": l’altezza ",e.jsx(n,{children:String.raw`A_i`})," della ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima"]})," pedana più in alto."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`pedana bassa i`,inline:!0,lang:"text",className:"p-0 text-base"}),": l’altezza ",e.jsx(n,{children:String.raw`B_i`})," della ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima"]})," pedana più in basso."]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`differenza assoluta tra x e y`,inline:!0,lang:"text",className:"p-0 text-base"}),": la differenza assoluta ",e.jsx(n,{children:String.raw`|x - y|`})," tra ",e.jsx(n,{children:String.raw`x`})," e ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`y`}),"."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`minimo tra x e y`,inline:!0,lang:"text",className:"p-0 text-base"}),": il valore minimo tra due numeri ",e.jsx(n,{children:String.raw`x`})," e ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`y`}),"."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`termina in x tempo`,inline:!0,lang:"text",className:"p-0 text-base"}),": riporta che è possibile raggiungere l’",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`N`}),"-esimo"]})," ostacolo in ",e.jsx(n,{children:String.raw`x`})," tempo."]}),`
`]}),e.jsx(i.p,{children:"Inoltre, se ti serve, avrai la possibilità di annotarti un valore a tua scelta su ogni piattaforma, che verrà anche mostrato nella figura, con questi blocchi:"}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`valore pedana alta i`,inline:!0,lang:"text",className:"p-0 text-base"}),": il valore scritto sulla pedana alta ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`valore pedana bassa i`,inline:!0,lang:"text",className:"p-0 text-base"}),": il valore scritto sulla pedana bassa ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`imposta valore pedana alta i a x`,inline:!0,lang:"text",className:"p-0 text-base"}),": scrivi sulla pedana alta ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima"]})," il valore ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`x`}),"."]})]}),`
`,e.jsxs(i.li,{children:[e.jsx(a,{code:String.raw`imposta valore pedana bassa i a x`,inline:!0,lang:"text",className:"p-0 text-base"}),": scrivi sulla pedana bassa ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`i`}),"-esima"]})," il valore ",e.jsxs(i.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(n,{children:String.raw`x`}),"."]})]}),`
`]}),e.jsx(i.p,{children:e.jsxs(i.em,{children:[e.jsx(i.strong,{children:"Attenzione:"})," non ti viene richiesto di ricostruire i salti da fare, basta che calcoli il tempo necessario!"]})}),e.jsx(i.p,{children:e.jsxs(i.em,{children:[e.jsx(i.strong,{children:"Avvertimento:"})," incastrare un blocco grosso in un altro blocco può non essere semplice. Cerca di mettere la ",e.jsx(i.strong,{children:"punta sinistra"})," del blocco grosso nello spazio in cui vuoi inserirlo, per non avere difficoltà!"]})}),e.jsx(t,{customBlocks:N0,initialBlocks:w0,testcases:y0,debug:{logBlocks:!1,logJs:!1,logVariables:!1},visualizer:k0}),e.jsxs(r,{children:[e.jsx(i.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(i.p,{children:e.jsx(p,{alt:"soluzione",src:typeof A=="function"?A(_variant):A})}),e.jsxs(i.p,{children:["In questo programma, segnamo come valore su ciascuna pedana il ",e.jsx(i.strong,{children:"tempo minimo per raggiungerla"}),`.
Per le pedane sul primo ostacolo, il tempo per raggiungerle è pari alla loro altezza.
Per ogni pedana successiva (alta o bassa), il tempo minimo per raggiungerla è pari al minimo tra due cose:`]}),e.jsxs(i.ul,{children:[`
`,e.jsx(i.li,{children:"se decidiamo di arrivarci dalla pedana alta precedente, allora è pari al tempo minimo (valore) della pedana alta precedente, più la differenza assoluta tra la pedana che stiamo considerando e la pedana alta precedente;"}),`
`,e.jsx(i.li,{children:"se decidiamo di arrivarci dalla pedana bassa precedente, allora si può calcolare analogamente ma considerando il valore e la differenza assoluta con la pedana bassa precedente."}),`
`]}),e.jsx(i.p,{children:`Una volta scritti tutti questi valori, il migliore tempo per chiudere il livello sarà il minore
tra il tempo minimo (valore) per raggiungere l’ultima pedana alta, e il tempo minimo (valore)
per raggiungere l’ultima pedana bassa.`})]})]})}function z0(l={}){const{wrapper:i}={...D(),...l.components};return i?e.jsx(i,{...l,children:e.jsx(V,{...l})}):V(l)}function f(l,i){throw new Error("Expected component `"+l+"` to be defined: you likely forgot to import, pass, or provide it.")}function O(){return{...b(),S1SaltaGratis:n0,S2SaltaCaro:u0,S4InvestiTutto:v0,S4Superbunny:z0}}function $(l){const{Contest:i,Problem:t,S1SaltaGratis:a,S2SaltaCaro:n,Section:r}={...O(),...l.components};return i||v("Contest"),t||v("Problem"),a||v("S1SaltaGratis"),n||v("S2SaltaCaro"),r||v("Section"),e.jsx(i,{children:e.jsxs(r,{children:[e.jsx(t,{points:[5,0,0],id:1,children:e.jsx(a,{})}),e.jsx(t,{points:[5,0,0],id:2,children:e.jsx(n,{})})]})})}function _0(l={}){const{wrapper:i}={...O(),...l.components};return i?e.jsx(i,{...l,children:e.jsx($,{...l})}):$(l)}function v(l,i){throw new Error("Expected component `"+l+"` to be defined: you likely forgot to import, pass, or provide it.")}function X(){return{...b()}}function M(l){const i={em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",...X(),...l.components};return e.jsxs(e.Fragment,{children:[e.jsx(i.h1,{children:"Corso di Programmazione a Blocchi"}),`
`,e.jsx(i.h2,{children:"Lezione 6 - Programmazione Dinamica"}),`
`,e.jsx(i.p,{children:"Bentornato nel corso di programmazione a blocchi per la preparazione ai Giochi di Fibonacci!"}),`
`,e.jsxs(i.p,{children:[`Questa è la sesta lezione, nella quale non introdurremo blocchi nuovi. Invece, vedremo alcuni esempi
della strategia risolutiva nota come `,e.jsx(i.em,{children:"programmazione dinamica"}),`. Come per le soluzioni greedy, anche
in questo caso dovremo affrontare una serie di scelte. Nei problemi che vedremo questa volta, però,
non potremo fare le scelte senza considerare le conseguenze: dovremo quindi andare a salvarci dei
risultati intermedi di parti del problema, ed utilizzarli per guidare le nostre scelte.`]}),`
`,e.jsxs(i.p,{children:[`Se non l’avessi ancora fatto, ti invitiamo a completare le lezioni precedenti prima di iniziare questa (anche se pensi di conoscere già quegli argomenti!).
`,e.jsx(i.strong,{children:"Attenzione: anche questa lezione è un po’ più lunga delle prime quattro!"})]}),`
`,e.jsx(i.h2,{children:"Punteggio e struttura delle lezioni"}),`
`,e.jsxs(i.p,{children:["Le lezioni di questo corso contengono alcuni problemi di programmazione a blocchi, da risolvere in al massimo ",e.jsx(i.em,{children:"4 giorni"}),". Appena avrai finito di lavorarci, potrai cliccare su “Termina” per vedere subito un riepilogo del punteggio che hai ottenuto, e le soluzioni spiegate di tutti i problemi! Se anche non lo farai, la lezione verrà terminata automaticamente dopo 4 giorni. Potrai comunque ricominciare la lezione quante volte vuoi, cliccando sul tasto “Ricomincia” (freccia curva che torna indietro)."]}),`
`,e.jsxs(i.p,{children:["I problemi richiedono di scrivere un ",e.jsx(i.strong,{children:"singolo"})," programma a blocchi, che viene valutato ",e.jsx(i.strong,{children:"contemporaneamente"}),` su più livelli.
Quindi attenzione che non puoi scrivere programmi diversi per i diversi livelli, ma uno solo!
Per ciascun livello correttamente risolto di ciascun problema, otterrai `,e.jsx(i.em,{children:"5 punti"}),"."]}),`
`,e.jsxs(i.p,{children:["Quando termini la lezione, ti consigliamo di ",e.jsx(i.strong,{children:"leggere tutte le soluzioni spiegate"}),`, anche dei problemi che avevi
già risolto correttamente: potresti scoprire modi diversi di risolvere quegli stessi problemi, e dei suggerimenti
che ti potrebbero tornare utili per altri problemi simili che troverai in futuro!`]})]})}function A0(l={}){const{wrapper:i}={...X(),...l.components};return i?e.jsx(i,{...l,children:e.jsx(M,{...l})}):M(l)}const C0={title:"Corso di Programmazione",description:"Corso di Programmazione a Blocchi per i Giochi di Fibonacci"};function I0(){return e.jsxs(J,{contestLongName:"",contestName:"Corso di Programmazione",duration:5760,children:[e.jsx(A0,{}),e.jsx(_0,{})]})}export{I0 as default,C0 as metadata};
//# sourceMappingURL=76fc2df8-page.js.map
