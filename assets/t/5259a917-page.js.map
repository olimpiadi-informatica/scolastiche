{"version":3,"file":"5259a917-page.js","sources":["../../../../src/fibonacci-primarie/2024-seconda-fase/contest/s-2-spesa/visualizer.jsx","../../../../src/fibonacci-primarie/2024-seconda-fase/contest/s-2-spesa/question.mdx","../../../../src/fibonacci-primarie/2024-seconda-fase/contest/contest.mdx","../../../../src/fibonacci-primarie/2024-seconda-fase/header.md","../../../../src/fibonacci-primarie/2024-seconda-fase/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { range } from \"lodash-es\";\n\nimport { Canvas, Sprite, Variables } from \"~/utils/visualizer\";\n\nimport adulto from \"./asy/adulto.asy?w=80\";\nimport bambino from \"./asy/bambino.asy?w=70\";\nimport bunny from \"./asy/bunny.asy?w=80\";\nimport carrot from \"./asy/carrot.asy?w=35\";\n\nexport default function Visualizer({ variables, state }) {\n  let nc = 0;\n  return (\n    <>\n      <Canvas gravity=\"bottom\" scale={10}>\n        {range(state.N).flatMap((i) => (\n          <Sprite\n            key={i}\n            src={state.queue[i] === 2 ? adulto : bambino}\n            alt={state.queue[i] === 2 ? \"adulto\" : \"bambino\"}\n            x={i >= state.pos ? 30 + (i - state.pos) * 9 : 17 + (i - state.pos) * 6}\n            y={4.8}\n          />\n        ))}\n        {range(state.N).flatMap((i) => {\n          return range(state.wealth[i]).map((j) => (\n            <Sprite\n              key={nc++}\n              src={carrot}\n              alt=\"carota\"\n              x={18.5 + state.wealth[i] / 2 + (i - state.pos) * 6 - j * 0.7}\n              y={5 + state.wealth[i] + j * 0.4}\n            />\n          ));\n        })}\n        <Sprite src={bunny} alt=\"Carol\" x={20} y={0} follow />\n        {range(state.carrots).map((i) => {\n          const x = 25 + i * 1.5;\n          const y = 0;\n          return <Sprite key={nc++} src={carrot} alt=\"Carota\" x={x} y={y} />;\n        })}\n      </Canvas>\n      <Variables\n        variables={{\n          ...variables,\n          \"N (num. stanze)\": state.N,\n          \"K (dim. pacco)\": state.K,\n          \"euro spesi\": state.cost,\n        }}\n      />\n    </>\n  );\n}\n","import initialBlocks from \"./initial-blocks.json\";\nimport customBlocks from \"./s2.blocks.yaml\";\nimport testcases from \"./testcases.py\";\nimport Visualizer from \"./visualizer.jsx\";\n\nCarol è stata incaricata di distribuire carote ai suoi $N$ amici di fattoria.\nI conigli, sia adulti che bambini, si sono quindi messi in fila e Carol deve dare 2 carote ad ogni adulto e una carota ad ogni bambino.\nPer soddisfare le richieste di tutti, Carol può comprare dei pacchi da $K$ carote al costo di 1 euro.\nHai a disposizione questi blocchi:\n\n- `N`: il numero di amici di Carol.\n- `K`: il numero di carote in un pacco.\n- `coniglio adulto`: vero se il prossimo coniglio in fila è adulto.\n- `dai` $x$ `carote`: consegna $x$ carote al prossimo coniglio in fila.\n- `compra pacco di carote`: acquista un pacco di $K$ carote, al prezzo di 1 euro.\n- `carote rimaste`: quante carote sono rimaste al momento a Carol.\n- `termina`: smetti di consegnare carote.\n\nAiuta Carol a distribuire le carote a tutti come previsto, spendendo meno possibile! \n\n<Blockly\n  customBlocks={customBlocks}\n  initialBlocks={initialBlocks}\n  testcases={testcases}\n  visualizer={Visualizer}\n/>\n\n> Un possibile programma corretto è il seguente:\n>\n> ![soluzione](code.png)\n>\n> Secondo questo programma, per ognuno degli $N$ amici in fila, il protagonista innanzitutto\n> controlla se il prossimo coniglio è adulto. In caso affermativo, prima di dargli le due carote\n> che gli spettano verifica di averne abbastanza, e se non fosse così ne compra un nuovo pacco.\n>\n> Se invece il prossimo coniglio è un bambino, anche in quel caso prima di dargli la carota che\n> gli spetta controlla di averne almeno una, comprando un nuovo pacco se non fosse così.\n>\n> ![primarie](primarie.asy)\n","<Contest>\n\n## Sezione 1: procedimenti procedurali\n\n<Section>\n  <Problem points={[5, 1, 0]}><P1SaltoOstacoli /></Problem>\n  <Problem points={[5, 1, 0]}><P2Spiedino /></Problem>\n</Section>\n\n## Sezione 2: programmazione\n\n<Section>\n  <Problem points={[5, 0, 0]}><S1Pranzo /></Problem>\n  <Problem points={[5, 0, 0]}><S2Spesa /></Problem>\n  <Problem points={[5, 0, 0]}><S3Corridoio /></Problem>\n</Section>\n\n</Contest>\n","# Giochi di Fibonacci 2024/2025\n\n## Fase II - Scuole primarie\n\nQuesta prova contiene _5 problemi_ da risolvere in _120 minuti_, ed è divisa in due parti:\n- due problemi di interpretazione di **procedimenti procedurali** come programmi a blocchi, e\n- tre problemi di **programmazione** tramite blocchi.\n\nIn entrambe le parti i problemi sono ordinati per difficoltà crescente.\n**Attento che la difficoltà è soggettiva!** Se stai passando tanto tempo cercando di risolvere un problema, prova a passare ad altri problemi e altre categorie!\n\n## Punteggio\n\n### Procedimenti procedurali\n\nQuesti problemi comprendono _due domande_, valutate separatamente.\nLa prima domanda è **sempre più semplice**, e può aiutare a rispondere alla seconda domanda.\nLe domande sono tutte a **scelta multipla** con 5 opzioni, di cui **solo una** è corretta. Il punteggio che puoi ottenere è:\n\n- 5 punti per una risposta _corretta_;\n- 1 punto per una risposta _non data_;\n- 0 punti per una risposta _sbagliata_.\n\n### Programmazione a blocchi\n\nQuesti problemi richiedono di scrivere un **singolo** programma a blocchi, che viene valutato **contemporaneamente** su quattro diversi livelli.\nQuindi attenzione che non puoi scrivere programmi diversi per i diversi livelli, ma uno solo!\nPer ciascun problema e per ciascun livello, Il punteggio che puoi ottenere è:\n\n- 5 punti se il programma produce la risposta _corretta_;\n- 0 punti se il programma produce una risposta _sbagliata_.\n\nQuindi ogni domanda a blocchi può valere fino a 20 punti in totale.\n","import { NoAuth } from \"@olinfo/quizms/student\";\n\nimport Statement from \"./contest/contest.mdx\";\nimport Header from \"./header.md\";\n\nexport const metadata = {\n  title: \"Giochi di Fibonacci\",\n  description: \"Seconda fase dei Giochi di Fibonacci 2024/2025 per le scuole primarie\",\n};\n\nexport default function App() {\n  return (\n    <NoAuth contestLongName=\"\" contestName=\"Giochi di Fibonacci\" duration={120}>\n      <Header />\n      <Statement />\n    </NoAuth>\n  );\n}\n"],"names":["Visualizer","variables","state","nc","jsxs","Fragment","Canvas","range","i","jsx","Sprite","adulto","bambino","j","carrot","bunny","x","Variables","_jsx","Equation","Code","customBlocks","initialBlocks","testcases","_components","metadata","App","NoAuth","Header","Statement"],"mappings":"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"}