/*! For licenses information, see LICENSES.txt */
"use client";import{j as e}from"../_virtual_quizms-routes-7d6c0179.js";import{P as g,I as C}from"../u/ea1a4564-components.js";import{a as _,M as q,b as z,c as I}from"../o/45f1a876-question.js";import{C as M,r as d,S as u,V as P}from"../i/cee682e3-visualizer.js";function w(){return{...g()}}const h={src:new URL("../1/1f1a87bb-code.webp",import.meta.url).href,width:774,height:1052},x={src:new URL("../9/9a8429e8-primarie.svg",import.meta.url).href,width:305,height:251},U=JSON.parse('{"blocks":{"languageVersion":0,"blocks":[{"type":"start","id":"y=zq)Uya2A/{vyOtN[i6","x":61,"y":81}]},"variables":[{"name":"salto","id":"aL]BB^jjqL!cyI]38IpA"}]}'),L=JSON.parse(`[{"type":"start","message0":"inizia qui","inputsInline":true,"colour":20,"tooltip":"L'esecuzione inizia da qui","helpUrl":"","maxInstances":1,"js":"","nextStatement":null},{"type":"N","message0":"N","inputsInline":true,"colour":20,"tooltip":"numero di conigli in fila","helpUrl":"","js":["state.N",1.2],"output":"Number"},{"type":"K","message0":"K","inputsInline":true,"colour":20,"tooltip":"numero di carote in ogni pacco","helpUrl":"","js":["state.K",1.2],"output":"Number"},{"type":"coniglio adulto","message0":"coniglio adulto","inputsInline":true,"colour":20,"tooltip":"se il prossimo coniglio in fila è adulto","helpUrl":"","js":["state.queue[state.pos] === 2",9],"output":"Boolean"},{"type":"carote rimaste","message0":"carote rimaste","inputsInline":true,"colour":20,"tooltip":"quante carote sono rimaste al momento a Carol","helpUrl":"","js":["state.carrots",1.2],"output":"Number"},{"type":"dai carote","message0":"dai %1 carote","args0":[{"type":"input_value","check":"Number","min":["0",0],"integer":true,"name":"_ARG0"}],"inputsInline":true,"colour":20,"tooltip":"consegna carote al prossimo coniglio in fila","helpUrl":"","js":"(function(i) {\\n  if (state.pos >= state.N)\\n    exit(false, \\"non ci sono più conigli in fila\\");\\n  if (i > state.carrots)\\n    exit(false, \\"non hai \\" + i + \\" carote da dare\\");\\n  state.carrots -= i;\\n  state.wealth[state.pos] += i;\\n  state.pos++;\\n  if (state.queue[state.pos-1] !== i)\\n    exit(false, \\"hai dato \\" + i + \\" carote ma dovevi darne \\" + state.queue[state.pos-1]);\\n})(_ARG0);","nextStatement":null,"previousStatement":null},{"type":"compra pacco di carote","message0":"compra pacco di carote","inputsInline":true,"colour":20,"tooltip":"acquista un pacco di carote per 1 euro","helpUrl":"","js":"state.carrots += state.K;\\nstate.cost++;","nextStatement":null,"previousStatement":null},{"type":"termina","message0":"termina","inputsInline":true,"colour":20,"tooltip":"smetti di consegnare carote","helpUrl":"","js":"if (state.pos < state.N)\\n  exit(false, \\"non hai finito la fila\\");\\nif (state.cost > state.sol)\\n  exit(false, \\"potevi spendere meno soldi\\");\\nexit(true, \\"hai distribuito le carote bene, complimenti!\\");","previousStatement":null}]`),D=JSON.parse('[{"N":6,"K":2,"queue":[2,1,2,2,2,1],"wealth":[0,0,0,0,0,0],"sol":5,"pos":0,"carrots":0,"cost":0},{"N":10,"K":3,"queue":[1,1,1,1,1,1,1,1,1,1],"wealth":[0,0,0,0,0,0,0,0,0,0],"sol":4,"pos":0,"carrots":0,"cost":0},{"N":20,"K":5,"queue":[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"wealth":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":8,"pos":0,"carrots":0,"cost":0},{"N":40,"K":7,"queue":[1,2,1,2,2,1,2,1,2,2,1,1,2,1,1,2,1,2,1,2,2,1,1,1,2,2,1,2,2,2,2,2,2,2,2,1,2,1,2,1],"wealth":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"sol":9,"pos":0,"carrots":0,"cost":0}]'),K={src:new URL("../2/2231fde2-adulto.svg",import.meta.url).href,width:80,height:141.12359550561797},X={src:new URL("../8/846ec5d6-bambino.svg",import.meta.url).href,width:70,height:74.71910112359551},k={src:new URL("../d/d5b24aa0-bunny.svg",import.meta.url).href,width:80,height:141.12359550561797},f={src:new URL("../9/9c001779-carrot.svg",import.meta.url).href,width:35,height:35};function R({variables:n,state:i}){let a=0;return e.jsxs(e.Fragment,{children:[e.jsxs(M,{gravity:"bottom",scale:10,children:[d(i.N).flatMap(o=>e.jsx(u,{src:i.queue[o]===2?K:X,alt:i.queue[o]===2?"adulto":"bambino",x:o>=i.pos?30+(o-i.pos)*9:17+(o-i.pos)*6,y:4.8},o)),d(i.N).flatMap(o=>d(i.wealth[o]).map(t=>e.jsx(u,{src:f,alt:"carota",x:18.5+i.wealth[o]/2+(o-i.pos)*6-t*.7,y:5+i.wealth[o]+t*.4},a++))),e.jsx(u,{src:k,alt:"Carol",x:20,y:0,follow:!0}),d(i.carrots).map(o=>{const t=25+o*1.5;return e.jsx(u,{src:f,alt:"Carota",x:t,y:0},a++)})]}),e.jsx(P,{variables:{...n,"N (num. stanze)":i.N,"K (dim. pacco)":i.K,"euro spesi":i.cost}})]})}function b(n){const i={li:"li",p:"p",ul:"ul",...w(),...n.components},{Blockly:a,Code:o,Equation:t,Explanation:r,Image:l,SubProblem:p}=i;return a||c("Blockly"),o||c("Code"),t||c("Equation"),r||c("Explanation"),l||c("Image"),p||c("SubProblem"),e.jsxs(p,{children:[e.jsxs(i.p,{children:["Carol è stata incaricata di distribuire carote ai suoi ",e.jsx(t,{children:String.raw`N`}),` amici di fattoria.
I conigli, sia adulti che bambini, si sono quindi messi in fila e Carol deve dare 2 carote ad ogni adulto e una carota ad ogni bambino.
Per soddisfare le richieste di tutti, Carol può comprare dei pacchi da `,e.jsx(t,{children:String.raw`K`}),` carote al costo di 1 euro.
Hai a disposizione questi blocchi:`]}),e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:[e.jsx(o,{code:String.raw`N`,inline:!0,lang:"text",className:"p-0 text-base"}),": il numero di amici di Carol."]}),`
`,e.jsxs(i.li,{children:[e.jsx(o,{code:String.raw`K`,inline:!0,lang:"text",className:"p-0 text-base"}),": il numero di carote in un pacco."]}),`
`,e.jsxs(i.li,{children:[e.jsx(o,{code:String.raw`coniglio adulto`,inline:!0,lang:"text",className:"p-0 text-base"}),": vero se il prossimo coniglio in fila è adulto."]}),`
`,e.jsxs(i.li,{children:[e.jsx(o,{code:String.raw`dai`,inline:!0,lang:"text",className:"p-0 text-base"})," ",e.jsx(t,{children:String.raw`x`})," ",e.jsx(o,{code:String.raw`carote`,inline:!0,lang:"text",className:"p-0 text-base"}),": consegna ",e.jsx(t,{children:String.raw`x`})," carote al prossimo coniglio in fila."]}),`
`,e.jsxs(i.li,{children:[e.jsx(o,{code:String.raw`compra pacco di carote`,inline:!0,lang:"text",className:"p-0 text-base"}),": acquista un pacco di ",e.jsx(t,{children:String.raw`K`})," carote, al prezzo di 1 euro."]}),`
`,e.jsxs(i.li,{children:[e.jsx(o,{code:String.raw`carote rimaste`,inline:!0,lang:"text",className:"p-0 text-base"}),": quante carote sono rimaste al momento a Carol."]}),`
`,e.jsxs(i.li,{children:[e.jsx(o,{code:String.raw`termina`,inline:!0,lang:"text",className:"p-0 text-base"}),": smetti di consegnare carote."]}),`
`]}),e.jsx(i.p,{children:"Aiuta Carol a distribuire le carote a tutti come previsto, spendendo meno possibile!"}),e.jsx(a,{customBlocks:L,initialBlocks:U,testcases:D,visualizer:R}),e.jsxs(r,{children:[e.jsx(i.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(i.p,{children:e.jsx(l,{alt:"soluzione",src:typeof h=="function"?h(_variant):h})}),e.jsxs(i.p,{children:["Secondo questo programma, per ognuno degli ",e.jsx(t,{children:String.raw`N`}),` amici in fila, il protagonista innanzitutto
controlla se il prossimo coniglio è adulto. In caso affermativo, prima di dargli le due carote
che gli spettano verifica di averne abbastanza, e se non fosse così ne compra un nuovo pacco.`]}),e.jsx(i.p,{children:`Se invece il prossimo coniglio è un bambino, anche in quel caso prima di dargli la carota che
gli spetta controlla di averne almeno una, comprando un nuovo pacco se non fosse così.`}),e.jsx(i.p,{children:e.jsx(l,{alt:"primarie",src:typeof x=="function"?x(_variant):x})})]})]})}function $(n={}){const{wrapper:i}={...w(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(b,{...n})}):b(n)}function c(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function y(){return{...g(),P1SaltoOstacoli:I,P2Spiedino:z,S1Pranzo:q,S2Spesa:$,S3Corridoio:_}}function S(n){const i={h2:"h2",...y(),...n.components},{Contest:a,P1SaltoOstacoli:o,P2Spiedino:t,Problem:r,S1Pranzo:l,S2Spesa:p,S3Corridoio:j,Section:m}=i;return a||s("Contest"),o||s("P1SaltoOstacoli"),t||s("P2Spiedino"),r||s("Problem"),l||s("S1Pranzo"),p||s("S2Spesa"),j||s("S3Corridoio"),m||s("Section"),e.jsxs(a,{children:[e.jsx(i.h2,{children:"Sezione 1: procedimenti procedurali"}),e.jsxs(m,{children:[e.jsx(r,{points:[5,1,0],id:1,children:e.jsx(o,{})}),e.jsx(r,{points:[5,1,0],id:2,children:e.jsx(t,{})})]}),e.jsx(i.h2,{children:"Sezione 2: programmazione"}),e.jsxs(m,{children:[e.jsx(r,{points:[5,0,0],id:3,children:e.jsx(l,{})}),e.jsx(r,{points:[5,0,0],id:4,children:e.jsx(p,{})}),e.jsx(r,{points:[5,0,0],id:5,children:e.jsx(j,{})})]})]})}function B(n={}){const{wrapper:i}={...y(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(S,{...n})}):S(n)}function s(n,i){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}function N(){return{...g()}}function v(n){const i={em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...N(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsx(i.h1,{children:"Giochi di Fibonacci 2024/2025"}),`
`,e.jsx(i.h2,{children:"Fase II - Scuole primarie"}),`
`,e.jsxs(i.p,{children:["Questa prova contiene ",e.jsx(i.em,{children:"5 problemi"})," da risolvere in ",e.jsx(i.em,{children:"120 minuti"}),", ed è divisa in due parti:"]}),`
`,e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:["due problemi di interpretazione di ",e.jsx(i.strong,{children:"procedimenti procedurali"})," come programmi a blocchi, e"]}),`
`,e.jsxs(i.li,{children:["tre problemi di ",e.jsx(i.strong,{children:"programmazione"})," tramite blocchi."]}),`
`]}),`
`,e.jsxs(i.p,{children:[`In entrambe le parti i problemi sono ordinati per difficoltà crescente.
`,e.jsx(i.strong,{children:"Attento che la difficoltà è soggettiva!"})," Se stai passando tanto tempo cercando di risolvere un problema, prova a passare ad altri problemi e altre categorie!"]}),`
`,e.jsx(i.h2,{children:"Punteggio"}),`
`,e.jsx(i.h3,{children:"Procedimenti procedurali"}),`
`,e.jsxs(i.p,{children:["Questi problemi comprendono ",e.jsx(i.em,{children:"due domande"}),`, valutate separatamente.
La prima domanda è `,e.jsx(i.strong,{children:"sempre più semplice"}),`, e può aiutare a rispondere alla seconda domanda.
Le domande sono tutte a `,e.jsx(i.strong,{children:"scelta multipla"})," con 5 opzioni, di cui ",e.jsx(i.strong,{children:"solo una"})," è corretta. Il punteggio che puoi ottenere è:"]}),`
`,e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:["5 punti per una risposta ",e.jsx(i.em,{children:"corretta"}),";"]}),`
`,e.jsxs(i.li,{children:["1 punto per una risposta ",e.jsx(i.em,{children:"non data"}),";"]}),`
`,e.jsxs(i.li,{children:["0 punti per una risposta ",e.jsx(i.em,{children:"sbagliata"}),"."]}),`
`]}),`
`,e.jsx(i.h3,{children:"Programmazione a blocchi"}),`
`,e.jsxs(i.p,{children:["Questi problemi richiedono di scrivere un ",e.jsx(i.strong,{children:"singolo"})," programma a blocchi, che viene valutato ",e.jsx(i.strong,{children:"contemporaneamente"}),` su quattro diversi livelli.
Quindi attenzione che non puoi scrivere programmi diversi per i diversi livelli, ma uno solo!
Per ciascun problema e per ciascun livello, Il punteggio che puoi ottenere è:`]}),`
`,e.jsxs(i.ul,{children:[`
`,e.jsxs(i.li,{children:["5 punti se il programma produce la risposta ",e.jsx(i.em,{children:"corretta"}),";"]}),`
`,e.jsxs(i.li,{children:["0 punti se il programma produce una risposta ",e.jsx(i.em,{children:"sbagliata"}),"."]}),`
`]}),`
`,e.jsx(i.p,{children:"Quindi ogni domanda a blocchi può valere fino a 20 punti in totale."})]})}function E(n={}){const{wrapper:i}={...N(),...n.components};return i?e.jsx(i,{...n,children:e.jsx(v,{...n})}):v(n)}const Q={title:"Giochi di Fibonacci",description:"Seconda fase dei Giochi di Fibonacci 2024/2025 per le scuole primarie"};function V(){return e.jsxs(C,{contestLongName:"",contestName:"Giochi di Fibonacci",duration:120,children:[e.jsx(E,{}),e.jsx(B,{})]})}export{V as default,Q as metadata};
//# sourceMappingURL=df7a1d04-page.js.map
