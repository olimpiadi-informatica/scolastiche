{"version":3,"file":"83daac57-page.js","sources":["../../../../src/fibonacci-secondarie/2024-terza-fase/contest/s-1-salta-tutto/visualizer.jsx","../../../../src/fibonacci-secondarie/2024-terza-fase/contest/s-1-salta-tutto/question.mdx","../../../../src/fibonacci-secondarie/2024-terza-fase/contest/s-3-abbassa-tutto/visualizer.jsx","../../../../src/fibonacci-secondarie/2024-terza-fase/contest/s-3-abbassa-tutto/question.mdx","../../../../src/fibonacci-secondarie/2024-terza-fase/contest/s-2-spegni-tutto/visualizer.jsx","../../../../src/fibonacci-secondarie/2024-terza-fase/contest/s-2-spegni-tutto/question.mdx","../../../../src/fibonacci-secondarie/2024-terza-fase/contest/s-4-investi-tutto/visualizer.jsx","../../../../src/fibonacci-secondarie/2024-terza-fase/contest/s-4-investi-tutto/question.mdx","../../../../src/fibonacci-secondarie/2024-terza-fase/contest/contest.mdx","../../../../src/fibonacci-secondarie/2024-terza-fase/header.md","../../../../src/fibonacci-secondarie/2024-terza-fase/page.jsx"],"sourcesContent":["\"use client\";\n\nimport { range } from \"lodash-es\";\n\nimport { Canvas, Sprite, Variables } from \"~/utils/visualizer\";\n\nimport bunny from \"./asy/bunny.asy?w=66\";\nimport flag from \"./asy/flag.asy?w=80\";\nimport flatRock from \"./asy/flat_rock.asy?w=120\";\nimport rock from \"./asy/rock.asy?w=120\";\n\nexport default function Visualizer({ variables, state }) {\n  if (state.N > 50) {\n    return (\n      <div className=\"text-slate-800 p-4\">\n        La visualizzazione è disponibile solo per i primi 5 livelli.\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Canvas scale={130}>\n        {range(state.N + 2).map((i) => {\n          return (\n            <Sprite\n              key={i}\n              src={state.rocks[i] ? rock : flatRock}\n              alt={state.rocks[i] ? \"ostacolo\" : \"percorso\"}\n              x={i}\n              y={state.rocks[i] ? 0.9 : 1.5}\n            />\n          );\n        })}\n        <Sprite src={bunny} alt=\"Tip-Tap\" x={state.pos + 0.2} y={0.8 - state.flight} follow />\n        <Sprite src={flag} alt=\"Bandierina\" x={state.N - 0.6} y={0.9} />\n      </Canvas>\n      <Variables variables={{ ...variables }} />\n    </>\n  );\n}\n","import initialBlocks from \"./initial-blocks.json\";\nimport customBlocks from \"./s1.blocks.yaml\";\nimport testcases from \"./testcases.py\";\nimport Visualizer from \"./visualizer.jsx\";\n\nCarol si è iscritta ad una gara di corsa ad ostacoli!\nIl percorso si svolge su una sequenza di rocce, piatte o alte: si può stare solo sulle rocce piatte, mentre le rocce alte sono gli ostacoli.\nSe si avanza o atterra su una roccia alta si cade, perdendo la gara.\nLo scopo della gara è di raggiungere la bandierina finale.\nHai a disposizione questi blocchi:\n\n- `bandierina raggiunta`: vero se hai raggiunto la bandierina finale.\n- `ostacolo in vista`: vero se hai hai un ostacolo di fronte a te.\n- `avanza`: avanza alla roccia successiva.\n- `salta`: salta oltre alla prossima roccia, atterrando su quella dopo.\n- `termina`: finisci la gara.\n\nScrivi un programma che consenta ad Carol di completare la gara!\n\n<Blockly\n  customBlocks={customBlocks}\n  initialBlocks={initialBlocks}\n  testcases={testcases}\n  visualizer={Visualizer}\n/>\n\n> Un possibile programma corretto è il seguente:\n","\"use client\";\n\nimport clsx from \"clsx\";\nimport { range } from \"lodash-es\";\n\nimport { Canvas, Rectangle, Sprite, Variables } from \"~/utils/visualizer\";\n\nimport bunny from \"./asy/bunny.asy?w=60\";\nimport carrot from \"./asy/carrot.asy?w=40\";\nimport crate from \"./asy/crate.asy?w=50\";\n\nexport default function Visualizer({ variables, state }) {\n  const cellWidth = 50;\n  const cellHeight = 7;\n  const cellPadding = 1;\n\n  if (state.N > 7) {\n    return (\n      <div className=\"text-slate-800 p-4\">\n        La visualizzazione è disponibile solo per i primi 5 livelli.\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Canvas gravity=\"bottom\" scale={10}>\n        {range(state.N).map((i) => (\n          <Rectangle\n            color=\"transparent\"\n            width={cellWidth * 0.15}\n            height={cellHeight}\n            key={`rank${i}`}\n            x={-cellWidth * 0.05}\n            y={cellHeight * i}\n            className=\"!border-none flex items-center justify-end text-[40px]\">\n            {state.N - i}.\n          </Rectangle>\n        ))}\n        {range(state.N)\n          .reverse()\n          .map((i) => {\n            const rank = state.N - i - 1;\n            const delta = [\n              state.stress[rank] === 0 ? 0 : 10,\n              state.stress[rank] * cellHeight * 0.25,\n            ];\n            return (\n              <Rectangle\n                color=\"gray\"\n                width={cellWidth}\n                height={cellHeight}\n                key={`points${state.P[state.N - i - 1][1]}`}\n                x={cellWidth * 0.1 + delta[0]}\n                y={cellHeight * i + delta[1]}>\n                <Rectangle\n                  color=\"white\"\n                  width={cellWidth * 0.6 - cellPadding}\n                  height={cellHeight - 2 * cellPadding}\n                  x={cellPadding}\n                  y={cellPadding}\n                  className=\"flex items-center justify-start text-4xl\">\n                  {state.P[state.N - i - 1][2]}\n                </Rectangle>\n                <Rectangle\n                  color=\"white\"\n                  width={cellWidth * 0.4 - cellPadding}\n                  height={cellHeight - 2 * cellPadding}\n                  x={cellWidth * 0.6}\n                  y={cellPadding}\n                  className=\"flex items-center justify-end text-[40px]\">\n                  {state.P[state.N - i - 1][0]} pts\n                </Rectangle>\n              </Rectangle>\n            );\n          })}\n        {range(state.N).map((i) => (\n          <Sprite\n            src={crate}\n            alt=\"box\"\n            x={cellWidth * 1.15}\n            y={cellHeight * (i + 0.5) - 3}\n            key={`box${i}`}\n          />\n        ))}\n        {range(state.N).map((i) => (\n          <Rectangle\n            color=\"transparent\"\n            width={cellWidth * 0.12}\n            height={cellHeight}\n            key={`cost${i}`}\n            x={cellWidth * 1.24}\n            y={cellHeight * i}\n            className={clsx(\n              \"!border-none flex items-center justify-end text-3xl decoration-red-500\",\n              state.highlight && state.pos === state.N - i\n                ? \"underline text-red-500\"\n                : \"text-black\",\n            )}>\n            {state.C[state.N - i - 1]}\n          </Rectangle>\n        ))}\n        {range(state.N).map((i) => (\n          <Sprite\n            src={carrot}\n            alt=\"carota\"\n            x={cellWidth * 1.35}\n            y={cellHeight * (i + 0.5) - 2}\n            key={`carrot${i}`}\n          />\n        ))}\n        <Sprite src={bunny} alt=\"Carol\" x={73} y={(state.N - state.pos) * cellHeight} />\n      </Canvas>\n      <Variables\n        variables={{ ...variables, \"N (num. giocatori)\": state.N, \"carote spese\": state.count }}\n      />\n    </>\n  );\n}\n","import initialBlocks from \"./initial-blocks.json\";\nimport customBlocks from \"./s3.blocks.yaml\";\nimport testcases from \"./testcases.py\";\nimport Visualizer from \"./visualizer.jsx\";\n\nAllie Muschio ha deciso di iniziare a giocare a FarmCraft. Il gioco sembra abbastanza divertente, ma ha un piccolo problema:\nAllie è ancora ultima nella graduatoria globale con zero punti. Potrebbe allenarsi per alzare il suo punteggio, ma Allie ha un piano migliore!\n\nLa graduatoria di FarmCraft contiene $N$ giocatori, con il giocatore in posizione $i$-esima a punteggio $P_i$.\nNello store del gioco, Allie ha visto che c'è la possibilità di comprare $N$ diverse box speciali, numerate da $1$ a $N$, ciascuna con un\ndiverso costo di $C_i$ carote. Comprando la box $i$-esima, Allie potrà abbassare di $1$ punto il punteggio della persona che\n**in quel momento** sarà $i$-esima in graduatoria. Ogni box però può essere comprata un qualunque numero di volte.\nDato che Allie Muschio è la più facoltosa della fattoria, ha deciso di usare queste box\nper abbassare il punteggio di tutti gli altri a zero e diventare così prima in classifica!\nHai a disposizione questi blocchi:\n\n- `N`: il numero di giocatori di FarmCraft.\n- `punteggio del giocatore` $i$: il punteggio del giocatore che in questo momento è $i$-esimo in graduatoria.\n- `costo della box` $i$: costo in carote della box $i$-esima.\n- `compra box` $i$: paga la box $i$-esima e abbassa di $1$ il punteggio del giocatore che al momento è $i$-esimo.\n- `termina`: goditi la meritata vittoria.\n\nAiuta Allie ad azzerare il punteggio di tutti gli altri giocatori, spendendo meno possibile!\n\n<Blockly\n  customBlocks={customBlocks}\n  initialBlocks={initialBlocks}\n  testcases={testcases}\n  visualizer={Visualizer}\n/>\n\n> Un possibile programma corretto è il seguente:\n","\"use client\";\n\nimport clsx from \"clsx\";\nimport { range } from \"lodash-es\";\n\nimport { Canvas, Rectangle, Sprite, Variables } from \"~/utils/visualizer\";\n\nimport bulbOff from \"./asy/bulb-off.asy?w=30\";\nimport bulbOn from \"./asy/bulb-on.asy?w=30\";\nimport bunnyLeft from \"./asy/bunny-left.asy?w=66\";\nimport bunnyRight from \"./asy/bunny-right.asy?w=66\";\nimport switchMedOff from \"./asy/switch-med-off.asy?w=30\";\nimport switchMedOn from \"./asy/switch-med-on.asy?w=30\";\nimport switchOffOff from \"./asy/switch-off-off.asy?w=30\";\nimport switchOffOn from \"./asy/switch-off-on.asy?w=30\";\nimport switchOnOff from \"./asy/switch-on-off.asy?w=30\";\nimport switchOnOn from \"./asy/switch-on-on.asy?w=30\";\n\nexport default function Visualizer({ variables, state }) {\n  const height = 24;\n  const width = 18;\n  const grays = [\"#222\", \"#555\", \"#888\", \"#bbb\", \"#eee\"];\n  const switchOn = [switchOffOn, switchMedOn, switchOnOn];\n  const switchOff = [switchOffOff, switchMedOff, switchOnOff];\n\n  if (state.N > 30) {\n    return (\n      <div className=\"text-slate-800 p-4\">\n        La visualizzazione è disponibile solo per i primi 5 livelli.\n      </div>\n    );\n  }\n\n  function isOn(i) {\n    return i < 0 || i >= state.N ? 0 : state.light[i] * state.screwed[i];\n  }\n\n  return (\n    <>\n      <Canvas gravity=\"bottom\" scale={10}>\n        {range(state.N).map((i) => {\n          const light = 2 * isOn(i) + isOn(i - 1) + isOn(i + 1);\n          return (\n            <Rectangle\n              key={`rect${i}`}\n              color={grays[light]}\n              height={height}\n              width={width}\n              x={width * (i + 1)}\n              y={6}\n              className=\"!border-none\">\n              <div\n                className={clsx(\n                  \"absolute mt-1 size-full origin-bottom text-center text-2xl underline\",\n                  light >= 2 ? \"text-black decoration-black\" : \"text-white decoration-white\",\n                )}>\n                {i + 1}\n              </div>\n            </Rectangle>\n          );\n        })}\n        {range(state.N).map((i) => (\n          <Sprite\n            key={`bulb${i}`}\n            src={isOn(i) ? bulbOn : bulbOff}\n            alt=\"\"\n            x={width * (i + 1.5) - 1.5}\n            y={state.screwed[i] ? 20 : 4}\n            rotation={state.screwed[i] ? 0 : 0.32}\n          />\n        ))}\n        {range(state.N - 1).map((i) => {\n          const light = isOn(i) + isOn(i + 1);\n          return (\n            <Sprite\n              key={`switch${i}`}\n              src={state.switch[i] ? switchOn[light] : switchOff[light]}\n              alt=\"\"\n              x={width * (i + 2) - 1.5}\n              y={10}\n            />\n          );\n        })}\n        {range(state.N - 1).map((i) => {\n          const light = isOn(i) + isOn(i + 1);\n          return (\n            <Rectangle\n              key={`lbl${i}`}\n              height={1}\n              width={3}\n              x={width * (i + 2) - 1.5}\n              y={10}\n              className=\"!border-none\">\n              <div\n                className={clsx(\n                  \"absolute mt-1 size-full origin-bottom text-center text-2xl decoration-slate-900\",\n                  light > 1 ? \"text-black\" : \"text-white\",\n                )}>\n                {i + 1}\n              </div>\n            </Rectangle>\n          );\n        })}\n        <Sprite\n          key=\"bunny\"\n          src={state.dir === 1 ? bunnyRight : bunnyLeft}\n          alt=\"Bunny\"\n          x={width * (state.pos + 0.5 - state.dir * 0.2) - 3.5}\n          y={4}\n          follow\n        />\n      </Canvas>\n      <Variables\n        variables={{\n          ...variables,\n          \"N (num. lampadine)\": state.N,\n          \"azioni fatte\": state.count,\n        }}\n      />\n    </>\n  );\n}\n","import initialBlocks from \"./initial-blocks.json\";\nimport customBlocks from \"./s2.blocks.yaml\";\nimport testcases from \"./testcases.py\";\nimport Visualizer from \"./visualizer.jsx\";\n\nBunny ha superato la paura del buio, e deve spegnere tutte le $N$ lampadine nel lungo corridoio della fattoria prima di andare a dormire!\nTuttavia, la disposizione degli interruttori nel corridoio è un po' particolare: ce ne è uno in mezzo a ogni due lampadine vicine, collegato ad entrambe.\nIn particolare, gli interruttori numerati da $1$ a $N-1$ sono tali per cui l'$i$-esimo è collegato alle lampadine $i$-esima e $(i+1)$-esima.\nPremendo l'interruttore, entrambe le lampadine collegate si spegneranno se sono accese (o accenderanno se sono spente).\nQuesto rende un po' complicato spegnere tutto, quindi Bunny ha deciso non andare troppo per il sottile, e se serve svitare direttamente alcune lampadine.\nHai a disposizione questi blocchi:\n\n- `N`: il numero di lampadine.\n- `lampadina` $i$ `accesa`: vero se la lampadina $i$-esima è accesa.\n- `svita lampadina` $i$: svita l'$i$-esima lampadina, rendendola spenta (e non più accendibile dagli interruttori).\n- `premi l'interruttore` $i$: premi l'interruttore $i$-esimo, cambiando lo stato delle lampadine collegate (se non sono svitate).\n- `termina`: vai a dormire.\n\nBunny è molto stanco e vorrebbe finire il suo lavoro il prima possibile: porta il buio nel corridoio facendo meno azioni possibile!\nContano come azioni sia svitare una lampadina che premere un interruttore.\n\n<Blockly\n  customBlocks={customBlocks}\n  initialBlocks={initialBlocks}\n  testcases={testcases}\n  visualizer={Visualizer}\n/>\n\n> Un possibile programma corretto è il seguente.\n","\"use client\";\n\nimport { range } from \"lodash-es\";\nimport { Canvas, Rectangle, Sprite, Variables } from \"~/utils/visualizer\";\nimport arrow from \"./asy/arrow.asy?w=120\";\nimport bunny from \"./asy/bunny.asy?w=66\";\nimport carrot from \"./asy/carrot.asy?w=30\";\nimport certificate from \"./asy/certificate.asy?w=120\";\nimport flag from \"./asy/flag.asy?w=80\";\n\nexport default function Visualizer({ variables, state }) {\n  const step = 15;\n\n  if (state.N > 10) {\n    return (\n      <div className=\"text-slate-800 p-4\">\n        La visualizzazione è disponibile solo per i primi 5 livelli.\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Canvas gravity=\"bottom\" scale={10}>\n        <Sprite src={bunny} alt=\"Bunny\" x={step * (state.pos + 0.25) - 1} y={26} follow />\n        <Sprite src={flag} alt=\"fine\" x={step * (state.N + 0.8) - 1} y={27} />\n        {range(state.N).map((i) => (\n          <Sprite\n            src={certificate}\n            alt=\"titolo\"\n            x={step * i}\n            y={10 + (state.taken === i ? 5 : 0)}\n            key={`titolo${i}`}\n          />\n        ))}\n        {range(state.N).map((i) => (\n          <Rectangle\n            color=\"transparent\"\n            width={12}\n            height={3}\n            key={`day${i}`}\n            x={step * i + 0.5}\n            y={23 + (state.taken === i ? 5 : 0)}\n            className=\"!border-none flex items-center justify-start italic text-xl\">\n            {i === 0 ? \"Carrot\" : `Giorno ${i}`}\n          </Rectangle>\n        ))}\n        {range(state.N).map((i) => (\n          <Rectangle\n            color=\"transparent\"\n            width={7}\n            height={3}\n            key={`value${i}`}\n            x={step * i}\n            y={20 + (state.taken === i ? 5 : 0)}\n            className=\"!border-none flex items-center justify-end text-2xl\">\n            {state.V[i]}\n          </Rectangle>\n        ))}\n        {range(state.N).map((i) => (\n          <Sprite\n            src={carrot}\n            alt=\"carota\"\n            x={step * i + 6.8}\n            y={20.2 + (state.taken === i ? 5 : 0)}\n            key={`carota${i}`}\n          />\n        ))}\n        {range(state.N).map((i) => (\n          <Rectangle\n            color=\"transparent\"\n            width={7}\n            height={3}\n            key={`gain${i}`}\n            x={step * i + 1}\n            y={17 + (state.taken === i ? 5 : 0)}\n            className=\"!border-none flex items-center justify-end italic text-2xl\">\n            {`+${state.G[i]}`}\n          </Rectangle>\n        ))}\n        {range(state.N).map((i) => (\n          <Sprite\n            src={carrot}\n            alt=\"carota\"\n            x={step * i + 8}\n            y={17.2 + (state.taken === i ? 5 : 0)}\n            key={`+carota${i}`}\n          />\n        ))}\n        {range(state.N).map((i) => (\n          <Rectangle\n            color=\"transparent\"\n            width={10}\n            height={3}\n            key={`gain${i}`}\n            x={step * i + 1}\n            y={14 + (state.taken === i ? 5 : 0)}\n            className=\"flex items-center justify-start font-bold text-2xl\">\n            {state.pref[i]}\n          </Rectangle>\n        ))}\n        {range(state.N).map((i) => {\n          return (\n            <Sprite\n              src={arrow}\n              alt=\"freccia\"\n              x={step * i + 0.7 + (state.next[i] - i) * 7.3}\n              y={10 - 2 * (state.next[i] - i)}\n              scaleX={1.3 * (state.next[i] - i)}\n              scaleY={1.3 * (state.next[i] - i)}\n              key={`+freccia${i}`}\n            />\n          );\n        })}\n        {range(state.taken >= 0 ? 1 : 0).map(() => {\n          return (\n            <Sprite\n              src={carrot}\n              alt=\"carotacorrente\"\n              x={step * state.pos + (state.taken === state.pos ? 6.8 : 12.8)}\n              y={state.taken === state.pos ? 25.2 : 30.2}\n              key=\"carval\"\n            />\n          );\n        })}\n        {range(state.taken >= 0 ? 1 : 0).map(() => {\n          return (\n            <Rectangle\n              color=\"transparent\"\n              width={5}\n              height={3}\n              key=\"curval\"\n              x={step * state.pos + (state.taken === state.pos ? 2 : 8)}\n              y={state.taken === state.pos ? 25 : 30}\n              className=\"!border-none flex items-center justify-end font-bold text-[25px]\">\n              {state.curval}\n            </Rectangle>\n          );\n        })}\n      </Canvas>\n      <Variables\n        variables={{\n          ...variables,\n          \"N (num. giorni)\": state.N,\n        }}\n      />\n    </>\n  );\n}\n","import initialBlocks from \"./initial-blocks.json\";\nimport customBlocks from \"./s4.blocks.yaml\";\nimport testcases from \"./testcases.py\";\nimport Visualizer from \"./visualizer.jsx\";\n\nPer il suo compleanno, a Tip-Tap hanno regalato un titolo di investimento della **Carrot**. Il titolo oggi ha un valore $T_0$ carote,\nma il suo valore sale di $G_0$ carote ogni giorno, per cui tra $k$ giorni varrà $T_0 + k \\cdot G_0$. Il nostro amico allora ha deciso di darsi alla finanza!\n\nTuttavia, un solo intermediario accetta di fare affari con i conigli, e con delle condizioni molto restrittive. Ogni giorno,\nl'intermediario offre a Tip-Tap un singolo titolo: nel giorno $i$, un titolo che vale $T_i$ in quel giorno e il cui valore salirà di $G_i$\nin ogni successivo giorno. Se il titolo che Tip-Tap possiede quel giorno vale più di quello offerto dall'intermediario, Tip-Tap può decidere di scambiare il\ntitolo che ha con quello offerto, ma senza ricevere nessun resto in cambio.\n\nQuello che però l'intermediario non sa è che Tip-Tap è molto furbo, ed è riuscito a scoprire quali titoli offrirà l'intermediario per i prossimi $N$ giorni.\nUsa queste informazioni per assicurarti il massimo guadagno dopo $N$ giorni!\nHai a disposizione questi blocchi per ispezionare la situazione:\n\n- `N`: il numero di giorni.\n- `valore del titolo` $i$: il valore $T_i$ del titolo che viene proposto nel giorno $i$.\n- `guadagno del titolo` $i$: il guadagno $G_i$ che avrà il titolo $i$-esimo in ogni giorno successivo.\n- `valore del titolo` $i$ `al giorno` $d$: il valore $T_i$ del titolo che viene proposto nel giorno $i$, incrementato di $G_i$ al giorno fino al giorno $d$ ($T_i + (d-i) \\cdot G_i$).\n\nInoltre, hai a disposizione questi blocchi per annotarti informazioni di supporto:\n\n- `annota preferenza` $x$ `per il titolo` $i$: annota un numero $x$ a tua scelta sul titolo $i$-esimo.\n- `leggi preferenza per il titolo` $i$: leggi il numero che hai annotato sul titolo $i$-esimo.\n\nInfine, hai a disposizione questi blocchi per riportare un piano finanziario:\n\n- `prendi il titolo` $k$ `dopo il titolo` $i$: pianifica di prendere il titolo $k$ come prossimo titolo dopo $i$ (se prenderai il titolo $i$).\n- `non prendere altri titoli dopo` $i$: pianifica di tenere il titolo $i$ fino alla fine degli $N$ giorni (e questo è il piano iniziale per tutti i titoli).\n- `termina`: segui il piano che hai indicato con i blocchi fino alla fine degli $N$ giorni.\n\n**Attenzione:** è possibile cambiare idea più volte su quale titolo prendere dopo un certo titolo $i$ (e se prenderne o no), usando più volte i blocchi relativi.\nNota inoltre che il tuo piano può pianificare un _prossimo titolo_ anche per titoli che in realtà non verranno poi presi nell'esecuzione finale.\n\n<Blockly\n  customBlocks={customBlocks}\n  initialBlocks={initialBlocks}\n  testcases={testcases}\n  visualizer={Visualizer}\n/>\n\n> Un possibile programma che segue esattamente le istruzioni di Allie è il seguente:\n","<Contest>\n\n<Section>\n  <Problem points={[5, 0, 0]}><S1SaltaTutto /></Problem>\n  <Problem points={[5, 0, 0]}><S2SpegniTutto /></Problem>\n  <Problem points={[5, 0, 0]}><S3AbbassaTutto /></Problem>\n  <Problem points={[5, 0, 0]}><S4InvestiTutto /></Problem>\n</Section>\n\n</Contest>\n","# Giochi di Fibonacci 2024/2025\n\n## Fase finale - Scuole secondarie\n\nQuesta prova contiene _4 problemi_ di **programmazione** tramite blocchi da risolvere in _180 minuti_.\nI problemi sono ordinati per difficoltà crescente.\n**Attento che la difficoltà è soggettiva!** Se stai passando tanto tempo cercando di risolvere un problema, prova a passare ad altri problemi e altre categorie!\n\n## Punteggio\n\nI problemi richiedono di scrivere un **singolo** programma a blocchi, che viene valutato **contemporaneamente** su 10 diversi livelli.\nQuindi attenzione che non puoi scrivere programmi diversi per i diversi livelli, ma uno solo!\nPer ciascun problema e per ciascun livello, Il punteggio che puoi ottenere è:\n\n- 5 punti se il programma produce la risposta _corretta_;\n- 0 punti se il programma produce una risposta _sbagliata_.\n\nQuindi ogni domanda a blocchi può valere fino a 50 punti in totale.\n","import { NoAuth } from \"@olinfo/quizms/student\";\n\nimport Statement from \"./contest/contest.mdx\";\nimport Header from \"./header.md\";\n\nexport const metadata = {\n  title: \"Giochi di Fibonacci\",\n  description: \"Fase Finale dei Giochi di Fibonacci 2024/2025\",\n};\n\nexport default function App() {\n  return (\n    <NoAuth contestName=\"Giochi di Fibonacci\" duration={180}>\n      <Header />\n      <Statement />\n    </NoAuth>\n  );\n}\n"],"names":["Visualizer","variables","state","jsx","jsxs","Fragment","Canvas","range","i","Sprite","rock","flatRock","bunny","flag","Variables","customBlocks","initialBlocks","testcases","Rectangle","rank","delta","crate","clsx","carrot","_jsx","Equation","_jsxs","_components","grays","switchOn","switchOffOn","switchMedOn","switchOnOn","switchOff","switchOffOff","switchMedOff","switchOnOff","isOn","light","bulbOn","bulbOff","bunnyRight","bunnyLeft","Code","certificate","arrow","metadata","App","NoAuth","Header","Statement"],"mappings":"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"}