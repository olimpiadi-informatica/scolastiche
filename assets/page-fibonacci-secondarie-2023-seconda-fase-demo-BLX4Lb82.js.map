{"version":3,"file":"page-fibonacci-secondarie-2023-seconda-fase-demo-BLX4Lb82.js","sources":["../../src/fibonacci-secondarie/2023-seconda-fase-demo/contest/header.md","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/p-4-ciclo-lista/code.asy","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/p-4-ciclo-lista/fig1.asy?w=650","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/p-4-ciclo-lista/question.md","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/sol.png","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/testcases.py","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint1.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint10.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint11.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint2.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint3.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint4.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint5.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint6.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint7.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint8.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/paint9.asy?w=40","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/asy/bunny.asy?w=66","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/visualizer.jsx","../../src/fibonacci-primarie/2023-seconda-fase-demo/contest/s-4-muro/question.mdx","../../src/fibonacci-secondarie/2023-seconda-fase-demo/contest/contest.mdx","../../src/fibonacci-secondarie/2023-seconda-fase-demo/index.jsx"],"sourcesContent":["# Giochi di Fibonacci 2023/2024\n\n## Allenamento per la Fase II - Scuole secondarie\n\nQuesta prova contiene _6 domande_ da risolvere in _100 minuti_.\nLe domande sono a **scelta multipla** o a **blocchi**, e sono divise in due parti:\n\n- domande di interpretazione di **procedimenti procedurali** come programmi a blocchi, e\n- domande di **programmazione** tramite blocchi.\n\nIn entrambe le parti, le domande sono ordinate per difficoltà crescente.\n**Attento che la difficoltà è soggettiva!** Se stai passando tanto tempo cercando di risolvere una domanda, prova a passare ad altre domande e altre categorie!\n\n## Punteggio\n\nTutte le domande a _scelta multipla_ hanno 5 opzioni, di cui **solo una** è corretta. Il punteggio che puoi ottenere è:\n\n- 5 punti per una risposta _corretta_;\n- 1 punto per una risposta _non data_;\n- 0 punti per una risposta _sbagliata_.\n\nLe domande a _blocchi_ richiedono di scrivere un singolo programma a blocchi, che viene valutato su tre diversi livelli.\nPer ciascuna domanda e per ciascun livello, Il punteggio che puoi ottenere è:\n\n- 5 punti se il programma produce la risposta _corretta_;\n- 0 punti se il programma produce una risposta _sbagliata_.\n\nQuindi ogni domanda a blocchi può valere fino a 15 punti in totale.\n","import \"/scolastiche/src/asy_library/structures/layout.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_DNTJ1fCG,\n  width: \"1068.951\",\n  height: \"883.969\",\n};\nexport default image;","import \"/scolastiche/src/fibonacci-primarie/2023-seconda-fase-demo/contest/p-4-ciclo-lista/util.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_DpxgYfAx,\n  width: \"650\",\n  height: \"298.8255033557047\",\n};\nexport default image;","Considera questo procedimento, che si riferisce ad un **lista** di numeri $A$, di dimensione rappresentata dalla **variabile** numerica $N$, e con l'ausilio della **variabile** numerica $P$.\n\n![code](code.asy)\n\nIl procedimento viene eseguito tre volte, sempre con $N$ pari a $9$ e con i tre seguenti valori per la lista $A$:\n\n![array](fig1.asy?w=650)\n\nPer quali di questi valori di $A$ il procedimento stampa _\"trovato\"_?\n\n- [x] Solo il valore 1.\n- [ ] Solo il valore 2.\n- [ ] Solo il valore 3.\n- [ ] Tutti.\n- [ ] Solo i valori 1 e 3.\n\n> Il procedimento scandisce la lista di numeri dall'inizio, andando a cercare una posizione che contiene uno zero seguito da un uno: se la trova stampa _\"trovato\"_, altrimenti non stampa nulla.\n>\n> Nel primo caso il procedimento stampa _\"trovato\"_, infatti quando $P$ è uguale a $2$ il valore in posizione $P$ di $A$ è $0$ e il valore in posizione $P+1$ è $1$.\n>\n> Nel secondo e nel terzo caso invece il procedimento non stampa nulla, dato che non esiste nessun valore di $P$ tale che la posizione $P$ di $A$ sia uguale a $0$ e la posizione $P+1$ di $A$ sia uguale a $1$.\n","\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_du2Uj4gj,\n  width: \"1128\",\n  height: \"772\",\n};\nexport default image;","const module = [{\"L\":[4,1,4,3,3],\"N\":5,\"C\":5,\"i\":0,\"pos\":0,\"muro\":[0,0,0,0,0],\"sol\":3},{\"L\":[4,3,2,5,3,2,3,2],\"N\":9,\"C\":8,\"i\":0,\"pos\":0,\"muro\":[0,0,0,0,0,0,0,0,0],\"sol\":8},{\"L\":[6,6,11,4,8,9,1,13,9,1,12],\"N\":15,\"C\":11,\"i\":0,\"pos\":0,\"muro\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"sol\":4}];\nexport default module;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_CXo0XsZ_,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_CheJW1Sj,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_CKa5i9M6,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_By2NEHp5,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_D_8Ix_Z4,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_Zx3fa3Bz,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_D6nezCwF,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_BnzJ2_4m,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_BhOcjlKR,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_AoACKHOt,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/paint_bucket.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_BGnr00Sy,\n  width: \"40\",\n  height: \"55.862251803479985\",\n};\nexport default image;","import \"/scolastiche/src/asy_library/pictures/bunny_polychrome.asy?url\";\nconst image = {\n  src: import.meta.ROLLUP_FILE_URL_yKRByK_I,\n  width: \"66\",\n  height: \"117.16092318853724\",\n};\nexport default image;","import React, { Fragment } from \"react\";\nimport { range } from \"lodash-es\";\n\nimport { Canvas, Rectangle, Sprite, Variables } from \"~/utils/visualizer\";\n\nimport bunny from \"./asy/bunny.asy?w=66\";\n\nconst paints = import.meta.glob(\"./asy/paint*.asy\", {\n  eager: true,\n  import: \"default\",\n  query: { w: 40 },\n});\n\nexport default function Visualizer({ variables }) {\n  const { blocklyVariables, hiddenState } = variables;\n  if (!hiddenState) return;\n\n  const colors = [\n    \"#ffffff\",\n    \"#0000ff\",\n    \"#ff0000\",\n    \"#00ff00\",\n    \"#ff00ff\",\n    \"#ffff00\",\n    \"#00ffff\",\n    \"#7f7f7f\",\n    \"#7f0000\",\n    \"#007f00\",\n    \"#7f7f00\",\n    \"#000000\",\n  ];\n\n  return (\n    <>\n      <Canvas scale={40}>\n        {range(hiddenState.N).map((i) => (\n          <Rectangle\n            key={i}\n            color={colors[hiddenState.muro[i]]}\n            width={1}\n            height={4}\n            x={i + 2}\n            y={0}\n          />\n        ))}\n        <Sprite src={bunny} alt=\"Bunny\" x={1 + hiddenState.pos} y={1.4} />\n        <Sprite\n          src={paints[`./asy/paint${Math.min(hiddenState.i + 1, hiddenState.C)}.asy`]}\n          alt=\"Vernice\"\n          x={0}\n          y={3}\n        />\n      </Canvas>\n      <Variables variables={{ colori: hiddenState.C, ...blocklyVariables }} />\n    </>\n  );\n}\n","import initialBlocks from \"./initialBlocks.json\";\nimport customBlocks from \"./customBlocks.yaml\";\nimport testcases from \"./testcases.py\";\nimport Visualizer from \"./visualizer.jsx\";\n\nBunny ha comprato $C$ colori diversi per dipingere il muro della fattoria, che è composto\nda $N$ pannelli verticali. L'obiettivo di Bunny è di dipingere il muro in zone rettangolari\nche seguono i pannelli con la supervisione di Carol, l'artista della fattoria.\n\nBunny utilizzerà un colore alla volta nell'ordine che gli viene dato da Carol. Inoltre, Carol\nsa quali colori sono i più belli, e quindi vuole che il colore $i$-esimo sia utilizzato per\ndipingere un rettangolo largo $L_i$ pannelli.\n\nBunny è però libero di scegliere dove posizionare ogni rettangolo nel muro, e cioè da quale\npannello cominciare a dipingere, a patto di non dipingere oltre i bordi del muro.\nAttenzione che Bunny può anche dipingere sopra i vecchi colori!\n\nA Bunny piacciono le pareti colorate, e quindi vorrebbe che alla fine del lavoro rimangano\nvisibili sul muro più colori possibile (senza considerare il bianco iniziale del muro).\nAiutalo a raggiungere il suo scopo, rispettando però le indicazioni di Carol!\n\nBunny può fare le seguenti azioni:\n\n- `pannelli da pitturare`: quanti pannelli $L_i$ sono da pitturare con il colore corrente $i$ secondo Carol.\n- `colora dalla posizione p`: usa il colore corrente $i$ per pitturare completamente $L_i$\n  pannelli, a partire dal pannello $p$-esimo in poi, poi passa al prossimo colore. Attenzione che devono esistere almeno $L_i$\n  pannelli nel muro a partire dal $p$-esimo!\n- `metti via i pennelli`: finisce di pitturare e termina il programma.\n\nAiuta Bunny a pitturare di modo da lasciare più colori possibile alla fine del lavoro!\n\n<Blockly\n  customBlocks={customBlocks}\n  initialBlocks={initialBlocks}\n  testcases={testcases}\n  debug={{ logBlocks: false, logJs: false, logVariables: false }}\n  Visualizer={Visualizer}\n/>\n\n> Un possibile programma corretto è il seguente:\n>\n> ![soluzione](sol.png)\n>\n> In questo programma, Bunny per avere più colori possibile sfrutta un'idea: far sì che tutti i colori dall'inizio\n> fino alla sua posizione siano tutti diversi. Per ogni colore, prova quindi ad iniziare a colorare dalla posizione\n> **pos** che è subito dopo alla posizione da cui ha colorato precedentemente, incrementando quindi **pos** di $1$\n> _(all'inizio, parte a colorare dalla prima posizione)_. Tuttavia, potrebbe essere che Carol gli chieda di pitturare\n> più pannelli di quelli che sono disponibili dalla posizione **pos** in avanti: questo succede se **pos** sommato ai\n> pannelli da pitturare supera $N+1$. In questo caso, Bunny è costretto a cancellare alcuni dei colori che ha già\n> usato: torna quindi indietro il meno possibile, finché non ha abbastanza spazio per pitturare il numero di pannelli\n> che gli è stato richiesto. Dopo aver ripetuto questo procedimento per tutti i colori, Bunny può mettere via i pennelli.\n","import { P2Condizioni, P3Mediana, P4CicloLista } from \"problemset\";\nimport { S2AlzaTorre, S3GiraRuota, S4Muro } from \"problemset\";\n\n<Contest>\n\n## Sezione 1: procedimenti procedurali\n\n<Section>\n  <Problem points={[5, 1, 0]} statement={P2Condizioni} />\n  <Problem points={[5, 1, 0]} statement={P3Mediana} />\n  <Problem points={[5, 1, 0]} statement={P4CicloLista} />\n</Section>\n\n## Sezione 2: programmazione\n\n<Section>\n  <Problem points={[5, 0, 0]} statement={S2AlzaTorre} />\n  <Problem points={[5, 0, 0]} statement={S3GiraRuota} />\n  <Problem points={[5, 0, 0]} statement={S4Muro} />\n</Section>\n\n</Contest>\n","import { OlinfoAuth } from \"~/utils/olinfo-auth\";\n\nimport Header from \"./contest/header.md\";\nimport Statement from \"./contest/contest.mdx\";\n\nimport \"~/index.css\";\n\nexport const title = \"Giochi di Fibonacci 2023/2024 - Demo Fase II - Scuole secondarie\";\nexport const description = \"Prova di allenamento per la seconda fase dei Giochi di Fibonacci 2023/2024 per le scuole secondarie\";\n\nexport function App() {\n  return (\n    <OlinfoAuth questionCount={16} duration={90}>\n      <Header />\n      <Statement />\n    </OlinfoAuth>\n  );\n}\n"],"names":["_jsx","_components","image","_jsxs","MathExpr","module","paints","__vite_glob_0_0","__vite_glob_0_1","__vite_glob_0_2","__vite_glob_0_3","__vite_glob_0_4","__vite_glob_0_5","__vite_glob_0_6","__vite_glob_0_7","__vite_glob_0_8","__vite_glob_0_9","__vite_glob_0_10","Visualizer","variables","blocklyVariables","hiddenState","colors","_Fragment","Canvas","scale","range","N","map","i","Rectangle","color","muro","width","height","x","y","Sprite","src","bunny","alt","pos","Math","min","C","Variables","colori","children","span","customBlocks","initialBlocks","testcases","logBlocks","logJs","logVariables","strong","em","points","P2Condizioni","P3Mediana","P4CicloLista","S2AlzaTorre","S3GiraRuota","S4Muro","title","App","OlinfoAuth","questionCount","duration","Header","Statement"],"mappings":"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"}