{"version":3,"file":"f5b17027-pug.js","sources":["../../../node_modules/shiki/dist/langs/pug.mjs"],"sourcesContent":["import javascript from './javascript.mjs';\nimport css from './css.mjs';\nimport sass from './sass.mjs';\nimport scss from './scss.mjs';\nimport stylus from './stylus.mjs';\nimport coffee from './coffee.mjs';\nimport html from './html.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Pug\", \"name\": \"pug\", \"patterns\": [{ \"comment\": \"Doctype declaration.\", \"match\": \"^(!!!|doctype)(\\\\s*[a-zA-Z0-9-_]+)?\", \"name\": \"meta.tag.sgml.doctype.html\" }, { \"begin\": \"^(\\\\s*)//-\", \"comment\": \"Unbuffered (pug-only) comments.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"comment.unbuffered.block.pug\" }, { \"begin\": \"^(\\\\s*)//\", \"comment\": \"Buffered (html) comments.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"string.comment.buffered.block.pug\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"invalid.illegal.comment.comment.block.pug\" } }, \"comment\": \"Buffered comments inside buffered comments will generate invalid html.\", \"match\": \"^\\\\s*(//)(?!-)\", \"name\": \"string.comment.buffered.block.pug\" }] }, { \"begin\": \"<!--\", \"end\": \"--\\\\s*>\", \"name\": \"comment.unbuffered.block.pug\", \"patterns\": [{ \"match\": \"--\", \"name\": \"invalid.illegal.comment.comment.block.pug\" }] }, { \"begin\": \"^(\\\\s*)-$\", \"comment\": \"Unbuffered code block.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.js\", \"patterns\": [{ \"include\": \"source.js\" }] }, { \"begin\": \"^(\\\\s*)(script)((\\\\.$)|(?=[^\\\\n]*((text|application)/javascript|module).*\\\\.$))\", \"beginCaptures\": { \"2\": { \"name\": \"entity.name.tag.pug\" } }, \"comment\": \"Script tag with JavaScript code.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"meta.tag.other\", \"patterns\": [{ \"begin\": \"\\\\G(?=\\\\()\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#tag_attributes\" }] }, { \"begin\": \"\\\\G(?=[.#])\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#complete_tag\" }] }, { \"include\": \"source.js\" }] }, { \"begin\": \"^(\\\\s*)(style)((\\\\.$)|(?=[.#(].*\\\\.$))\", \"beginCaptures\": { \"2\": { \"name\": \"entity.name.tag.pug\" } }, \"comment\": \"Style tag with CSS code.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"meta.tag.other\", \"patterns\": [{ \"begin\": \"\\\\G(?=\\\\()\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#tag_attributes\" }] }, { \"begin\": \"\\\\G(?=[.#])\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#complete_tag\" }] }, { \"include\": \"source.css\" }] }, { \"begin\": \"^(\\\\s*):(sass)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.sass.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.sass.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.sass\" }] }, { \"begin\": \"^(\\\\s*):(scss)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.scss.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.css.scss.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.css.scss\" }] }, { \"begin\": \"^(\\\\s*):(less)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.less.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.less.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.less\" }] }, { \"begin\": \"^(\\\\s*):(stylus)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.stylus.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.stylus\" }] }, { \"begin\": \"^(\\\\s*):(coffee(-?script)?)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.coffeescript.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.coffeescript.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.coffee\" }] }, { \"begin\": \"^(\\\\s*):(uglify-js)(?=\\\\(|$)\", \"beginCaptures\": { \"2\": { \"name\": \"constant.language.name.js.filter.pug\" } }, \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"name\": \"source.js.filter.pug\", \"patterns\": [{ \"include\": \"#tag_attributes\" }, { \"include\": \"source.js\" }] }, { \"begin\": \"^(\\\\s*)((:(?=.))|(:$))\", \"beginCaptures\": { \"4\": { \"name\": \"invalid.illegal.empty.generic.filter.pug\" } }, \"comment\": \"Generic Pug filter.\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"patterns\": [{ \"begin\": \"\\\\G(?<=:)(?=.)\", \"end\": \"$\", \"name\": \"name.generic.filter.pug\", \"patterns\": [{ \"match\": \"\\\\G\\\\(\", \"name\": \"invalid.illegal.name.generic.filter.pug\" }, { \"match\": \"[\\\\w-]\", \"name\": \"constant.language.name.generic.filter.pug\" }, { \"include\": \"#tag_attributes\" }, { \"match\": \"\\\\W\", \"name\": \"invalid.illegal.name.generic.filter.pug\" }] }] }, { \"begin\": `^(\\\\s*)(?:(?=\\\\.$)|(?:(?=[\\\\w.#].*?\\\\.$)(?=(?:(?:(?:(?:(?:#[\\\\w-]+)|(?:\\\\.[\\\\w-]+))|(?:(?:[#!]\\\\{[^}]*\\\\})|(?:\\\\w(?:(?:[\\\\w:-]+[\\\\w-])|(?:[\\\\w-]*)))))(?:(?:#[\\\\w-]+)|(?:\\\\.[\\\\w-]+)|(?:\\\\((?:[^()\\\\'\\\\\"]*(?:(?:\\\\'(?:[^\\\\']|(?:(?<!\\\\\\\\)\\\\\\\\\\\\'))*\\\\')|(?:\\\\\"(?:[^\\\\\"]|(?:(?<!\\\\\\\\)\\\\\\\\\\\\\"))*\\\\\")))*[^()]*\\\\))*)*)(?:(?:(?::\\\\s+)|(?<=\\\\)))(?:(?:(?:(?:#[\\\\w-]+)|(?:\\\\.[\\\\w-]+))|(?:(?:[#!]\\\\{[^}]*\\\\})|(?:\\\\w(?:(?:[\\\\w:-]+[\\\\w-])|(?:[\\\\w-]*)))))(?:(?:#[\\\\w-]+)|(?:\\\\.[\\\\w-]+)|(?:\\\\((?:[^()\\\\'\\\\\"]*(?:(?:\\\\'(?:[^\\\\']|(?:(?<!\\\\\\\\)\\\\\\\\\\\\'))*\\\\')|(?:\\\\\"(?:[^\\\\\"]|(?:(?<!\\\\\\\\)\\\\\\\\\\\\\"))*\\\\\")))*[^()]*\\\\))*)*))*)\\\\.$)(?:(?:(#[\\\\w-]+)|(\\\\.[\\\\w-]+))|((?:[#!]\\\\{[^}]*\\\\})|(?:\\\\w(?:(?:[\\\\w:-]+[\\\\w-])|(?:[\\\\w-]*)))))))`, \"beginCaptures\": { \"2\": { \"name\": \"meta.selector.css entity.other.attribute-name.id.css.pug\" }, \"3\": { \"name\": \"meta.selector.css entity.other.attribute-name.class.css.pug\" }, \"4\": { \"name\": \"meta.tag.other entity.name.tag.pug\" } }, \"comment\": \"Generated from dot_block_tag.py\", \"end\": \"^(?!(\\\\1\\\\s)|\\\\s*$)\", \"patterns\": [{ \"match\": \"\\\\.$\", \"name\": \"storage.type.function.pug.dot-block-dot\" }, { \"include\": \"#tag_attributes\" }, { \"include\": \"#complete_tag\" }, { \"begin\": \"^(?=.)\", \"end\": \"$\", \"name\": \"text.block.pug\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }] }, { \"begin\": \"^\\\\s*\", \"comment\": \"All constructs that generally span a single line starting with any number of white-spaces.\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#blocks_and_includes\" }, { \"include\": \"#unbuffered_code\" }, { \"include\": \"#mixin_definition\" }, { \"include\": \"#mixin_call\" }, { \"include\": \"#flow_control\" }, { \"include\": \"#flow_control_each\" }, { \"include\": \"#case_conds\" }, { \"begin\": \"\\\\|\", \"comment\": \"Tag pipe text line.\", \"end\": \"$\", \"name\": \"text.block.pipe.pug\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, { \"include\": \"#printed_expression\" }, { \"begin\": \"\\\\G(?=(#[^{\\\\w-])|[^\\\\w.#])\", \"comment\": \"Line starting with characters incompatible with tag name/id/class is standalone text.\", \"end\": \"$\", \"patterns\": [{ \"begin\": \"</?(?=[!#])\", \"end\": \">|$\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, { \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, { \"include\": \"#complete_tag\" }] }], \"repository\": { \"babel_parens\": { \"begin\": \"\\\\(\", \"end\": \"\\\\)|(({\\\\s*)?$)\", \"patterns\": [{ \"include\": \"#babel_parens\" }, { \"include\": \"source.js\" }] }, \"blocks_and_includes\": { \"captures\": { \"1\": { \"name\": \"storage.type.import.include.pug\" }, \"4\": { \"name\": \"variable.control.import.include.pug\" } }, \"comment\": \"Template blocks and includes.\", \"match\": \"(extends|include|yield|append|prepend|block( (append|prepend))?)\\\\s+(.*)$\", \"name\": \"meta.first-class.pug\" }, \"case_conds\": { \"begin\": \"(default|when)((\\\\s+|(?=:))|$)\", \"captures\": { \"1\": { \"name\": \"storage.type.function.pug\" } }, \"comment\": \"Pug case conditionals.\", \"end\": \"$\", \"name\": \"meta.control.flow.pug\", \"patterns\": [{ \"begin\": \"\\\\G(?!:)\", \"end\": \"(?=:\\\\s+)|$\", \"name\": \"js.embedded.control.flow.pug\", \"patterns\": [{ \"include\": \"#case_when_paren\" }, { \"include\": \"source.js\" }] }, { \"begin\": \":\\\\s+\", \"end\": \"$\", \"name\": \"tag.case.control.flow.pug\", \"patterns\": [{ \"include\": \"#complete_tag\" }] }] }, \"case_when_paren\": { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"name\": \"js.when.control.flow.pug\", \"patterns\": [{ \"include\": \"#case_when_paren\" }, { \"match\": \":\", \"name\": \"invalid.illegal.name.tag.pug\" }, { \"include\": \"source.js\" }] }, \"complete_tag\": { \"begin\": \"(?=[\\\\w.#])|(:\\\\s*)\", \"end\": \"(\\\\.?$)|(?=:.)\", \"endCaptures\": { \"1\": { \"name\": \"storage.type.function.pug.dot-block-dot\" } }, \"patterns\": [{ \"include\": \"#blocks_and_includes\" }, { \"include\": \"#unbuffered_code\" }, { \"include\": \"#mixin_call\" }, { \"include\": \"#flow_control\" }, { \"include\": \"#flow_control_each\" }, { \"match\": \"(?<=:)\\\\w.*$\", \"name\": \"invalid.illegal.name.tag.pug\" }, { \"include\": \"#tag_name\" }, { \"include\": \"#tag_id\" }, { \"include\": \"#tag_classes\" }, { \"include\": \"#tag_attributes\" }, { \"include\": \"#tag_mixin_attributes\" }, { \"captures\": { \"2\": { \"name\": \"invalid.illegal.end.tag.pug\" }, \"4\": { \"name\": \"invalid.illegal.end.tag.pug\" } }, \"match\": \"((\\\\.)\\\\s+$)|((:)\\\\s*$)\" }, { \"include\": \"#printed_expression\" }, { \"include\": \"#tag_text\" }] }, \"embedded_html\": { \"begin\": \"(?=<[^>]*>)\", \"end\": \"$|(?=>)\", \"name\": \"html\", \"patterns\": [{ \"include\": \"text.html.basic\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, \"flow_control\": { \"begin\": \"(for|if|else if|else|until|while|unless|case)(\\\\s+|$)\", \"captures\": { \"1\": { \"name\": \"storage.type.function.pug\" } }, \"comment\": \"Pug control flow.\", \"end\": \"$\", \"name\": \"meta.control.flow.pug\", \"patterns\": [{ \"begin\": \"\", \"end\": \"$\", \"name\": \"js.embedded.control.flow.pug\", \"patterns\": [{ \"include\": \"source.js\" }] }] }, \"flow_control_each\": { \"begin\": \"(each)(\\\\s+|$)\", \"captures\": { \"1\": { \"name\": \"storage.type.function.pug\" } }, \"end\": \"$\", \"name\": \"meta.control.flow.pug.each\", \"patterns\": [{ \"match\": \"([\\\\w$_]+)(?:\\\\s*,\\\\s*([\\\\w$_]+))?\", \"name\": \"variable.other.pug.each-var\" }, { \"begin\": \"\", \"end\": \"$\", \"name\": \"js.embedded.control.flow.pug\", \"patterns\": [{ \"include\": \"source.js\" }] }] }, \"html_entity\": { \"patterns\": [{ \"match\": \"(&)([a-zA-Z0-9]+|#\\\\d+|#x[0-9a-fA-F]+)(;)\", \"name\": \"constant.character.entity.html.text.pug\" }, { \"match\": \"[<>&]\", \"name\": \"invalid.illegal.html_entity.text.pug\" }] }, \"inline_pug\": { \"begin\": \"(?<!\\\\\\\\)(#\\\\[)\", \"captures\": { \"1\": { \"name\": \"entity.name.function.pug\" }, \"2\": { \"name\": \"entity.name.function.pug\" } }, \"end\": \"(\\\\])\", \"name\": \"inline.pug\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#mixin_call\" }, { \"begin\": \"(?<!\\\\])(?=[\\\\w.#])|(:\\\\s*)\", \"end\": \"(?=\\\\]|(:.)|=|\\\\s)\", \"name\": \"tag.inline.pug\", \"patterns\": [{ \"include\": \"#tag_name\" }, { \"include\": \"#tag_id\" }, { \"include\": \"#tag_classes\" }, { \"include\": \"#tag_attributes\" }, { \"include\": \"#tag_mixin_attributes\" }, { \"include\": \"#inline_pug\" }, { \"match\": \"\\\\[\", \"name\": \"invalid.illegal.tag.pug\" }] }, { \"include\": \"#unbuffered_code\" }, { \"include\": \"#printed_expression\" }, { \"match\": \"\\\\[\", \"name\": \"invalid.illegal.tag.pug\" }, { \"include\": \"#inline_pug_text\" }] }, \"inline_pug_text\": { \"begin\": \"\", \"end\": \"(?=\\\\])\", \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#inline_pug_text\" }] }, { \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, \"interpolated_error\": { \"match\": \"(?<!\\\\\\\\)[#!]\\\\{(?=[^}]*$)\", \"name\": \"invalid.illegal.tag.pug\" }, \"interpolated_value\": { \"begin\": \"(?<!\\\\\\\\)[#!]\\\\{(?=.*?\\\\})\", \"end\": \"\\\\}\", \"name\": \"string.interpolated.pug\", \"patterns\": [{ \"match\": \"{\", \"name\": \"invalid.illegal.tag.pug\" }, { \"include\": \"source.js\" }] }, \"js_braces\": { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#js_braces\" }, { \"include\": \"source.js\" }] }, \"js_brackets\": { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#js_brackets\" }, { \"include\": \"source.js\" }] }, \"js_parens\": { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#js_parens\" }, { \"include\": \"source.js\" }] }, \"mixin_call\": { \"begin\": \"((?:mixin\\\\s+)|\\\\+)([\\\\w-]+)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.pug\" }, \"2\": { \"name\": \"meta.tag.other entity.name.function.pug\" } }, \"end\": \"(?!\\\\()|$\", \"patterns\": [{ \"begin\": \"(?<!\\\\))\\\\(\", \"end\": \"\\\\)\", \"name\": \"args.mixin.pug\", \"patterns\": [{ \"include\": \"#js_parens\" }, { \"captures\": { \"1\": { \"name\": \"meta.tag.other entity.other.attribute-name.tag.pug\" } }, \"match\": \"([^\\\\s(),=/]+)\\\\s*=\\\\s*\" }, { \"include\": \"source.js\" }] }, { \"include\": \"#tag_attributes\" }] }, \"mixin_definition\": { \"captures\": { \"1\": { \"name\": \"storage.type.function.pug\" }, \"2\": { \"name\": \"meta.tag.other entity.name.function.pug\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.js\" }, \"4\": { \"name\": \"variable.parameter.function.js\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.js\" } }, \"match\": \"(mixin\\\\s+)([\\\\w-]+)(?:(\\\\()\\\\s*((?:[a-zA-Z_]\\\\w*\\\\s*)(?:,\\\\s*[a-zA-Z_]\\\\w*\\\\s*)*)(\\\\)))?$\" }, \"printed_expression\": { \"begin\": \"(!?=)\\\\s*\", \"captures\": { \"1\": { \"name\": \"constant\" } }, \"end\": \"(?=\\\\])|$\", \"name\": \"source.js\", \"patterns\": [{ \"include\": \"#js_brackets\" }, { \"include\": \"source.js\" }] }, \"tag_attribute_name\": { \"captures\": { \"1\": { \"name\": \"entity.other.attribute-name.tag.pug\" } }, \"match\": \"([^\\\\s(),=/!]+)\\\\s*\" }, \"tag_attribute_name_paren\": { \"begin\": \"\\\\(\\\\s*\", \"end\": \"\\\\)\", \"name\": \"entity.other.attribute-name.tag.pug\", \"patterns\": [{ \"include\": \"#tag_attribute_name_paren\" }, { \"include\": \"#tag_attribute_name\" }] }, \"tag_attributes\": { \"begin\": \"(\\\\(\\\\s*)\", \"captures\": { \"1\": { \"name\": \"constant.name.attribute.tag.pug\" } }, \"end\": \"(\\\\))\", \"name\": \"meta.tag.other\", \"patterns\": [{ \"include\": \"#tag_attribute_name_paren\" }, { \"include\": \"#tag_attribute_name\" }, { \"match\": \"!(?!=)\", \"name\": \"invalid.illegal.tag.pug\" }, { \"begin\": \"=\\\\s*\", \"end\": \"$|(?=,|(?:\\\\s+[^!%&*\\\\-+~|<>?/])|\\\\))\", \"name\": \"attribute_value\", \"patterns\": [{ \"include\": \"#js_parens\" }, { \"include\": \"#js_brackets\" }, { \"include\": \"#js_braces\" }, { \"include\": \"source.js\" }] }, { \"begin\": \"(?<=[%&*\\\\-+~|<>:?/])\\\\s+\", \"end\": \"$|(?=,|(?:\\\\s+[^!%&*\\\\-+~|<>?/])|\\\\))\", \"name\": \"attribute_value2\", \"patterns\": [{ \"include\": \"#js_parens\" }, { \"include\": \"#js_brackets\" }, { \"include\": \"#js_braces\" }, { \"include\": \"source.js\" }] }] }, \"tag_classes\": { \"captures\": { \"1\": { \"name\": \"invalid.illegal.tag.pug\" } }, \"match\": \"\\\\.([^\\\\w-])?[\\\\w-]*\", \"name\": \"meta.selector.css entity.other.attribute-name.class.css.pug\" }, \"tag_id\": { \"match\": \"#[\\\\w-]+\", \"name\": \"meta.selector.css entity.other.attribute-name.id.css.pug\" }, \"tag_mixin_attributes\": { \"begin\": \"(&attributes\\\\()\", \"captures\": { \"1\": { \"name\": \"entity.name.function.pug\" } }, \"end\": \"(\\\\))\", \"name\": \"meta.tag.other\", \"patterns\": [{ \"match\": \"attributes(?=\\\\))\", \"name\": \"storage.type.keyword.pug\" }, { \"include\": \"source.js\" }] }, \"tag_name\": { \"begin\": \"([#!]\\\\{(?=.*?\\\\}))|(\\\\w(([\\\\w:-]+[\\\\w-])|([\\\\w-]*)))\", \"end\": \"(\\\\G(?<!\\\\5[^\\\\w-]))|\\\\}|$\", \"name\": \"meta.tag.other entity.name.tag.pug\", \"patterns\": [{ \"begin\": \"\\\\G(?<=\\\\{)\", \"end\": \"(?=\\\\})\", \"name\": \"meta.tag.other entity.name.tag.pug\", \"patterns\": [{ \"match\": \"{\", \"name\": \"invalid.illegal.tag.pug\" }, { \"include\": \"source.js\" }] }] }, \"tag_text\": { \"begin\": \"(?=.)\", \"end\": \"$\", \"patterns\": [{ \"include\": \"#inline_pug\" }, { \"include\": \"#embedded_html\" }, { \"include\": \"#html_entity\" }, { \"include\": \"#interpolated_value\" }, { \"include\": \"#interpolated_error\" }] }, \"unbuffered_code\": { \"begin\": \"(-|((\\\\w+)\\\\s+=))\", \"beginCaptures\": { \"3\": { \"name\": \"variable.parameter.javascript.embedded.pug\" } }, \"comment\": \"name = function() {}\", \"end\": \"(?=\\\\])|(({\\\\s*)?$)\", \"name\": \"source.js\", \"patterns\": [{ \"include\": \"#js_brackets\" }, { \"include\": \"#babel_parens\" }, { \"include\": \"source.js\" }] } }, \"scopeName\": \"text.pug\", \"embeddedLangs\": [\"javascript\", \"css\", \"sass\", \"scss\", \"stylus\", \"coffee\", \"html\"], \"aliases\": [\"jade\"] });\nvar pug = [\n  ...javascript,\n  ...css,\n  ...sass,\n  ...scss,\n  ...stylus,\n  ...coffee,\n  ...html,\n  lang\n];\n\nexport { pug as default };\n"],"names":["lang","pug","javascript","css","sass","scss","stylus","coffee","html"],"mappings":"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","x_google_ignoreList":[0]}