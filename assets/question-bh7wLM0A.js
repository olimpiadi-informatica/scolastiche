/*! For licenses information, see LICENSES.txt */
import{j as e}from"./toString-B7mxur-0.js";import{u as d,r as g}from"./olinfo-auth-DV3DIqQe.js";import"./react-dom-BhtgsTX5.js";import{C as k,S as c,V as H}from"./visualizer-Duv0zybs.js";const x={src:new URL("code-eLPoK8OY.svg",import.meta.url).href,width:"1277.3333333333333",height:"866.6666666666666"},j={src:new URL("opzioni-CRWAqoor.svg",import.meta.url).href,width:"1104",height:"1342.6666666666665"},S={src:new URL("primarie-CM5T3zTN.svg",import.meta.url).href,width:"305.3333333333333",height:"250.66666666666666"},b={src:new URL("secondarie-DERnj6rN.svg",import.meta.url).href,width:"305.3333333333333",height:"248"};function B(n){const a={em:"em",p:"p",span:"span",...d(),...n.components},{Answer:i,AnswerGroup:r,Explanation:l,Image:s,MathExpr:t,SubProblem:o}=a;return i||p("Answer"),r||p("AnswerGroup"),l||p("Explanation"),s||p("Image"),t||p("MathExpr"),o||p("SubProblem"),e.jsxs(o,{children:[e.jsxs(a.p,{children:["Bunny è all’ingresso del fienile della fattoria Fibonacci, e davanti a lui ci sono ",e.jsx(t,{children:String.raw`9`})," pile di balle di fieno numerate con i numeri da ",e.jsx(t,{children:String.raw`1`})," a ",e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`9`}),"."]})," Ogni pila è formata da un numero variabile di balle di fieno. Bunny vuole giocare spostandosi da una pila all’altra, partendo dalla pila ",e.jsx(t,{children:String.raw`1`})," e seguendo questo procedimento:"]}),e.jsx(a.p,{children:e.jsx(a.span,{className:"flex justify-center",children:e.jsx(s,{alt:"code",src:typeof x=="function"?x(_variant):x})})}),e.jsx(a.p,{children:"In quali di queste situazioni Bunny riesce ad uscire dal fienile?"}),e.jsx(a.p,{children:e.jsx(a.span,{className:"flex justify-center",children:e.jsx(s,{alt:"opzione1",src:typeof j=="function"?j(_variant):j})})}),e.jsx(a.p,{children:"Risposte:"}),e.jsxs(r,{children:[e.jsx(i,{correct:!1,children:e.jsx(a.p,{children:"nessuna"})}),e.jsx(i,{correct:!1,children:e.jsx(a.p,{children:"tutte"})}),e.jsx(i,{correct:!1,children:e.jsx(a.p,{children:"solo la 1"})}),e.jsx(i,{correct:!0,children:e.jsx(a.p,{children:"la 1 e la 2"})}),e.jsx(i,{correct:!1,children:e.jsx(a.p,{children:"la 1 e la 3"})})]}),e.jsxs(l,{children:[e.jsx(a.p,{children:"Bunny riesce ad uscire dal fienile nell’opzione 1 e nella 2."}),e.jsx(a.p,{children:e.jsx(a.em,{children:"Nell’opzione 1, inizia dalla pila 1, poi salta di due in due fino alla pila 9."})}),e.jsx(a.p,{children:e.jsx(a.em,{children:"Nell’opzione 2, inizia dalla pila 1, salta sulla 3, indietreggia sulla due, salta sulla 4, salta sulla 6, indietreggia sulla 5, salta sulla 7 e finisce sulla 9."})}),e.jsx(a.p,{children:e.jsx(a.em,{children:"Nell’opzione 3, Bunny non riesce ad uscire perchè rimane bloccato saltando in circolo tra le pile 3, 4, 5 senza mai smettere."})}),e.jsx(a.p,{children:e.jsxs(a.span,{className:"flex justify-center",children:[e.jsx(s,{alt:"primarie",src:typeof S=="function"?S(_variant):S}),e.jsx(s,{alt:"secondarie",src:typeof b=="function"?b(_variant):b})]})})]})]})}function se(n={}){const{wrapper:a}={...d(),...n.components};return a?e.jsx(a,{...n,children:e.jsx(B,{...n})}):B(n)}function p(n,a){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}const w={src:new URL("code-CCCiRJ5d.svg",import.meta.url).href,width:"1560",height:"1296"},v={src:new URL("primarie-BCqqMmes.svg",import.meta.url).href,width:"305.3333333333333",height:"250.66666666666666"},y={src:new URL("secondarie-C8t837TJ.svg",import.meta.url).href,width:"305.3333333333333",height:"248"};function _(n){const a={p:"p",span:"span",strong:"strong",...d(),...n.components},{Answer:i,AnswerGroup:r,Explanation:l,Image:s,MathExpr:t,SubProblem:o}=a;return i||h("Answer"),r||h("AnswerGroup"),l||h("Explanation"),s||h("Image"),t||h("MathExpr"),o||h("SubProblem"),e.jsxs(o,{children:[e.jsx(a.p,{children:`I conigli della fattoria Fibonacci hanno preparato due enormi mucchi di carote.
All’inizio il mucchio sinistro contiene 2024 carote, mentre il mucchio destro ne contiene 3024.
Bunny, Tip-Tap e Carol le mangiano seguendo questo procedimento:`}),e.jsx(a.p,{children:e.jsx(a.span,{className:"flex justify-center",children:e.jsx(s,{alt:"code",src:typeof w=="function"?w(_variant):w})})}),e.jsx(a.p,{children:"Quante carote mangia Carol?"}),e.jsxs(r,{children:[e.jsx(i,{correct:!1,children:e.jsx(a.p,{children:"0"})}),e.jsx(i,{correct:!1,children:e.jsx(a.p,{children:"1"})}),e.jsx(i,{correct:!1,children:e.jsx(a.p,{children:"2"})}),e.jsx(i,{correct:!1,children:e.jsx(a.p,{children:"4"})}),e.jsx(i,{correct:!0,children:e.jsx(a.p,{children:"8"})})]}),e.jsxs(l,{children:[e.jsxs(a.p,{children:[`Si può notare che ad ogni passaggio della ripetizione, indipendentemente da quale mucchio
abbia più carote, Tip-Tap e Bunny in totale mangiano `,e.jsx(t,{children:String.raw`10`}),` carote.
Visto che all’inizio ci sono `,e.jsx(t,{children:String.raw`2024 + 3024 = 5048`}),` carote, i due conigli andranno avanti
a mangiare `,e.jsx(t,{children:String.raw`10`})," carote per volta fino a quando rimarranno ",e.jsx(t,{children:String.raw`8`}),` carote tra i due mucchi.
A quel punto tutte le carote rimaste le mangerà Carol!`]}),e.jsxs(a.p,{children:[e.jsx(a.strong,{children:"Approfondimento:"}),` visto che la condizione che termina la ripetizione chiede solo che
una delle due pile contenga meno di `,e.jsx(t,{children:String.raw`7`}),` carote, si potrebbe pensare che alla fine potrebbero
rimanere più carote per Carol, come `,e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`18`}),","]})," ",e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`28`}),","]})," ",e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`38`}),","]})," eccetera. Questo però non è possibile!"]}),e.jsxs(a.p,{children:[`Infatti, si può notare che ogni volta Tip-Tap e Bunny mangiano più carote dalla pila più grande
e meno dalla pila più piccola. Questo porta a ridurre la differenza tra le due pile, finché
la differenza non è `,e.jsx(a.strong,{children:"al massimo 3"}),`. Da quel punto in poi la differenza tra le due pila rimarrà
sempre al massimo 3, e quindi quando una pila arriva ad avere meno di `,e.jsx(t,{children:String.raw`7`}),` carote (quindi al massimo
`,e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`6`}),"),"]})," l’altra pila non può avere più di ",e.jsx(t,{children:String.raw`6 + 3 = 9`})," carote, per un totale di al massimo ",e.jsx(t,{children:String.raw`9 + 6 = 15`}),`
carote, che è meno di `,e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`18`}),"."]})]}),e.jsx(a.p,{children:e.jsxs(a.span,{className:"flex justify-center",children:[e.jsx(s,{alt:"primarie",src:typeof v=="function"?v(_variant):v}),e.jsx(s,{alt:"secondarie",src:typeof y=="function"?y(_variant):y})]})})]})]})}function oe(n={}){const{wrapper:a}={...d(),...n.components};return a?e.jsx(a,{...n,children:e.jsx(_,{...n})}):_(n)}function h(n,a){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}const z={src:new URL("sol-DtE1cIP5.webp",import.meta.url).href,width:"1278",height:"1090"},N={src:new URL("primarie-BFyLaZvl.svg",import.meta.url).href,width:"305.3333333333333",height:"250.66666666666666"},L={src:new URL("secondarie-BmFK6iBh.svg",import.meta.url).href,width:"305.3333333333333",height:"248"},M={languageVersion:0,blocks:[{type:"start",id:"y=zq)Uya2A/{vyOtN[i6",x:61,y:81}]},A=[{name:"salto",id:"aL]BB^jjqL!cyI]38IpA"}],I={blocks:M,variables:A},D=[{type:"start",message0:"inizia qui",nextStatement:null,colour:20,tooltip:"L'esecuzione inizia da qui",helpUrl:"",maxInstances:1,js:""},{type:"N",message0:"N",output:"Number",colour:20,tooltip:"numero totale di palloni da sistemare",helpUrl:"",js:["hiddenState.N","ORDER_MEMBER"]},{type:"altezza della pila",message0:"altezza della pila %1",args0:[{type:"input_value",name:"LENGTH",value:0,check:"Number"}],output:"Number",colour:20,tooltip:"altezza della pila i-esima",helpUrl:"",js:[`(function(i) {
  hiddenState.pos = i - (hiddenState.pos > i-1 ? 0.5 : 1.5);
  if (i < 1 || i > hiddenState.N)
    exit(false, "la pila " + i + " non esiste");
  return hiddenState.H[i-1];
})(%0)`,"ORDER_FUNCTION_CALL"]},{type:"aggiungi carota alla pila",message0:"aggiungi carota alla pila %1",args0:[{type:"input_value",name:"LENGTH",value:0,check:"Number"}],previousStatement:null,nextStatement:null,colour:20,tooltip:"aggiungi una carota alla pila i-esima",helpUrl:"",js:`(function(i) {
  hiddenState.pos = i - (hiddenState.pos > i-1 ? 0.5 : 1.5);
  if (i < 1 || i > hiddenState.N)
    exit(false, "la pila " + i + " non esiste");
  hiddenState.C[i-1] += 1;
  hiddenState.carrots[hiddenState.carrots.length] = i;
  if (hiddenState.C[i-1] === 3)
    exit(false, "hai messo una terza carota");
})(%0);`},{type:"termina",message0:"termina",previousStatement:null,colour:20,tooltip:"termina il procedimento",helpUrl:"",js:`for (var i=0; i<hiddenState.N; i++) {
  if (hiddenState.C[i] === hiddenState.sol[i]) continue;
  if (hiddenState.sol[i] === 0)
    exit(false, "non dovevi mettere carote nella pila " + (i+1));
  if (hiddenState.C[i] === 0 && hiddenState.sol[i] == 1)
    exit(false, "non hai messo la carota nella pila " + (i+1));
  if (hiddenState.C[i] === 0 && hiddenState.sol[i] == 2)
    exit(false, "non hai messo le due carote nella pila " + (i+1));
  if (hiddenState.C[i] === 2)
    exit(false, "non ci voleva la seconda carota nella pila " + (i+1));
  if (hiddenState.C[i] === 1)
    exit(false, "manca la seconda carota nella pila " + (i+1));
  exit(false, "problema di correzione");
}
exit(true, "hai messo le carote bene, complimenti!");`}],O=[{N:6,H:[1,2,4,6,7,10],C:[0,0,0,0,0,0],sol:[1,0,1,0,0,2],carrots:[],pos:-1},{N:20,H:[1,2,4,5,8,6,10,4,9,3,5,3,2,9,5,9,10,3,5,13],C:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],sol:[1,0,1,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,2],carrots:[],pos:-1},{N:50,H:[1,2,3,4,2,4,6,6,8,4,7,8,8,9,5,1,5,1,2,6,1,6,8,6,4,6,2,4,10,4,4,3,9,8,2,2,6,9,8,2,5,9,5,2,9,6,9,4,10,9],C:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],sol:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0],carrots:[],pos:-1}],P={src:new URL("bunny-DVskqgYv.svg",import.meta.url).href,width:"40",height:"70.44776119402984"},$={src:new URL("carrot-CcABd57p.svg",import.meta.url).href,width:"25",height:"25"},V={src:new URL("hay-Na2TBAJn.svg",import.meta.url).href,width:"60",height:"37.19298245614034"};function Q({variables:n}){const{blocklyVariables:a,hiddenState:i}=n;if(i)return e.jsxs(e.Fragment,{children:[e.jsxs(k,{gravity:"bottom",scale:10,children:[g(i.N).flatMap(r=>g(i.H[r]).map(l=>e.jsx(c,{src:V,alt:"Fieno",x:1.5+r*6,y:l*2.8},`hay-${r}-${l}`))),e.jsx(c,{src:P,alt:"Carol",x:3+i.pos*6,y:-1,follow:!0}),e.jsx(c,{src:$,alt:"Carota",x:5+i.pos*6,y:-.1}),g(i.carrots.length+2).map(r=>{let l=5+i.pos*6,s=-.1;if(r<i.carrots.length){const t=i.carrots[r]-1;l=3.5+t*6+r%3*.5,s=-.3+i.H[t]*2.8}return e.jsx(c,{src:$,alt:"Carota",x:l,y:s},r)})]}),e.jsx(H,{variables:{...a,pile:i.N}})]})}function E(n){const a={em:"em",li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...d(),...n.components},{Blockly:i,Code:r,Explanation:l,Image:s,MathExpr:t,SubProblem:o}=a;return i||u("Blockly"),r||u("Code"),l||u("Explanation"),s||u("Image"),t||u("MathExpr"),o||u("SubProblem"),e.jsxs(o,{children:[e.jsx(a.p,{children:"Carol sta organizzando una gara di salto nel fienile della fattoria Fibonacci!"}),e.jsxs(a.p,{children:["Il fienile ha ",e.jsx(t,{children:String.raw`N`})," ",e.jsx(a.strong,{children:"pile"})," di balle di fieno, l’",e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`i`}),"-esima"]})," delle quali composta da ",e.jsx(t,{children:String.raw`H_i`}),` balle di fieno.
La gara partirà dall’ingresso del fienile a sinistra, prima di tutte le pile. Da lì i conigli dovranno
saltare sulla prima pila `,e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`i = 1`}),","]}),` e poi via via sulle successive, fino ad arrivare all’ultima pila e
saltare fuori dal fienile a destra.`]}),e.jsxs(a.p,{children:[`I conigli non fanno fatica a saltare in piano o in basso, ma saltare verso l’alto non è facile!
Quindi, Carol vuole mettere una carota come premio su `,e.jsx(a.strong,{children:"ogni"}),` pila di balle di fieno che richiede
un salto `,e.jsx(a.strong,{children:"maggiore"}),` di tutti i salti fatti prima per arrivare fino a lì. Inoltre, vuole mettere
una seconda carota sul salto più alto di tutti del percorso. Carol può fare queste cose:`]}),e.jsxs(a.ul,{children:[`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`altezza della pila i`,inline:!0,language:"text",noLineNumbers:!1}),": guarda quante balle di fieno ",e.jsx(t,{children:String.raw`H_i`})," ci sono nella pila ",e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`i`}),"-esima."]})]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`aggiungi carota alla pila i`,inline:!0,language:"text",noLineNumbers:!1}),": aggiungi una carota in cima all’",e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`i`}),"-esima"]})," pila."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`termina`,inline:!0,language:"text",noLineNumbers:!1}),": smetti di aggiungere carote e fai partire la gara."]}),`
`]}),e.jsx(a.p,{children:"Aiuta Carol a preparare il fienile per la gara di salto!"}),e.jsx(i,{customBlocks:D,initialBlocks:I,testcases:O,debug:{logBlocks:!1,logJs:!1,logVariables:!1},Visualizer:Q}),e.jsxs(l,{children:[e.jsx(a.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(a.p,{children:e.jsx(a.span,{className:"flex justify-center",children:e.jsx(s,{alt:"soluzione",src:typeof z=="function"?z(_variant):z})})}),e.jsxs(a.p,{children:[`Questo programma, mette subito una carota sulla prima pila, che richiede il primo salto: il primo
salto è sempre maggiore degli `,e.jsx(a.em,{children:"zero"}),` salti fatti prima! Il programma poi ricorda che il massimo
salto finora (`,e.jsx(a.em,{children:"maxsalto"}),") è alto come la prima pila, ed è stato fatto nella pila ",e.jsx(t,{children:String.raw`1`})," (",e.jsx(a.em,{children:"dovesalto"}),")."]}),e.jsxs(a.p,{children:[`A questo punto, il programma itera su tutte le altre pile, dalla seconda alla fine.
Per ciascuna di queste, calcola quanto è grande il `,e.jsx(a.em,{children:"salto"})," che serve per arrivare all’",e.jsxs(a.span,{className:"inline-block whitespace-nowrap",children:[e.jsx(t,{children:String.raw`i`}),"-esima"]}),` pila.
Se questo salto è maggiore del massimo salto finora, allora va ad aggiungere una carota e lo
memorizza in `,e.jsx(a.em,{children:"maxsalto"})," e ",e.jsx(a.em,{children:"dovesalto"}),"."]}),e.jsxs(a.p,{children:[`Una volta terminato di scorrere tutte le pile, Carol torna all’ultima pila a cui ha aggiunto una
carota (`,e.jsx(a.em,{children:"dovesalto"}),") e ci aggiunge la seconda carota."]}),e.jsx(a.p,{children:e.jsxs(a.span,{className:"flex justify-center",children:[e.jsx(s,{alt:"primarie",src:typeof N=="function"?N(_variant):N}),e.jsx(s,{alt:"secondarie",src:typeof L=="function"?L(_variant):L})]})})]})]})}function de(n={}){const{wrapper:a}={...d(),...n.components};return a?e.jsx(a,{...n,children:e.jsx(E,{...n})}):E(n)}function u(n,a){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}const C={src:new URL("fig-CCG_HI6P.svg",import.meta.url).href,width:"452",height:"493.3333333333333"},U={src:new URL("sol-QLFoBMh4.webp",import.meta.url).href,width:"1315",height:"988"},R={src:new URL("primarie-CAZAPJQa.svg",import.meta.url).href,width:"305.3333333333333",height:"250.66666666666666"},T={src:new URL("secondarie-BRBcPioq.svg",import.meta.url).href,width:"305.3333333333333",height:"248"},X={languageVersion:0,blocks:[{type:"start",id:"y=zq)Uya2A/{vyOtN[i6",x:61,y:81}]},G=[],J={blocks:X,variables:G},Y=[{type:"start",message0:"inizia qui",nextStatement:null,colour:20,tooltip:"L'esecuzione inizia da qui",helpUrl:"",maxInstances:1,js:""},{type:"fine della fila Fibonacci",message0:"fine della fila Fibonacci",output:"Boolean",colour:20,tooltip:"la fila della fattoria Fibonacci è finita?",helpUrl:"",js:["hiddenState.data[0].pos === hiddenState.data[0].H.length","ORDER_EQUALITY"]},{type:"fine della fila Turing",message0:"fine della fila Turing",output:"Boolean",colour:20,tooltip:"la fila della fattoria Turing è finita?",helpUrl:"",js:["hiddenState.data[1].pos === hiddenState.data[1].H.length","ORDER_EQUALITY"]},{type:"altezza primo della fila Fibonacci",message0:"altezza primo della fila Fibonacci",output:"Number",colour:20,tooltip:"l'altezza del primo coniglio nella fila della fattoria Fibonacci",helpUrl:"",js:['hiddenState.data[0].pos === hiddenState.data[0].H.length ? exit(false, "la fila Fibonacci è finita") : hiddenState.data[0].H[hiddenState.data[0].pos]',"ORDER_CONDITIONAL"]},{type:"altezza primo della fila Turing",message0:"altezza primo della fila Turing",output:"Number",colour:20,tooltip:"l'altezza del primo coniglio nella fila della fattoria Turing",helpUrl:"",js:[`hiddenState.data[1].pos === hiddenState.data[1].H.length ? exit(false, "la fila Turing è finita") : hiddenState.data[1].H[hiddenState.data[1].pos]
`,"ORDER_CONDITIONAL"]},{type:"prendi dalla fila Fibonacci",message0:"prendi dalla fila Fibonacci",previousStatement:null,nextStatement:null,colour:20,tooltip:"prendi il prossimo coniglio dalla fila della fattoria Fibonacci",helpUrl:"",js:`hiddenState.data[0].presi[hiddenState.data[0].presi.length] = hiddenState.data[0].H[hiddenState.data[0].pos];
if (hiddenState.data[0].pos === hiddenState.data[0].H.length)
  exit(false, "la fila Fibonacci è finita");
hiddenState.data[0].scelta[hiddenState.data[0].pos] = hiddenState.data[0].presi.length;
hiddenState.data[0].pos += 1
if (hiddenState.data[0].presi.length <= hiddenState.data[1].presi.length && hiddenState.data[0].presi[hiddenState.data[0].presi.length-1] !== hiddenState.data[1].presi[hiddenState.data[0].presi.length-1])
  exit(false, "l'ultimo preso da Fibonacci ha un'altezza che non corrisponde");
`},{type:"prendi dalla fila Turing",message0:"prendi dalla fila Turing",previousStatement:null,nextStatement:null,colour:20,tooltip:"prendi il prossimo coniglio dalla fila della fattoria Turing",helpUrl:"",js:`hiddenState.data[1].presi[hiddenState.data[1].presi.length] = hiddenState.data[1].H[hiddenState.data[1].pos];
if (hiddenState.data[1].pos === hiddenState.data[1].H.length)
  exit(false, "la fila Turing è finita");
hiddenState.data[1].scelta[hiddenState.data[1].pos] = hiddenState.data[1].presi.length;
hiddenState.data[1].pos += 1
if (hiddenState.data[1].presi.length <= hiddenState.data[0].presi.length && hiddenState.data[1].presi[hiddenState.data[1].presi.length-1] !== hiddenState.data[0].presi[hiddenState.data[1].presi.length-1])
  exit(false, "l'ultimo preso da Turing ha un'altezza che non corrisponde");
`},{type:"scarta dalla fila Fibonacci",message0:"scarta dalla fila Fibonacci",previousStatement:null,nextStatement:null,colour:20,tooltip:"scarta il prossimo coniglio dalla fila della fattoria Fibonacci",helpUrl:"",js:`hiddenState.data[0].scartati[hiddenState.data[0].scartati.length] = hiddenState.data[0].H[hiddenState.data[0].pos];
if (hiddenState.data[0].pos === hiddenState.data[0].H.length)
  exit(false, "la fila Fibonacci è finita");
hiddenState.data[0].scelta[hiddenState.data[0].pos] = -hiddenState.data[0].scartati.length;
hiddenState.data[0].pos += 1
`},{type:"scarta dalla fila Turing",message0:"scarta dalla fila Turing",previousStatement:null,nextStatement:null,colour:20,tooltip:"scarta il prossimo coniglio dalla fila della fattoria Turing",helpUrl:"",js:`hiddenState.data[1].scartati[hiddenState.data[1].scartati.length] = hiddenState.data[1].H[hiddenState.data[1].pos];
if (hiddenState.data[1].pos === hiddenState.data[1].H.length)
  exit(false, "la fila Turing è finita");
hiddenState.data[1].scelta[hiddenState.data[1].pos] = -hiddenState.data[1].scartati.length;
hiddenState.data[1].pos += 1
`},{type:"termina",message0:"termina",previousStatement:null,colour:20,tooltip:"termina il procedimento",helpUrl:"",js:`if (hiddenState.data[0].presi.length !== hiddenState.data[1].presi.length)
  exit(false, "le due squadre non hanno lo stesso numero di giocatori");
if (hiddenState.data[0].presi.length < hiddenState.sol)
  exit(false, "hai fatto squadre da " + hiddenState.data[0].presi.length + " ma potevi farle da " + hiddenState.sol);
if (hiddenState.data[0].presi.length > hiddenState.sol)
  exit(false, "problema di correzione");
exit(true, "hai scelto bene le squadre, complimenti!");`}],Z=[{data:[{H:[23,26,26,26,29,29,32,35,35],pos:0,presi:[],scartati:[],scelta:[]},{H:[23,23,29,32,35,38,38],pos:0,presi:[],scartati:[],scelta:[]}],sol:4},{data:[{H:[22,23,25,26,27,28,29,30,31,34,35,36,37,39,40],pos:0,presi:[],scartati:[],scelta:[]},{H:[20,21,22,23,24,25,26,27,28,29,31,32,34,36,37,38,40],pos:0,presi:[],scartati:[],scelta:[]}],sol:12},{data:[{H:[20,20,20,21,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,25,26,26,26,26,26,26,27,27,28,30,30,30,31,31,32,33,34,34,34,34,34,34,36,36,37,37,37,37,38,39,40,40,40,40],pos:0,presi:[],scartati:[],scelta:[]},{H:[20,20,20,20,20,20,21,22,22,22,22,23,23,23,23,24,24,24,25,25,26,27,27,27,27,28,28,30,31,32,32,32,33,33,34,34,34,34,35,36,36,37,37,37,39,39,39,40,40,40,40],pos:0,presi:[],scartati:[],scelta:[]}],sol:37}],K={src:new URL("bunny-nQAqg4EM.svg",import.meta.url).href,width:"66",height:"116.23880597014924"},W={src:new URL("ball-Bmuezh3s.svg",import.meta.url).href,width:"35",height:"35"},ee={src:new URL("fibonacci-BpjDQ99Z.svg",import.meta.url).href,width:"63.829787234042556",height:"100"},ae={src:new URL("turing-pb_SUdIA.svg",import.meta.url).href,width:"63.829787234042556",height:"100"};function ie({variables:n}){const{blocklyVariables:a,hiddenState:i}=n;if(!i)return;const r=[ee,ae];return e.jsxs(e.Fragment,{children:[e.jsxs(k,{gravity:"bottom",scale:10,children:[e.jsx(c,{src:K,alt:"Bunny",x:20,y:19.5,follow:!0}),e.jsx(c,{src:W,alt:"Pallone",x:23.5,y:20.5}),g(2).flatMap(l=>{const s=i.data[l].H.length;return g(l*(s-1),(s+1)*(1-l)-1,1-2*l).map(t=>{const o=i.data[l].H[t]/28;let f=26+(t-i.data[l].pos)*5,q=30-23*l+(o-1)*5;return t<i.data[l].pos&&(i.data[l].scelta[t]>0?f=14+(i.data[l].scelta[t]-i.data[l].presi.length)*5:(f=21-i.data[l].scelta[t]*3,q+=10*(1-2*l))),e.jsx(c,{src:r[l],alt:"Giocatore",x:f,y:q,height:o},`player-${l}-${t}`)})})]}),e.jsx(H,{variables:{...a,Fibonacci:i.data[0].H.length-i.data[0].pos,Turing:i.data[1].H.length-i.data[1].pos}})]})}function F(n){const a={li:"li",p:"p",span:"span",strong:"strong",ul:"ul",...d(),...n.components},{Blockly:i,Code:r,Explanation:l,Image:s,SubProblem:t}=a;return i||m("Blockly"),r||m("Code"),l||m("Explanation"),s||m("Image"),t||m("SubProblem"),e.jsxs(t,{children:[e.jsxs(a.p,{children:["Bunny deve selezionare due squadre di basket da ",e.jsx(a.strong,{children:"più giocatori possibile"}),` per la sfida tra la fattoria Fibonacci e la fattoria Turing!
Per fare una partita bilanciata, vuole che le due squadre siano composte da uno stesso numero di giocatori della stessa altezza, come in questo caso:`]}),e.jsx(a.p,{children:e.jsx(a.span,{className:"flex justify-center",children:e.jsx(s,{alt:"esempio",src:typeof C=="function"?C(_variant):C})})}),e.jsx(a.p,{children:`Bunny ha quindi messo in fila, in ordine crescente di altezza, i conigli di entrambe le fattorie.
Ora può fare queste operazioni:`}),e.jsxs(a.ul,{children:[`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`fine della fila Fibonacci`,inline:!0,language:"text",noLineNumbers:!1}),": condizione vera se la fila della fattoria Fibonacci è terminata."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`fine della fila Turing`,inline:!0,language:"text",noLineNumbers:!1}),": condizione vera se la fila della fattoria Turing è terminata."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`altezza primo della fila Fibonacci`,inline:!0,language:"text",noLineNumbers:!1}),": l’altezza del primo coniglio nella fila della fattoria Fibonacci."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`altezza primo della fila Turing`,inline:!0,language:"text",noLineNumbers:!1}),": l’altezza del primo coniglio nella fila della fattoria Turing."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`prendi dalla fila Fibonacci`,inline:!0,language:"text",noLineNumbers:!1}),": prendi il prossimo coniglio dalla fila della fattoria Fibonacci."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`prendi dalla fila Turing`,inline:!0,language:"text",noLineNumbers:!1}),": prendi il prossimo coniglio dalla fila della fattoria Turing."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`scarta dalla fila Fibonacci`,inline:!0,language:"text",noLineNumbers:!1}),": scarta il prossimo coniglio dalla fila della fattoria Fibonacci."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`scarta dalla fila Turing`,inline:!0,language:"text",noLineNumbers:!1}),": scarta il prossimo coniglio dalla fila della fattoria Turing."]}),`
`,e.jsxs(a.li,{children:[e.jsx(r,{code:String.raw`termina`,inline:!0,language:"text",noLineNumbers:!1}),": completa le squadre e inizia la partita a basket."]}),`
`]}),e.jsx(a.p,{children:"Aiuta Bunny a fare le squadre per la partita!"}),e.jsx(i,{customBlocks:Y,initialBlocks:J,testcases:Z,debug:{logBlocks:!1,logJs:!1,logVariables:!1},Visualizer:ie}),e.jsxs(l,{children:[e.jsx(a.p,{children:"Un possibile programma corretto è il seguente:"}),e.jsx(a.p,{children:e.jsx(a.span,{className:"flex justify-center",children:e.jsx(s,{alt:"soluzione",src:typeof U=="function"?U(_variant):U})})}),e.jsx(a.p,{children:`Questo programma procede a selezionare i conigli fino a che una delle due file non si svuota.
Se i due primi della fila hanno la stessa altezza, è possibile prenderli entrambi per
ingrandire la squadra. Se non hanno la stessa altezza Bunny scarta il più basso dei due,
visto che non ha più speranze di trovare un avversario della stessa altezza nell’altra fila.`}),e.jsx(a.p,{children:e.jsxs(a.span,{className:"flex justify-center",children:[e.jsx(s,{alt:"primarie",src:typeof R=="function"?R(_variant):R}),e.jsx(s,{alt:"secondarie",src:typeof T=="function"?T(_variant):T})]})})]})]})}function ce(n={}){const{wrapper:a}={...d(),...n.components};return a?e.jsx(a,{...n,children:e.jsx(F,{...n})}):F(n)}function m(n,a){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}export{se as M,oe as a,de as b,ce as c};
//# sourceMappingURL=question-bh7wLM0A.js.map
