- type: start
  message0: inizia qui
  nextStatement: null
  colour: 20
  tooltip: L'esecuzione inizia da qui
  helpUrl: ""
  maxInstances: 1
  js: ""

- type: N
  message0: N
  output: Number
  colour: 20
  tooltip: numero di giocatori di FarmCraft
  helpUrl: ""
  js: state.N

- type: posizione di Allie
  message0: posizione di Allie
  output: Number
  colour: 20
  tooltip: posizione corrente di Allie in graduatoria
  helpUrl: ""
  js: state.allie+1

- type: punteggio del giocatore
  message0: punteggio del giocatore %1
  args0:
    - type: input_value
      check: Integer
      min: "1"
  output: Number
  colour: 20
  tooltip: punteggio del giocatore che in questo momento è i-esimo in graduatoria
  helpUrl: ""
  js: |
    (function(i) {
      if (i < 1 || i > state.N)
        exit(false, "il giocatore " + i + " non esiste");
      return state.P[i-1][0];
    })(%1)

- type: costo della box negativa
  message0: costo della box negativa %1
  args0:
    - type: input_value
      check: Integer
      min: "1"
  output: Number
  colour: 20
  tooltip: costo in carote della box per abbassare il punteggio del giocatore i-esimo
  helpUrl: ""
  js: |
    (function(i) {
      if (i < 1 || i > state.N)
        exit(false, "la box " + i + " non esiste");
      return state.C[i-1];
    })(%1)

- type: compra box negativa
  message0: compra box negativa %1
  args0:
    - type: input_value
      check: Integer
      min: "1"
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: paga la box negativa i-esima e abbassa il punteggio del giocatore che al momento è i-esimo
  helpUrl: ""
  js: |
    (function(i) {
      if (i < 1 || i > state.N)
        exit(false, "la box " + i + " non esiste");
      state.pos = i;
      if (i == state.allie+1)
        exit(false, "hai comprato la box per abbassare il punteggio di Allie");
      if (i > state.allie+1)
        exit(false, "la box " + i + " non serve, il giocatore è sotto di Allie");
      state.P[i-1][0]--;
      state.count += state.C[i-1];
      state.highlight = 1;
      pause();
      if (state.P[i-1][0] < state.P[i][0]) {
        state.stress[i-1] = +1;
        var j = i;
        state.stress[j] = -1;
        for (; j+1 < state.N && state.P[j][0] == state.P[j+1][0]; j++)
          state.stress[j+1] = -1;
        pause();
        var tmp = state.P[i-1];
        for (var k=i; k<=j; k++) {
          state.P[k-1] = state.P[k];
          state.stress[k-1] = 0;
        }
        state.P[j] = tmp;
        state.stress[j] = 5 + 4*(j-i);
        if (state.allie <= j) state.allie -= 1;
        pause();
        state.stress[j] = 0;
      }
      state.highlight = 0;
    })(%1);

- type: termina
  message0: termina
  previousStatement: null
  colour: 20
  tooltip: goditi la meritata vittoria
  helpUrl: ""
  js: |
    if (state.allie != 0)
      exit(false, "Allie non è prima in classifica");
    if (state.count > state.sol)
      exit(false, "hai speso più carote del necessario");
    if (state.count < state.sol)
      exit(false, "soluzione prematurata con scappellamento a destra");
    exit(true, "hai azzerato tutti spendendo poco, complimenti!");
