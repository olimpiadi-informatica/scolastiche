- type: start
  message0: inizia qui
  nextStatement: null
  colour: 20
  tooltip: L'esecuzione inizia da qui
  helpUrl: ""
  maxInstances: 1
  js: ""

- type: fine della fila
  message0: fine della fila %1
  args0:
    - type: field_dropdown
      options:
        - [Fibonacci, "0"]
        - [Turing, "1"]
  output: Boolean
  colour: 20
  tooltip: la fila è finita?
  helpUrl: ""
  js: state.data[%0].pos === state.data[%0].H.length

- type: altezza primo della fila
  message0: altezza primo della fila %1
  args0:
    - type: field_dropdown
      options:
        - [Fibonacci, "0"]
        - [Turing, "1"]
  output: Number
  colour: 20
  tooltip: l'altezza del primo coniglio nella fila
  helpUrl: ""
  js: |
    state.data[%0].pos === state.data[%0].H.length
      ? exit(false, %0 === 0 ? "la fila Fibonacci è finita" : "la fila Turing è finita")
      : state.data[%0].H[state.data[%0].pos]

- type: prendi dalla fila
  message0: prendi dalla fila %1
  args0:
    - type: field_dropdown
      options:
        - [Fibonacci, "0"]
        - [Turing, "1"]
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: prendi il prossimo coniglio dalla fila
  helpUrl: ""
  js: |
    state.data[%0].presi[state.data[%0].presi.length] = state.data[%0].H[state.data[%0].pos];
    if (state.data[%0].pos === state.data[%0].H.length)
      exit(false, "la fila Fibonacci è finita");
    state.data[%0].scelta[state.data[%0].pos] = state.data[%0].presi.length;
    state.data[%0].pos += 1
    if (state.data[%0].presi.length <= state.data[1].presi.length
          && state.data[%0].presi[state.data[%0].presi.length-1] !== state.data[1-%0].presi[state.data[%0].presi.length-1])
      exit(false, "l'ultimo preso da " + (%0 === 0 ? "Fibonacci" : "Turing") + " ha un'altezza che non corrisponde");

- type: scarta dalla fila
  message0: scarta dalla fila %1
  args0:
    - type: field_dropdown
      options:
        - [Fibonacci, "0"]
        - [Turing, "1"]
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: scarta il prossimo coniglio dalla fila
  helpUrl: ""
  js: |
    state.data[%0].scartati[state.data[%0].scartati.length] = state.data[%0].H[state.data[%0].pos];
    if (state.data[%0].pos === state.data[%0].H.length)
      exit(false, %0 === 0 ? "la fila Fibonacci è finita" : "la fila Turing è finita");
    state.data[%0].scelta[state.data[%0].pos] = -state.data[%0].scartati.length;
    state.data[%0].pos += 1

- type: termina
  message0: termina
  previousStatement: null
  colour: 20
  tooltip: termina il procedimento
  helpUrl: ""
  js: |
    if (state.data[0].presi.length !== state.data[1].presi.length)
      exit(false, "le due squadre non hanno lo stesso numero di giocatori");
    if (state.data[0].presi.length < state.sol)
      exit(false, "hai fatto squadre da " + state.data[0].presi.length + " ma potevi farle da " + state.sol);
    if (state.data[0].presi.length > state.sol)
      exit(false, "problema di correzione");
    exit(true, "hai scelto bene le squadre, complimenti!");
