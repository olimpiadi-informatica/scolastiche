- type: start
  message0: inizia qui
  nextStatement: null
  colour: 20
  tooltip: L'esecuzione inizia da qui
  helpUrl: ""
  maxInstances: 1
  js: ""

- type: S
  message0: S
  output: Number
  colour: 20
  tooltip: altezza della colonna di sinistra da costruire
  helpUrl: ""
  js: state.S

- type: D
  message0: D
  output: Number
  colour: 20
  tooltip: altezza della colonna di destra da costruire
  helpUrl: ""
  js: state.D

- type: M
  message0: M
  output: Number
  colour: 20
  tooltip: numero di blocchetti nel set da costruzioni
  helpUrl: ""
  js: state.M

- type: altezza colonna destra
  message0: altezza colonna destra
  output: Number
  colour: 20
  tooltip: altezza corrente della colonna di destra
  helpUrl: ""
  js: state.pos[2]

- type: altezza colonna sinistra
  message0: altezza colonna sinistra
  output: Number
  colour: 20
  tooltip: altezza corrente della colonna di sinistra
  helpUrl: ""
  js: state.pos[0]

- type: impila blocchetto a destra
  message0: impila blocchetto %1 a destra
  args0:
    - type: input_value
      value: 0
      check: Number
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: impila blocchetto alto i alla colonna di destra
  helpUrl: ""
  js: |
    (function(i) {
      state.orient = 1;
      state.pos[1] = i;
      if (state.blocchi[i-1][0] !== 1)
        exit(false, "hai già usato il blocchetto " + i);
      state.rimasti -= 1;
      state.pos[3] = state.pos[2] + (i-4)/2;
      state.blocchi[i-1] = [2, state.pos[2]];
      state.pos[2] += i;
      if (state.pos[2] > state.D)
        exit(false, "la colonna di destra è troppo alta");
    })(%0);

- type: impila blocchetto a sinistra
  message0: impila blocchetto %1 a sinistra
  args0:
    - type: input_value
      value: 0
      check: Number
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: impila blocchetto alto i alla colonna di sinistra
  helpUrl: ""
  js: |
    (function(i) {
      state.orient = 0;
      state.pos[1] = i;
      if (state.blocchi[i-1][0] !== 1)
        exit(false, "hai già usato il blocchetto " + i);
      state.rimasti -= 1;
      state.pos[3] = state.pos[0] + (i-4)/2;
      state.blocchi[i-1] = [0, state.pos[0]];
      state.pos[0] += i;
      if (state.pos[0] > state.S)
        exit(false, "la colonna di sinistra è troppo alta");
    })(%0);

- type: termina
  message0: termina
  previousStatement: null
  colour: 20
  tooltip: termina il procedimento
  helpUrl: ""
  js: |
    if (state.pos[0] < state.S)
      exit(false, "la colonna di sinistra è troppo bassa");
    if (state.pos[2] < state.D)
      exit(false, "la colonna di destra è troppo bassa");
    exit(true, "hai costruito bene le colonne, complimenti!");
