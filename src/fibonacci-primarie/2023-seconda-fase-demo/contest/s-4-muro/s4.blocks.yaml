- type: start
  message0: inizia qui
  nextStatement: null
  colour: 20
  tooltip: L'esecuzione inizia da qui
  helpUrl: ""
  maxInstances: 1
  js: ""

- type: colora dalla posizione
  message0: colora dalla posizione %1
  args0:
    - type: input_value
      check: Integer
      min: "1"
      max: state.N
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: Colora il muro dal pannello i-esimo
  helpUrl: ""
  js: |
    (function(i) {
      state.pos = i-1;
      if (state.i >= state.C)
        exit(false, "sono finiti i colori")
      if (i > state.N - state.L[state.i] + 1)
        exit(false, "non c'Ã¨ abbastanza spazio dal pannello " + i);
      for (var j = 0; j < state.L[state.i]; j++)
        state.muro[i+j-1] = state.i+1;
      state.i++;
    })(%1);

- type: pannelli da pitturare
  message0: pannelli da pitturare
  output: Number
  colour: 20
  tooltip: Numero di pannelli da pitturare
  helpUrl: ""
  js: state.L[state.i]

- type: N
  message0: N
  output: Number
  colour: 20
  tooltip: Numero di pannelli nel muro
  helpUrl: ""
  js: state.N

- type: C
  message0: C
  output: Number
  colour: 20
  tooltip: Numero di colori
  helpUrl: ""
  js: state.C

- type: metti via i pennelli
  message0: metti via i pennelli
  previousStatement: null
  colour: 20
  tooltip: Metti via i pennelli e termina
  helpUrl: ""
  js: |
    var found = [];
    for (var i=0; i<=state.C; ++i)
      found[i] = 0;
    for (var i=0; i<state.N; ++i)
      found[state.muro[i]] = 1;
    var tot = 0;
    for (var i=1; i<=state.C; ++i)
      tot += found[i];
    if (tot === state.sol)
      exit(true, "si vedono tanti colori, bravo!");
    else
      exit(false, "si poteva far vedere " + state.sol + " colori");
