- type: start
  message0: inizia qui
  nextStatement: null
  colour: 20
  tooltip: L'esecuzione inizia da qui
  helpUrl: ""
  maxInstances: 1
  js: ""

- type: gira la ruota
  message0: gira la ruota
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: Gira la ruota di uno spicchio
  helpUrl: ""
  js: state.pos++;

- type: carote vinte
  message0: premio di %1
  args0:
    - type: input_value
      value: 0
      check: Number
  output: Number
  colour: 20
  tooltip: Carote vinte dall'amico numero i
  helpUrl: ""
  js: |
    (function(i) {
      if (i === undefined) exit(false, "l'argomento del blocco non ha un valore");
      if (i < 1 || i > state.N)
        exit(false, "l'amico " + i + " non esiste");
      return state.prizes[(state.friends[i-1]-state.pos+state.S)%state.S];
    })(%0)

- type: N
  message0: N
  output: Number
  colour: 20
  tooltip: Numero di amici di Tip-Tap
  helpUrl: ""
  js: state.N

- type: C
  message0: C
  output: Number
  colour: 20
  tooltip: Numero di carote raccolte da Tip-Tap
  helpUrl: ""
  js: state.C

- type: S
  message0: S
  output: Number
  colour: 20
  tooltip: Numero di spicchi della ruota
  helpUrl: ""
  js: state.S

- type: ferma ruota
  message0: ferma la ruota
  previousStatement: null
  colour: 20
  tooltip: Ferma la ruota
  helpUrl: ""
  js: |
    var i = state.good_pos.indexOf(state.pos);
    if (i == 0)
      exit(true, "hai speso meno di " + state.C + " carote, bravo!");
    else if (i != -1)
      exit(false, "potevi far girare meno la ruota");
    else
      exit(false, "non hai abbastanza carote per i premi");
